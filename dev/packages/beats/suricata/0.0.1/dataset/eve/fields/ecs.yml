- name: '@timestamp'
  level: core
  required: true
  type: date
  description: |-
    Date/time when the event originated.
    This is the date/time extracted from the event, typically representing when the event was generated by the source.
    If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline.
    Required field for all events.
- name: destination
  title: Destination
  group: 2
  type: group
  fields:
  - name: bytes
    level: core
    type: long
    format: bytes
    description: Bytes sent from the destination to the source.
  - name: ip
    level: core
    type: ip
    description: IP address of the destination (IPv4 or IPv6).
  - name: packets
    level: core
    type: long
    description: Packets sent from the destination to the source.
  - name: port
    level: core
    type: long
    format: string
    description: Port of the destination.
- name: event
  title: Event
  group: 2
  type: group
  fields:
  - name: outcome
    level: core
    type: keyword
    description: |-
      This is one of four ECS Categorization Fields, and indicates the lowest level in the ECS category hierarchy.
      `event.outcome` simply denotes whether the event represents a success or a failure from the perspective of the entity that produced the event.
      Note that when a single transaction is described in multiple events, each event may populate different values of `event.outcome`, according to their perspective.
      Also note that in the case of a compound event (a single event that contains multiple logical events), this field should be populated with the value that best captures the overall success or failure from the perspective of the event producer.
      Further note that not all events will have an associated outcome. For example, this field is generally not populated for metric events, events with `event.type:info`, or any events for which an outcome does not make logical sense.
    ignore_above: 1024
  - name: severity
    level: core
    type: long
    format: string
    description: |-
      The numeric severity of the event according to your event source.
      What the different severity values mean can be different between sources and use cases. It's up to the implementer to make sure severities are consistent across events from the same source.
      The Syslog severity belongs in `log.syslog.severity.code`. `event.severity` is meant to represent the severity according to the event source (e.g. firewall, IDS). If the event source does not publish its own severity, you may optionally copy the `log.syslog.severity.code` to `event.severity`.
  - name: start
    level: extended
    type: date
    description: event.start contains the date when the event started or when the
      activity was first observed.
- name: file
  title: File
  group: 2
  type: group
  fields:
  - name: path
    level: extended
    type: keyword
    description: Full path to the file, including the file name. It should include
      the drive letter, when appropriate.
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
      default_field: false
  - name: size
    level: extended
    type: long
    description: |-
      File size in bytes.
      Only relevant when `file.type` is "file".
- name: http
  title: HTTP
  group: 2
  type: group
  fields:
  - name: request.method
    level: extended
    type: keyword
    description: |-
      HTTP request method.
      The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
    ignore_above: 1024
  - name: request.referrer
    level: extended
    type: keyword
    description: Referrer for this HTTP request.
    ignore_above: 1024
  - name: response.body.bytes
    level: extended
    type: long
    format: bytes
    description: Size in bytes of the response body.
  - name: response.status_code
    level: extended
    type: long
    format: string
    description: HTTP response status code.
- name: network
  title: Network
  group: 2
  type: group
  fields:
  - name: protocol
    level: core
    type: keyword
    description: |-
      L7 Network protocol name. ex. http, lumberjack, transport protocol.
      The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
    ignore_above: 1024
  - name: transport
    level: core
    type: keyword
    description: |-
      Same as network.iana_number, but instead using the Keyword name of the transport layer (udp, tcp, ipv6-icmp, etc.)
      The field value must be normalized to lowercase for querying. See the documentation section "Implementing ECS".
    ignore_above: 1024
- name: source
  title: Source
  group: 2
  type: group
  fields:
  - name: bytes
    level: core
    type: long
    format: bytes
    description: Bytes sent from the source to the destination.
  - name: ip
    level: core
    type: ip
    description: IP address of the source (IPv4 or IPv6).
  - name: packets
    level: core
    type: long
    description: Packets sent from the source to the destination.
  - name: port
    level: core
    type: long
    format: string
    description: Port of the source.
- name: url
  title: URL
  group: 2
  type: group
  fields:
  - name: domain
    level: extended
    type: keyword
    description: |-
      Domain of the url, such as "www.elastic.co".
      In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.
    ignore_above: 1024
  - name: original
    level: extended
    type: keyword
    description: |-
      Unmodified original url as seen in the event source.
      Note that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.
      This field is meant to represent the URL as it was observed, complete or not.
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
      default_field: false
- name: user_agent
  title: User agent
  group: 2
  type: group
  fields:
  - name: original
    level: extended
    type: keyword
    description: Unparsed user_agent string.
    ignore_above: 1024
    multi_fields:
    - name: text
      type: text
      norms: false
