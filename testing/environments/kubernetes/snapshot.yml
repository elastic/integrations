---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: es
  namespace: kube-system
  labels:
    app: elasticsearch
    group: ingest-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
        group: ingest-management
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0-SNAPSHOT
          env:
            - name: ES_JAVA_OPTS
              value: "-Xms1g -Xmx1g"
            - name: xpack.security.enabled
              value: "true"
            - name: xpack.security.authc.api_key.enabled
              value: "true"
            - name: ELASTIC_PASSWORD
              value: "changeme"
            - name: indices.id_field_data.enabled
              value: "true"
            - name: xpack.license.self_generated.type
              value: "trial"
            - name: transport.host
              value: "127.0.0.1"
            - name: network.host
              value: ""
            - name: http.host
              value: "0.0.0.0"
          resources:
            requests:
              memory: 300Mi
          ports:
            - containerPort: 9200
              name: http
              protocol: TCP
            - containerPort: 9300
              name: transport
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: kube-system
  labels:
    app: elasticsearch
    group: ingest-management
spec:
  type: LoadBalancer
  selector:
    app: elasticsearch
  ports:
    - name: http
      port: 9200
      protocol: TCP
    - name: transport
      port: 9300
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-ingest-management
  namespace: kube-system
  labels:
    app: kibana-ingest-management
    group: ingest-management
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  selector:
    matchLabels:
      app: kibana-ingest-management
  template:
    metadata:
      labels:
        app: kibana-ingest-management
        group: ingest-management
    spec:
      volumes:
        - name: kibana-yaml-config
          configMap:
            defaultMode: 420
            name: kibana-yaml-storage
      containers:
        - name: kibana-ingest-management
          image: docker.elastic.co/kibana/kibana:8.0.0-SNAPSHOT
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          volumeMounts:
            - mountPath: /usr/share/kibana/config
              name: kibana-yaml-config
          ports:
            - containerPort: 5601
              name: ui
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kube-system
  labels:
    app: kibana-ingest-management
    group: ingest-management
spec:
  type: NodePort
  selector:
    app: kibana-ingest-management
  ports:
    - name: http
      port: 5601
      targetPort: 5601
      protocol: TCP
      nodePort: 30561
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kibana-yaml-storage
  namespace: kube-system
data:
  kibana.yml: |-
    server.name: kibana
    server.host: "0"

    elasticsearch.hosts: [ "http://elasticsearch:9200" ]
    elasticsearch.username: elastic
    elasticsearch.password: changeme
    xpack.monitoring.ui.container.elasticsearch.enabled: true

    xpack.ingestManager.enabled: true
    xpack.ingestManager.epm.enabled: true
    xpack.ingestManager.epm.registryUrl: "http://registry:8080"
    xpack.ingestManager.fleet.enabled: true
    xpack.ingestManager.fleet.elasticsearch.host: "http://elasticsearch:9200"
    xpack.ingestManager.fleet.kibana.host: "http:/kibana:5601"
    xpack.ingestManager.fleet.tlsCheckDisabled: true

    xpack.encryptedSavedObjects.encryptionKey: "12345678901234567890123456789012"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry-ingest-management
  namespace: kube-system
  labels:
    app: registry-ingest-management
    group: ingest-management
spec:
  selector:
    matchLabels:
      app: registry-ingest-management
  template:
    metadata:
      labels:
        app: registry-ingest-management
        group: ingest-management
    spec:
      volumes:
        - name: registry-storage
          hostPath:
            path: /etc/build/integrations
        - name: registry-yaml-config
          configMap:
            defaultMode: 420
            name: registry-yaml-storage
      containers:
        - name: registry-ingest-management
          image: docker.elastic.co/package-registry/package-registry:41c150c8020efc53ab16e3bba774c62a419b51ea
          resources:
            limits:
              cpu: 1000m
            requests:
              cpu: 100m
          volumeMounts:
            - mountPath: /registry/packages/integrations
              name: registry-storage
            - mountPath: /registry/config.yml
              name: registry-yaml-config
              subPath: config.yml
          ports:
            - containerPort: 8080
              name: registry
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: kube-system
  labels:
    app: registry-ingest-management
    group: ingest-management
spec:
  type: NodePort
  selector:
    app: registry-ingest-management
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
      nodePort: 30568
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-yaml-storage
  namespace: kube-system
data:
  config.yml: |-
    package_paths:
      - /registry/packages/integrations
      - /registry/packages/package-storage
    dev_mode: true
---