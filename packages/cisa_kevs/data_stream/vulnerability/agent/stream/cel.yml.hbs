config_version: "2"
interval: {{interval}}
{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/cel/http-request-trace-*.ndjson"
resource.tracer.maxbackups: 5
{{/if}}

{{#if url}}
resource.url: {{url}}
{{/if}}
{{#if proxy_url }}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
redact:
  fields: ~
program: |-
  get_request(state.url).with(
    {
      "Header": {
        "Content-Type": ["application/json"],
      },
    }
  ).do_request().as(resp, resp.StatusCode == 200 ?
    dyn({
      "events": bytes(resp.Body).decode_json().vulnerabilities.map(v,
        {"message": v.encode_json()}
  	  )
    })
  :
    dyn({
      "events": {
        "error": {
          "code": string(resp.StatusCode),
          "id": string(resp.Status),
          "message": "GET: "+(
            size(resp.Body) != 0 ?
              string(resp.Body)
            :
              string(resp.Status) + ' (' + string(resp.StatusCode) + ')'
          ),
        },
      },
    })
  )
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag i|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
