{
    "attributes": {
        "controlGroupInput": {
            "chainingSystem": "HIERARCHICAL",
            "controlStyle": "oneLine",
            "ignoreParentSettingsJSON": {
                "ignoreFilters": false,
                "ignoreQuery": false,
                "ignoreTimerange": false,
                "ignoreValidations": false
            },
            "panelsJSON": {
                "7a89389e-fbce-4995-91fe-5008f45ed779": {
                    "explicitInput": {
                        "dataViewId": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                        "exclude": false,
                        "existsSelected": false,
                        "fieldName": "deployment_id",
                        "id": "7a89389e-fbce-4995-91fe-5008f45ed779",
                        "searchTechnique": "prefix",
                        "selectedOptions": [],
                        "sort": {
                            "by": "_count",
                            "direction": "desc"
                        },
                        "title": "Deployment ID"
                    },
                    "grow": false,
                    "order": 0,
                    "type": "optionsListControl",
                    "width": "large"
                }
            },
            "showApplySelections": false
        },
        "description": "Provides visual insights into cluster-level cost and usage metrics, helping track Elastic consumption across tiers, deployments, and data streams. Built from transformed billing and usage data, this dashboard enables transparent chargeback calculations and trend analysis.",
        "kibanaSavedObjectMeta": {
            "searchSourceJSON": {
                "filter": [],
                "query": {
                    "language": "kuery",
                    "query": ""
                }
            }
        },
        "optionsJSON": {
            "hidePanelTitles": false,
            "syncColors": false,
            "syncCursor": true,
            "syncTooltips": false,
            "useMargins": true
        },
        "panelsJSON": [
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "# Data tier and data stream overview",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "d0c7df2d-b5c4-446f-b853-52911328ef4a",
                    "w": 48,
                    "x": 0,
                    "y": 2
                },
                "panelIndex": "d0c7df2d-b5c4-446f-b853-52911328ef4a",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Indexing",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "c79338a7-07eb-4578-abdc-84b987954304",
                    "w": 12,
                    "x": 0,
                    "y": 15
                },
                "panelIndex": "c79338a7-07eb-4578-abdc-84b987954304",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Querying",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "fa73cd1c-ff58-49fd-ace3-7e518efcefd0",
                    "w": 12,
                    "x": 12,
                    "y": 15
                },
                "panelIndex": "fa73cd1c-ff58-49fd-ace3-7e518efcefd0",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Storage",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "ded1f3bf-1730-4e96-802f-992626effce2",
                    "w": 12,
                    "x": 24,
                    "y": 15
                },
                "panelIndex": "ded1f3bf-1730-4e96-802f-992626effce2",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Blended",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "c111a476-11a7-48da-b14a-2ad1b0e6258d",
                    "w": 12,
                    "x": 36,
                    "y": 15
                },
                "panelIndex": "c111a476-11a7-48da-b14a-2ad1b0e6258d",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "# Data tier and data stream per day",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "55ec07d9-7cb6-4003-be50-132fea579d90",
                    "w": 48,
                    "x": 0,
                    "y": 48
                },
                "panelIndex": "55ec07d9-7cb6-4003-be50-132fea579d90",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "b1264a89-c168-4c4a-9eb0-50b641ebbe2e": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_querying",
                                                    "customLabel": false,
                                                    "fieldName": "agg_querying",
                                                    "inMetricDimension": true,
                                                    "label": "agg_querying",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    querying = CASE (\n        deployment_sum_query_time \u003e 0,\n        datastream_sum_query_time / deployment_sum_query_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying) \n    BY \n        @timestamp, \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    querying = CASE (\n        deployment_sum_query_time \u003e 0,\n        datastream_sum_query_time / deployment_sum_query_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying) \n    BY \n        @timestamp, \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_querying"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "b1264a89-c168-4c4a-9eb0-50b641ebbe2e",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_querying over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    querying = CASE (\n        deployment_sum_query_time \u003e 0,\n        datastream_sum_query_time / deployment_sum_query_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying) \n    BY \n        @timestamp, \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "2e84b449-c670-4be9-a4ce-09cd76a28bcb",
                    "w": 16,
                    "x": 0,
                    "y": 71
                },
                "panelIndex": "2e84b449-c670-4be9-a4ce-09cd76a28bcb",
                "title": "Querying: Normalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "cbf4762c-990a-4304-bafb-c90223a60e71": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_indexing",
                                                    "customLabel": false,
                                                    "fieldName": "agg_indexing",
                                                    "inMetricDimension": true,
                                                    "label": "agg_indexing",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "tier",
                                                    "customLabel": false,
                                                    "fieldName": "tier",
                                                    "label": "tier",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    indexing = CASE (\n        deployment_sum_indexing_time \u003e 0,\n        tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_indexing \u003e 0"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    indexing = CASE (\n        deployment_sum_indexing_time \u003e 0,\n        tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_indexing \u003e 0"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_indexing"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "cbf4762c-990a-4304-bafb-c90223a60e71",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "tier",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_indexing over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    indexing = CASE (\n        deployment_sum_indexing_time \u003e 0,\n        tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_indexing \u003e 0"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "fc62e9ee-51b2-47dc-8491-2b6bb3787c26",
                    "w": 16,
                    "x": 16,
                    "y": 54
                },
                "panelIndex": "fc62e9ee-51b2-47dc-8491-2b6bb3787c26",
                "title": "Indexing: Normalised cost per tier per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "0075fd45-aa9d-4db7-ace5-da6ab2804584": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_indexing",
                                                    "customLabel": false,
                                                    "fieldName": "agg_indexing",
                                                    "inMetricDimension": true,
                                                    "label": "agg_indexing",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    indexing = CASE (\n        deployment_sum_indexing_time \u003e 0,\n        datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp,\n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    indexing = CASE (\n        deployment_sum_indexing_time \u003e 0,\n        datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp,\n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_indexing"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "0075fd45-aa9d-4db7-ace5-da6ab2804584",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_indexing over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    indexing = CASE (\n        deployment_sum_indexing_time \u003e 0,\n        datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp,\n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "587f51d9-60f7-473d-8ba1-2602dda58729",
                    "w": 16,
                    "x": 32,
                    "y": 54
                },
                "panelIndex": "587f51d9-60f7-473d-8ba1-2602dda58729",
                "title": "Indexing: % Normalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "ab054c6b-f482-4a59-bcf6-9105d0baaa98": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_querying",
                                                    "customLabel": false,
                                                    "fieldName": "agg_querying",
                                                    "inMetricDimension": true,
                                                    "label": "agg_querying",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "tier",
                                                    "customLabel": false,
                                                    "fieldName": "tier",
                                                    "label": "tier",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    querying = CASE (\n        deployment_sum_query_time \u003e 0,\n        tier_sum_query_time / deployment_sum_query_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_querying \u003e 0"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    querying = CASE (\n        deployment_sum_query_time \u003e 0,\n        tier_sum_query_time / deployment_sum_query_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_querying \u003e 0"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_querying"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "ab054c6b-f482-4a59-bcf6-9105d0baaa98",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "tier",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_querying over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| EVAL \n    querying = CASE (\n        deployment_sum_query_time \u003e 0,\n        tier_sum_query_time / deployment_sum_query_time * total_ecu\n    ) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_querying \u003e 0"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "dbbd4530-dafc-4692-a6bc-489db63ce7ec",
                    "w": 16,
                    "x": 16,
                    "y": 71
                },
                "panelIndex": "dbbd4530-dafc-4692-a6bc-489db63ce7ec",
                "title": "Querying: Noralised cost per tier per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "8589daba-0384-45fc-9136-6db7be8e6a43": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_blended",
                                                    "customLabel": false,
                                                    "fieldName": "agg_blended",
                                                    "inMetricDimension": true,
                                                    "label": "agg_blended",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu),\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu),\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store),\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage * conf_storage_weight) + (querying * conf_query_weight) + (indexing * conf_indexing_weight)) / total_weight_hot,\n        ((storage * conf_storage_weight) + (querying * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        datastream,\n        tier\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu),\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu),\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store),\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage * conf_storage_weight) + (querying * conf_query_weight) + (indexing * conf_indexing_weight)) / total_weight_hot,\n        ((storage * conf_storage_weight) + (querying * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        datastream,\n        tier\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                            },
                            "visualization": {
                                "layers": [
                                    {
                                        "categoryDisplay": "default",
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "8589daba-0384-45fc-9136-6db7be8e6a43",
                                        "layerType": "data",
                                        "legendDisplay": "default",
                                        "metrics": [
                                            "agg_blended"
                                        ],
                                        "nestedLegend": false,
                                        "numberDisplay": "percent",
                                        "primaryGroups": [
                                            "datastream"
                                        ]
                                    }
                                ],
                                "shape": "pie"
                            }
                        },
                        "title": "Bar vertical stacked",
                        "visualizationType": "lnsPie"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu),\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu),\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store),\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage * conf_storage_weight) + (querying * conf_query_weight) + (indexing * conf_indexing_weight)) / total_weight_hot,\n        ((storage * conf_storage_weight) + (querying * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        datastream,\n        tier\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "4aa1a421-6cfe-4c89-9c38-3479d1b98721",
                    "w": 12,
                    "x": 36,
                    "y": 18
                },
                "panelIndex": "4aa1a421-6cfe-4c89-9c38-3479d1b98721",
                "title": "Blended: Normalised cost totals by data stream",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "0fc4147b-445d-4adb-ac31-e0709a0cada8": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_indexing",
                                                    "customLabel": false,
                                                    "fieldName": "agg_indexing",
                                                    "inMetricDimension": true,
                                                    "label": "agg_indexing",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                                            }
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                            },
                            "visualization": {
                                "layers": [
                                    {
                                        "categoryDisplay": "default",
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "0fc4147b-445d-4adb-ac31-e0709a0cada8",
                                        "layerType": "data",
                                        "legendDisplay": "default",
                                        "metrics": [
                                            "agg_indexing"
                                        ],
                                        "nestedLegend": false,
                                        "numberDisplay": "percent",
                                        "primaryGroups": [
                                            "datastream"
                                        ]
                                    }
                                ],
                                "shape": "pie"
                            }
                        },
                        "title": "Bar vertical stacked",
                        "visualizationType": "lnsPie"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "32b6ab8e-a68e-4eed-9e93-90054a873e12",
                    "w": 12,
                    "x": 0,
                    "y": 18
                },
                "panelIndex": "32b6ab8e-a68e-4eed-9e93-90054a873e12",
                "title": "Indexing: Normalised cost totals by data stream",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "f2668878-3a88-4590-9c3d-edb30b0ac7e0": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_querying",
                                                    "customLabel": false,
                                                    "fieldName": "agg_querying",
                                                    "inMetricDimension": true,
                                                    "label": "agg_querying",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying)\n    BY \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                                            }
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying)\n    BY \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                            },
                            "visualization": {
                                "layers": [
                                    {
                                        "categoryDisplay": "default",
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "f2668878-3a88-4590-9c3d-edb30b0ac7e0",
                                        "layerType": "data",
                                        "legendDisplay": "default",
                                        "metrics": [
                                            "agg_querying"
                                        ],
                                        "nestedLegend": false,
                                        "numberDisplay": "percent",
                                        "primaryGroups": [
                                            "datastream"
                                        ]
                                    }
                                ],
                                "shape": "pie"
                            }
                        },
                        "title": "Bar vertical stacked",
                        "visualizationType": "lnsPie"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_querying = sum(querying)\n    BY \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "bbfd8ff0-39f8-431e-b736-aa106d1dfb7d",
                    "w": 12,
                    "x": 12,
                    "y": 18
                },
                "panelIndex": "bbfd8ff0-39f8-431e-b736-aa106d1dfb7d",
                "title": "Querying: Normalised cost totals by data stream",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "5ebd6571-c76e-45b3-b5a7-92baa2968144": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_storage",
                                                    "customLabel": false,
                                                    "fieldName": "agg_storage",
                                                    "inMetricDimension": true,
                                                    "label": "agg_storage",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                            },
                            "visualization": {
                                "layers": [
                                    {
                                        "categoryDisplay": "default",
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "5ebd6571-c76e-45b3-b5a7-92baa2968144",
                                        "layerType": "data",
                                        "legendDisplay": "default",
                                        "metrics": [
                                            "agg_storage"
                                        ],
                                        "nestedLegend": false,
                                        "numberDisplay": "percent",
                                        "primaryGroups": [
                                            "datastream"
                                        ]
                                    }
                                ],
                                "shape": "pie"
                            }
                        },
                        "title": "Bar vertical stacked",
                        "visualizationType": "lnsPie"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "785f514f-2385-406f-8654-f73706027293",
                    "w": 12,
                    "x": 24,
                    "y": 18
                },
                "panelIndex": "785f514f-2385-406f-8654-f73706027293",
                "title": "Storage: Normalised cost totals by data stream",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "17e6c1e2-bbd6-48c8-b48a-e07aea3dee88": {
                                            "columns": [
                                                {
                                                    "columnId": "ecu_indexing",
                                                    "customLabel": false,
                                                    "fieldName": "ecu_indexing",
                                                    "inMetricDimension": true,
                                                    "label": "ecu_indexing",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "ecu_querying",
                                                    "customLabel": false,
                                                    "fieldName": "ecu_querying",
                                                    "inMetricDimension": true,
                                                    "label": "ecu_querying",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "ecu_storage",
                                                    "customLabel": false,
                                                    "fieldName": "ecu_storage",
                                                    "inMetricDimension": true,
                                                    "label": "ecu_storage",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "ecu_blended",
                                                    "customLabel": false,
                                                    "fieldName": "ecu_blended",
                                                    "inMetricDimension": true,
                                                    "label": "ecu_blended",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "inMetricDimension": true,
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                },
                                                {
                                                    "columnId": "91e55199-fd23-4ecc-8c42-e9fb02829b28",
                                                    "fieldName": "tier",
                                                    "label": "tier",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "sourceParams": {
                                                            "indexPattern": "billing_cluster_cost_lookup"
                                                        },
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_tier_and_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE(deployment_sum_indexing_time \u003e 0, tier_and_datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE(deployment_sum_query_time \u003e 0, tier_and_datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE(deployment_sum_data_set_store_size \u003e 0, tier_and_datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE(deployment_sum_store_size \u003e 0, tier_and_datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE(store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE(\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    ecu_indexing = sum(indexing),\n    ecu_querying = sum(querying),\n    ecu_storage = sum(storage),\n    ecu_blended = sum(blended)\n    BY datastream, tier\n| SORT ecu_blended DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_tier_and_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE(deployment_sum_indexing_time \u003e 0, tier_and_datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE(deployment_sum_query_time \u003e 0, tier_and_datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE(deployment_sum_data_set_store_size \u003e 0, tier_and_datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE(deployment_sum_store_size \u003e 0, tier_and_datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE(store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE(\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    ecu_indexing = sum(indexing),\n    ecu_querying = sum(querying),\n    ecu_storage = sum(storage),\n    ecu_blended = sum(blended)\n    BY datastream, tier\n| SORT ecu_blended DESC"
                            },
                            "visualization": {
                                "columns": [
                                    {
                                        "columnId": "ecu_indexing"
                                    },
                                    {
                                        "columnId": "ecu_querying"
                                    },
                                    {
                                        "columnId": "ecu_storage"
                                    },
                                    {
                                        "columnId": "ecu_blended"
                                    },
                                    {
                                        "columnId": "datastream"
                                    },
                                    {
                                        "columnId": "91e55199-fd23-4ecc-8c42-e9fb02829b28",
                                        "isMetric": true,
                                        "isTransposed": false
                                    }
                                ],
                                "layerId": "17e6c1e2-bbd6-48c8-b48a-e07aea3dee88",
                                "layerType": "data"
                            }
                        },
                        "title": "ecu_indexing \u0026 ecu_querying \u0026 ecu_storage \u0026 ecu_blended of datastream",
                        "visualizationType": "lnsDatatable"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_tier_and_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE(deployment_sum_indexing_time \u003e 0, tier_and_datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE(deployment_sum_query_time \u003e 0, tier_and_datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE(deployment_sum_data_set_store_size \u003e 0, tier_and_datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE(deployment_sum_store_size \u003e 0, tier_and_datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE(store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE(\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    ecu_indexing = sum(indexing),\n    ecu_querying = sum(querying),\n    ecu_storage = sum(storage),\n    ecu_blended = sum(blended)\n    BY datastream, tier\n| SORT ecu_blended DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "c801e469-5ff8-4049-baa4-038a770feeea",
                    "w": 48,
                    "x": 0,
                    "y": 33
                },
                "panelIndex": "c801e469-5ff8-4049-baa4-038a770feeea",
                "title": "Normalised cost per data stream per tier",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "4e6c98f0-e509-41fa-8b40-b2c827478739": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_blended",
                                                    "customLabel": false,
                                                    "fieldName": "agg_blended",
                                                    "inMetricDimension": true,
                                                    "label": "agg_blended",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu),\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu),\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store),\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    blended = ((storage * conf_storage_weight) + (querying * conf_query_weight) + (indexing * conf_indexing_weight)) / total_weight_hot * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        datastream\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu),\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu),\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store),\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    blended = ((storage * conf_storage_weight) + (querying * conf_query_weight) + (indexing * conf_indexing_weight)) / total_weight_hot * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        datastream\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_blended"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "4e6c98f0-e509-41fa-8b40-b2c827478739",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_blended over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu),\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu),\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store),\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    blended = ((storage * conf_storage_weight) + (querying * conf_query_weight) + (indexing * conf_indexing_weight)) / total_weight_hot * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        datastream\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "a9471800-1616-45bd-a175-6b52dc47f8a1",
                    "w": 16,
                    "x": 0,
                    "y": 106
                },
                "panelIndex": "a9471800-1616-45bd-a175-6b52dc47f8a1",
                "title": "Blended value: Normalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "f4e98c2b-6e27-47f4-bb2b-793a89bd51e1": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_storage",
                                                    "customLabel": false,
                                                    "fieldName": "agg_storage",
                                                    "inMetricDimension": true,
                                                    "label": "agg_storage",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_storage"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "f4e98c2b-6e27-47f4-bb2b-793a89bd51e1",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_storage over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "91796418-27d4-4173-9d6b-757e0e8511d9",
                    "w": 16,
                    "x": 0,
                    "y": 88
                },
                "panelIndex": "91796418-27d4-4173-9d6b-757e0e8511d9",
                "title": "Storage: Nomalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "4bb200b0-61b6-4dad-aa11-66e5b308252e": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_querying",
                                                    "customLabel": false,
                                                    "fieldName": "agg_querying",
                                                    "inMetricDimension": true,
                                                    "label": "agg_querying",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate\n| STATS \n    agg_querying = sum(querying)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate\n| STATS \n    agg_querying = sum(querying)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_querying"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "4bb200b0-61b6-4dad-aa11-66e5b308252e",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_querying over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate\n| STATS \n    agg_querying = sum(querying)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_querying \u003e 0\n| SORT agg_querying DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "5330252b-edf7-4874-ac9a-415405358d5c",
                    "w": 16,
                    "x": 32,
                    "y": 71
                },
                "panelIndex": "5330252b-edf7-4874-ac9a-415405358d5c",
                "title": "Querying: % Normalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "2980520c-4654-45c2-919d-e37519dcea28": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_storage",
                                                    "customLabel": false,
                                                    "fieldName": "agg_storage",
                                                    "inMetricDimension": true,
                                                    "label": "agg_storage",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_storage"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "2980520c-4654-45c2-919d-e37519dcea28",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_storage over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_storage \u003e 0\n| SORT agg_storage DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "be9b6c65-a8d2-47d4-add1-6251d03f8c05",
                    "w": 16,
                    "x": 32,
                    "y": 88
                },
                "panelIndex": "be9b6c65-a8d2-47d4-add1-6251d03f8c05",
                "title": "Storage: % Normalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "5f582f9a-7282-4ecd-8159-3d0427a2c8de": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_blended",
                                                    "customLabel": false,
                                                    "fieldName": "agg_blended",
                                                    "inMetricDimension": true,
                                                    "label": "agg_blended",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        datastream,\n        tier\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        datastream,\n        tier\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_blended"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "5f582f9a-7282-4ecd-8159-3d0427a2c8de",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "Pie",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, datastream_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, datastream_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, datastream_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        datastream,\n        tier\n| WHERE agg_blended \u003e 0\n| SORT agg_blended DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "714af7cb-6354-4765-886c-97fd1128c9dd",
                    "w": 16,
                    "x": 32,
                    "y": 106
                },
                "panelIndex": "714af7cb-6354-4765-886c-97fd1128c9dd",
                "title": "Blended value: % Normalised cost per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "5b92f01a-c208-4537-bc68-d502592bd1c9": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_blended",
                                                    "customLabel": false,
                                                    "fieldName": "agg_blended",
                                                    "inMetricDimension": true,
                                                    "label": "agg_blended",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "tier",
                                                    "customLabel": false,
                                                    "fieldName": "tier",
                                                    "label": "tier",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, tier_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        tier\n| WHERE agg_blended \u003e 0"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, tier_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        tier\n| WHERE agg_blended \u003e 0"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_blended"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "5b92f01a-c208-4537-bc68-d502592bd1c9",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "tier",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_blended over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, tier_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_blended = sum(blended)\n    BY\n        @timestamp,\n        tier\n| WHERE agg_blended \u003e 0"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "f45b27a2-0109-4718-b010-ecf5bdfee4b7",
                    "w": 16,
                    "x": 16,
                    "y": 106
                },
                "panelIndex": "f45b27a2-0109-4718-b010-ecf5bdfee4b7",
                "title": "Blended value: Normalised cost per tier per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "72984ac5-ecc1-4125-9f80-ff1c478d0589": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_indexing",
                                                    "customLabel": false,
                                                    "fieldName": "agg_indexing",
                                                    "inMetricDimension": true,
                                                    "label": "agg_indexing",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "datastream",
                                                    "customLabel": false,
                                                    "fieldName": "datastream",
                                                    "label": "datastream",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_indexing"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "72984ac5-ecc1-4125-9f80-ff1c478d0589",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "datastream",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_indexing over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_datastream_contribution_lookup ON composite_key\n| EVAL \n    indexing = CASE (deployment_sum_indexing_time \u003e 0, datastream_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate\n| STATS  \n    agg_indexing = sum(indexing)\n    BY \n        @timestamp, \n        datastream\n| WHERE agg_indexing \u003e 0\n| SORT agg_indexing DESC"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 14,
                    "i": "1e720edf-a0fb-42c3-af35-2bf9b8592d3f",
                    "w": 16,
                    "x": 0,
                    "y": 54
                },
                "panelIndex": "1e720edf-a0fb-42c3-af35-2bf9b8592d3f",
                "title": "Indexing: Normalised per data stream per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "a2148ccd-cbc4-4a43-bacd-c194083ff789": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_storage",
                                                    "customLabel": false,
                                                    "fieldName": "agg_storage",
                                                    "inMetricDimension": true,
                                                    "label": "agg_storage",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    }
                                                },
                                                {
                                                    "columnId": "@timestamp",
                                                    "customLabel": false,
                                                    "fieldName": "@timestamp",
                                                    "label": "@timestamp",
                                                    "meta": {
                                                        "esType": "date",
                                                        "type": "date"
                                                    }
                                                },
                                                {
                                                    "columnId": "tier",
                                                    "customLabel": false,
                                                    "fieldName": "tier",
                                                    "label": "tier",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_storage \u003e 0"
                                            },
                                            "timeField": "@timestamp"
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_storage \u003e 0"
                            },
                            "visualization": {
                                "axisTitlesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "fittingFunction": "Linear",
                                "gridlinesVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "labelsOrientation": {
                                    "x": 0,
                                    "yLeft": 0,
                                    "yRight": 0
                                },
                                "layers": [
                                    {
                                        "accessors": [
                                            "agg_storage"
                                        ],
                                        "colorMapping": {
                                            "assignments": [],
                                            "colorMode": {
                                                "type": "categorical"
                                            },
                                            "paletteId": "default",
                                            "specialAssignments": [
                                                {
                                                    "color": {
                                                        "type": "loop"
                                                    },
                                                    "rule": {
                                                        "type": "other"
                                                    },
                                                    "touched": false
                                                }
                                            ]
                                        },
                                        "layerId": "a2148ccd-cbc4-4a43-bacd-c194083ff789",
                                        "layerType": "data",
                                        "seriesType": "bar_stacked",
                                        "splitAccessor": "tier",
                                        "xAccessor": "@timestamp"
                                    }
                                ],
                                "legend": {
                                    "isVisible": true,
                                    "position": "right"
                                },
                                "preferredSeriesType": "bar_stacked",
                                "tickLabelsVisibilitySettings": {
                                    "x": true,
                                    "yLeft": true,
                                    "yRight": true
                                },
                                "valueLabels": "hide"
                            }
                        },
                        "title": "agg_storage over @timestamp",
                        "visualizationType": "lnsXY"
                    },
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| EVAL config_join_key = \"chargeback_config\"\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL \n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate\n| STATS  \n    agg_storage = sum(storage)\n    BY \n        @timestamp,\n        tier\n| WHERE agg_storage \u003e 0"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 15,
                    "i": "27ff6aca-534d-4a53-b777-6f2d5abe3dfe",
                    "w": 16,
                    "x": 16,
                    "y": 88
                },
                "panelIndex": "27ff6aca-534d-4a53-b777-6f2d5abe3dfe",
                "title": "Storage: Normalised cost per tier per day",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Indexing details",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "53171eb7-4d6e-48ef-9d43-85eefde360b3",
                    "w": 48,
                    "x": 0,
                    "y": 51
                },
                "panelIndex": "53171eb7-4d6e-48ef-9d43-85eefde360b3",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Querying details",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "652cb08b-7767-4ea7-9b48-1b07b80ac619",
                    "w": 48,
                    "x": 0,
                    "y": 68
                },
                "panelIndex": "652cb08b-7767-4ea7-9b48-1b07b80ac619",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Storage details",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "25a83ed7-fba0-4400-8078-59c77d742334",
                    "w": 48,
                    "x": 0,
                    "y": 85
                },
                "panelIndex": "25a83ed7-fba0-4400-8078-59c77d742334",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "savedVis": {
                        "data": {
                            "aggs": [],
                            "searchSource": {
                                "filter": [],
                                "query": {
                                    "language": "kuery",
                                    "query": ""
                                }
                            }
                        },
                        "description": "",
                        "params": {
                            "fontSize": 12,
                            "markdown": "## Blended details",
                            "openLinksInNewTab": false
                        },
                        "title": "",
                        "type": "markdown",
                        "uiState": {}
                    }
                },
                "gridData": {
                    "h": 3,
                    "i": "98590126-6fbc-4bb0-be63-5d333f27d11d",
                    "w": 48,
                    "x": 0,
                    "y": 103
                },
                "panelIndex": "98590126-6fbc-4bb0-be63-5d333f27d11d",
                "title": "",
                "type": "visualization"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "references": [],
                        "state": {
                            "datasourceStates": {
                                "textBased": {
                                    "indexPatternRefs": [],
                                    "layers": {
                                        "028914d5-5b34-4db1-b06e-ee4d5c6feb1b": {
                                            "columns": [
                                                {
                                                    "columnId": "agg_indexing",
                                                    "customLabel": false,
                                                    "fieldName": "agg_indexing",
                                                    "inMetricDimension": true,
                                                    "label": "agg_indexing",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    },
                                                    "params": {
                                                        "format": {
                                                            "id": "number",
                                                            "params": {
                                                                "decimals": 2
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "columnId": "agg_querying",
                                                    "customLabel": false,
                                                    "fieldName": "agg_querying",
                                                    "inMetricDimension": true,
                                                    "label": "agg_querying",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    },
                                                    "params": {
                                                        "format": {
                                                            "id": "number",
                                                            "params": {
                                                                "decimals": 2
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "columnId": "agg_storage",
                                                    "customLabel": false,
                                                    "fieldName": "agg_storage",
                                                    "inMetricDimension": true,
                                                    "label": "agg_storage",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    },
                                                    "params": {
                                                        "format": {
                                                            "id": "number",
                                                            "params": {
                                                                "decimals": 2
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "columnId": "agg_blended",
                                                    "customLabel": false,
                                                    "fieldName": "agg_blended",
                                                    "inMetricDimension": true,
                                                    "label": "agg_blended",
                                                    "meta": {
                                                        "esType": "double",
                                                        "type": "number"
                                                    },
                                                    "params": {
                                                        "format": {
                                                            "id": "number",
                                                            "params": {
                                                                "decimals": 2
                                                            }
                                                        }
                                                    }
                                                },
                                                {
                                                    "columnId": "tier",
                                                    "customLabel": false,
                                                    "fieldName": "tier",
                                                    "inMetricDimension": true,
                                                    "label": "tier",
                                                    "meta": {
                                                        "esType": "keyword",
                                                        "type": "string"
                                                    }
                                                }
                                            ],
                                            "index": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
                                            "query": {
                                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| EVAL config_join_key = \"chargeback_config\"\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, tier_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_indexing = sum(indexing),\n    agg_querying = sum(querying),\n    agg_storage = sum(storage),\n    agg_blended = sum(blended)\n    BY\n        tier\n| WHERE agg_blended \u003e 0"
                                            }
                                        }
                                    }
                                }
                            },
                            "filters": [],
                            "needsRefresh": false,
                            "query": {
                                "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| EVAL config_join_key = \"chargeback_config\"\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, tier_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_indexing = sum(indexing),\n    agg_querying = sum(querying),\n    agg_storage = sum(storage),\n    agg_blended = sum(blended)\n    BY\n        tier\n| WHERE agg_blended \u003e 0"
                            },
                            "visualization": {
                                "columns": [
                                    {
                                        "columnId": "agg_indexing"
                                    },
                                    {
                                        "columnId": "agg_querying"
                                    },
                                    {
                                        "columnId": "agg_storage"
                                    },
                                    {
                                        "columnId": "agg_blended"
                                    },
                                    {
                                        "columnId": "tier"
                                    }
                                ],
                                "layerId": "028914d5-5b34-4db1-b06e-ee4d5c6feb1b",
                                "layerType": "data"
                            }
                        },
                        "title": "agg_indexing \u0026 agg_querying \u0026 agg_storage \u0026 agg_blended of tier",
                        "visualizationType": "lnsDatatable"
                    },
                    "description": "Normalised cost breakdown per tier, based on Indexing, Querying, Storage and a blended ratio of all of these.",
                    "enhancements": {
                        "dynamicActions": {
                            "events": []
                        }
                    },
                    "filters": [],
                    "query": {
                        "esql": "FROM billing_cluster_cost_lookup\n| grok sku \"%{WORD}.es.%{WORD:es_node_type}\"\n| GROK sku \"%{WORD}.%{WORD:non_es_node_type}\"\n| eval cost_type = CASE(\n    es_node_type is not null, es_node_type,\n    non_es_node_type  \n)\n| eval cost_type = CASE(\n    cost_type == \"data\", \"data-transfer\",\n    cost_type == \"datahot\", \"datahot/datacontent\",\n    cost_type\n)\n| DROP es_node_type, non_es_node_type\n| EVAL config_join_key = \"chargeback_config\"\n| where cost_type IN (\"datahot/datacontent\", \"datawarm\", \"datacold\", \"datafrozen\")\n| LOOKUP JOIN chargeback_conf_lookup ON config_join_key\n| LOOKUP JOIN cluster_deployment_contribution_lookup ON composite_key\n| LOOKUP JOIN cluster_tier_contribution_lookup ON composite_key\n| EVAL\n    indexing = CASE (deployment_sum_indexing_time \u003e 0, tier_sum_indexing_time / deployment_sum_indexing_time * total_ecu) * conf_ecu_rate,\n    querying = CASE (deployment_sum_query_time \u003e 0, tier_sum_query_time / deployment_sum_query_time * total_ecu) * conf_ecu_rate,\n    data_set = CASE (deployment_sum_data_set_store_size \u003e 0, tier_sum_data_set_store_size / deployment_sum_data_set_store_size * total_ecu),\n    store = CASE (deployment_sum_store_size \u003e 0, tier_sum_store_size / deployment_sum_store_size * total_ecu),\n    storage = CASE (store == 0, data_set, store) * conf_ecu_rate,\n    total_weight_hot = conf_storage_weight + conf_query_weight + conf_indexing_weight,\n    total_weight_cold = conf_storage_weight + conf_query_weight,\n    blended = CASE (\n        tier == \"hot/content\",\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight) + (indexing / conf_ecu_rate * conf_indexing_weight)) / total_weight_hot,\n        ((storage / conf_ecu_rate * conf_storage_weight) + (querying / conf_ecu_rate * conf_query_weight)) / total_weight_cold\n    ) * conf_ecu_rate\n| STATS\n    agg_indexing = sum(indexing),\n    agg_querying = sum(querying),\n    agg_storage = sum(storage),\n    agg_blended = sum(blended)\n    BY\n        tier\n| WHERE agg_blended \u003e 0"
                    },
                    "searchSessionId": "ccbb88e1-2d79-425a-af78-1ad12e12736e",
                    "syncColors": false,
                    "syncCursor": true,
                    "syncTooltips": false
                },
                "gridData": {
                    "h": 10,
                    "i": "040b60f6-5cad-44ed-99a9-ae89c3e114e9",
                    "w": 48,
                    "x": 0,
                    "y": 5
                },
                "panelIndex": "040b60f6-5cad-44ed-99a9-ae89c3e114e9",
                "title": "Normalised cost per tier",
                "type": "lens"
            },
            {
                "embeddableConfig": {
                    "attributes": {
                        "layout": "horizontal",
                        "links": [
                            {
                                "destinationRefName": "link_c8c565f3-89f9-483a-b120-2c84ea6d0043_dashboard",
                                "id": "c8c565f3-89f9-483a-b120-2c84ea6d0043",
                                "order": 0,
                                "type": "dashboardLink"
                            },
                            {
                                "destinationRefName": "link_4e3d9521-0167-4508-ac8f-445a37260b9c_dashboard",
                                "id": "4e3d9521-0167-4508-ac8f-445a37260b9c",
                                "order": 1,
                                "type": "dashboardLink"
                            }
                        ]
                    },
                    "enhancements": {}
                },
                "gridData": {
                    "h": 2,
                    "i": "6abc7975-1cf9-47aa-9fda-ee9b3cf4cfdd",
                    "w": 48,
                    "x": 0,
                    "y": 0
                },
                "panelIndex": "6abc7975-1cf9-47aa-9fda-ee9b3cf4cfdd",
                "type": "links"
            }
        ],
        "timeRestore": false,
        "title": "[Chargeback] Cost and Consumption - data tiers",
        "version": 3
    },
    "coreMigrationVersion": "8.8.0",
    "created_at": "2025-08-13T10:11:00.891Z",
    "created_by": "u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0",
    "id": "chargeback-e6778c66-2aa2-49e2-9360-e433cb4fd295",
    "references": [
        {
            "id": "chargeback-1238481e-f5f7-419d-a171-57760b64ece6",
            "name": "tag-ref-1238481e-f5f7-419d-a171-57760b64ece6",
            "type": "tag"
        },
        {
            "id": "chargeback-8dc915a8-3bce-489c-a5a5-528885409353",
            "name": "6abc7975-1cf9-47aa-9fda-ee9b3cf4cfdd:link_c8c565f3-89f9-483a-b120-2c84ea6d0043_dashboard",
            "type": "dashboard"
        },
        {
            "id": "chargeback-e6778c66-2aa2-49e2-9360-e433cb4fd295",
            "name": "6abc7975-1cf9-47aa-9fda-ee9b3cf4cfdd:link_4e3d9521-0167-4508-ac8f-445a37260b9c_dashboard",
            "type": "dashboard"
        },
        {
            "id": "2bf6c0d816ef0a2d56d03ede549c16c08c35db2cf02d78c12756a98a33f50e4f",
            "name": "controlGroup_373f0e1a-c2b6-4fee-bfaf-178990fb1213:optionsListDataView",
            "type": "index-pattern"
        }
    ],
    "type": "dashboard",
    "typeMigrationVersion": "10.2.0",
    "updated_by": "u_mGBROF_q5bmFCATbLXAcCwKa0k8JvONAwSruelyKA5E_0"
}