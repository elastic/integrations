---
description: Pipeline for processing Tomcat Localhost logs.
processors:
  - set:
      field: ecs.version
      value: 8.7.0
  - set:
      field: event.kind
      value: event
  - set:
      field: event.module
      value: tomcat
  - set:
      field: event.category
      value: [web]
  - set:
      field: event.type
      value: [info]
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - grok:
      field: event.original
      tag: 'grok_parse_log'
      pattern_definitions:
        GREEDYMULTILINE: "(.|\\n\\t|\\n\\t\\t|\\n)*"
        LOCALHOST_TIMESTAMP: '%{MONTHDAY}-%{MONTH}-%{YEAR} %{TIME}'
      patterns:
        - '^%{LOCALHOST_TIMESTAMP:_tmp.timestamp} %{DATA:log.level} \[%{DATA:tomcat.localhost.subsystem}\] %{GREEDYDATA:message}%{GREEDYMULTILINE:error.stack_trace}$'
        - '^%{LOCALHOST_TIMESTAMP:_tmp.timestamp} %{DATA:log.level} \[%{DATA:tomcat.localhost.subsystem}\] %{GREEDYDATA:message}$'
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.type
      value: [error]
      if: ctx.error?.stack_trace != ''
  - date:
      field: _tmp.timestamp
      tag: 'date_set_timestamp'
      if: ctx._tmp?.timestamp != null && ctx._tmp.timestamp != ''
      formats:
        - dd-MMM-yyyy HH:mm:ss.SSS
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - lowercase:
      field: log.level
      ignore_missing: true
  - remove:
      field:
        - _tmp
      ignore_missing: true
  - remove:
      field:
        - event.original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
