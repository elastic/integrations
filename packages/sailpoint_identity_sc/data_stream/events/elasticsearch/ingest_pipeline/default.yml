---
description: Pipeline for processing sailpoint identity security cloud events
processors:
  - rename:
      field: message
      target_field: sailpoint_identity_sc.events

  - fingerprint:
      fields:
        - sailpoint_identity_sc.events.id
      tag: fingerprinting
      target_field: "_id"
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
##################### Scripts for processing input #####################
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
        
  - script:
      description: Convert Additional Info keys to snake case.
      tag: additional-info-keys-to-snake-case
      lang: painless
      source: |
        Map keysToSnakeCase(Map m) {
          def regex = /_?([a-z])([A-Z]+)/;
          def snakeCaseMap = [:];
          for (entry in m.entrySet()) {
            def k = entry.getKey();
            def v = entry.getValue();
            if (v instanceof Map) {
              v = keysToSnakeCase(v);
            } else if (v instanceof List) {
              for (int i = 0; i < v.size(); i++) {
                def item = v.get(i);
                if (item instanceof Map) {
                  v.set(i, keysToSnakeCase(item));
                }
              }
            }
            k = regex.matcher(k).replaceAll('$1_$2').toLowerCase();
            snakeCaseMap.put(k, v);
          }
          return snakeCaseMap;
        }
        if (ctx.sailpoint_identity_sc.events != null) {
          ctx.sailpoint_identity_sc.events = keysToSnakeCase(ctx.sailpoint_identity_sc.events);
        }
##################### ECS Fields #####################
  - set:
      field: event.kind
      value: event

  - set:
      field: ecs.version
      value: "8.11.0"

  - append:
      field: event.category
      value: iam
  - set:
      field: event.dataset
      value: sailpoint_identity_sc.events

  - set:
      field: event.module
      value: sailpoint_identity_sc

  - set:
      field: event.type
      value: ["info"]

  - set:
      field: event.dataset
      value: sailpoint_identity_sc.events

  - set:
      field: event.module
      value: sailpoint_identity_sc

  - set:
     field: "@timestamp"
     copy_from: sailpoint_identity_sc.events.created
     ignore_empty_value: true

  - set:
      field: event.id
      copy_from: ctx.sailpoint_identity_sc.events.id
      ignore_empty_value: true

  - append:
      field: related.hosts
      value: "{{{sailpoint_identity_sc.events.ip_address}}}"
      allow_duplicates: false
      if: ctx.sailpoint_identity_sc.events?.ip_address != null && ctx.sailpoint_identity_sc.events.ip_address != ''
  
  - append:
      field: related.user
      value: "{{{sailpoint_identity_sc.events.actor.name}}}"
      allow_duplicates: false   
      if: ctx.sailpoint_identity_sc.events?.actor.name != null && ctx.sailpoint_identity_sc.events.actor.name != '' 

  - append:
      field: related.hosts
      value: "{{{sailpoint_identity_sc.events.attributes.host_name}}}"
      allow_duplicates: false   
      if: ctx.sailpoint_identity_sc.events?.host_name != null && ctx.sailpoint_identity_sc.events.host_name != '' 

 #################### Override host.ip ######################
  - convert:
      field: sailpoint_identity_sc.events.ip_address
      type: ip
      if: ctx.sailpoint_identity_sc.events?.ip_address != null && ctx.sailpoint_identity_sc.events.ip_address != ''
      ignore_missing: true

  - remove:
      field: sailpoint_identity_sc.events.ip_address
      if: ctx.sailpoint_identity_sc.events?.ip_address == "" 

  - append:
      field: host.ip
      value: "{{{sailpoint_identity_sc.events.ip_address}}}"    
      allow_duplicates: false 
      if: ctx.sailpoint_identity_sc.events?.ip_address != null && ctx.sailpoint_identity_sc.events.ip_address != ''

  - geoip:
      field: host.ip
      target_field: host.geo
      ignore_missing: true
      ignore_failure: true
 ################### Error Log fields ###################
on_failure:
  - append:
      field: error.message
      value: '{{{_ingest.on_failure_message}}}'

  - set:
      field: event.kind
      value: pipeline_error
