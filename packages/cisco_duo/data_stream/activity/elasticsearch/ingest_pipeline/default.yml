---
description: Pipeline for parsing cisco_duo trust monitor logs
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: event.kind
      value: event
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      field: event.original
      target_field: json
      tag: json_event_original
      on_failure:
        - set:
            field: event.kind
            value: pipeline_error
        - append:
            field: error.message
            value: |-
              Processor "{{{ _ingest.on_failure_processor_type }}}" with tag "{{{ _ingest.on_failure_processor_tag }}}" in pipeline "{{{ _ingest.on_failure_pipeline }}}" failed with message "{{{ _ingest.on_failure_message }}}"
  - drop:
      description: Drop if no timestamp (invalid json)
      if: ctx.json?.ts == null
  - date:
      field: json.ts
      formats:
        - ISO8601
      on_failure:
        - append:
            field: error.message
            value: |-
              Processor "{{{ _ingest.on_failure_processor_type }}}" with tag "{{{ _ingest.on_failure_processor_tag }}}" in pipeline "{{{ _ingest.on_failure_pipeline }}}" failed with message "{{{ _ingest.on_failure_message }}}"
  - fingerprint:
      tag: fingerprint_activity
      fields:
        - json.activity_id
        - json.akey
        - json.ts
      target_field: _id
      ignore_missing: true

  ## Custom fields
  - rename:
      field: json.access_device
      target_field: cisco_duo.activity.access_device
      ignore_missing: true
  - convert:
      field: cisco_duo.activity.access_device.ip.address
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - geoip:
      field: cisco_duo.activity.access_device.ip.address
      target_field: cisco_duo.activity.access_device.geo
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: cisco_duo.activity.access_device.ip.address
      target_field: cisco_duo.activity.access_device.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: cisco_duo.activity.access_device.as.asn
      target_field: cisco_duo.activity.access_device.as.number
      ignore_missing: true
  - rename:
      field: cisco_duo.activity.access_device.as.organization_name
      target_field: cisco_duo.activity.access_device.as.organization.name
      ignore_missing: true
  - rename:
      field: json.action
      target_field: cisco_duo.activity.action
      ignore_missing: true
  - rename:
      field: json.activity_id
      target_field: cisco_duo.activity.id
      ignore_missing: true
  - rename:
      field: json.actor
      target_field: cisco_duo.activity.actor
      ignore_missing: true
  - rename:
      field: json.akey
      target_field: cisco_duo.activity.akey
      ignore_missing: true
  - rename:
      field: json.application
      target_field: cisco_duo.activity.application
      ignore_missing: true
  - rename:
      field: json.old_target
      target_field: cisco_duo.activity.old_target
      ignore_missing: true
  - rename:
      field: json.outcome.result
      target_field: cisco_duo.activity.outcome
      ignore_missing: true
      if: ctx.json.outcome?.result != null
  - rename:
      field: json.target
      target_field: cisco_duo.activity.target
      ignore_missing: true

  ## ECS fields
  - set:
      field: event.id
      copy_from: cisco_duo.activity.id
      ignore_empty_value: true
  - set:
      field: event.action
      copy_from: cisco_duo.activity.action.name
      ignore_empty_value: true
  - set:
      field: event.outcome
      value: success
      if: ctx.cisco_duo?.activity?.outcome != null && ctx.cisco_duo.activity.outcome == 'SUCCESS'
  - set:
      field: event.outcome
      value: failure
      if: ctx.cisco_duo?.activity?.outcome != null && ctx.cisco_duo.activity.outcome == 'FAILURE'
  - set:
      field: source.ip
      copy_from: cisco_duo.activity.access_device.ip.address
      ignore_empty_value: true
  - set:
      field: source.geo
      copy_from: cisco_duo.activity.access_device.geo
      ignore_empty_value: true
  - set:
      field: source.as
      copy_from: cisco_duo.activity.access_device.as
      ignore_empty_value: true
  - set:
      field: user.name
      copy_from: cisco_duo.activity.actor.name
      if: ctx.cisco_duo?.activity?.actor?.type != null && ctx.cisco_duo.activity.actor.type == 'user'
      ignore_empty_value: true
  - set:
      field: user_agent.name
      copy_from: cisco_duo.activity.access_device.browser
      ignore_empty_value: true
  - set:
      field: user_agent.version
      copy_from: cisco_duo.activity.access_device.browser_version
      ignore_empty_value: true
  - set:
      field: user_agent.os.name
      copy_from: cisco_duo.activity.access_device.os
      ignore_empty_value: true
  - set:
      field: user_agent.os.version
      copy_from: cisco_duo.activity.access_device.os_version
      ignore_empty_value: true

  ## Related fields
  - append:
      field: related.user
      value: "{{{user.name}}}"
      allow_duplicates: false
      if: ctx.user?.name != null
  - append:
      field: related.ip
      value: "{{{source.ip}}}"
      allow_duplicates: false
      if: ctx.source?.ip != null

  ## Clean up
  - script:
      description: Drops null/empty values recursively
      tag: drop_null_values
      lang: painless
      ignore_failure: true
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - remove:
      field: json
      ignore_missing: true
on_failure:
  - append:
      field: error.message
      value: |-
        Processor "{{{ _ingest.on_failure_processor_type }}}" with tag "{{{ _ingest.on_failure_processor_tag }}}" in pipeline "{{{ _ingest.on_failure_pipeline }}}" failed with message "{{{ _ingest.on_failure_message }}}"
  - set:
      field: event.kind
      value: pipeline_error
