---
description: Pipeline for parsing cisco_duo administrator logs
processors:
  - set:
      field: event.ingested
      value: "{{ _ingest.timestamp }}"
  - set:
      field: ecs.version
      value: '1.11.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - date:
      field: json.timestamp
      target_field: "@timestamp"
      ignore_failure: true
      formats:
        - UNIX
  - set:
      field: event.category
      value: iam
  - set:
      field: event.kind
      value: event
  - set:
      field: event.outcome
      value: success
  - set: 
      field: event.outcome
      value: failed
      if: ctx?.json?.action instanceof String && ['ad_sync_failed', 'azure_sync_fail', 'azure_sync_fail'].contains(ctx?.json?.action)
  - set:
      field: event.type
      value: admin
  - set: 
      field: message
      copy_from: json.description
      if: ctx?.json?.description != null
  - json:
      field: json.description
      target_field: cisco_duo.admin.flattened
      if: ctx?.json?.description != null
      ignore_failure: true
  - set: 
      field: event.reason
      value: "{{message}}"
  - set: 
      field: event.action
      copy_from: json.action
      if: ctx?.json?.action != null
  - set: 
      field: user.name
      copy_from: json.username
      if: ctx?.json?.username != null
  - set:
      field: user.target.name
      copy_from: json.object
      if: ctx?.json?.object != null
  - rename: 
      field: json.action
      target_field: cisco_duo.admin.action
      ignore_missing: true
  - rename: 
      field: json.username
      target_field: cisco_duo.admin.user.name
      ignore_missing: true
  - rename: 
      field: json.object
      target_field: cisco_duo.admin.action_performed_on
      if: ctx?.json?.object != null
  - remove: 
      field:
        - message 
        - event.reason
      if: ctx?.cisco_duo?.admin?.flattened != null
  - remove:
      field: json
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
