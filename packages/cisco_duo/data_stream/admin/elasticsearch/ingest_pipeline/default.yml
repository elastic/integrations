---
description: Pipeline for parsing cisco_duo administrator logs
processors:
  - set:
      field: ecs.version
      value: '8.3.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - fingerprint:
      fields:
        - json.timestamp
        - json.action
        - json.description
        - json.object
        - json.username
      target_field: _id
      ignore_missing: true
  - date:
      field: json.timestamp
      target_field: "@timestamp"
      if: ctx.json?.timestamp != null
      formats:
        - UNIX
      on_failure:
        - append:
            field: error.message
            value: "{{{_ingest.on_failure_message}}}"
  - set:
      field: event.category
      value: iam
      if: ctx?.json?.action instanceof String && ['admin_2fa_error','admin_account_switch','admin_activation_create','admin_activation_delete','admin_activate_duo_push','admin_create','admin_delete','admin_factor_restrictions_update','admin_login','admin_login_error','admin_reactivates_duo_push','admin_reset_password','admin_self_activate','admin_send_reset_password_email','admin_update','adminapi_request_ip_denied','bypass_create','bypass_delete','bypass_view','phone_associate','phone_create','phone_delete','phone_disassociate','phone_update','group_create','group_delete','group_update','user_bulk_activate','user_bulk_enroll','user_create','user_delete','user_import','user_pending_delete','user_restore','user_update'].contains(ctx?.json?.action) 
  - set:
      field: event.kind
      value: event
  - set:
      field: event.outcome
      value: success
  - set: 
      field: event.outcome
      value: failure
      if: ctx?.json?.action instanceof String && ['ad_sync_failed','admin_2fa_error','admin_login_error','azure_sync_fail','openldap_sync_failed'].contains(ctx?.json?.action)
  - append:
      field: event.type
      value: admin
      if: ctx?.json?.action instanceof String && ['activation_create_link','activation_delete_link','activation_send_link','admin_2fa_error','admin_account_switch','admin_activation_create','admin_activation_delete','admin_activate_duo_push','admin_create','admin_delete','admin_factor_restrictions_update','admin_login','admin_login_error','admin_reactivates_duo_push','admin_reset_password','admin_self_activate','admin_send_reset_password_email','admin_update','adminapi_request_ip_denied'].contains(ctx?.json?.action)
  - append:
      field: event.type
      value: group
      if: ctx?.json?.action instanceof String && ['group_create','group_delete','group_update','integration_group_policy_add','integration_group_policy_remove','policy_create','policy_delete','policy_update'].contains(ctx?.json?.action)  
  - append:
      field: event.type
      value: user
      if: ctx?.json?.action instanceof String && ['ad_sync_by_user_begin','ad_sync_by_user_finish','azure_sync_by_user_begin','azure_sync_by_user_finish','bypass_create','bypass_delete','bypass_view','openldap_sync_begin','openldap_sync_by_user_begin','phone_associate','phone_create','phone_delete','phone_disassociate','phone_update','user_bulk_activate','user_bulk_enroll','user_create','user_delete','user_import','user_pending_delete','user_restore','user_update'].contains(ctx?.json?.action)
  - append:
      field: event.type
      value: info
      if: ctx?.json?.action instanceof String && ['ad_sync_begin','ad_sync_failed','ad_sync_finish','azure_directory_create','azure_directory_update','azure_directory_delete','azure_sync_begin','azure_sync_finish','azure_sync_fail','create_child_customer','credits_update','customer_update','delete_child_customer','directory_create','directory_delete','directory_groups_update','directory_sync_pause','directory_sync_resume','directory_update','edition_update','feature_add','feature_delete','hardtoken_create','hardtoken_delete','hardtoken_resync','hardtoken_update','integration_create','integration_delete','integration_policy_assign','integration_policy_unassign','integration_skey_view','integration_update','openldap_sync_by_user_finish','openldap_sync_config_download','openldap_sync_failed','openldap_sync_finish','regen_mobile','regen_sms','resend_enroll_codes','send_enroll_code'].contains(ctx?.json?.action)  
  - append: 
      field: event.type
      value: creation
      if: ctx?.json?.action instanceof String && ctx?.json?.action?.contains("create")
  - append: 
      field: event.type
      value: change
      if: ctx?.json?.action instanceof String && ctx?.json?.action?.contains("update")
  - append: 
      field: event.type
      value: deletion
      if: ctx?.json?.action instanceof String && ctx?.json?.action?.contains("delete")
  - set: 
      field: message
      copy_from: json.description
      if: ctx?.json?.description != null
  - json:
      field: json.description
      target_field: cisco_duo.admin.flattened
      if: ctx?.json?.description != null
      ignore_failure: true
  - set: 
      field: event.reason
      value: "{{{message}}}"
  - set: 
      field: event.action
      copy_from: json.action
      if: ctx?.json?.action != null
  - set: 
      field: user.name
      copy_from: json.username
      if: ctx?.json?.username != null
  - set: 
      field: user.email
      copy_from: cisco_duo.admin.flattened.email
      if: ctx?.event?.action == "admin_self_activate"
      ignore_failure: true
  - set: 
      field: user.changes.name
      copy_from: cisco_duo.admin.flattened.realname
      if: ctx?.event?.action == "user_update"
      ignore_failure: true
  - set: 
      field: user.changes.email
      copy_from: cisco_duo.admin.flattened.email
      if: ctx?.event?.action == "user_update"
      ignore_failure: true
  - set:
      field: user.target.name
      copy_from: json.object
      if: ctx?.json?.object != null
  - rename: 
      field: json.action
      target_field: cisco_duo.admin.action
      ignore_missing: true
  - rename: 
      field: json.username
      target_field: cisco_duo.admin.user.name
      ignore_missing: true
  - rename: 
      field: json.object
      target_field: cisco_duo.admin.action_performed_on
      if: ctx?.json?.object != null
  - remove: 
      field:
        - message 
        - event.reason
      if: ctx?.cisco_duo?.admin?.flattened != null
  - remove:
      field: json
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - append:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
