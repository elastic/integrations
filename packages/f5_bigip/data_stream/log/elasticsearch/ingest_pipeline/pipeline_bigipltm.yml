---
description: Pipeline for F5 BIG-IP Local Traffic Manager logs.
processors:
  - date:
      field: json.event_timestamp
      target_field: f5_bigip.log.event.timestamp
      if: ctx.json?.event_timestamp != null && ctx.json.event_timestamp != ''
      formats:
        - yyyy-MM-dd:HH:mm:ss.SSSz
        - yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
      on_failure:
      - append:
          field: error.message
          value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      copy_from: f5_bigip.log.event.timestamp
      ignore_failure: true
  - convert:
      field: json.client_ip
      target_field: f5_bigip.log.client.ip
      if: ctx.json?.client_ip != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: client.ip
      copy_from: f5_bigip.log.client.ip
      ignore_failure: true
  - append:
      field: related.ip
      value: '{{{client.ip}}}'
      allow_duplicates: false
      ignore_failure: true
  - rename:
      field: json.http_method
      target_field: f5_bigip.log.http.method
      ignore_missing: true
  - set:
      field: http.request.method
      copy_from: f5_bigip.log.http.method
      ignore_failure: true
  - rename:
      field: json.http_referrer
      target_field: f5_bigip.log.http.referrer
      ignore_missing: true
  - set:
      field: http.request.referrer
      copy_from: f5_bigip.log.http.referrer
      ignore_failure: true
  - rename:
      field: json.http_status
      target_field: f5_bigip.log.http.status
      ignore_missing: true
  - rename:
      field: json.http_version
      target_field: f5_bigip.log.http.version
      ignore_missing: true
  - set:
      field: http.version
      copy_from: f5_bigip.log.http.version
      ignore_failure: true
  - convert:
      field: json.server_ip
      target_field: f5_bigip.log.server.ip
      if: ctx.json?.server_ip != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: server.ip
      copy_from: f5_bigip.log.server.ip
      ignore_failure: true
  - append:
      field: related.ip
      value: '{{{server.ip}}}'
      allow_duplicates: false
      ignore_failure: true
  - convert:
      field: json.src_ip
      target_field: f5_bigip.log.src.ip
      if: ctx.json?.src_ip != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: source.ip
      copy_from: f5_bigip.log.src.ip
      ignore_failure: true
  - append:
      field: related.ip
      value: '{{{source.ip}}}'
      allow_duplicates: false
      ignore_failure: true
  - rename:
      field: json.http_user_agent
      target_field: f5_bigip.log.http.user_agent
      ignore_missing: true
  - user_agent:
      field: f5_bigip.log.http.user_agent
      on_failure:
        - set:
            field: user_agent.original
            copy_from: f5_bigip.log.http.user_agent
            ignore_failure: true
  - rename:
      field: json.event_source
      target_field: f5_bigip.log.event.source
      ignore_missing: true
  - rename:
      field: json.http_uri
      target_field: f5_bigip.log.http.uri
      ignore_missing: true
  - rename:
      field: json.telemetryEventCategory
      target_field: f5_bigip.log.telemetry.event.category
      ignore_missing: true
  - rename:
      field: json.tenant
      target_field: f5_bigip.log.tenant
      ignore_missing: true
  - rename:
      field: json.virtual_name
      target_field: f5_bigip.log.virtual.name
      ignore_missing: true
  - convert:
      field: json.bytes_in
      target_field: f5_bigip.log.bytes.in
      if: ctx.json?.bytes_in != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.bytes_out
      target_field: f5_bigip.log.bytes.out
      if: ctx.json?.bytes_out != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      if: ctx.f5_bigip?.log?.bytes?.in != null && ctx.f5_bigip.log.bytes.out != null
      source: |
        ctx.network = new HashMap();
        ctx.network.bytes = ctx.f5_bigip.log.bytes.in + ctx.f5_bigip.log.bytes.out;
  - set:
      field: network.direction
      value: ingress
      if: ctx.f5_bigip?.log?.bytes?.in != null && ctx.f5_bigip.log.bytes.in != 0 && ctx.f5_bigip.log.bytes.out == 0
      ignore_failure: true
  - set:
      field: network.direction
      value: egress
      if: ctx.f5_bigip?.log?.bytes?.out != null && ctx.f5_bigip.log.bytes.out != 0 && ctx.f5_bigip.log.bytes.in == 0
      ignore_failure: true
  - set:
      field: network.protocol
      value: http
      if: ctx.f5_bigip?.log?.http?.method != null && ctx.f5_bigip.log.http.method != ''
      ignore_failure: true
  - rename:
      field: json.cookie
      target_field: f5_bigip.log.cookie
      ignore_missing: true
  - rename:
      field: json.http_content_type
      target_field: f5_bigip.log.http.content_type
      ignore_missing: true
  - rename:
      field: json.http_host
      target_field: f5_bigip.log.http.host
      ignore_missing: true
  - rename:
      field: json.http_url
      target_field: f5_bigip.log.http.url
      ignore_missing: true
  - uri_parts:
      field: f5_bigip.log.http.url
      if: ctx.f5_bigip?.log?.http?.url != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.node
      target_field: f5_bigip.log.node
      if: ctx.json?.node != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      value: '{{{f5_bigip.log.node}}}'
      allow_duplicates: false
      ignore_failure: true
  - convert:
      field: json.node_port
      target_field: f5_bigip.log.node_port
      if: ctx.json?.node_port != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.req_elapsed_time
      target_field: f5_bigip.log.req.elapsed_time
      if: ctx.json?.req_elapsed_time != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.req_start_time
      target_field: f5_bigip.log.req.start_time
      if: ctx.json?.req_start_time != null && ctx.json.req_start_time != ''
      formats:
        - yyyy/MM/dd HH:mm:ss
      on_failure:
      - append:
          field: error.message
          value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.res_start_time
      target_field: f5_bigip.log.res.start_time
      if: ctx.json?.res_start_time != null && ctx.json.res_start_time != ''
      formats:
        - yyyy/MM/dd HH:mm:ss
      on_failure:
      - append:
          field: error.message
          value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.user
      target_field: f5_bigip.log.user.name
      ignore_missing: true
  - set:
      field: user.name
      copy_from: f5_bigip.log.user.name
      ignore_failure: true
  - append:
      field: related.user
      value: '{{{user.name}}}'
      allow_duplicates: false
      ignore_failure: true
  - rename:
      field: json.vip
      target_field: f5_bigip.log.vip
      ignore_missing: true
  - rename:
      field: json.virtual_server
      target_field: f5_bigip.log.virtual.server
      ignore_missing: true
  - remove:
      field: json
      ignore_missing: true
  - remove:
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      field:
        - f5_bigip.log.event.timestamp
        - f5_bigip.log.client.ip
        - f5_bigip.log.hostname
        - f5_bigip.log.http.method
        - f5_bigip.log.http.referrer
        - f5_bigip.log.http.version
        - f5_bigip.log.server.ip
        - f5_bigip.log.src.ip
        - f5_bigip.log.user.name
        - f5_bigip.log.application.name
        - f5_bigip.log.http.user_agent
      ignore_failure: true
      ignore_missing: true
on_failure:
  - append:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'
