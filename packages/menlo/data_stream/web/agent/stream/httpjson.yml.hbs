config_version: 2
interval: {{interval}}
{{#if enable_request_tracer}}
request.tracer.filename: "../../logs/httpjson/http-request-trace-*.ndjson"
{{/if}}
request.method: POST
request.url: {{url}}/api/rep/v1/fetch/client_select
{{#if proxy_url}}
request.proxy_url: {{proxy_url}}
{{/if}}
request.transforms:
  - set:
      target: body.data.token
      value: {{token}}
  - set:
      target: body.data.log_type
      value: 'web'
  - set:
      target: url.params.start
      value: '[[formatDate (parseDate .cursor.last_update_at) "UnixMilli"]]'
      default: '[[formatDate (now (parseDuration "-{{initial_interval}}")) "UnixMilli"]]'
  - set:
      target: url.params.end
      value: '[[formatDate (now) "UnixMilli"]]'
  - set:
      target: url.params.limit
      value: {{batch_size}}
  - set:
      target: url.params.format
      value: 'json'
response.pagination:
  - set:
      target: url.params.start
      value: '[[.last_response.url.params.Get "start"]]'
      fail_on_template_error: true
  - set:
      target: url.params.end
      value: '[[.last_response.url.params.Get "end"]]'
      fail_on_template_error: true
  - set:
      target: url.params.continuationToken
      value: '[[if index .last_response.body "continuationToken"]][[.last_response.body.continuationToken]][[end]]'
      fail_on_template_error: true
cursor:
  last_update_at:
    value: '[[if (eq .last_response.body.continuationToken nil)]][[.first_event.date]][[end]]'
response.split:
  target: body.data
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
