---
description: Mapping of Menlo Web Proxy Fields from API into ECS fields.
processors:
  - set:
      field: ecs.version
      value: 8.11.0
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      if: ctx.event?.original == null
      ignore_missing: true
  - set:
      field: event.kind
      value: alert
  - json:
      field: event.original
      tag: 'json_decoding'
      target_field: json
  - date:
      field: json.event.event_time
      formats:
        - ISO8601
      target_field: '@timestamp'
      timezone: UTC
      tag: date_timestamp_epoch
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.event.severity
      type: long
      target_field: event.severity
      ignore_missing: true
  - rename:
      field: json.event.full_session_id
      target_field: event.id
      ignore_missing: true
  - rename:
      field: json.event.pe_action
      target_field: event.action
      ignore_missing: true
  - set:
      field: event.outcome
      value: unknown
  - set:
      field: event.outcome
      value: failure
      if: ctx.event.action == 'block' || ctx.event.action == 'isolate' || ctx.event.action == 'ssl_exception'
  - set:
      field: event.outcome
      value: success
      if: ctx.event.action == 'direct' || ctx.event.action == 'allow'
  - rename:
      field: json.event.pe_reason
      target_field: event.reason
      ignore_missing: true
  - set:
      field: event.category
      value: web
  - append:
      field: event.category
      value: network
  - append:
      field: event.category
      value: threat
  - rename:
      field: json.event.name
      target_field: menlo.web.request_type
      ignore_missing: true
  - rename:
      field: json.event.soph_dlp_ref
      target_field: event.reference
      if: ctx.json?.event?.soph_dlp_ref != "NA"
      ignore_missing: true
  - rename:
      field: json.event.risk_score
      target_field: menlo.web.risk_score
      ignore_missing: true
  - append:
      field: dns.answers.data
      value: '{{{json.event.dst}}}'
      allow_duplicates: false
  - rename:
      field: json.event.product
      target_field: observer.product
      ignore_missing: true
  - rename:
      field: json.event.vendor
      target_field: observer.vendor
      ignore_missing: true
  - convert:
      field: json.event.risk_tally
      type: long
      target_field: menlo.web.tally
      ignore_missing: true
  - convert:
      field: json.event.has_password
      type: boolean
      target_field: menlo.web.has_password
      if: ctx?.json?.event?.has_password != "NA"
      ignore_missing: true
  - convert:
      field: json.event.x-client-ip
      type: ip
      target_field: client.ip
      ignore_missing: true
      ignore_failure: true
  - convert:
      field: json.event.origin_ip
      type: ip
      target_field: server.ip
      ignore_failure: true
  - rename:
      field: json.event.origin_country
      target_field: server.geo.country_iso_code
      ignore_failure: true
  - rename:
      field: json.event.x-client-country
      target_field: client.geo.country_iso_code
      ignore_failure: true
  - rename:
      field: json.event.egress_country
      target_field: observer.geo.country_iso_code
      ignore_missing: true
      ignore_failure: true
  - convert:
      field: json.event.file_size
      type: long
      target_field: file.size
      if: ctx.json?.event?.file_size != "NA"
      ignore_missing: true
  - append:
      field: observer.ip
      value: '{{{json.event.egress_ip}}}'
      allow_duplicates: false
      if: ctx.json?.event?.egress_ip != "NA"
  - set:
      field: destination
      copy_from: server
      ignore_empty_value: true
  - set:
      field: source
      copy_from: client
  - rename:
      field: json.event.content-type
      target_field: menlo.web.content_type
      ignore_missing: true
  - user_agent:
      field: json.event.user-agent
      ignore_missing: true
  - rename:
      field: json.event.request_type
      target_field: http.request.method
      ignore_missing: true
  - rename:
      field: json.event.ua_type
      target_field: menlo.web.ua_type
      ignore_missing: true
  - rename:
      field: json.event.version
      target_field: observer.version
      ignore_missing: true
  - uri_parts:
      field: json.event.url
      keep_original: true
      remove_if_successful: true
      ignore_failure: true
  - registered_domain:
      field: url.domain
      target_field: url
  - rename:
      field: json.event.referer
      target_field: http.request.referrer
      ignore_missing: true
  - rename:
      field: json.event.userid
      target_field: user.name
      ignore_missing: true
  - append:
      field: related.user
      value: "{{{user.name}}}"
      allow_duplicates: false
      if: ctx.user?.name != null    
  - rename:
      field: json.event.protocol
      target_field: network.protocol
      ignore_missing: true
  - convert:
      field: json.event.response_code
      type: long
      target_field: http.response.status_code
      ignore_missing: true
  - set:
      copy_from: json.event.region
      tag: set_cloud_region
      field: cloud.region
      ignore_empty_value: true
  - rename:
      field: json.event.filename
      target_field: file.name
      ignore_missing: true
      if: ctx.json?.event?.filename != "NA"
  - rename:
      field: json.event.sha256
      target_field: file.hash.sha256
      ignore_missing: true
  - append:
      field: related.hash
      value: "{{file.hash.sha256}}"
      allow_duplicates: false
      if: ctx.file?.hash?.sha256 != null  
  - rename:
      field: json.event.categories
      target_field: menlo.web.categories
  - rename:
      field: json.event.threats
      target_field: menlo.web.threats
      ignore_missing: true
  - rename:
      field: json.event.threat_types
      target_field: menlo.web.threat_types
      ignore_missing: true
  - rename:
      field: json.event.is_iframe
      target_field: menlo.web.is_iframe
      ignore_missing: true
  - rename:
      field: json.event.product
      target_field: observer.product
      ignore_missing: true
  - rename:
      field: json.event.protocol
      target_field: network.protocol
      ignore_missing: true
  - rename:
      field: json.event.cached
      target_field: menlo.web.cached
      ignore_missing: true
  - rename:
      field: json.event.casb_app_name
      target_field: menlo.web.casb_app_name
      ignore_missing: true
  - rename:
      field: json.event.casb_cat_name
      target_field: menlo.web.casb_cat_name
      ignore_missing: true
  - rename:
      field: json.event.casb_fun_name
      target_field: menlo.web.casb_fun_name
      ignore_missing: true
  - rename:
      field: json.event.casb_org_name
      target_field: menlo.web.casb_org_name
      ignore_missing: true
  - rename:
      field: json.event.casb_profile_id
      target_field: menlo.web.casb_profile_id
      ignore_missing: true
  - rename:
      field: json.event.casb_profile_name
      target_field: menlo.web.casb_profile_name
      ignore_missing: true
  - rename:
      field: json.event.casb_profile_type
      target_field: menlo.web.casb_profile_type
      ignore_missing: true
  - rename:
      field: json.event.casb_risk_score
      target_field: menlo.web.casb_risk_score
      ignore_missing: true
  - rename:
      field: json.event.sbox
      target_field: menlo.web.sbox
      ignore_missing: true
  - rename:
      field: json.event.sbox_mal_act
      target_field: menlo.web.sbox_mal_act
      ignore_missing: true
  - rename:
      field: json.event.soph
      target_field: menlo.web.soph
      ignore_missing: true
  - rename:
      field: json.event.tab_id
      target_field: menlo.web.tab_id
      ignore_missing: true
  - rename:
      field: json.event.virus_details
      target_field: menlo.web.virus_details
      ignore_missing: true
  - rename:
      field: json.event.xff_ip
      target_field: menlo.web.xff_ip
      ignore_missing: true
      if: ctx?.json?.event?.xff_ip != "NA"
  - append:
      field: related.ip
      value: '{{source.ip}}'
      if: ctx.source?.ip != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{destination.ip}}'
      if: ctx.destination?.ip != null
      allow_duplicates: false
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: Drops null/empty values recursively.
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
