---
description: Pipeline for parsing Google Santa logs.
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - grok:
      field: event.original
      patterns:
        - '\[%{TIMESTAMP_ISO8601:_tmp.timestamp}\] %{NOT_SEPARATOR:log.level} santad: %{GREEDYDATA:_tmp.message}'
      pattern_definitions:
        NOT_SEPARATOR: '[^\|]+'

  - kv:
      field: _tmp.message
      target_field: santa
      tag: kv_santa_fields
      field_split: '\|'
      value_split: "="
      ignore_missing: true
      on_failure:
        - fail:
            message: "Processor {{{ _ingest.on_failure_processor_type }}} with tag {{{ _ingest.on_failure_processor_tag }}} in pipeline {{{ _ingest.on_failure_pipeline }}} failed with message: {{{ _ingest.on_failure_message }}}"
  - remove:
      field: _tmp.message
      ignore_missing: true

  ## ECS fields
  - rename:
      field: santa.gid
      target_field: group.id
      ignore_missing: true
  - rename:
      field: santa.group
      target_field: group.name
      ignore_missing: true
  - rename:
      field: santa.newpath
      target_field: file.target_path
      ignore_missing: true
  - rename:
      field: santa.path
      target_field: file.path
      ignore_missing: true
  - rename:
      field: santa.pid
      target_field: process.pid
      ignore_missing: true
  - convert:
      field: process.pid
      type: long
      ignore_missing: true
  - rename:
      field: santa.ppid
      target_field: process.parent.pid
      ignore_missing: true
  - convert:
      field: process.parent.pid
      type: long
      ignore_missing: true
  - rename:
      field: santa.process
      target_field: process.name
      ignore_missing: true
  - rename:
      field: santa.processpath
      target_field: process.executable
      ignore_missing: true
  - rename:
      field: santa.sha256
      target_field: process.hash.sha256
      ignore_missing: true
  - rename:
      field: santa.uid
      target_field: user.id
      ignore_missing: true
  - rename:
      field: santa.user
      target_field: user.name
      ignore_missing: true

  ## Santa custom fields
  - rename:
      field: santa.cert_sha256
      target_field: santa.certificate.sha256
      ignore_missing: true
  - rename:
      field: santa.cert_cn
      target_field: santa.certificate.common_name
      ignore_missing: true
  - rename:
      field: santa.event_uid
      target_field: santa.event.uid
      ignore_missing: true
  - rename:
      field: santa.event_user
      target_field: santa.event.user
      ignore_missing: true
  - rename:
      field: santa.appearance
      target_field: santa.disk.appearance
      ignore_missing: true
  - rename:
      field: santa.bsdname
      target_field: santa.disk.bsdname
      ignore_missing: true
  - rename:
      field: santa.bus
      target_field: santa.disk.bus
      ignore_missing: true
  - rename:
      field: santa.dmgpath
      target_field: santa.disk.dmgpath
      ignore_missing: true
  - rename:
      field: santa.fs
      target_field: santa.disk.fs
      ignore_missing: true
  - convert:
      field: santa.graphical_session_id
      type: long
      ignore_missing: true
  - rename:
      field: santa.model
      target_field: santa.disk.model
      ignore_missing: true
  - rename:
      field: santa.mount
      target_field: santa.disk.mount
      ignore_missing: true
  - convert:
      field: santa.pidversion
      type: long
      ignore_missing: true
  - rename:
      field: santa.serial
      target_field: santa.disk.serial
      ignore_missing: true
  - rename:
      field: santa.volume
      target_field: santa.disk.volume
      ignore_missing: true
  - rename:
      field: santa.teamid
      target_field: santa.team_id
      ignore_missing: true

  - set:
      field: process.entity_id
      value: "{{{process.pid}}}-{{{santa.pidversion}}}"
      if: "ctx.process?.pid != null && ctx.santa?.pidversion != null"
  - set:
      field: process.entity_id
      value: "{{{agent.id}}}-{{{process.entity_id}}}"
      if: "ctx.agent?.id != null && ctx.process?.entity_id != null"
  - date:
      field: _tmp.timestamp
      formats:
        - ISO8601
      ignore_failure: true
  - remove:
      field: _tmp.timestamp
      ignore_missing: true
  - set:
      field: process.start
      copy_from: "@timestamp"
      if: ctx.process?.pid != null
      ignore_empty_value: true
  - date:
      field: santa.disk.appearance
      target_field: santa.disk.appearance
      formats:
        - ISO8601
      ignore_failure: true
      if: ctx.santa?.disk?.appearance != null
  - split:
      field: santa.args
      separator: ' '
      ignore_failure: true
  - rename:
      field: file.path
      target_field: process.executable
      if: ctx.process?.pid != null && ctx.process?.executable == null
      ignore_missing: true
  - append:
      field: process.args
      value: "{{{process.executable}}}"
      if: "ctx?.process?.executable != null"
  - foreach:
      field: santa.args
      processor:
        append:
          field: process.args
          value: "{{{_ingest._value}}}"
      ignore_missing: true
  - remove:
      field: santa.args
      ignore_missing: true
  - set:
      field: event.kind
      value: event
  - append:
      field: event.category
      value: process
      if: "ctx?.santa?.action == 'EXEC'"
  - append:
      field: event.type
      value: start
      if: "ctx?.santa?.action == 'EXEC'"
  - set:
      field: event.outcome
      value: success
      if: "ctx?.santa?.decision == 'ALLOW'"
  - set:
      field: event.outcome
      value: failure
      if: "ctx?.santa?.decision == 'DENY'"
  - set:
      field: event.action
      value: "{{{santa.action}}}"
      ignore_empty_value: true
  - lowercase:
      field: event.action
      ignore_missing: true
  - append:
      field: related.user
      value: "{{{user.name}}}"
      if: "ctx?.user?.name != null"
  - append:
      field: related.hash
      value: "{{{santa.certificate.sha256}}}"
      if: "ctx?.santa?.certificate?.sha256 != null"
  - append:
      field: related.hash
      value: "{{{process.hash.sha256}}}"
      if: "ctx?.process?.hash != null"
  - append:
      field: file.x509.issuer.common_name
      value: "{{{santa.certificate.common_name}}}"
      if: ctx.santa?.certificate?.common_name != null
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true

  - script:
      description: Drops null/empty values recursively
      lang: painless
      ignore_failure: true
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
