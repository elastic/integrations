metricsets: ["query"]
period: {{period}}
hosts:
{{#each hosts}}
  - {{this}}
{{/each}}
raw_data.enabled: true
driver: "oracle"
dynamic_metric_name_filter: "{{dynamic_metric_name_filter}}"
sql_queries: 
  - query: " WITH DATA_FILES AS ( 
                SELECT FILE_NAME, FILE_ID, TABLESPACE_NAME, BYTES, STATUS, MAXBYTES, USER_BYTES, ONLINE_STATUS FROM SYS.DBA_DATA_FILES UNION SELECT FILE_NAME, FILE_ID, TABLESPACE_NAME, BYTES, STATUS, MAXBYTES, USER_BYTES, STATUS AS ONLINE_STATUS FROM SYS.DBA_TEMP_FILES
        ), SPACES AS (
        SELECT b.tablespace_name TB_NAME, tbs_size TB_SIZE_USED, a.free_space TB_SIZE_FREE FROM (
                SELECT tablespace_name, sum(bytes) AS free_space FROM dba_free_space GROUP BY tablespace_name) a, 
                (SELECT tablespace_name, sum(bytes) AS tbs_size FROM dba_data_files GROUP BY tablespace_name) b 
                WHERE a.tablespace_name(+)=b.tablespace_name and a.tablespace_name != 'TEMP'
        ), TEMP_SPACES AS (
                SELECT TABLESPACE_NAME, TABLESPACE_SIZE, ALLOCATED_SPACE, FREE_SPACE FROM DBA_TEMP_FREE_SPACE where TABLESPACE_NAME = 'TEMP'
        ), DETAILS AS
        (select df.FILE_NAME, df.FILE_ID, df.TABLESPACE_NAME, df.BYTES, df.STATUS, df.MAXBYTES, df.USER_BYTES, df.ONLINE_STATUS, sp.TB_SIZE_USED, sp.TB_SIZE_FREE from DATA_FILES df, SPACES sp
        WHERE df.TABLESPACE_NAME = sp.TB_NAME 
        UNION
        select df.FILE_NAME, df.FILE_ID, df.TABLESPACE_NAME, df.BYTES, df.STATUS, df.MAXBYTES, df.USER_BYTES, df.ONLINE_STATUS, tsp.TABLESPACE_SIZE - tsp.FREE_SPACE as TB_SIZE_USED, tsp.FREE_SPACE as TB_SIZE_FREE from DATA_FILES df, TEMP_SPACES tsp
        WHERE df.TABLESPACE_NAME = tsp.TABLESPACE_NAME)
        select FILE_NAME, FILE_ID, TABLESPACE_NAME, BYTES, STATUS, MAXBYTES, USER_BYTES, ONLINE_STATUS, TB_SIZE_USED, TB_SIZE_FREE, SUM(BYTES) OVER() as TOTAL_BYTES from DETAILS"
    response_format: table  

