---
description: Pipeline for processing json logs
processors:
  - json:
      field: event.original
      target_field: temp
  - rename:
      field: temp.level
      target_field: log.level
      ignore_missing: true
  - lowercase:
      field: log.level
      ignore_missing: true
  - set:
      description: Set event.id from pidTid
      field: event.id
      copy_from: temp.pidTid
      ignore_empty_value: true
      if: 'ctx?.event?.id == null'
  - remove:
      description: Remove pidTid to avoid overhead
      field: temp.pidTid
      ignore_missing: true
  - rename:
      field: temp.request.id
      target_field: http.request.id
      ignore_missing: true
  - rename:
      field: temp.message
      target_field: message
      ignore_missing: true
  - rename:
      field: temp.request.method
      target_field: http.request.method
      ignore_missing: true
  - rename:
      field: temp.request.path
      target_field: url.path
      ignore_missing: true
  - rename:
      field: temp.request.queryString
      target_field: url.query
      ignore_missing: true
  - gsub:
      description: Remove leading ? from query string
      field: url.query
      pattern: "^\\?"
      replacement: ""
      ignore_missing: true
  - rename:
      field: temp.response.duration
      target_field: event.duration
      ignore_missing: true
  - convert:
      field: event.duration
      type: long
      ignore_missing: true
  - script:
      description: Convert duration from miliseconds to nanosecond
      source: |
        ctx.event.duration = (long)(ctx?.event?.duration * 1000000)
      if: 'ctx?.event?.duration != null'
  - rename:
      field: temp.response.statusCode
      target_field: http.response.status_code
      ignore_missing: true
  - convert:
      field: http.response.status_code
      type: long
      ignore_missing: true
  - set:
      field: "@timestamp"
      copy_from: temp.time
      ignore_empty_value: true
  - remove:
      field: temp.time
      ignore_missing: true

on_failure:
- append:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'

