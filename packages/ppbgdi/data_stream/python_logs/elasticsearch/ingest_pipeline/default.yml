---
description: Default pipeline for processing python logs
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: event.kind
      value: event
  - set:
      field: event.ingested
      value: '{{_ingest.timestamp}}'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: 'ctx.event?.original == null'
  - remove:
      field: message
      ignore_missing: true
      if: 'ctx.event?.original != null'
  - grok:
      field: event.original
      patterns:
        - ^%{CHAR:first_char}
      pattern_definitions:
        CHAR: .
#   - pipeline:
#       if: ctx.first_char != '{'
#       name: '{{ IngestPipeline "default-common" }}'
  - pipeline:
      description: JSON logs pipeline
      if: ctx.first_char == '{'
      name: '{{ IngestPipeline "common-json" }}'
  - remove:
      field:
        - first_char
  - pipeline:
      description: Layer object pipeline
      if: ctx?.temp?.ppbgdi?.app?.layer != null
      name: '{{ IngestPipeline "entity-layer" }}'
  - set:
      field: event.outcome
      value: failure
      if: "ctx?.event?.severity != null && ctx?.event?.severity >= 40"
  - set:
      field: event.outcome
      value: failure
      if: 'ctx?.http?.response?.status_code != null && ctx?.http?.response?.status_code >= 500'
  - set:
      field: event.outcome
      value: success
      if: 'ctx?.event?.outcome == null && ctx?.http?.response?.status_code != null && ctx?.http?.response?.status_code < 500'
  - set:
      field: event.outcome
      value: success
      if: 'ctx?.event?.outcome == null && ctx?.event?.severity != null && ctx?.event?.severity < 40'
  - append:
      field: related.hosts
      value: '{{ source.domain }}'
      allow_duplicates: false
      if: 'ctx?.source?.domain != null'
  - append:
      field: related.hosts
      value: '{{ url.domain }}'
      allow_duplicates: false
      if: 'ctx?.url?.domain != null'
  - append:
      field: related.hosts
      value: '{{ http.request.headers.host }}'
      allow_duplicates: false
      if: 'ctx?.http?.request?.headers?.host != null'
  - append:
      field: related.hosts
      value: '{{ http.request.headers.x-forwarded-host }}'
      allow_duplicates: false
      if: 'ctx?.http?.request?.headers?.host != null'
#   - remove:
#       field: temp
#       ignore_missing: true
  - set:
      field: service.environment
      copy_from: kubernetes.namespace_labels.env
      ignore_empty_value: true
  - script:
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null or empty values.
      source: |
        void handleMap(Map map) {
          for (def x : map.values()) {
            if (x instanceof Map) {
                handleMap(x);
            } else if (x instanceof List) {
                handleList(x);
            }
          }
          map.values().removeIf(v -> v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0));
        }
        void handleList(List list) {
          for (def x : list) {
              if (x instanceof Map) {
                  handleMap(x);
              } else if (x instanceof List) {
                  handleList(x);
              }
          }
          list.removeIf(v -> v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0));
        }
        handleMap(ctx);


on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'
