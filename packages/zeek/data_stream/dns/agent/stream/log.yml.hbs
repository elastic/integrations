paths:
{{#each base_paths}}
  {{#each ../filenames}}
 - {{../this}}/{{this}}
  {{/each}}
{{/each}}
exclude_files: [".gz$"]
tags:
{{#each tags as |tag i|}}
 - {{tag}}
{{/each}}
{{#contains tags "forwarded"}}
publisher_pipeline.disable_host: true
{{/contains}}
  - registered_domain:
      ignore_missing: true
      fail_on_error: false
      field: zeek.dns.query
      target_field: dns.question.registered_domain
      target_subdomain_field: dns.question.subdomain
      target_etld_field: dns.question.top_level_domain
  - script:
        function addDnsAnswers(evt) {
            var answers = evt.Get("zeek.dns.answers");
            var ttls = evt.Get("zeek.dns.TTLs");
            if (!answers || !ttls || answers.length != ttls.length) {
                return;
            }
            var resolvedIps = [];
            var answersObjs = [];
            for (var i = 0; i < answers.length; i++) {
                var answer = answers[i];
                answersObjs.push({
                    data: answer,
                    ttl: ttls[i],
                })
                if (net.isIP(answer)) {
                    resolvedIps.push(answer);
                }
            }
            evt.Put("dns.answers", answersObjs);
            if (resolvedIps.length > 0) {
                evt.Put("dns.resolved_ip", resolvedIps);
            }
        }
