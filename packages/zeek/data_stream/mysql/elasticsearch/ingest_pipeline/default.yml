---
description: Pipeline for normalizing Zeek mysql.log
processors:
  - rename:
      field: message
      target_field: event.original
  - json:
      field: event.original
      target_field: _temp_
  - pipeline:
      if: ctx?._temp_?.result != null
      name: '{{ IngestPipeline "third-party" }}'
  - drop:
      description: Drop if no timestamp (invalid json)
      if: 'ctx?._temp_?.ts == null'
  - rename:
      field: _temp_
      target_field: zeek.mysql

# Sets event.created from the @timestamp field generated by filebeat before being overwritten further down
  - set:
      field: event.created
      copy_from: "@timestamp"
  - set:
      field: event.kind
      value: event
  - set:
      field: ecs.version
      value: '1.12.0'
  - append:
      field: event.category
      value: network
  - append:
      field: event.category
      value: database
  - append:
      field: event.type
      value: connection
  - append:
      field: event.type
      value: protocol
  - set:
      field: network.transport
      value: tcp
  - set:
      field: network.protocol
      value: mysql
  - dot_expander:
      path: zeek.mysql
      field: id.orig_p
      ignore_failure: true
  - dot_expander:
      path: zeek.mysql
      field: id.orig_h
      ignore_failure: true
  - dot_expander:
      path: zeek.mysql
      field: id.resp_h
      ignore_failure: true
  - dot_expander:
      path: zeek.mysql
      field: id.resp_p
      ignore_failure: true
  - rename:
      field: zeek.mysql.id.orig_h
      target_field: source.address
      ignore_missing: true
  - rename:
      field: zeek.mysql.id.orig_p
      target_field: source.port
      ignore_missing: true
  - rename:
      field: zeek.mysql.id.resp_h
      target_field: destination.address
      ignore_missing: true
  - rename:
      field: zeek.mysql.id.resp_p
      target_field: destination.port
      ignore_missing: true
  - rename:
      field: zeek.mysql.uid
      target_field: zeek.session_id
      ignore_missing: true
  - set:
      field: event.id
      copy_from: zeek.session_id
      if: ctx.zeek.session_id != null
  - set:
      field: source.ip
      copy_from: source.address
      if: ctx?.source?.address != null
  - set:
      field: destination.ip
      copy_from: destination.address
      if: ctx?.destination?.address != null
  - set:
      field: event.action
      copy_from: zeek.mysql.cmd
      if: ctx?.zeek?.mysql?.cmd != null
  - set:
      field: event.outcome
      value: success
      if: ctx?.zeek?.mysql?.success == true
  - set:
      field: event.outcome
      value: failure
      if: ctx?.event?.outcome == null
  - date:
      field: zeek.mysql.ts
      formats:
        - UNIX
        - ISO8601
  - remove:
      field: zeek.mysql.ts
  - append:
      field: related.ip
      value: "{{source.ip}}"
      if: "ctx?.source?.ip != null"
      allow_duplicates: false
  - append:
      field: related.ip
      value: "{{destination.ip}}"
      if: "ctx?.destination?.ip != null"
      allow_duplicates: false
  - geoip:
      field: destination.ip
      target_field: destination.geo
      ignore_missing: true
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      field: event.type
      value: access
      if: "ctx?.zeek?.mysql?.cmd != null && (ctx.zeek.mysql.cmd == 'connect' || ctx.zeek.mysql.cmd == 'connect_out')"
  - append:
      field: event.type
      value: change
      if: "ctx?.zeek?.mysql?.cmd != null && (ctx.zeek.mysql.cmd == 'init_db' || ctx.zeek.mysql.cmd == 'change_user' || ctx.zeek.mysql.cmd == 'set_option' || ctx.zeek.mysql.cmd == 'drop_db' || ctx.zeek.mysql.cmd == 'create_db' || ctx.zeek.mysql.cmd == 'process_kill' || ctx.zeek.mysql.cmd == 'delayed_insert')"
  - append:
      field: event.type
      value: info
      if: "ctx?.zeek?.mysql?.cmd != null && ctx.zeek.mysql.cmd != 'init_db' && ctx.zeek.mysql.cmd != 'change_user' && ctx.zeek.mysql.cmd != 'set_option' && ctx.zeek.mysql.cmd != 'drop_db' && ctx.zeek.mysql.cmd != 'create_db' && ctx.zeek.mysql.cmd != 'process_kill' && ctx.zeek.mysql.cmd != 'delayed_insert' && ctx.zeek.mysql.cmd != 'connect' && ctx.zeek.mysql.cmd != 'connect_out'"
  - append:
      field: event.type
      value: start
      if: "ctx?.zeek?.mysql?.cmd != null && ctx.zeek.mysql.cmd == 'connect'"
  - append:
      field: event.type
      value: end
      if: "ctx?.zeek?.mysql?.cmd != null && ctx.zeek.mysql.cmd == 'connect_out'"
  - append:
      field: event.category
      value: session
      if: "ctx?.zeek?.mysql?.cmd != null && (ctx.zeek.mysql.cmd == 'connect' || ctx.zeek.mysql.cmd == 'connect_out')"
  - community_id:
      target_field: network.community_id
  - remove:
      field: 
        - zeek.mysql.id
      ignore_missing: true
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
