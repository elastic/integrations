config_version: 2
interval: {{interval}}
auth.basic.user: {{username}}
auth.basic.password: {{password}}
cursor:
  index_earliest:
    value: '[[.last_event.result.max_indextime]]'
request.url: {{url}}/services/search/jobs/export
{{#if ssl}}
request.ssl: {{ssl}}
{{/if}}
request.method: POST
request.transforms:
  - set:
      target: url.params.search
      value: {{search}} | streamstats max(_indextime) AS max_indextime
  - set:
      target: url.params.output_mode
      value: "json"
  - set:
      target: url.params.index_earliest
      value: '[[ .cursor.index_earliest ]]'
      default: '[[(now (parseDuration "-{{interval}}")).Unix]]'
  - set:
      target: url.params.index_latest
      value: '[[(now).Unix]]'
  - set:
      target: header.Content-Type
      value: application/x-www-form-urlencoded
response.decode_as: application/x-ndjson
response.split:
  target: body.result._raw
  type: string
  delimiter: "\n"
{{#contains tags "forwarded"}}
publisher_pipeline.disable_host: true
{{/contains}}
tags:
{{#each tags as |tag i|}}
  - {{tag}}
{{/each}}
processors:
  - decode_json_fields:
      fields: message
      target: json
      add_error_key: true
  - drop_event:
      when:
        not:
          has_fields: ['json.result']
  - fingerprint:
      fields:
        - json.result._cd
        - json.result._indextime
        - json.result._raw
        - json.result._time
        - json.result.host
        - json.result.source
      target_field: "@metadata._id"
  - rename:
      fields:
        - from: json.result._raw
          to: event.original
        - from: json.result.host
          to: host.name
        - from: json.result.source
          to: file.path
  - decode_json_fields:
      fields: event.original
      target: zeek.kerberos
  - rename:
      fields:
        - from: "zeek.kerberos.id.orig_h"
          to: "source.address"
        - from: "zeek.kerberos.id.orig_p"
          to: "source.port"
        - from: "zeek.kerberos.id.resp_h"
          to: "destination.address"
        - from: "zeek.kerberos.id.resp_p"
          to: "destination.port"
        - from: "zeek.kerberos.uid"
          to: "zeek.session_id"
        - from: "zeek.kerberos.till"
          to: "zeek.kerberos.valid.until"
        - from: "zeek.kerberos.from"
          to: "zeek.kerberos.valid.from"
        - from: "zeek.kerberos.error_code"
          to: "zeek.kerberos.error.code"
        - from: "zeek.kerberos.error_msg"
          to: "zeek.kerberos.error.msg"
        - from: "zeek.kerberos.cert.client"
          to: "zeek.kerberos.cert.client.value"
        - from: "zeek.kerberos.cert.client_subject"
          to: "zeek.kerberos.cert.client.subject"
        - from: "zeek.kerberos.cert.client_fuid"
          to: "zeek.kerberos.cert.client.fuid"
        - from: "zeek.kerberos.cert.server"
          to: "zeek.kerberos.cert.server.value"
        - from: "zeek.kerberos.cert.server_subject"
          to: "zeek.kerberos.cert.server.subject"
        - from: "zeek.kerberos.cert.server_fuid"
          to: "zeek.kerberos.cert.server.fuid"
        - from: "zeek.kerberos.auth_ticket"
          to: "zeek.kerberos.ticket.auth"
        - from: "zeek.kerberos.new_ticket"
          to: "zeek.kerberos.ticket.new"
      ignore_missing: true
      fail_on_error: false
  - convert:
      fields:
        - {from: "zeek.session_id", to: "event.id"}
        - {from: "source.address", to: "source.ip", type: "ip"}
        - {from: "source.address", to: "client.address"}
        - {from: "destination.address", to: "destination.ip", type: "ip"}
        - {from: "destination.address", to: "server.address"}
        - {from: "zeek.kerberos.request_type", to: "event.action"}
      ignore_missing: true
      fail_on_error: false
  - add_fields:
      target: event
      fields:
        kind: event
        category:
          - network
        type:
          - connection
          - protocol
          - authentication
  - dissect:
      when:
        contains:
          zeek.kerberos.client: "/"
      tokenizer: "%{user.name}/%{user.domain}"
      field: zeek.kerberos.client
      target_prefix: ""
  - community_id:
  - add_fields:
      target: ''
      fields:
        ecs.version: 1.7.0
        network.transport: tcp
        network.protocol: kerberos
  - drop_fields:
      fields: ["json","message"]
      ignore_missing: true
