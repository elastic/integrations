---
description: Pipeline for normalizing Zeek dhcp.log
processors:
  - set:
      field: event.ingested
      value: "{{_ingest.timestamp}}"
# Sets event.created from the @timestamp field generated by filebeat before being overwritten further down
  - set:
      field: event.created
      copy_from: "@timestamp"
  - set:
      field: ecs.version
      value: '1.10.0'
  - append:
      field: event.category
      value: network
  - append:
      field: event.type
      value: connection
  - append:
      field: event.type
      value: protocol
  - append:
      field: event.type
      value: info
  - set:
      field: event.kind
      value: event
  - set:
      field: network.transport
      value: udp
  - set:
      field: network.protocol
      value: dhcp
  - rename:
      field: message
      target_field: event.original
  - json:
      field: event.original
      target_field: _temp_.json
  - drop:
      description: Drop if it is a Splunk event but it is empty.
      if: 'ctx?._temp_?.json?.result == null && ctx?._temp_?.json?.ts == null' 
# Splunk specific parsing start
  - fingerprint:
      fields: 
        - _temp_.json.result._cd
        - _temp_.json.result._indextime
        - _temp_.json.result._raw
        - _temp_.json.result._time
        - _temp_.json.result.host
        - _temp_.json.result.source
      target_field: '_id'
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - remove:
      field: event.original
      ignore_missing: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - set:
      field: event.original
      copy_from: _temp_.json.result._raw
      ignore_empty_value: true
      ignore_failure: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - set:
      field: host.name
      copy_from: _temp_.json.result.host
      ignore_empty_value: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - rename:
      field: _temp_.json.result.source
      target_field: log.file.path
      ignore_missing: true
  - remove:
      field: _temp_
      ignore_missing: true
# Splunk parsing end
  - json:
      field: event.original
      target_field: zeek.dhcp
      ignore_failure: true
      if: ctx?.event?.original != null
  - rename:
      field: zeek.dhcp.uids
      target_field: zeek.session_id
      ignore_missing: true
  - rename:
      field: zeek.dhcp.assigned_addr
      target_field: zeek.dhcp.address.assigned
      ignore_missing: true
  - rename:
      field: zeek.dhcp.client_addr
      target_field: zeek.dhcp.address.client
      ignore_missing: true
  - rename:
      field: zeek.dhcp.mac
      target_field: zeek.dhcp.address.mac
      ignore_missing: true
  - rename:
      field: zeek.dhcp.requested_addr
      target_field: zeek.dhcp.address.requested
      ignore_missing: true
  - rename:
      field: zeek.dhcp.server_addr
      target_field: zeek.dhcp.address.server
      ignore_missing: true
  - rename:
      field: zeek.dhcp.host_name
      target_field: zeek.dhcp.hostname
      ignore_missing: true
  - rename:
      field: zeek.dhcp.client_message
      target_field: zeek.dhcp.msg.client
      ignore_missing: true
  - rename:
      field: zeek.dhcp.server_message
      target_field: zeek.dhcp.msg.server
      ignore_missing: true
  - rename:
      field: zeek.dhcp.msg_types
      target_field: zeek.dhcp.msg.types
      ignore_missing: true
  - rename:
      field: zeek.dhcp.msg_orig
      target_field: zeek.dhcp.msg.origin
      ignore_missing: true
  - rename:
      field: zeek.dhcp.client_software
      target_field: zeek.dhcp.software.client
      ignore_missing: true
  - rename:
      field: zeek.dhcp.server_software
      target_field: zeek.dhcp.software.server
      ignore_missing: true
  - rename:
      field: zeek.dhcp.circuit_id
      target_field: zeek.dhcp.id.circuit
      ignore_missing: true
  - rename:
      field: zeek.dhcp.agent_remote_id
      target_field: zeek.dhcp.id.remote_agent
      ignore_missing: true
  - rename:
      field: zeek.dhcp.subscriber_id
      target_field: zeek.dhcp.id.subscriber
      ignore_missing: true
  - rename:
      field: zeek.dhcp.client_port
      target_field: source.port
      ignore_missing: true
  - rename:
      field: zeek.dhcp.server_port
      target_field: destination.port
      ignore_missing: true
  - set:
      field: network.name
      copy_from: zeek.dhcp.domain
      if: ctx?.zeek?.dhcp?.domain != null
  - set:
      field: source.port
      value: 68
      if: ctx?.source?.port == null
  - set:
      field: destination.port
      value: 67
      if: ctx?.destination?.port == null
  - set:
      field: source.address
      copy_from: zeek.dhcp.address.client
      ignore_empty_value: true
  - set:
      field: client.address
      copy_from: zeek.dhcp.address.client
      ignore_empty_value: true
  - set:
      field: source.ip
      copy_from: zeek.dhcp.address.client
      ignore_empty_value: true
  - set:
      field: destination.address
      copy_from: zeek.dhcp.address.server
      ignore_empty_value: true
  - set:
      field: destination.ip
      copy_from: zeek.dhcp.address.server
      ignore_empty_value: true
  - set:
      field: server.address
      copy_from: zeek.dhcp.address.server
      ignore_empty_value: true
  - date:
      field: zeek.dhcp.ts
      formats:
        - UNIX
        - ISO8601
  - remove:
      field: zeek.dhcp.ts
  - set:
      field: event.id
      copy_from: zeek.session_id
      if: ctx.zeek.session_id != null
  - append:
      field: related.ip
      value: "{{source.ip}}"
      if: "ctx?.source?.ip != null"
      allow_duplicates: false
  - append:
      field: related.ip
      value: "{{destination.ip}}"
      if: "ctx?.destination?.ip != null"
      allow_duplicates: false
  - community_id:
      target_field: network.community_id
  - remove:
      field: 
        - message
        - json
      ignore_missing: true
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
