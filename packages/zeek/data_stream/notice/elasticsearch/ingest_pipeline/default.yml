---
description: Pipeline for normalizing Zeek notice.log
processors:
  - set:
      field: event.ingested
      value: "{{_ingest.timestamp}}"
# Sets event.created from the @timestamp field generated by filebeat before being overwritten further down
  - set:
      field: event.created
      copy_from: "@timestamp"
  - set:
      field: event.kind
      value: alert
  - set:
      field: ecs.version
      value: '1.10.0'
  - append:
      field: event.category
      value: intrusion_detection
  - append:
      field: event.type
      value: info
  - rename:
      field: message
      target_field: event.original
  - json:
      field: event.original
      target_field: _temp_.json
  - drop:
      description: Drop if it is a Splunk event but it is empty.
      if: 'ctx?._temp_?.json?.result == null && ctx?._temp_?.json?.ts == null' 
# Splunk specific parsing start
  - fingerprint:
      fields: 
        - _temp_.json.result._cd
        - _temp_.json.result._indextime
        - _temp_.json.result._raw
        - _temp_.json.result._time
        - _temp_.json.result.host
        - _temp_.json.result.source
      target_field: '_id'
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - remove:
      field: event.original
      ignore_missing: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - set:
      field: event.original
      copy_from: _temp_.json.result._raw
      ignore_empty_value: true
      ignore_failure: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - set:
      field: host.name
      copy_from: _temp_.json.result.host
      ignore_empty_value: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - rename:
      field: _temp_.json.result.source
      target_field: log.file.path
      ignore_missing: true
  - remove:
      field: _temp_
      ignore_missing: true
# Splunk parsing end
  - json:
      field: event.original
      target_field: zeek.notice
      ignore_failure: true
      if: ctx?.event?.original != null
  - dot_expander:
      path: zeek.notice
      field: id.orig_p
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: id.orig_h
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: id.resp_h
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: id.resp_p
      ignore_failure: true
  - rename:
      field: zeek.notice.id.orig_h
      target_field: source.address
      ignore_missing: true
  - rename:
      field: zeek.notice.id.orig_p
      target_field: source.port
      ignore_missing: true
  - rename:
      field: zeek.notice.id.resp_h
      target_field: destination.address
      ignore_missing: true
  - rename:
      field: zeek.notice.id.resp_p
      target_field: destination.port
      ignore_missing: true
  - rename:
      field: zeek.notice.uid
      target_field: zeek.session_id
      ignore_missing: true
  - set:
      field: event.id
      copy_from: zeek.session_id
      if: ctx.zeek.session_id != null
  - rename:
      field: zeek.notice.src
      target_field: source.address
      ignore_missing: true
      if: ctx?.source?.address == null
  - remove:
      field: zeek.notice.src
      ignore_missing: true
      if: ctx?.zeek?.notice?.src == ctx?.source?.address
  - rename:
      field: zeek.notice.dst
      target_field: destination.address
      ignore_missing: true
      if: ctx?.destination?.address == null
  - remove:
      field: zeek.notice.dst
      ignore_missing: true
      if: ctx?.zeek?.notice?.dst == ctx?.destination?.address
  - rename:
      field: zeek.notice.p
      target_field: destination.port
      ignore_missing: true
      if: ctx?.destination?.port == null
  - remove:
      field: zeek.notice.p
      ignore_missing: true
      if: ctx?.zeek?.notice?.p == ctx?.destination?.port
  - rename:
      field: zeek.notice.conn
      target_field: zeek.notice.connnection_id
      ignore_missing: true
  - rename:
      field: zeek.notice.iconn
      target_field: zeek.notice.icmp_id
      ignore_missing: true
  - rename:
      field: zeek.notice.proto
      target_field: network.transport
      ignore_missing: true
  - dot_expander:
      path: zeek.notice
      field: f.id
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: f.parent_id
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: f.source
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: f.is_orig
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: f.seen_bytes
      ignore_failure: true
  - dot_expander:
      path: zeek.notice
      field: f.total_bytes
      ignore_failure: true
  - rename:
      field: zeek.notice.f.id
      target_field: zeek.notice.file.id
      ignore_missing: true
  - rename:
      field: zeek.notice.f.parent_id
      target_field: zeek.notice.file.parent_id
      ignore_missing: true
  - rename:
      field: zeek.notice.f.source
      target_field: zeek.notice.file.source
      ignore_missing: true
  - rename:
      field: zeek.notice.f.is_orig
      target_field: zeek.notice.file.is_orig
      ignore_missing: true
  - rename:
      field: zeek.notice.f.seen_bytes
      target_field: zeek.notice.file.seen_bytes
      ignore_missing: true
  - rename:
      field: zeek.notice.f.total_bytes
      target_field: zeek.notice.file.total_bytes
      ignore_missing: true
  - rename:
      field: zeek.notice.file_mime_type
      target_field: zeek.notice.file.mime_type
      ignore_missing: true
  - set:
      field: file.size
      copy_from: zeek.notice.file.total_bytes
      if: ctx?.zeek?.notice?.file?.total_bytes != null
  - set:
      field: file.mime_type
      copy_from: zeek.notice.file.mime_type
      if: ctx?.zeek?.notice?.file?.mime_type != null
  - set:
      field: rule.name
      copy_from: zeek.notice.note
      if: ctx?.zeek?.notice?.note != null
  - set:
      field: rule.description
      copy_from: zeek.notice.msg
      if: ctx?.zeek?.notice?.msg != null
  - set:
      field: source.ip
      copy_from: source.address
      if: ctx?.source?.address != null
  - set:
      field: destination.ip
      copy_from: destination.address
      if: ctx?.destination?.address != null
  - date:
      field: zeek.notice.ts
      formats:
        - UNIX
        - ISO8601
  - remove:
      field: zeek.notice.ts
  - geoip:
      field: destination.ip
      target_field: destination.geo
      ignore_missing: true
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{source.ip}}"
      if: "ctx?.source?.ip != null"
      allow_duplicates: false
  - append:
      field: related.ip
      value: "{{destination.ip}}"
      if: "ctx?.destination?.ip != null"
      allow_duplicates: false
  - append:
      field: event.type
      value: allowed
      if: "ctx?.zeek?.notice?.dropped == false"
  - append:
      field: event.type
      value: denied
      if: "ctx?.zeek?.notice?.dropped == true"
  - community_id:
      target_field: network.community_id
  - remove:
      field: 
        - message
        - json
        - zeek.notice.action
        - zeek.notice.remote_location
        - zeek.notice.f
      ignore_missing: true
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
