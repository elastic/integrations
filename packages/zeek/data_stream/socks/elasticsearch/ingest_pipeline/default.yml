---
description: Pipeline for normalizing Zeek socks.log
processors:
  - set:
      field: event.ingested
      value: "{{_ingest.timestamp}}"
# Sets event.created from the @timestamp field generated by filebeat before being overwritten further down
  - set:
      field: event.created
      copy_from: "@timestamp"
  - set:
      field: event.kind
      value: event
  - set:
      field: ecs.version
      value: '1.10.0'
  - append:
      field: event.category
      value: network
  - append:
      field: event.type
      value: connection
  - append:
      field: event.type
      value: protocol
  - set:
      field: network.transport
      value: tcp
  - set:
      field: network.protocol
      value: socks
  - rename:
      field: message
      target_field: event.original
  - json:
      field: event.original
      target_field: _temp_.json
  - drop:
      description: Drop if it is a Splunk event but it is empty.
      if: 'ctx?._temp_?.json?.result == null && ctx?._temp_?.json?.ts == null' 
# Splunk specific parsing start
  - fingerprint:
      fields: 
        - _temp_.json.result._cd
        - _temp_.json.result._indextime
        - _temp_.json.result._raw
        - _temp_.json.result._time
        - _temp_.json.result.host
        - _temp_.json.result.source
      target_field: '_id'
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - remove:
      field: event.original
      ignore_missing: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - set:
      field: event.original
      copy_from: _temp_.json.result._raw
      ignore_empty_value: true
      ignore_failure: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - set:
      field: host.name
      copy_from: _temp_.json.result.host
      ignore_empty_value: true
      if: 'ctx?._temp_?.json?.result != null && ctx?._temp_?.json?.ts == null'
  - rename:
      field: _temp_.json.result.source
      target_field: log.file.path
      ignore_missing: true
  - remove:
      field: _temp_
      ignore_missing: true
# Splunk parsing end
  - json:
      field: event.original
      target_field: zeek.socks
      ignore_failure: true
      if: ctx?.event?.original != null
  - dot_expander:
      path: zeek.socks
      field: id.orig_p
      ignore_failure: true
  - dot_expander:
      path: zeek.socks
      field: id.orig_h
      ignore_failure: true
  - dot_expander:
      path: zeek.socks
      field: id.resp_h
      ignore_failure: true
  - dot_expander:
      path: zeek.socks
      field: id.resp_p
      ignore_failure: true
  - dot_expander:
      path: zeek.socks
      field: request.name
      ignore_failure: true
  - rename:
      field: zeek.socks.id.orig_h
      target_field: source.address
      ignore_missing: true
  - rename:
      field: zeek.socks.id.orig_p
      target_field: source.port
      ignore_missing: true
  - rename:
      field: zeek.socks.id.resp_h
      target_field: destination.address
      ignore_missing: true
  - rename:
      field: zeek.socks.id.resp_p
      target_field: destination.port
      ignore_missing: true
  - rename:
      field: zeek.socks.uid
      target_field: zeek.session_id
      ignore_missing: true
  - set:
      field: event.id
      copy_from: zeek.session_id
      if: ctx?.zeek?.session_id != null
  - set:
      field: source.ip
      copy_from: source.address
      if: ctx?.source?.address != null
  - set:
      field: destination.ip
      copy_from: destination.address
      if: ctx?.destination?.address != null
  - rename:
      field: zeek.socks.request.name
      target_field: zeek.socks.request.host
      ignore_missing: true
  - rename:
      field: zeek.socks.request_p
      target_field: zeek.socks.request.port
      ignore_missing: true
  - rename:
      field: zeek.socks.bound_p
      target_field: zeek.socks.bound.port
      ignore_missing: true
  - set:
      field: user.name
      copy_from: zeek.socks.user
      if: ctx?.zeek?.socks?.user != null
  - date:
      field: zeek.socks.ts
      formats:
        - UNIX
        - ISO8601
  - remove:
      field: zeek.socks.ts
  - dot_expander:
      field: bound.host
      path: zeek.socks
  - geoip:
      field: destination.ip
      target_field: destination.geo
      ignore_missing: true
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{source.ip}}"
      if: "ctx?.source?.ip != null"
      allow_duplicates: false
  - append:
      field: related.ip
      value: "{{destination.ip}}"
      if: "ctx?.destination?.ip != null"
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{user.name}}"
      if: "ctx?.user?.name != null"
      allow_duplicates: false
  - append:
      field: event.type
      value: error
      if: "ctx?.zeek?.socks?.status != null && ctx.zeek.socks.status != 'succeeded'"
  - set:
      field: event.outcome
      value: success
      if: "ctx?.zeek?.socks?.status != null && ctx.zeek.socks.status == 'succeeded'"
  - set:
      field: event.outcome
      value: failure
      if: "ctx?.zeek?.socks?.status != null && ctx.zeek.socks.status != 'succeeded'"
  - community_id:
      target_field: network.community_id
  - remove:
      field: 
        - message
        - json
        - zeek.socks.id
      ignore_missing: true
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
