---
description: Pipeline for CEF logs. CEF decoding happens in the Agent. This performs additional enrichment and vendor specific transformations.

processors:
  - set:
      field: ecs.version
      value: 1.9.0
  - set:
      field: event.ingested
      value: '{{{_ingest.timestamp}}}'

  # IP Geolocation Lookup
  - geoip:
        field: source.ip
        target_field: source.geo
        ignore_missing: true
  - geoip:
        field: destination.ip
        target_field: destination.geo
        ignore_missing: true

  # IP Autonomous System (AS) Lookup
  - geoip:
        database_file: GeoLite2-ASN.mmdb
        field: source.ip
        target_field: source.as
        properties:
            - asn
            - organization_name
        ignore_missing: true
  - geoip:
        database_file: GeoLite2-ASN.mmdb
        field: destination.ip
        target_field: destination.as
        properties:
            - asn
            - organization_name
        ignore_missing: true
  - rename:
        field: source.as.asn
        target_field: source.as.number
        ignore_missing: true
  - rename:
        field: source.as.organization_name
        target_field: source.as.organization.name
        ignore_missing: true
  - rename:
        field: destination.as.asn
        target_field: destination.as.number
        ignore_missing: true
  - rename:
        field: destination.as.organization_name
        target_field: destination.as.organization.name
        ignore_missing: true
  - append:
        field: related.hash
        value: "{{cef.extensions.fileHash}}"
        allow_duplicates: false
        if: "ctx?.cef?.extensions?.fileHash != null && ctx?.cef?.extensions?.fileHash != ''"
  - append:
        field: related.hash
        value: "{{cef.extensions.oldFileHash}}"
        allow_duplicates: false
        if: "ctx?.cef?.extensions?.oldFileHash != null && ctx?.cef?.extensions?.oldFileHash != ''"
  - append:
        field: related.ip
        value: "{{destination.ip}}"
        allow_duplicates: false
        if: "ctx?.destination?.ip != null && ctx?.destination?.ip != ''"
  - append:
        field: related.ip
        value: "{{destination.nat.ip}}"
        allow_duplicates: false
        if: "ctx?.destination?.nat?.ip != null && ctx?.destination?.nat?.ip != ''"
  - append:
        field: related.ip
        value: "{{source.ip}}"
        allow_duplicates: false
        if: "ctx?.source?.ip != null && ctx?.source?.ip != ''"
  - append:
        field: related.ip
        value: "{{source.nat.ip}}"
        allow_duplicates: false
        if: "ctx?.source?.nat?.ip != null && ctx?.source?.nat?.ip != ''"
  - append:
        field: related.user
        value: "{{destination.user.name}}"
        if: "ctx?.destination?.user?.name != null"
  - append:
        field: related.user
        value: "{{source.user.name}}"
        allow_duplicates: false
        if: "ctx?.source?.user?.name != null && ctx?.source?.user?.name != ''"
  - append:
        field: related.hosts
        value: "{{observer.hostname}}"
        allow_duplicates: false
        if: "ctx?.observer?.hostname != null && ctx?.observer?.hostname != ''"
  - pipeline:
        name: '{{ IngestPipeline "fp-pipeline" }}'
        if: "ctx.cef?.device?.vendor == 'FORCEPOINT'"
  - pipeline:
        name: '{{ IngestPipeline "cp-pipeline" }}'
        if: "ctx.cef?.device?.vendor == 'Check Point'"
  - community_id: {}

  #
  # Timestamp parsing.
  #
  - grok:
      # decode_cef sets @timestamp when deviceReceiptTime is provided.
      description: Extract timestamp from log header when deviceReceiptTime not given.
      if: ctx?.cef?.extensions?.deviceReceiptTime == null
      field: event.original
      patterns:
        - '^%{SYSLOG_TIMESTAMP} '
        - '^%{ECS_SYSLOG_PRI}%{SYSLOG_TIMESTAMP} ' # RFC3164
        - '^%{ECS_SYSLOG_PRI}%{NONNEGINT} %{SYSLOG_TIMESTAMP} ' # RFC5224
      pattern_definitions:
        ECS_SYSLOG_PRI: '<%{NONNEGINT:log.syslog.priority:long}>'
        SYSLOG_TIMESTAMP: '(?:%{SYSLOGTIMESTAMP:_tmp.timestamp}|%{TIMESTAMP_ISO8601:_tmp.timestamp8601})'
      ignore_failure: true
  - date:
      if: ctx?._tmp?.timestamp8601 != null
      field: _tmp.timestamp8601
      formats:
        - ISO8601
  - date:
      if: ctx?._tmp?.timestamp != null
      field: _tmp.timestamp
      formats:
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
  - remove:
      field:
        - _tmp
      ignore_failure: true
on_failure:
  - remove:
      field:
        - _tmp
      ignore_failure: true
  - set:
        field: error.message
        value: "{{ _ingest.on_failure_message }}"
