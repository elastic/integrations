---
description: Pipeline for parsing Snort logs
processors:
  - set:
      field: ecs.version
      value: '8.4.0'
  - rename:
      field: message
      target_field: event.original
  - set:
      field: observer.vendor
      value: snort
  - set:
      field: observer.product
      value: ids
  - set:
      field: observer.type
      value: ids
  - set:
      field: event.created
      copy_from: '@timestamp'
  - grok:
      field: event.original
      patterns:
      - ^%{CHAR:_tmp.first_char}
      pattern_definitions:
        CHAR: .
  - pipeline:
      if: ctx._tmp.first_char != '{'
      name: '{{ IngestPipeline "plaintext" }}'
  - pipeline:
      if: ctx._tmp.first_char == '{'
      name: '{{ IngestPipeline "json" }}'
  - set:
      field: event.timezone
      value: "{{_tmp.tz_offset}}"
      if: ctx._tmp?.tz_offset != null && ctx._tmp?.tz_offset != 'local'
  - date:
      field: _tmp.timestamp
      target_field: '@timestamp'
      timezone: "{{ event.timezone }}"
      formats:
      - MM/dd-HH:mm:ss.SSSSSS
      - MM/dd/YY-HH:mm:ss.SSSSSS
      - MMM  d HH:mm:ss
      - MMM dd HH:mm:ss
      if: ctx.event?.timezone != null   
  - date:
      field: _tmp.timestamp
      target_field: '@timestamp'
      formats:
      - MM/dd-HH:mm:ss.SSSSSS
      - MM/dd/YY-HH:mm:ss.SSSSSS
      - MMM  d HH:mm:ss
      - MMM dd HH:mm:ss
      if: ctx.event?.timezone == null
  - convert:
      field: source.address
      target_field: source.ip
      type: ip
      ignore_missing: true
  - convert:
      field: destination.address
      target_field: destination.ip
      type: ip
      ignore_missing: true
  - uppercase:
      field: destination.mac
      ignore_missing: true
  - uppercase:
      field: source.mac
      ignore_missing: true
  - gsub:
      field: destination.mac
      pattern: '[.:]'
      replacement: '-'
      ignore_missing: true
  - gsub:
      field: source.mac
      pattern: '[.:]'
      replacement: '-'
      ignore_missing: true
  - gsub:
      field: snort.tcp.flags
      pattern: \*
      replacement: ''
      ignore_missing: true
  - lowercase:
      field: network.transport
      ignore_missing: true
  - set:
      field: event.kind
      value: alert
  - append:
      field: event.category
      value: network
      allow_duplicates: false
  - set: 
      field: network.direction
      value: unknown
      if: ctx.network?.direction == null
  - set:
      field: network.type
      value: ipv4
      if: ctx.source?.ip != null && ctx.source?.ip.contains(".") 
  - set:
      field: network.type
      value: ipv6
      if: ctx.source?.ip != null && !ctx.source?.ip.contains(".")
  - script:
      lang: painless
      ignore_failure: true
      if: ctx.network?.transport != null
      source: |
        def transport = ctx.network.transport;
        if (transport == 'udp') {
            ctx.network.iana_number = '17';
        } else if (transport == 'tcp') {
            ctx.network.iana_number = '6';
        } else if (transport == 'icmp') {
            ctx.network.iana_number = '1';
        }
  - network_direction:
      internal_networks_field: _tmp.internal_networks
  - community_id:
      ignore_failure: true
      ignore_missing: true
  - append:
      field: event.type
      value: allowed
      if: ctx._tmp?.action?.toLowerCase() == 'allow'
  - append:
      field: event.type
      value: denied
      if: ctx._tmp?.action?.toLowerCase() == 'block'
  # IP Geolocation Lookup
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      field: destination.ip
      target_field: destination.geo
      ignore_missing: true

  # IP Autonomous System (AS) Lookup
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
          - asn
          - organization_name
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
          - asn
          - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      if: ctx.source?.ip != null
      field: related.ip
      value: '{{source.ip}}'
      allow_duplicates: false
  - append:
      if: ctx.destination?.ip != null
      field: related.ip
      value: '{{destination.ip}}'
      allow_duplicates: false    
  - remove:
      field:
        - _tmp
        - json
      ignore_missing: true
  - remove:
      field: event.original
      if: "ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'
