---
description: Pipeline for processing sample logs
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - remove:
      field: message
      ignore_missing: true
      tag: remove_message
      if: ctx.event?.original != null
  - json:
      field: event.original
      target_field: netbox.device
  - gsub:
      field: netbox.device.primary_ip.address
      pattern: "/\\d+$"
      replacement: ""
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{{netbox.device.primary_ip.address}}}"
      if: ctx.netbox?.device?.primary_ip?.address != null
      allow_duplicates: false
  - gsub:
      field: netbox.device.primary_ip4.address
      pattern: "/\\d+$"
      replacement: ""
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{{netbox.device.primary_ip4.address}}}"
      if: ctx.netbox?.device?.primary_ip4?.address != null
      allow_duplicates: false
  - gsub:
      field: netbox.device.primary_ip6.address
      pattern: "/\\d+$"
      replacement: ""
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{{netbox.device.primary_ip6.address}}}"
      if: ctx.netbox?.device?.primary_ip6?.address != null
      allow_duplicates: false
  - gsub:
      field: netbox.device.oob_ip.address
      pattern: "/\\d+$"
      replacement: ""
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{{netbox.device.oob_ip.address}}}"
      if: ctx.netbox?.device?.oob_ip?.address != null
      allow_duplicates: false
  - script:
      lang: painless
      if: ctx.netbox?.device?.longitude != null && ctx.netbox?.device?.latitude != null
      source: |
        ctx.netbox.device.coordinates = [
          ctx.netbox.device.longitude,
          ctx.netbox.device.latitude
        ]
  - remove:
      field: [netbox.device.latitude, netbox.device.longitude]
      ignore_missing: true
  - rename:
      field: netbox.device.id
      target_field: netbox.id
      ignore_missing: true
  - rename:
      field: netbox.device.url
      target_field: netbox.url
      ignore_missing: true
  - rename:
      field: netbox.device.display_url
      target_field: netbox.display_url
      ignore_missing: true
  - rename:
      field: netbox.device.display
      target_field: netbox.display
      ignore_missing: true
  - rename:
      field: netbox.device.comments
      target_field: netbox.comments
      ignore_missing: true
  - rename:
      field: netbox.device.created
      target_field: netbox.created
      ignore_missing: true
  - rename:
      field: netbox.device.last_updated
      target_field: netbox.last_updated
      ignore_missing: true
  - rename:
      field: netbox.device.custom_fields
      target_field: netbox.custom_fields
      ignore_missing: true
  - rename:
      field: netbox.device.tags
      target_field: netbox.tags
      ignore_missing: true
  - rename:
      field: netbox.device.tenant
      target_field: netbox.tenant
      ignore_missing: true
  - set:
      field: event.kind
      value: asset
  - append:
      field: event.category
      value: [configuration]
  - date:
      field: netbox.created
      target_field: netbox.created
      if: ctx.netbox?.created != null
      formats:
        - ISO8601
  - date:
      field: netbox.last_updated
      target_field: netbox.last_updated
      if: ctx.netbox?.last_updated != null
      formats:
        - ISO8601
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
