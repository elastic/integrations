---
description: Pipeline for processing Device logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - fail:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
  - drop:
      if: ctx.message == 'retry'
      tag: drop_retry_events
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - fingerprint:
      fields:
        - json.lastSeen
        - json.id
      tag: fingerprint_device
      target_field: _id
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_event_kind_to_event
      value: event
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - append:
      field: event.category
      tag: append_event_category
      value: host
  - set:
      field: observer.vendor
      tag: set_observer_vendor
      value: Armis
  - set:
      field: observer.product
      tag: set_observer_product
      value: Asset Management and Security
  - rename:
      field: json.accessSwitch
      tag: rename_accessSwitch
      target_field: armis.device.access_switch
      ignore_missing: true
  - rename:
      field: json.boundaries
      tag: rename_boundaries
      target_field: armis.device.boundaries
      ignore_missing: true
  - rename:
      field: json.businessImpact
      tag: rename_businessImpact
      target_field: armis.device.business_impact
      ignore_missing: true
  - rename:
      field: json.category
      tag: rename_category
      target_field: armis.device.category
      ignore_missing: true
  - set:
      field: host.type
      tag: set_event_start_from_device_first_seen
      copy_from: armis.device.category
      ignore_empty_value: true
  - rename:
      field: json.customProperties
      tag: rename_customProperties
      target_field: armis.device.custom_properties
      ignore_missing: true
  - foreach:
      field: json.dataSources
      tag: foreach_dataSources
      if: ctx.json?.dataSources instanceof List
      processor:
        date:
          field: _ingest._value.firstSeen
          tag: date_dataSources_firstSeen
          target_field: _ingest._value.first_seen
          formats:
            - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
            - EEE, dd MMM yyyy HH:mm:ss z
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.firstSeen
                ignore_missing: true
  - foreach:
      field: json.dataSources
      tag: foreach_dataSources
      if: ctx.json?.dataSources instanceof List
      processor:
        foreach:
          field: _ingest._value.instances
          ignore_failure: true
          processor:
            date:
              field: _ingest._value.firstSeen
              tag: date_dataSources_instances_firstSeen
              target_field: _ingest._value.first_seen
              formats:
                - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
                - EEE, dd MMM yyyy HH:mm:ss z
                - ISO8601
              on_failure:
                - remove:
                    field: _ingest._value.firstSeen
                    ignore_missing: true
  - foreach:
      field: json.dataSources
      tag: foreach_dataSources
      if: ctx.json?.dataSources instanceof List
      processor:
        foreach:
          field: _ingest._value.instances
          ignore_failure: true
          processor:
            date:
              field: _ingest._value.lastSeen
              tag: date_dataSources_instances_lastSeen
              target_field: _ingest._value.last_seen
              formats:
                - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
                - EEE, dd MMM yyyy HH:mm:ss z
                - ISO8601
              on_failure:
                - remove:
                    field: _ingest._value.lastSeen
                    ignore_missing: true
  - foreach:
      field: json.dataSources
      tag: foreach_dataSources
      if: ctx.json?.dataSources instanceof List
      processor:
        date:
          field: _ingest._value.lastSeen
          tag: date_dataSources_lastSeen
          target_field: _ingest._value.last_seen
          formats:
            - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
            - EEE, dd MMM yyyy HH:mm:ss z
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.lastSeen
                ignore_missing: true
  - foreach:
      field: json.dataSources
      tag: foreach_dataSources
      if: ctx.json?.dataSources instanceof List
      processor:
        foreach:
          field: _ingest._value.instances
          ignore_failure: true
          processor:
            remove:
              field:
                - _ingest._value.firstSeen
                - _ingest._value.lastSeen
              tag: remove_dataSources_instances
              ignore_missing: true
  - foreach:
      field: json.dataSources
      tag: foreach_dataSources
      if: ctx.json?.dataSources instanceof List
      processor:
        remove:
          field:
            - _ingest._value.firstSeen
            - _ingest._value.lastSeen
          tag: remove_dataSources
          ignore_missing: true
  - rename:
      field: json.dataSources
      tag: rename_dataSources
      target_field: armis.device.data_sources
      ignore_missing: true
  - rename:
      field: json.displayTitle
      tag: rename_displayTitle
      target_field: armis.device.display_title
      ignore_missing: true
  - date:
      field: json.firstSeen
      tag: date_firstSeen
      target_field: armis.device.first_seen
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.firstSeen != null && ctx.json.firstSeen != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.start
      tag: set_event_start_from_device_first_seen
      copy_from: armis.device.first_seen
      ignore_empty_value: true
  - convert:
      field: json.id
      tag: convert_id_to_string
      target_field: armis.device.id
      type: string
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_device_id
      copy_from: armis.device.id
      ignore_empty_value: true
  - split:
      field: json.ipAddress
      separator: ', '
      tag: split_ipAddress
      target_field: armis.device.ip_address
      ignore_missing: true
      if: ctx.json?.ipAddress instanceof String && ctx.json.ipAddress != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: armis.device.ip_address
      tag: foreach_armis_device_ip_address
      if: ctx.armis?.device?.ip_address instanceof List
      processor:
        convert:
          field: _ingest._value
          tag: convert_ip_address_to_ip
          type: ip
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: armis.device.ip_address
      tag: foreach_armis_device_ip_address
      if: ctx.armis?.device?.ip_address instanceof List
      processor:
        append:
          field: host.ip
          tag: append_armis_device_ip_address_into_host_ip
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - foreach:
      field: armis.device.ip_address
      tag: foreach_armis_device_ip_address
      if: ctx.armis?.device?.ip_address instanceof List
      processor:
        append:
          field: related.ip
          tag: append_armis_device_ip_address_into_related_ip
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - foreach:
      field: json.ipv6
      tag: foreach_ipv6
      if: ctx.json?.ipv6 instanceof List
      processor:
        convert:
          field: _ingest._value
          tag: convert_ipv6_to_ip
          type: ip
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.ipv6
      tag: rename_ipv6
      target_field: armis.device.ip_v6
      ignore_missing: true
  - foreach:
      field: armis.device.ip_v6
      tag: foreach_armis_device_ip_v6
      if: ctx.armis?.device?.ip_v6 instanceof List
      processor:
        append:
          field: related.ip
          tag: append_armis_device_user_ids_into_related_ip
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - date:
      field: json.lastSeen
      tag: date_lastSeen
      target_field: armis.device.last_seen
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.lastSeen != null && ctx.json.lastSeen != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_device_last_seen
      copy_from: armis.device.last_seen
      ignore_empty_value: true
  - split:
      field: json.macAddress
      separator: ', '
      tag: split_mac_address
      target_field: armis.device.mac_address
      ignore_missing: true
      if: ctx.json?.macAddress instanceof String && ctx.json.macAddress != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: armis.device.mac_address
      if: ctx.armis?.device?.mac_address instanceof List
      ignore_failure: true
      processor:
        append:
          field: host.mac
          tag: append_armis_device_mac_address_into_host_mac
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - foreach:
      field: host.mac
      if: ctx.host?.mac instanceof List
      ignore_failure: true
      processor:
        gsub:
          field: _ingest._value
          tag: gsub_host_mac_for_each_mac
          pattern: ':'
          replacement: '-'
          ignore_missing: true
          on_failure:
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: host.mac
      if: ctx.host?.mac instanceof List
      ignore_failure: true
      processor:
        uppercase:
          field: _ingest._value
          tag: uppercase_host_mac_for_each_mac
          ignore_missing: true
  - rename:
      field: json.manufacturer
      tag: rename_manufacturer
      target_field: armis.device.manufacturer
      ignore_missing: true
  - set:
      field: device.manufacturer
      tag: set_device_manufacturer_from_device_manufacturer
      copy_from: armis.device.manufacturer
      ignore_empty_value: true
  - rename:
      field: json.model
      tag: rename_model
      target_field: armis.device.model
      ignore_missing: true
  - set:
      field: device.model.name
      tag: set_device_model_name_from_device_model
      copy_from: armis.device.model
      ignore_empty_value: true
  - rename:
      field: json.name
      tag: rename_name
      target_field: armis.device.name
      ignore_missing: true
  - split:
      field: json.names
      separator: ','
      tag: split_names
      target_field: armis.device.names
      ignore_missing: true
      if: ctx.json?.names instanceof String && ctx.json.names != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: armis.device.names
      if: ctx.armis?.device?.names instanceof List
      ignore_failure: true
      processor:
        append:
          field: host.name
          tag: append_armis_device_names_into_host_name
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - foreach:
      field: host.name
      tag: foreach_host_name
      if: ctx.host?.name instanceof List
      processor:
        lowercase:
          field: _ingest._value
          tag: lowercase_host_name
          ignore_missing: true
  - foreach:
      field: host.name
      if: ctx.host?.name instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hosts
          tag: append_host_name_into_related_hosts
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - rename:
      field: json.operatingSystem
      tag: rename_operatingSystem
      target_field: armis.device.operating_system
      ignore_missing: true
  - set:
      field: host.os.family
      tag: set_host_os_family_from_device_operating_system
      copy_from: armis.device.operating_system
      ignore_empty_value: true
  - lowercase:
      field: host.os.family
      tag: lowercase_host_os_family
      ignore_missing: true
  - set:
      field: host.os.type
      tag: set_host_os_type_from_host_os_family
      copy_from: host.os.family
      ignore_empty_value: true
  - rename:
      field: json.operatingSystemVersion
      tag: rename_operatingSystemVersion
      target_field: armis.device.operating_system_version
      ignore_missing: true
  - set:
      field: host.os.version
      tag: set_host_os_version_from_device_operating_system_version
      copy_from: armis.device.operating_system_version
      ignore_empty_value: true
  - foreach:
      field: json.protections
      tag: foreach_json_protections
      if: ctx.json?.protections instanceof List
      processor:
        date:
          field: _ingest._value.creationTime
          tag: date_protections_creationTime
          target_field: _ingest._value.creation_time
          formats:
            - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
            - EEE, dd MMM yyyy HH:mm:ss z
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.creationTime
                ignore_missing: true
  - foreach:
      field: json.protections
      tag: foreach_json_protections
      if: ctx.json?.protections instanceof List
      processor:
        convert:
          field: _ingest._value.deviceId
          tag: convert_deviceIds_to_string
          target_field: _ingest._value.device_id
          type: string
          ignore_missing: true
  - foreach:
      field: json.protections
      tag: foreach_json_protections
      if: ctx.json?.protections instanceof List
      processor:
        date:
          field: _ingest._value.lastSeenTime
          tag: date_protections_lastSeenTime
          target_field: _ingest._value.last_seen_time
          formats:
            - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
            - EEE, dd MMM yyyy HH:mm:ss z
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.lastSeenTime
                ignore_missing: true
  - foreach:
      field: json.protections
      if: ctx.json?.protections instanceof List
      processor:
        rename:
          field: _ingest._value.protectionName
          tag: rename_protections_protectionName
          target_field: _ingest._value.protection_name
          ignore_missing: true
  - foreach:
      field: json.protections
      if: ctx.json?.protections instanceof List
      processor:
        remove:
          field:
            - _ingest._value.creationTime
            - _ingest._value.lastSeenTime
            - _ingest._value.deviceId
          tag: remove_protections
          ignore_missing: true
  - rename:
      field: json.protections
      tag: rename_protections
      target_field: armis.device.protections
      ignore_missing: true
  - convert:
      field: json.purdueLevel
      tag: convert_purdueLevel_to_double
      target_field: armis.device.purdue_level
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.riskLevel
      tag: convert_riskLevel_to_long
      target_field: armis.device.risk_level
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: host.risk.static_score
      tag: set_host_risk_static_score_from_device_risk_level
      copy_from: armis.device.risk_level
      ignore_empty_value: true
  - convert:
      field: host.risk.static_score
      tag: convert_armis_device_risk_level_to_double
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.sensor.name
      tag: rename_sensor_name
      target_field: armis.device.sensor.name
      ignore_missing: true
  - rename:
      field: json.sensor.type
      tag: rename_sensor_type
      target_field: armis.device.sensor.type
      ignore_missing: true
  - rename:
      field: json.site.location
      tag: rename_site_location
      target_field: armis.device.site.location
      ignore_missing: true
  - rename:
      field: json.site.name
      tag: rename_site_name
      target_field: armis.device.site.name
      ignore_missing: true
  - rename:
      field: json.tags
      tag: rename_tags
      target_field: armis.device.tags
      ignore_missing: true
  - rename:
      field: json.type
      tag: rename_type
      target_field: armis.device.type
      ignore_missing: true
  - rename:
      field: json.typeEnum
      tag: rename_typeEnum
      target_field: armis.device.type_enum
      ignore_missing: true
  - convert:
      field: json.userIds
      tag: convert_userIds
      target_field: armis.device.user_ids
      type: string
      ignore_missing: true
  - foreach:
      field: armis.device.user_ids
      tag: foreach_armis_device_user_ids
      if: ctx.armis?.device?.user_ids instanceof List
      processor:
        append:
          field: user.id
          tag: append_armis_device_user_ids_into_user_id
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - foreach:
      field: armis.device.user_ids
      tag: foreach_armis_device_user_ids
      if: ctx.armis?.device?.user_ids instanceof List
      processor:
        append:
          field: related.user
          tag: append_armis_device_user_ids_into_related_user
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - rename:
      field: json.visibility
      tag: rename_visibility
      target_field: armis.device.visibility
      ignore_missing: true
  - remove:
      field:
        - armis.device.first_seen
        - armis.device.id
        - armis.device.ip_address
        - armis.device.last_seen
        - armis.device.mac_address
        - armis.device.manufacturer
        - armis.device.names
        - armis.device.model
        - armis.device.operating_system_version
        - armis.device.user_ids
        - armis.device.category
        - armis.device.operating_system
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
