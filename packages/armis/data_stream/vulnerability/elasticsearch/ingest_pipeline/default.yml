---
description: Pipeline for processing Vulnerability logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - fail:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
  - drop:
      if: ctx.message == 'retry'
      tag: drop_retry_events
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - fingerprint:
      fields:
        - json.id
        - json.lastDetected
        - json.vulnerability_match.deviceId
        - json.vulnerability_match.lastDetected
      tag: fingerprint_device
      target_field: _id
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_event_kind_to_event
      value: event
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - append:
      field: event.category
      tag: append_event_category
      value: vulnerability
  - set:
      field: vulnerability.scanner.vendor
      tag: set_vulnerability_scanner_vendor
      value: Armis
  - set:
      field: observer.vendor
      tag: set_observer_vendor
      value: Armis
  - set:
      field: observer.product
      tag: set_observer_product
      value: Asset Management and Security
  - convert:
      field: json.affectedDevicesCount
      tag: convert_affectedDevicesCount_to_long
      target_field: armis.vulnerability.affected_devices_count
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.attackComplexity
      tag: rename_attackComplexity
      target_field: armis.vulnerability.attack_complexity
      ignore_missing: true
  - rename:
      field: json.attackVector
      tag: rename_attackVector
      target_field: armis.vulnerability.attack_vector
      ignore_missing: true
  - append:
      field: vulnerability.category
      tag: append_vulnerability_category
      value: '{{{armis.vulnerability.attack_vector}}}'
      allow_duplicates: false
      if: ctx.armis.vulnerability.attack_vector != null
  - rename:
      field: json.availabilityImpact
      tag: rename_availabilityImpact
      target_field: armis.vulnerability.availability_impact
      ignore_missing: true
  - rename:
      field: json.avmRating
      tag: rename_avmRating
      target_field: armis.vulnerability.avm_rating
      ignore_missing: true
  - rename:
      field: json.avmRatingManualChangeReason
      tag: rename_avmRatingManualChangeReason
      target_field: armis.vulnerability.avm_rating_manual_change_reason
      ignore_missing: true
  - rename:
      field: json.avmRatingManualChangedBy
      tag: rename_avmRatingManualChangedBy
      target_field: armis.vulnerability.avm_rating_manual_changed_by
      ignore_missing: true
  - set:
      field: user.name
      tag: set_user_name_from_vulnerability_avm_rating_manual_changed_by
      copy_from: armis.vulnerability.avm_rating_manual_changed_by
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_related_user
      value: '{{{armis.vulnerability.avm_rating_manual_changed_by}}}'
      allow_duplicates: false
      if: ctx.armis.vulnerability.avm_rating_manual_changed_by != null
  - date:
      field: json.avmRatingManualUpdateTime
      tag: date_avmRatingManualUpdateTime
      target_field: armis.vulnerability.avm_rating_manual_update_time
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.avmRatingManualUpdateTime != null && ctx.json.avmRatingManualUpdateTime != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.botnets
      tag: rename_botnets
      target_field: armis.vulnerability.botnets
      ignore_missing: true
  - date:
      field: json.cisaDueDate
      tag: date_cisaDueDate
      target_field: armis.vulnerability.cisa_due_date
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.cisaDueDate != null && ctx.json.cisaDueDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.commonName
      tag: rename_commonName
      target_field: armis.vulnerability.common_name
      ignore_missing: true
  - rename:
      field: json.confidentialityImpact
      tag: rename_confidentialityImpact
      target_field: armis.vulnerability.confidentiality_impact
      ignore_missing: true
  - rename:
      field: json.cveUid
      tag: rename_cveUid
      target_field: armis.vulnerability.cve_uid
      ignore_missing: true
  - convert:
      field: json.cvssScore
      tag: convert_cvssScore_to_double
      target_field: armis.vulnerability.cvss_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.cvssScoreV4
      tag: rename_cvssScoreV4
      target_field: armis.vulnerability.cvss_score_v4
      ignore_missing: true
  - rename:
      field: json.description
      tag: rename_description
      target_field: armis.vulnerability.description
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_vulnerability_description
      copy_from: armis.vulnerability.description
      ignore_empty_value: true
  - set:
      field: vulnerability.description
      tag: set_vulnerability_description
      copy_from: armis.vulnerability.description
      ignore_empty_value: true
  - convert:
      field: json.epssPercentile
      tag: convert_epssPercentile_to_double
      target_field: armis.vulnerability.epss_percentile
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.epssScore
      tag: convert_epssScore_to_double
      target_field: armis.vulnerability.epss_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.exploitabilityScore
      tag: convert_exploitabilityScore_to_double
      target_field: armis.vulnerability.exploitability_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.firstDetected
      tag: date_firstDetected
      target_field: armis.vulnerability.first_detected
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.firstDetected != null && ctx.json.firstDetected != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.start
      tag: set_event_start_from_vulnerability_first_detected
      copy_from: armis.vulnerability.first_detected
      ignore_empty_value: true
  - date:
      field: json.firstReferencePublishDate
      tag: date_firstReferencePublishDate
      target_field: armis.vulnerability.first_reference_publish_date
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.firstReferencePublishDate != null && ctx.json.firstReferencePublishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.firstWeaponizedReferencePublishDate
      tag: date_firstWeaponizedReferencePublishDate
      target_field: armis.vulnerability.first_weaponized_reference_publish_date
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.firstWeaponizedReferencePublishDate != null && ctx.json.firstWeaponizedReferencePublishDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.hasRansomware
      tag: convert_hasRansomware_to_boolean
      target_field: armis.vulnerability.has_ransomware
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.hasRemediationInfo
      tag: rename_hasRemediationInfo
      target_field: armis.vulnerability.has_remediation_info
      ignore_missing: true
  - rename:
      field: json.id
      tag: rename_id
      target_field: armis.vulnerability.id
      ignore_missing: true
  - set:
      field: vulnerability.id
      tag: set_vulnerability_id_from_vulnerability_id
      copy_from: armis.vulnerability.id
      ignore_empty_value: true
  - convert:
      field: json.impactScore
      tag: convert_impactScore_to_double
      target_field: armis.vulnerability.impact_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.integrityImpact
      tag: rename_integrityImpact
      target_field: armis.vulnerability.integrity_impact
      ignore_missing: true
  - convert:
      field: json.isWeaponized
      tag: convert_isWeaponized_to_boolean
      target_field: armis.vulnerability.is_weaponized
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.lastDetected
      tag: date_lastDetected
      target_field: armis.vulnerability.last_detected
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.lastDetected != null && ctx.json.lastDetected != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.latestExploitUpdate
      tag: date_latestExploitUpdate
      target_field: armis.vulnerability.latest_exploit_update
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.latestExploitUpdate != null && ctx.json.latestExploitUpdate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.numOfExploits
      tag: convert_numOfExploits_to_long
      target_field: armis.vulnerability.num_of_exploits
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.numberOfThreatActors
      tag: convert_numberOfThreatActors_to_long
      target_field: armis.vulnerability.number_of_threat_actors
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.privilegesRequired
      tag: rename_privilegesRequired
      target_field: armis.vulnerability.privileges_required
      ignore_missing: true
  - date:
      field: json.publishedDate
      tag: date_publishedDate
      target_field: armis.vulnerability.published_date
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.publishedDate != null && ctx.json.publishedDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.reportedByGoogleZeroDays
      tag: convert_reportedByGoogleZeroDays_to_boolean
      target_field: armis.vulnerability.reported_by_google_zero_days
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.scope
      tag: rename_scope
      target_field: armis.vulnerability.scope
      ignore_missing: true
  - convert:
      field: json.score
      tag: convert_score_to_double
      target_field: armis.vulnerability.score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.severity
      tag: rename_severity
      target_field: armis.vulnerability.severity
      ignore_missing: true
  - set:
      field: vulnerability.severity
      tag: set_vulnerability_severity_from_severity
      copy_from: armis.vulnerability.severity
      ignore_empty_value: true
  - rename:
      field: json.status
      tag: rename_status
      target_field: armis.vulnerability.status
      ignore_missing: true
  - rename:
      field: json.threatActors
      tag: rename_threatActors
      target_field: armis.vulnerability.threat_actors
      ignore_missing: true
  - rename:
      field: json.threatTags
      tag: rename_threatTags
      target_field: armis.vulnerability.threat_tags
      ignore_missing: true
  - rename:
      field: json.type
      tag: rename_type
      target_field: armis.vulnerability.type
      ignore_missing: true
  - rename:
      field: json.userInteraction
      tag: rename_userInteraction
      target_field: armis.vulnerability.user_interaction
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.advisoryId
      tag: rename_vulnerability_match_advisoryId
      target_field: armis.vulnerability.vulnerability_match.advisory_id
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.avmRating
      tag: rename_vulnerability_match_avmRating
      target_field: armis.vulnerability.vulnerability_match.avm_rating
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.confidenceLevel
      tag: rename_vulnerability_match_confidenceLevel
      target_field: armis.vulnerability.vulnerability_match.confidence_level
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.confidenceLevelDescription
      tag: rename_vulnerability_match_confidenceLevelDescription
      target_field: armis.vulnerability.vulnerability_match.confidence_level_description
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.cveUid
      tag: rename_vulnerability_match_cveUid
      target_field: armis.vulnerability.vulnerability_match.cve_uid
      ignore_missing: true
  - convert:
      field: json.vulnerability_match.deviceId
      tag: convert_vulnerability_match_deviceId
      target_field: armis.vulnerability.vulnerability_match.device_id
      type: string
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host.id_id_from_vulnerability_vulnerability_match_device_id
      copy_from: armis.vulnerability.vulnerability_match.device_id
      ignore_empty_value: true
  - set:
      field: device.id
      tag: set_device_id_from_vulnerability_vulnerability_match_device_id
      copy_from: armis.vulnerability.vulnerability_match.device_id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_related_host_from_vulnerability_vulnerability_match_device_id
      value: '{{{armis.vulnerability.vulnerability_match.device_id}}}'
      allow_duplicates: false
      if: ctx.armis.vulnerability.vulnerability_match.device_id != null
  - date:
      field: json.vulnerability_match.firstDetected
      tag: date_vulnerability_match_firstDetected
      target_field: armis.vulnerability.vulnerability_match.first_detected
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.vulnerability_match?.firstDetected != null && ctx.json.vulnerability_match.firstDetected != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.vulnerability_match.hasRemediationInfo
      tag: rename_vulnerability_match_hasRemediationInfo
      target_field: armis.vulnerability.vulnerability_match.has_remediation_info
      ignore_missing: true
  - date:
      field: json.vulnerability_match.lastDetected
      tag: date_vulnerability_match_lastDetected
      target_field: armis.vulnerability.vulnerability_match.last_detected
      formats:
        - yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXXXX
        - EEE, dd MMM yyyy HH:mm:ss z
        - ISO8601
      if: ctx.json?.vulnerability_match?.lastDetected != null && ctx.json.vulnerability_match.lastDetected != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: threat.indicator.last_seen
      tag: set_threat_indicator_last_seen_from_vulnerability_vulnerability_match_last_detected
      copy_from: armis.vulnerability.vulnerability_match.last_detected
      ignore_empty_value: true
  - set:
      field: '@timestamp'
      tag: set_timestamp_from_vulnerability_vulnerability_match_last_detected
      copy_from: armis.vulnerability.vulnerability_match.last_detected
      ignore_empty_value: true
  - rename:
      field: json.vulnerability_match.matchCriteriaString
      tag: rename_vulnerability_match_matchCriteriaString
      target_field: armis.vulnerability.vulnerability_match.match_criteria_string
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.recommendedSteps
      tag: rename_vulnerability_match_recommendedSteps
      target_field: armis.vulnerability.vulnerability_match.recommended_steps
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.remediationTypes
      tag: rename_vulnerability_match_remediationTypes
      target_field: armis.vulnerability.vulnerability_match.remediation_types
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.status
      tag: rename_vulnerability_match_status
      target_field: armis.vulnerability.vulnerability_match.status
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.statusChangeReason
      tag: rename_vulnerability_match_statusChangeReason
      target_field: armis.vulnerability.vulnerability_match.status_change_reason
      ignore_missing: true
  - rename:
      field: json.vulnerability_match.statusSource
      tag: rename_vulnerability_match_statusSource
      target_field: armis.vulnerability.vulnerability_match.status_source
      ignore_missing: true
  - remove:
      field:
        - armis.vulnerability.avm_rating_manual_changed_by
        - armis.vulnerability.description
        - armis.vulnerability.first_detected
        - armis.vulnerability.id
        - armis.vulnerability.vulnerability_match.device_id
        - armis.vulnerability.attack_vector
        - armis.vulnerability.severity
        - armis.vulnerability.vulnerability_match.last_detected
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
