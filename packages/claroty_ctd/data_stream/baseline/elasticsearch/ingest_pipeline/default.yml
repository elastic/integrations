---
description: Pipeline for processing Baseline logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - fail:
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: event.category
      tag: append_event_category
      value: network
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - convert:
      field: json.approved
      tag: convert_approved_to_boolean
      target_field: claroty_ctd.baseline.approved
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.category
      tag: convert_category_to_long
      target_field: claroty_ctd.baseline.category
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.hash
      tag: convert_hash_to_keyword
      target_field: claroty_ctd.baseline.hash
      type: string
      ignore_missing: true
  - convert:
      field: json.category_access
      tag: convert_category_access_to_long
      target_field: claroty_ctd.baseline.category_access
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.description
      tag: rename_description
      target_field: claroty_ctd.baseline.description
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_baseline_description
      copy_from: claroty_ctd.baseline.description
      ignore_empty_value: true
  - rename:
      field: json.destination_asset_id
      tag: rename_destination_asset_id
      target_field: claroty_ctd.baseline.destination.asset_id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.destination.asset_id
      tag: convert_destination_asset_id_to_keyword
      type: string
      ignore_missing: true
  - convert:
      field: json.destination_entity.asset_name
      tag: convert_destination_entity_asset_name
      type: ip
      ignore_missing: true
      if: ctx.json?.destination_entity?.asset_name != null && ctx.json.destination_entity.asset_name != ''
      on_failure:
        - rename:
            field: json.destination_entity.asset_name
            tag: rename_destination_entity_asset_name
            target_field: claroty_ctd.baseline.destination.entity.asset_name
            ignore_missing: true
  - append:
      field: destination.ip
      tag: append_baseline_destination_entity_asset_name_into_destination_ip
      value: '{{{json.destination_entity.asset_name}}}'
      allow_duplicates: false
      if: ctx.json?.destination_entity?.asset_name != null
  - append:
      field: related.ip
      tag: append_baseline_destination_entity_asset_name_into_related_ip
      value: '{{{json.destination_entity.asset_name}}}'
      allow_duplicates: false
      if: ctx.json?.destination_entity?.asset_name != null
  - rename:
      field: json.destination_entity.id
      tag: rename_destination_entity_id
      target_field: claroty_ctd.baseline.destination.entity.id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.destination.entity.id
      tag: convert_destination_entity_id_to_keyword
      type: string
      ignore_missing: true
  - convert:
      field: json.destination_entity.ipv4
      tag: convert_destination_entity_ipv4_to_ip
      target_field: claroty_ctd.baseline.destination.entity.ipv4
      type: ip
      ignore_missing: true
      if: ctx.json?.destination_entity?.ipv4 != null && ctx.json.destination_entity.ipv4 != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: destination.ip
      tag: append_baseline_destination_entity_ipv4_into_destiantion_ip
      value: '{{{claroty_ctd.baseline.destination.entity.ipv4}}}'
      allow_duplicates: false
      if: ctx.claroty_ctd?.baseline?.destination?.entity?.ipv4 != null
  - append:
      field: related.ip
      tag: append_baseline_destination_entity_ipv4_into_related_ip
      value: '{{{claroty_ctd.baseline.destination.entity.ipv4}}}'
      allow_duplicates: false
      if: ctx.claroty_ctd?.baseline?.destination?.entity?.ipv4 != null
  - rename:
      field: json.destination_entity.mac
      tag: rename_destination_entity_mac
      target_field: claroty_ctd.baseline.destination.entity.mac
      ignore_missing: true
  - set:
      field: destination.mac
      tag: set_destination_mac_from_baseline_destination_entity_mac
      copy_from: claroty_ctd.baseline.destination.entity.mac
      ignore_empty_value: true
  - gsub:
      field: destination.mac
      tag: gsub_destination_entity_mac
      pattern: ':'
      replacement: '-'
      ignore_missing: true
  - uppercase:
      field: destination.mac
      tag: uppercase_destination_entity_mac
      ignore_missing: true
  - rename:
      field: json.destination_entity.resource_id
      tag: rename_destination_entity_resource_id
      target_field: claroty_ctd.baseline.destination.entity.resource_id
      ignore_missing: true
  - rename:
      field: json.destination_entity.virtual_zone_id
      tag: rename_destination_entity_virtual_zone_id
      target_field: claroty_ctd.baseline.destination.entity.virtual_zone_id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.destination.entity.virtual_zone_id
      tag: convert_destination_entity_virtual_zone_id_to_keyword
      type: string
      ignore_missing: true
  - rename:
      field: json.destination_entity.virtual_zone_name
      tag: rename_destination_entity_virtual_zone_name
      target_field: claroty_ctd.baseline.destination.entity.virtual_zone_name
      ignore_missing: true
  - convert:
      field: json.dst_port
      tag: convert_dst_port_to_long
      target_field: claroty_ctd.baseline.destination.port
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: destination.port
      tag: set_destination_port_from_baseline_destination_port
      copy_from: claroty_ctd.baseline.destination.port
      ignore_empty_value: true
  - convert:
      field: json.frequency
      tag: convert_frequency_to_long
      target_field: claroty_ctd.baseline.frequency
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.has_values
      tag: convert_has_values_to_boolean
      target_field: claroty_ctd.baseline.has_values
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.hash
      tag: set_event_hash_from_baseline_hash
      copy_from: claroty_ctd.baseline.hash
      ignore_empty_value: true
  - append:
      field: related.hash
      tag: append_log_peer_address_into_related_hash
      value: '{{{claroty_ctd.baseline.hash}}}'
      allow_duplicates: false
      if: ctx.claroty_ctd?.baseline?.hash != null
  - rename:
      field: json.id
      tag: rename_id
      target_field: claroty_ctd.baseline.id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.id
      tag: convert_id_to_keyword
      type: string
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_baseline_id
      copy_from: claroty_ctd.baseline.id
      ignore_empty_value: true
  - convert:
      field: json.interval
      tag: convert_interval_to_long
      target_field: claroty_ctd.baseline.interval
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.last_seen
      tag: date_last_seen
      target_field: claroty_ctd.baseline.last_seen
      formats:
        - ISO8601
      if: ctx.json?.last_seen != null && ctx.json.last_seen != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.last_updated
      tag: date_last_updated
      target_field: claroty_ctd.baseline.last_updated
      formats:
        - ISO8601
      if: ctx.json?.last_updated != null && ctx.json.last_updated != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_baseline_last_updated
      copy_from: claroty_ctd.baseline.last_updated
      ignore_empty_value: true
  - rename:
      field: json.protocol
      tag: rename_protocol
      target_field: claroty_ctd.baseline.protocol
      ignore_missing: true
  - set:
      field: network.protocol
      tag: set_network_protocol_from_baseline_protocol
      copy_from: claroty_ctd.baseline.protocol
      ignore_empty_value: true
  - lowercase:
      field: network.protocol
      tag: lowercase_network_protocol
      ignore_missing: true
  - rename:
      field: json.resource_id
      tag: rename_resource_id
      target_field: claroty_ctd.baseline.resource_id
      ignore_missing: true
  - rename:
      field: json.site_id
      tag: rename_site_id
      target_field: claroty_ctd.baseline.site_id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.site_id
      tag: convert_site_id_to_keyword
      type: string
      ignore_missing: true
  - rename:
      field: json.source_asset_id
      tag: rename_source_asset_id
      target_field: claroty_ctd.baseline.source.asset_id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.source.asset_id
      tag: convert_source_asset_id_to_keyword
      type: string
      ignore_missing: true
  - convert:
      field: json.source_entity.asset_name
      tag: convert_source_entity_asset_name
      type: ip
      ignore_missing: true
      if: ctx.json?.source_entity?.asset_name != null && ctx.json.source_entity.asset_name != ''
      on_failure:
        - rename:
            field: json.source_entity.asset_name
            tag: rename_source_entity_asset_name
            target_field: claroty_ctd.baseline.source.entity.asset_name
            ignore_missing: true
  - append:
      field: source.ip
      tag: append_baseline_source_entity_asset_name_into_source_ip
      value: '{{{json.source_entity.asset_name}}}'
      allow_duplicates: false
      if: ctx.json?.source_entity?.asset_name != null
  - append:
      field: related.ip
      tag: append_baseline_source_entity_asset_name_into_related_ip
      value: '{{{json.source_entity.asset_name}}}'
      allow_duplicates: false
      if: ctx.json?.source_entity?.asset_name != null
  - rename:
      field: json.source_entity.id
      tag: rename_source_entity_id
      target_field: claroty_ctd.baseline.source.entity.id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.source.entity.id
      tag: convert_source_entity_id_to_keyword
      type: string
      ignore_missing: true
  - convert:
      field: json.source_entity.ipv4
      tag: convert_source_entity_ipv4_to_ip
      target_field: claroty_ctd.baseline.source.entity.ipv4
      type: ip
      ignore_missing: true
      if: ctx.json?.source_entity?.ipv4 != null && ctx.json.source_entity.ipv4 != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: source.ip
      tag: append_baseline_source_entity_ipv4_into_source_ip
      value: '{{{claroty_ctd.baseline.source.entity.ipv4}}}'
      allow_duplicates: false
      if: ctx.claroty_ctd?.baseline?.source?.entity?.ipv4 != null
  - append:
      field: related.ip
      tag: append_baseline_source_entity_ipv4_related_ip
      value: '{{{claroty_ctd.baseline.source.entity.ipv4}}}'
      allow_duplicates: false
      if: ctx.claroty_ctd?.baseline?.source?.entity?.ipv4 != null
  - rename:
      field: json.source_entity.mac
      tag: rename_source_entity_mac
      target_field: claroty_ctd.baseline.source.entity.mac
      ignore_missing: true
  - set:
      field: source.mac
      tag: set_source_mac_from_baseline_source_entity_mac
      copy_from: claroty_ctd.baseline.source.entity.mac
      ignore_empty_value: true
  - gsub:
      field: source.mac
      tag: gsub_source_entity_mac
      pattern: ':'
      replacement: '-'
      ignore_missing: true
  - uppercase:
      field: source.mac
      tag: uppercase_source_entity_mac
      ignore_missing: true
  - rename:
      field: json.source_entity.resource_id
      tag: rename_source_entity_resource_id
      target_field: claroty_ctd.baseline.source.entity.resource_id
      ignore_missing: true
  - rename:
      field: json.source_entity.virtual_zone_id
      tag: rename_source_entity_virtual_zone_id
      target_field: claroty_ctd.baseline.source.entity.virtual_zone.id
      ignore_missing: true
  - convert:
      field: claroty_ctd.baseline.source.entity.virtual_zone.id
      tag: convert_source_entity_virtual_zone_id_to_keyword
      type: string
      ignore_missing: true
  - rename:
      field: json.source_entity.virtual_zone_name
      tag: rename_source_entity_virtual_zone_name
      target_field: claroty_ctd.baseline.source.entity.virtual_zone.name
      ignore_missing: true
  - convert:
      field: json.src_port
      tag: convert_src_port_to_long
      type: long
      target_field: claroty_ctd.baseline.source.port
      ignore_missing: true
      on_failure:
        - remove:
            field: json.src_port
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.port
      tag: set_source_port_from_baseline_source_port
      copy_from: claroty_ctd.baseline.source.port
      ignore_empty_value: true
  - date:
      field: json.timestamp
      tag: date_timestamp
      target_field: claroty_ctd.baseline.time
      formats:
        - ISO8601
      if: ctx.json?.timestamp != null && ctx.json.timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.transmission
      tag: rename_transmission
      target_field: claroty_ctd.baseline.transmission
      ignore_missing: true
  - convert:
      field: json.type
      tag: convert_type_to_long
      target_field: claroty_ctd.baseline.type
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.session_state
      tag: convert_session_state_to_long
      target_field: claroty_ctd.baseline.session_state
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: claroty_ctd.baseline.id
      tag: convert_id_to_keyword
      type: string
      ignore_missing: true
  - convert:
      field: json.valid
      tag: convert_valid_to_boolean
      target_field: claroty_ctd.baseline.valid
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - remove:
      field:
        - claroty_ctd.baseline.description
        - claroty_ctd.baseline.destination.entity.ipv4
        - claroty_ctd.baseline.destination.entity.mac
        - claroty_ctd.baseline.destination.port
        - claroty_ctd.baseline.hash
        - claroty_ctd.baseline.id
        - claroty_ctd.baseline.last_updated
        - claroty_ctd.baseline.protocol
        - claroty_ctd.baseline.source.entity.ipv4
        - claroty_ctd.baseline.source.entity.mac
        - claroty_ctd.baseline.source.port
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
