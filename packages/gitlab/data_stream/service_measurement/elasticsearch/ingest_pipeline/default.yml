---
description: Pipeline for processing service_measurement logs
processors:
  - set:
      field: ecs.version
      value: 8.11.0
  - append:
      field: event.category
      value: api
  - append:
      field: event.type
      value: access
  - set:
      field: event.kind
      value: event
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      if: ctx.event?.original == null
      ignore_missing: true
  - json:
      field: event.original
      tag: 'json_decoding'
      target_field: json
  - date:
      field: json.time
      formats:
        - "ISO8601"
      target_field: "@timestamp"
      timezone: "UTC"
      tag: date_event_created_time_epoch
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - lowercase:
      field: json.severity
  - set:
      field: event.severity
      value: 0
      if: ctx.json?.severity == 'emergency'
      tag: set_severity_0
  - set:
      field: event.severity
      value: 1
      if: ctx.json?.severity == 'alert'
      tag: set_severity_1
  - set:
      field: event.severity
      value: 2
      if: ctx.json?.severity == 'critical'
      tag: set_severity_2
  - set:
      field: event.severity
      value: 3
      if: ctx.json?.severity == 'error'
      tag: set_severity_3
  - set:
      field: event.severity
      value: 4
      if: ctx.json?.severity == 'warn'
      tag: set_severity_4
  - set:
      field: event.severity
      value: 5
      if: ctx.json?.severity == 'notice'
      tag: set_severity_5
  - set:
      field: event.severity
      value: 6
      if: ctx.json?.severity == 'info'
      tag: set_severity_6
  - set:
      field: event.severity
      value: 7
      if: ctx.json?.severity == 'debug'
      tag: set_severity_7
  - rename:
      field: json.correlation_id
      target_field: event.id
      ignore_missing: true
  - rename:
      field: json.time_to_finish
      target_field: gitlab.service_measurement.time_to_finish
      ignore_missing: true
  - rename:
      field: json.number_of_sql_calls
      target_field: gitlab.service_measurement.number_of_sql_calls
      ignore_missing: true
  - script:
      tag: script_to_convert_to_bytes
      lang: painless
      source: |-
        String[] splitString = ctx.json.memory_usage.splitOnToken(' ');
        String measurement = splitString[1];
        if (measurement.equalsIgnoreCase("Mib")) {
          ctx.json.memory_usage = splitString[0] + "mb";
        } else if (measurement.equalsIgnoreCase("GiB")) {
          ctx.json.memory_usage = splitString[0] + "gb";
        }
  - rename:
      field: json.memory_usage
      target_field: gitlab.service_measurement.memory_usage
      ignore_missing: true
  - bytes:
      field: gitlab.service_measurement.memory_usage
  - rename: 
      field: json.label
      target_field: gitlab.service_measurement.label
      ignore_missing: true
  - rename:
      field: json.class
      target_field: gitlab.service_measurement.class
      ignore_missing: true
  - rename: 
      field: json.current_user
      target_field: user.name
      ignore_missing: true
  - rename: 
      field: json.project_full_path
      target_field: gitlab.service_measurement.project_full_path
      ignore_missing: true
  - rename: 
      field: json.file_path
      target_field: file.path
      ignore_missing: true
  - rename:
      field: json.gc_stats.count
      target_field: gitlab.service_measurement.gc_stats.count
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_allocated_pages
      target_field: gitlab.service_measurement.gc_stats.heap_allocated_pages
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_sorted_length
      target_field: gitlab.service_measurement.gc_stats.heap_sorted_length
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_allocatable_pages
      target_field: gitlab.service_measurement.gc_stats.heap_allocatable_pages
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_available_slots
      target_field: gitlab.service_measurement.gc_stats.heap_available_slots
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_live_slots
      target_field: gitlab.service_measurement.gc_stats.heap_live_slots
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_free_slots
      target_field: gitlab.service_measurement.gc_stats.heap_free_slots
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_final_slots
      target_field: gitlab.service_measurement.gc_stats.heap_final_slots
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_marked_slots
      target_field: gitlab.service_measurement.gc_stats.heap_marked_slots
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_eden_pages
      target_field: gitlab.service_measurement.gc_stats.heap_eden_pages
      ignore_missing: true
  - rename:
      field: json.gc_stats.heap_tomb_pages
      target_field: gitlab.service_measurement.gc_stats.heap_tomb_pages
      ignore_missing: true
  - rename:
      field: json.gc_stats.total_allocated_pages
      target_field: gitlab.service_measurement.gc_stats.total_allocated_pages
      ignore_missing: true
  - rename:
      field: json.gc_stats.total_freed_pages
      target_field: gitlab.service_measurement.gc_stats.total_freed_pages
      ignore_missing: true
  - rename:
      field: json.gc_stats.total_allocated_objects
      target_field: gitlab.service_measurement.gc_stats.total_allocated_objects
      ignore_missing: true
  - rename:
      field: json.gc_stats.total_freed_objects
      target_field: gitlab.service_measurement.gc_stats.total_freed_objects
      ignore_missing: true
  - rename:
      field: json.gc_stats.malloc_increase_bytes
      target_field: gitlab.service_measurement.gc_stats.malloc_increase_bytes
      ignore_missing: true
  - rename:
      field: json.gc_stats.malloc_increase_bytes_limit
      target_field: gitlab.service_measurement.gc_stats.malloc_increase_bytes_limit
      ignore_missing: true
  - rename:
      field: json.gc_stats.minor_gc_count
      target_field: gitlab.service_measurement.gc_stats.minor_gc_count
      ignore_missing: true
  - rename:
      field: json.gc_stats.major_gc_count
      target_field: gitlab.service_measurement.gc_stats.major_gc_count
      ignore_missing: true
  - rename:
      field: json.gc_stats.remembered_wb_unprotected_objects
      target_field: gitlab.service_measurement.gc_stats.remembered_wb_unprotected_objects
      ignore_missing: true
  - rename:
      field: json.gc_stats.remembered_wb_unprotected_objects_limit
      target_field: gitlab.service_measurement.gc_stats.remembered_wb_unprotected_objects_limit
      ignore_missing: true
  - rename:
      field: json.gc_stats.old_objects
      target_field: gitlab.service_measurement.gc_stats.old_objects
      ignore_missing: true
  - rename:
      field: json.gc_stats.old_objects_limit
      target_field: gitlab.service_measurement.gc_stats.old_objects_limit
      ignore_missing: true
  - rename:
      field: json.gc_stats.oldmalloc_increase_bytes
      target_field: gitlab.service_measurement.gc_stats.oldmalloc_increase_bytes
      ignore_missing: true
  - rename:
      field: json.gc_stats.oldmalloc_increase_bytes_limit
      target_field: gitlab.service_measurement.gc_stats.oldmalloc_increase_bytes_limit
      ignore_missing: true
  - append:
      field: related.user
      value: '{{user.name}}'
      if: ctx.user?.name != null
      allow_duplicates: false
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: Drops null/empty values recursively.
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
