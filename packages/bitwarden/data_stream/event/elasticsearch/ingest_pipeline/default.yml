---
description: Pipeline for processing event logs.
processors:
  - set:
      field: ecs.version
      value: 8.6.0
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - set:
      field: event.kind
      value: event
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - drop:
      if: ctx.json?.data != null && ctx.json.data.isEmpty()
  - fingerprint:
      fields:
        - json.date
        - json.actingUserId
        - json.collectionId
        - json.groupId
        - json.memberId
        - json.itemId
        - json.installationId
        - json.policyId
      target_field: '_id'
      ignore_missing: true
  - rename:
      field: json.object
      target_field: bitwarden.object
      ignore_missing: true
  - convert:
      field: json.type
      tag: 'convert_type_to_string'
      target_field: bitwarden.event.type.value
      type: string
      ignore_missing: true
      if: ctx.json?.type != null && ctx.json.type != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      ignore_failure: false
      if: ctx.bitwarden?.event?.type?.value != null
      description: Set event type name.
      # Event type
      # https://github.com/bitwarden/server/blob/master/src/Core/Enums/EventType.cs
      params:
        "1000": User_LoggedIn
        "1001": User_ChangedPassword
        "1002": User_Updated2fa
        "1003": User_Disabled2fa
        "1004": User_Recovered2fa
        "1005": User_FailedLogIn
        "1006": User_FailedLogIn2fa
        "1007": User_ClientExportedVault
        "1008": User_UpdatedTempPassword
        "1009": User_MigratedKeyToKeyConnector

        "1100": Cipher_Created
        "1101": Cipher_Updated
        "1102": Cipher_Deleted
        "1103": Cipher_AttachmentCreated
        "1104": Cipher_AttachmentDeleted
        "1105": Cipher_Shared
        "1106": Cipher_UpdatedCollections
        "1107": Cipher_ClientViewed
        "1108": Cipher_ClientToggledPasswordVisible
        "1109": Cipher_ClientToggledHiddenFieldVisible
        "1110": Cipher_ClientToggledCardCodeVisible
        "1111": Cipher_ClientCopiedPassword
        "1112": Cipher_ClientCopiedHiddenField
        "1113": Cipher_ClientCopiedCardCode
        "1114": Cipher_ClientAutofilled
        "1115": Cipher_SoftDeleted
        "1116": Cipher_Restored
        "1117": Cipher_ClientToggledCardNumberVisible

        "1300": Collection_Created
        "1301": Collection_Updated
        "1302": Collection_Deleted

        "1400": Group_Created
        "1401": Group_Updated
        "1402": Group_Deleted

        "1500": OrganizationUser_Invited
        "1501": OrganizationUser_Confirmed
        "1502": OrganizationUser_Updated
        "1503": OrganizationUser_Removed
        "1504": OrganizationUser_UpdatedGroups
        "1505": OrganizationUser_UnlinkedSso
        "1506": OrganizationUser_ResetPassword_Enroll
        "1507": OrganizationUser_ResetPassword_Withdraw
        "1508": OrganizationUser_AdminResetPassword
        "1509": OrganizationUser_ResetSsoLink
        "1510": OrganizationUser_FirstSsoLogin
        "1511": OrganizationUser_Revoked
        "1512": OrganizationUser_Restored

        "1600": Organization_Updated
        "1601": Organization_PurgedVault
        "1602": Organization_ClientExportedVault
        "1603": Organization_VaultAccessed
        "1604": Organization_EnabledSso
        "1605": Organization_DisabledSso
        "1606": Organization_EnabledKeyConnector
        "1607": Organization_DisabledKeyConnector
        "1608": Organization_SponsorshipsSynced

        "1700": Policy_Updated

        "1800": ProviderUser_Invited
        "1801": ProviderUser_Confirmed
        "1802": ProviderUser_Updated
        "1803": ProviderUser_Removed

        "1900": ProviderOrganization_Created
        "1901": ProviderOrganization_Added
        "1902": ProviderOrganization_Removed
        "1903": ProviderOrganization_VaultAccessed

        "2000": OrganizationDomain_Added
        "2001": OrganizationDomain_Removed
        "2002": OrganizationDomain_Verified
        "2003": OrganizationDomain_NotVerified

        "2100": Secret_Retrieved
      source: |-
        ctx.bitwarden.event.type.put("name",params[ctx.bitwarden.event.type.value])
  - set:
      field: event.outcome
      if: ctx.bitwarden?.event?.type?.name != null && (['User_LoggedIn','User_ChangedPassword','User_Updated2fa','User_Disabled2fa','User_Recovered2fa','User_ClientExportedVault','User_UpdatedTempPassword','User_MigratedKeyToKeyConnector','Cipher_Created','Cipher_Updated','Cipher_Deleted','Cipher_AttachmentCreated','Cipher_AttachmentDeleted','Cipher_Shared','Cipher_UpdatedCollections','Cipher_ClientViewed','Cipher_ClientToggledPasswordVisible','Cipher_ClientToggledHiddenFieldVisible','Cipher_ClientToggledCardCodeVisible','Cipher_ClientCopiedPassword','Cipher_ClientCopiedHiddenField','Cipher_ClientCopiedCardCode','Cipher_ClientAutofilled','Cipher_SoftDeleted','Cipher_Restored','Cipher_ClientToggledCardNumberVisible','Collection_Created','Collection_Updated','Collection_Deleted','Group_Created','Group_Updated','Group_Deleted','OrganizationUser_Invited','OrganizationUser_Confirmed','OrganizationUser_Updated','OrganizationUser_Removed','OrganizationUser_UpdatedGroups','OrganizationUser_UnlinkedSso','OrganizationUser_ResetPassword_Enroll','OrganizationUser_ResetPassword_Withdraw','OrganizationUser_AdminResetPassword','OrganizationUser_ResetSsoLink','OrganizationUser_FirstSsoLogin','OrganizationUser_Revoked','OrganizationUser_Restored','Organization_Updated','Organization_PurgedVault','Organization_ClientExportedVault','Organization_VaultAccessed','Organization_EnabledSso','Organization_DisabledSso','Organization_EnabledKeyConnector','Organization_DisabledKeyConnector','Organization_SponsorshipsSynced','Policy_Updated','ProviderUser_Invited','ProviderUser_Confirmed','ProviderUser_Updated','ProviderUser_Removed','ProviderOrganization_Created','ProviderOrganization_Added','ProviderOrganization_Removed','ProviderOrganization_VaultAccessed','OrganizationDomain_Added','OrganizationDomain_Removed','OrganizationDomain_Verified','OrganizationDomain_NotVerified','Secret_Retrieved'].contains(ctx.bitwarden.event.type.name))
      value: success
  - set:
      field: event.outcome
      if: ctx.bitwarden?.event?.type?.name != null && (['User_FailedLogIn','User_FailedLogIn2fa'].contains(ctx.bitwarden.event.type.name))
      value: failure
  - append:
      field: event.category
      if: ctx.bitwarden?.event?.type?.name != null && (['User_FailedLogIn','User_FailedLogIn2fa','User_LoggedIn','User_ChangedPassword','User_Updated2fa','User_Disabled2fa','User_Recovered2fa','User_ClientExportedVault','User_UpdatedTempPassword','User_MigratedKeyToKeyConnector','Group_Created','Group_Updated','Group_Deleted'].contains(ctx.bitwarden.event.type.name))
      value: iam
  - append:
      field: event.category
      if: ctx.bitwarden?.event?.type?.name != null && (['User_LoggedIn','User_FailedLogIn','User_FailedLogIn2fa','OrganizationUser_FirstSsoLogin'].contains(ctx.bitwarden.event.type.name))
      value: authentication
  - append:
      field: event.category
      if: ctx.bitwarden?.event?.type?.name != null && (['User_ClientExportedVault','Cipher_Created','Cipher_Updated','Cipher_Deleted','Cipher_AttachmentCreated','Cipher_AttachmentDeleted','Cipher_Shared','Cipher_UpdatedCollections','Cipher_ClientViewed','Cipher_ClientToggledPasswordVisible','Cipher_ClientToggledHiddenFieldVisible','Cipher_ClientToggledCardCodeVisible','Cipher_ClientCopiedPassword','Cipher_ClientCopiedHiddenField','Cipher_ClientCopiedCardCode','Cipher_ClientAutofilled','Cipher_SoftDeleted','Cipher_Restored','Cipher_ClientToggledCardNumberVisible','Organization_PurgedVault','Organization_ClientExportedVault','Organization_VaultAccessed','ProviderOrganization_VaultAccessed'].contains(ctx.bitwarden.event.type.name))
      value: database
  - append:
      field: event.category
      if: ctx.bitwarden?.event?.type?.name != null && (['User_ChangedPassword','User_Updated2fa','User_Disabled2fa','User_UpdatedTempPassword','Collection_Created','Collection_Updated','Collection_Deleted','Group_Created','Group_Updated','Group_Deleted','OrganizationUser_Updated','OrganizationUser_Removed','OrganizationUser_UpdatedGroups','OrganizationUser_UnlinkedSso','OrganizationUser_ResetPassword_Enroll','OrganizationUser_ResetPassword_Withdraw','OrganizationUser_AdminResetPassword','OrganizationUser_ResetSsoLink','OrganizationUser_Revoked','OrganizationUser_Restored','Organization_Updated','Organization_EnabledSso','Organization_DisabledSso','Organization_EnabledKeyConnector','Organization_DisabledKeyConnector','Policy_Updated','ProviderUser_Updated','ProviderUser_Removed','ProviderOrganization_Created','ProviderOrganization_Added','ProviderOrganization_Removed','OrganizationDomain_Added','OrganizationDomain_Removed','OrganizationDomain_Verified','OrganizationDomain_NotVerified'].contains(ctx.bitwarden.event.type.name))
      value: configuration
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['User_FailedLogIn','User_FailedLogIn2fa','User_LoggedIn','User_ChangedPassword','User_Updated2fa','User_Disabled2fa','User_Recovered2fa','User_ClientExportedVault','User_UpdatedTempPassword','User_MigratedKeyToKeyConnector'].contains(ctx.bitwarden.event.type.name))
      value: user
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['User_FailedLogIn','User_FailedLogIn2fa','User_ClientExportedVault','Cipher_Shared','Cipher_ClientViewed','Cipher_ClientToggledPasswordVisible','Cipher_ClientToggledHiddenFieldVisible','Cipher_ClientToggledCardCodeVisible','Cipher_ClientCopiedPassword','Cipher_ClientCopiedHiddenField','Cipher_ClientCopiedCardCode','Cipher_ClientAutofilled','Cipher_ClientToggledCardNumberVisible','Organization_PurgedVault','Organization_ClientExportedVault','OrganizationDomain_Verified','OrganizationDomain_NotVerified'].contains(ctx.bitwarden.event.type.name))
      value: info
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['User_LoggedIn','OrganizationUser_FirstSsoLogin'].contains(ctx.bitwarden.event.type.name))
      value: start
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['Group_Created','Group_Updated','Group_Deleted'].contains(ctx.bitwarden.event.type.name))
      value: group
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['ProviderOrganization_Created','Group_Created','Collection_Created'].contains(ctx.bitwarden.event.type.name))
      value: creation
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['Group_Deleted','Collection_Deleted'].contains(ctx.bitwarden.event.type.name))
      value: deletion
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['User_ChangedPassword','User_Updated2fa','User_Disabled2fa','User_UpdatedTempPassword','Cipher_Updated','Cipher_UpdatedCollections','Collection_Updated','Group_Updated','OrganizationUser_Updated','OrganizationUser_Removed','OrganizationUser_UpdatedGroups','OrganizationUser_UnlinkedSso','OrganizationUser_ResetPassword_Enroll','OrganizationUser_ResetPassword_Withdraw','OrganizationUser_AdminResetPassword','OrganizationUser_ResetSsoLink','OrganizationUser_Revoked','OrganizationUser_Restored','Organization_Updated','Organization_EnabledSso','Organization_DisabledSso','Organization_EnabledKeyConnector','Organization_DisabledKeyConnector','Policy_Updated','ProviderUser_Updated','ProviderUser_Removed','ProviderOrganization_Added','ProviderOrganization_Removed','OrganizationDomain_Added','OrganizationDomain_Removed','Cipher_AttachmentCreated','Cipher_Created','Cipher_Deleted','Cipher_SoftDeleted','Cipher_AttachmentDeleted','Cipher_Restored'].contains(ctx.bitwarden.event.type.name))
      value: change
  - append:
      field: event.type
      if: ctx.bitwarden?.event?.type?.name != null && (['Organization_VaultAccessed','ProviderOrganization_VaultAccessed'].contains(ctx.bitwarden.event.type.name))
      value: access
  - rename:
      field: json.itemId
      target_field: bitwarden.event.item.id
      ignore_missing: true
  - rename:
      field: json.collectionId
      target_field: bitwarden.event.collection.id
      ignore_missing: true
  - rename:
      field: json.groupId
      target_field: bitwarden.event.group.id
      ignore_missing: true
  - set:
      field: group.id
      copy_from: bitwarden.event.group.id
      ignore_empty_value: true
  - rename:
      field: json.policyId
      target_field: bitwarden.event.policy.id
      ignore_missing: true
  - rename:
      field: json.memberId
      target_field: bitwarden.event.member.id
      ignore_missing: true
  - set:
      field: user.id
      copy_from: bitwarden.event.member.id
      ignore_empty_value: true
  - rename:
      field: json.actingUserId
      target_field: bitwarden.event.acting_user.id
      ignore_missing: true
  - set:
      field: source.user.id
      copy_from: bitwarden.event.acting_user.id
      ignore_empty_value: true
  - rename:
      field: json.installationId
      target_field: bitwarden.event.installation.id
      ignore_missing: true
  - date:
      field: json.date
      tag: 'date_set_timestamp'
      formats:
        - ISO8601
      if: ctx.json?.date != null && ctx.json.date != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: bitwarden.event.date
      copy_from: '@timestamp'
      ignore_empty_value: true
  - convert:
      field: json.device
      tag: 'convert_device_to_string'
      target_field: bitwarden.event.device.value
      type: string
      ignore_missing: true
      if: ctx.json?.device != null && ctx.json.device != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      ignore_failure: false
      if: ctx.bitwarden?.event?.device?.value != null
      description: Set device type.
      # Device type
      # https://github.com/bitwarden/server/blob/master/src/Core/Enums/DeviceType.cs
      params:
        "0": Android
        "1": iOS
        "2": ChromeExtension
        "3": FirefoxExtension
        "4": OperaExtension
        "5": EdgeExtension
        "6": WindowsDesktop
        "7": MacOsDesktop
        "8": LinuxDesktop
        "9": ChromeBrowser
        "10": FirefoxBrowser
        "11": OperaBrowser
        "12": EdgeBrowser
        "13": IEBrowser
        "14": UnknownBrowser
        "15": AndroidAmazon
        "16": UWP
        "17": SafariBrowser
        "18": VivaldiBrowser
        "19": VivaldiExtension
        "20": SafariExtension
        "21": SDK
        "22": Server
      source: |-
        ctx.bitwarden.event.device.put("name",params[ctx.bitwarden.event.device.value])
  - convert:
      field: json.ipAddress
      tag: 'convert_ipAddress_to_string'
      target_field: bitwarden.event.ip_address
      type: ip
      ignore_missing: true
      if: ctx.json?.ipAddress != null && ctx.json.ipAddress != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      value: '{{{bitwarden.event.ip_address}}}'
      allow_duplicates: false
      if: ctx.bitwarden?.event?.ip_address != null
  - set:
      field: source.ip
      copy_from: bitwarden.event.ip_address
      ignore_empty_value: true
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - append:
      field: related.user
      value: '{{{user.id}}}'
      allow_duplicates: false
      if: ctx.user?.id != null
  - append:
      field: related.user
      value: '{{{source.user.id}}}'
      allow_duplicates: false
      if: ctx.source?.user?.id != null
  - remove:
      field:
        - json
      ignore_missing: true
  - remove:
      field:
        - bitwarden.event.group.id
        - bitwarden.event.member.id
        - bitwarden.event.acting_user.id
        - bitwarden.event.date
        - bitwarden.event.ip_address
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field:
        - event.original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - set:
      field: event.kind
      value: pipeline_error
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: event.kind
      value: pipeline_error
