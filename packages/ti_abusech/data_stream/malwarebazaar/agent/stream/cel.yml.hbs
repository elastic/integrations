config_version: 2
interval: {{interval}}
{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/cel/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
{{#if proxy_url}}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
resource.url: {{url}}
redact:
  fields: ~
program: |
  request("POST", state.url, "query=get_recent&selector=time").with({
    "Header":{
      "Content-Type": ["application/x-www-form-urlencoded"],
    }
  }).do_request().as(resp, resp.StatusCode == 200 ?
    bytes(resp.Body).decode_json().as(body, body.?query_status.orValue("") == "ok" ?
      {
        "events": body.data.map(ind, {
          "message": ind.encode_json()
        }),
        "url": state.url
      }
    : body.?query_status.orValue("") == "no_results" ?
      {
        "events": [],
        "url": state.url
      }
    :
      {
        "events": {
          "error": {
            ?"id": body.?query_status,
            "message": "POST:"+(
              size(resp.Body) != 0 ?
                string(resp.Body)
              :
                string(resp.Status) + ' (' + string(resp.StatusCode) + ')'
            ),
          },
        },
        "url": state.url
      }
    )
  :
    {
      "events": {
        "error": {
          "code": string(resp.StatusCode),
          "id": string(resp.Status),
          "message": "POST:"+(
            size(resp.Body) != 0 ?
              string(resp.Body)
            :
              string(resp.Status) + ' (' + string(resp.StatusCode) + ')'
          ),
        },
      },
      "url": state.url
    }
  )

{{#if ioc_expiration_duration}}
fields_under_root: true
fields:
  _conf:
    ioc_expiration_duration: {{ioc_expiration_duration}}
{{/if}}

tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
