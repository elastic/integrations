inputs:
    - data_stream:
        namespace: ep
      meta:
        package:
            name: ti_abusech
      name: test-default-ti_abusech
      streams:
        - config_version: 2
          data_stream:
            dataset: ti_abusech.malware
            type: logs
          fields:
            _conf:
                ioc_expiration_duration: 90d
          fields_under_root: true
          interval: 10m
          program: "state.with(\n  request(\"GET\", state.url).with({\n    \"Header\":{\n      \"Content-Type\": [\"application/json\"],\n      ?\"Auth-Key\": has(state.auth_key) ? \n        optional.of([state.auth_key]) \n      :\n        optional.none(),\n    }\n  }).as(req, req.do_request().as(resp, resp.StatusCode == 200 ?\n    resp.Body.decode_json().as(body, {\n      \"events\": (has(body.payloads) ?\n        body.payloads.map(payload, {\n          \"message\": payload.encode_json()\n        })\n      :\n        []\n      ),\n      \"url\": state.url\n    })\n  :\n    {\n      \"events\": {\n        \"error\": {\n          \"code\": string(resp.StatusCode),\n          \"id\": string(resp.Status),\n          \"message\": \"GET \"+ state.url.trim_right(\"/\") + \":\" + (\n            size(resp.Body) != 0 ?\n              string(resp.Body)\n            :\n              string(resp.Status) + ' (' + string(resp.StatusCode) + ')'\n          ),\n        },\n      },\n      \"want_more\": false,\n    }\n  ))\n)\n"
          publisher_pipeline.disable_host: true
          redact:
            fields:
                - auth_key
          resource.timeout: 30s
          resource.tracer:
            enabled: false
            filename: ../../logs/cel/http-request-trace-*.ndjson
            maxbackups: 5
          resource.url: https://urlhaus-api.abuse.ch/v1/payloads/recent/
          state:
            auth_key: ${SECRET_0}
          tags:
            - forwarded
            - abusech-malware
      type: cel
      use_output: default
output_permissions:
    default:
        _elastic_agent_checks:
            cluster:
                - monitor
        _elastic_agent_monitoring:
            indices: []
        uuid-for-permissions-on-related-indices:
            indices:
                - names:
                    - logs-ti_abusech.malware-ep
                  privileges:
                    - auto_configure
                    - create_doc
secret_references:
    - {}
