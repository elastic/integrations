config_version: "2"
interval: {{interval}}
{{#if enable_request_tracer}}
request.tracer.filename: "../../logs/httpjson/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
request.method: "POST"
request.url: https://{{hostname}}.my.rubrik.com/api/graphql
{{#if http_client_timeout}}
request.timeout: {{http_client_timeout}}
{{/if}}
request.transforms:
  - set:
      target: "header.Content-Type"
      value: "application/json"
auth.oauth2:
  client.id: {{client_id}}
  client.secret: {{client_secret}}
  token_url: {{token_url}}

request.body:
  query: |
    query AllClusterListQuery {
      allClusterConnection {
        nodes {
          id
          name
          clusterDiskConnection {
            nodes {
              nodeId
              diskId
              isEncrypted
              diskType
              capacityBytes
              unallocatedBytes
              usableBytes
              status
              path
            }
          }
        }
        pageInfo {
          startCursor
          endCursor
          hasNextPage
          hasPreviousPage
        }
      }
    }

response.split:
  target: body.data.allClusterConnection.nodes
  type: array
  keep_parent: false
  ignore_empty_value: true
  transforms:
    - set:
        target: body.pageInfo
        value: '[[.last_response.body.data.allClusterConnection.pageInfo]]'
        value_type: json
  split:
    target: body.clusterDiskConnection.nodes
    type: array
    keep_parent: true
    ignore_empty_value: true
 
{{#if tags.length}}
tags:
{{else if preserve_original_event}}
tags:
{{/if}}
{{#each tags as |tag i|}}
  - {{tag}}
{{/each}}
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}

{{#if processors}}
processors:
{{processors}}
{{/if}}
