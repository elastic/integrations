config_version: 2
interval: {{interval}}

state:
  client_id: {{client_id}}
  client_secret: {{client_secret}}
  cluster_uuid: {{cluster_uuid}}
  token_url: https://{{hostname}}.my.rubrik.com/api/cdm_client_token

resource.url: https://{{cluster_ip}}/api/v2/sla_domain

{{#if ssl}}
resource.ssl: 
  {{ssl}}
{{/if}}
{{#if resource_timeout}}
resource.timeout: {{resource_timeout}}
{{/if}}

{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/cel/http-request-trace-*.ndjson"
{{/if}}

tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}

program: |-
  state.with(
    request("POST", state.token_url, {
        "client_id": state.client_id,
        "client_secret": state.client_secret,
        "cluster_uuid": state.cluster_uuid
      }.encode_json()
    ).with(
      {
        "Header": {
          "Content-Type": ["application/json"],
        },
      }
    ).do_request().as(token_resp, (token_resp.StatusCode == 200) ?
      bytes(token_resp.Body).decode_json().as(token_body,
        request("GET", state.url).with(
          {
            "Header": {
              "Content-Type": ["application/json"],
              "Authorization": ["Bearer " + token_body.session.token],
            }
          }
        ).do_request().as(resp, (resp.StatusCode == 200) ?
          bytes(resp.Body).decode_json().as(body,
            {
              "events": body.data.map(e,
                {
                  "message": e.encode_json(),
                }
              ),
              "want_more": body.hasMore
            }
          )
        :
          {
            "events": [
              {
                "error": {
                  "code": string(resp.StatusCode),
                  "id": string(resp.Status),
                  "message": "GET request failed: " +
                  (
                    (size(resp.Body) != 0) ?
                      string(resp.Body)
                    :
                      string(resp.Status) + " (" + string(resp.StatusCode) + ")"
                  ),
                }
              }
            ],
            "want_more": false
          }
        )
      )
    :
      {
        "events": [
          {
            "error": {
              "code": string(token_resp.StatusCode),
              "id": string(token_resp.Status),
              "message": "Token request failed: " + string(token_resp.Status),
            }
          }
        ],
        "want_more": false
      }
    )
  )