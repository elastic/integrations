paths:
{{#each paths as |path i|}}
  - {{path}}
{{/each}}
exclude_files: [".gz$"]
tags:
{{#each tags as |tag i|}}
 - {{tag}}
{{/each}}
fields_under_root: true
fields:
    observer:
        vendor: "Cyberark"
        product: "Core"
        type: "Access"
{{#contains tags "forwarded"}}
publisher_pipeline.disable_host: true
{{/contains}}

processors:
- script:
    lang: javascript
    params:
      ecs: true
      rsa: {{rsa_fields}}
      tz_offset: {{tz_offset}}
      keep_raw: {{keep_raw_fields}}
      debug: {{debug}}
    source: |
      // Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
      // or more contributor license agreements. Licensed under the Elastic License;
      // you may not use this file except in compliance with the Elastic License.
      
      /* jshint -W014,-W016,-W097,-W116 */
      
      var processor = require("processor");
      var console = require("console");
      
      var FLAG_FIELD = "log.flags";
      var FIELDS_OBJECT = "nwparser";
      var FIELDS_PREFIX = FIELDS_OBJECT + ".";
      
      var defaults = {
          debug: false,
          ecs: true,
          rsa: false,
          keep_raw: false,
          tz_offset: "local",
          strip_priority: true
      };
      
      var saved_flags = null;
      var debug;
      var map_ecs;
      var map_rsa;
      var keep_raw;
      var device;
      var tz_offset;
      var strip_priority;
      
      // Register params from configuration.
      function register(params) {
          debug = params.debug !== undefined ? params.debug : defaults.debug;
          map_ecs = params.ecs !== undefined ? params.ecs : defaults.ecs;
          map_rsa = params.rsa !== undefined ? params.rsa : defaults.rsa;
          keep_raw = params.keep_raw !== undefined ? params.keep_raw : defaults.keep_raw;
          tz_offset = parse_tz_offset(params.tz_offset !== undefined? params.tz_offset : defaults.tz_offset);
          strip_priority = params.strip_priority !== undefined? params.strip_priority : defaults.strip_priority;
          device = new DeviceProcessor();
      }
      
      function parse_tz_offset(offset) {
          var date;
          var m;
          switch(offset) {
              // local uses the tz offset from the JS VM.
              case "local":
                  date = new Date();
                  // Reversing the sign as we the offset from UTC, not to UTC.
                  return parse_local_tz_offset(-date.getTimezoneOffset());
              // event uses the tz offset from event.timezone (add_locale processor).
              case "event":
                  return offset;
              // Otherwise a tz offset in the form "[+-][0-9]{4}" is required.
              default:
                  m = offset.match(/^([+\-])([0-9]{2}):?([0-9]{2})?$/);
                  if (m === null || m.length !== 4) {
                      throw("bad timezone offset: '" + offset + "'. Must have the form +HH:MM");
                  }
                  return m[1] + m[2] + ":" + (m[3]!==undefined? m[3] : "00");
          }
      }
      
      function parse_local_tz_offset(minutes) {
          var neg = minutes < 0;
          minutes = Math.abs(minutes);
          var min = minutes % 60;
          var hours = Math.floor(minutes / 60);
          var pad2digit = function(n) {
              if (n < 10) { return "0" + n;}
              return "" + n;
          };
          return (neg? "-" : "+") + pad2digit(hours) + ":" + pad2digit(min);
      }
      
      function process(evt) {
          // Function register is only called by the processor when `params` are set
          // in the processor config.
          if (device === undefined) {
              register(defaults);
          }
          return device.process(evt);
      }
      
      function processor_chain(subprocessors) {
          var builder = new processor.Chain();
          subprocessors.forEach(builder.Add);
          return builder.Build().Run;
      }
      
      function linear_select(subprocessors) {
          return function (evt) {
              var flags = evt.Get(FLAG_FIELD);
              var i;
              for (i = 0; i < subprocessors.length; i++) {
                  evt.Delete(FLAG_FIELD);
                  if (debug) console.warn("linear_select trying entry " + i);
                  subprocessors[i](evt);
                  // Dissect processor succeeded?
                  if (evt.Get(FLAG_FIELD) == null) break;
                  if (debug) console.warn("linear_select failed entry " + i);
              }
              if (flags !== null) {
                  evt.Put(FLAG_FIELD, flags);
              }
              if (debug) {
                  if (i < subprocessors.length) {
                      console.warn("linear_select matched entry " + i);
                  } else {
                      console.warn("linear_select didn't match");
                  }
              }
          };
      }
      
      function conditional(opt) {
          return function(evt) {
              if (opt.if(evt)) {
                  opt.then(evt);
              } else if (opt.else) {
                  opt.else(evt);
              }
          };
      }
      
      var strip_syslog_priority = (function() {
          var isEnabled = function() { return strip_priority === true; };
          var fetchPRI = field("_pri");
          var fetchPayload = field("payload");
          var removePayload = remove(["payload"]);
          var cleanup = remove(["_pri", "payload"]);
          var onMatch = function(evt) {
              var pri, priStr = fetchPRI(evt);
              if (priStr != null
                  && 0 < priStr.length && priStr.length < 4
                  && !isNaN((pri = Number(priStr)))
                  && 0 <= pri && pri < 192) {
                  var severity = pri & 7,
                      facility = pri >> 3;
                  setc("_severity", "" + severity)(evt);
                  setc("_facility", "" + facility)(evt);
                  // Replace message with priority stripped.
                  evt.Put("message", fetchPayload(evt));
                  removePayload(evt);
              } else {
                  // not a valid syslog PRI, cleanup.
                  cleanup(evt);
              }
          };
          return conditional({
              if: isEnabled,
              then: cleanup_flags(match(
                  "STRIP_PRI",
                  "message",
                  "<%{_pri}>%{payload}",
                  onMatch
              ))
          });
      })();
      
      function match(id, src, pattern, on_success) {
          var dissect = new processor.Dissect({
              field: src,
              tokenizer: pattern,
              target_prefix: FIELDS_OBJECT,
              ignore_failure: true,
              overwrite_keys: true,
              trim_values: "right"
          });
          return function (evt) {
              var msg = evt.Get(src);
              dissect.Run(evt);
              var failed = evt.Get(FLAG_FIELD) != null;
              if (debug) {
                  if (failed) {
                      console.debug("dissect fail: " + id + " field:" + src);
                  } else {
                      console.debug("dissect   OK: " + id + " field:" + src);
                  }
                  console.debug("        expr: <<" + pattern + ">>");
                  console.debug("       input: <<" + msg + ">>");
              }
              if (on_success != null && !failed) {
                  on_success(evt);
              }
          };
      }
      
      function match_copy(id, src, dst, on_success) {
          dst = FIELDS_PREFIX + dst;
          if (dst === FIELDS_PREFIX || dst === src) {
              return function (evt) {
                  if (debug) {
                      console.debug("noop      OK: " + id + " field:" + src);
                      console.debug("       input: <<" + evt.Get(src) + ">>");
                  }
                  if (on_success != null) on_success(evt);
              }
          }
          return function (evt) {
              var msg = evt.Get(src);
              evt.Put(dst, msg);
              if (debug) {
                  console.debug("copy      OK: " + id + " field:" + src);
                  console.debug("      target: '" + dst + "'");
                  console.debug("       input: <<" + msg + ">>");
              }
              if (on_success != null) on_success(evt);
          }
      }
      
      function cleanup_flags(processor) {
          return function(evt) {
              processor(evt);
              evt.Delete(FLAG_FIELD);
          };
      }
      
      function all_match(opts) {
          return function (evt) {
              var i;
              for (i = 0; i < opts.processors.length; i++) {
                  evt.Delete(FLAG_FIELD);
                  opts.processors[i](evt);
                  // Dissect processor succeeded?
                  if (evt.Get(FLAG_FIELD) != null) {
                      if (debug) console.warn("all_match failure at " + i);
                      if (opts.on_failure != null) opts.on_failure(evt);
                      return;
                  }
                  if (debug) console.warn("all_match success at " + i);
              }
              if (opts.on_success != null) opts.on_success(evt);
          };
      }
      
      function msgid_select(mapping) {
          return function (evt) {
              var msgid = evt.Get(FIELDS_PREFIX + "messageid");
              if (msgid == null) {
                  if (debug) console.warn("msgid_select: no messageid captured!");
                  return;
              }
              var next = mapping[msgid];
              if (next === undefined) {
                  if (debug) console.warn("msgid_select: no mapping for messageid:" + msgid);
                  return;
              }
              if (debug) console.info("msgid_select: matched key=" + msgid);
              return next(evt);
          };
      }
      
      function msg(msg_id, match) {
          return function (evt) {
              match(evt);
              if (evt.Get(FLAG_FIELD) == null) {
                  evt.Put(FIELDS_PREFIX + "msg_id1", msg_id);
              }
          };
      }
      
      var start;
      
      function save_flags(evt) {
          saved_flags = evt.Get(FLAG_FIELD);
          evt.Put("event.original", evt.Get("message"));
      }
      
      function restore_flags(evt) {
          if (saved_flags !== null) {
              evt.Put(FLAG_FIELD, saved_flags);
          }
          evt.Delete("message");
      }
      
      function constant(value) {
          return function (evt) {
              return value;
          };
      }
      
      function field(name) {
          var fullname = FIELDS_PREFIX + name;
          return function (evt) {
              return evt.Get(fullname);
          };
      }
      
      function STRCAT(args) {
          var s = "";
          var i;
          for (i = 0; i < args.length; i++) {
              s += args[i];
          }
          return s;
      }
      
      // TODO: Implement
      function DIRCHK(args) {
          unimplemented("DIRCHK");
      }
      
      function strictToInt(str) {
          return str * 1;
      }
      
      function CALC(args) {
          if (args.length !== 3) {
              console.warn("skipped call to CALC with " + args.length + " arguments.");
              return;
          }
          var a = strictToInt(args[0]);
          var b = strictToInt(args[2]);
          if (isNaN(a) || isNaN(b)) {
              console.warn("failed evaluating CALC arguments a='" + args[0] + "' b='" + args[2] + "'.");
              return;
          }
          var result;
          switch (args[1]) {
              case "+":
                  result = a + b;
                  break;
              case "-":
                  result = a - b;
                  break;
              case "*":
                  result = a * b;
                  break;
              default:
                  // Only * and + seen in the parsers.
                  console.warn("unknown CALC operation '" + args[1] + "'.");
                  return;
          }
          // Always return a string
          return result !== undefined ? "" + result : result;
      }
      
      var quoteChars = "\"'`";
      function RMQ(args) {
          if(args.length !== 1) {
              console.warn("RMQ: only one argument expected");
              return;
          }
          var value = args[0].trim();
          var n = value.length;
          var char;
          return n > 1
              && (char=value.charAt(0)) === value.charAt(n-1)
              && quoteChars.indexOf(char) !== -1?
                  value.substr(1, n-2)
                  : value;
      }
      
      function call(opts) {
          var args = new Array(opts.args.length);
          return function (evt) {
              for (var i = 0; i < opts.args.length; i++)
                  if ((args[i] = opts.args[i](evt)) == null) return;
              var result = opts.fn(args);
              if (result != null) {
                  evt.Put(opts.dest, result);
              }
          };
      }
      
      function nop(evt) {
      }
      
      function appendErrorMsg(evt, msg) {
          var value = evt.Get("error.message");
          if (value == null) {
              value = [msg];
          } else if (msg instanceof Array) {
              value.push(msg);
          } else {
              value = [value, msg];
          }
          evt.Put("error.message", value);
      }
      
      function unimplemented(name) {
          appendErrorMsg("unimplemented feature: " + name);
      }
      
      function lookup(opts) {
          return function (evt) {
              var key = opts.key(evt);
              if (key == null) return;
              var value = opts.map.keyvaluepairs[key];
              if (value === undefined) {
                  value = opts.map.default;
              }
              if (value !== undefined) {
                  evt.Put(opts.dest, value(evt));
              }
          };
      }
      
      function set(fields) {
          return new processor.AddFields({
              target: FIELDS_OBJECT,
              fields: fields,
          });
      }
      
      function setf(dst, src) {
          return function (evt) {
              var val = evt.Get(FIELDS_PREFIX + src);
              if (val != null) evt.Put(FIELDS_PREFIX + dst, val);
          };
      }
      
      function setc(dst, value) {
          return function (evt) {
              evt.Put(FIELDS_PREFIX + dst, value);
          };
      }
      
      function set_field(opts) {
          return function (evt) {
              var val = opts.value(evt);
              if (val != null) evt.Put(opts.dest, val);
          };
      }
      
      function dump(label) {
          return function (evt) {
              console.log("Dump of event at " + label + ": " + JSON.stringify(evt, null, "\t"));
          };
      }
      
      function date_time_join_args(evt, arglist) {
          var str = "";
          for (var i = 0; i < arglist.length; i++) {
              var fname = FIELDS_PREFIX + arglist[i];
              var val = evt.Get(fname);
              if (val != null) {
                  if (str !== "") str += " ";
                  str += val;
              } else {
                  if (debug) console.warn("in date_time: input arg " + fname + " is not set");
              }
          }
          return str;
      }
      
      function to2Digit(num) {
          return num? (num < 10? "0" + num : num) : "00";
      }
      
      // Make two-digit dates 00-69 interpreted as 2000-2069
      // and dates 70-99 translated to 1970-1999.
      var twoDigitYearEpoch = 70;
      var twoDigitYearCentury = 2000;
      
      // This is to accept dates up to 2 days in the future, only used when
      // no year is specified in a date. 2 days should be enough to account for
      // time differences between systems and different tz offsets.
      var maxFutureDelta = 2*24*60*60*1000;
      
      // DateContainer stores date fields and then converts those fields into
      // a Date. Necessary because building a Date using its set() methods gives
      // different results depending on the order of components.
      function DateContainer(tzOffset) {
          this.offset = tzOffset === undefined? "Z" : tzOffset;
      }
      
      DateContainer.prototype = {
          setYear: function(v) {this.year = v;},
          setMonth: function(v) {this.month = v;},
          setDay: function(v) {this.day = v;},
          setHours: function(v) {this.hours = v;},
          setMinutes: function(v) {this.minutes = v;},
          setSeconds: function(v) {this.seconds = v;},
      
          setUNIX: function(v) {this.unix = v;},
      
          set2DigitYear: function(v) {
              this.year = v < twoDigitYearEpoch? twoDigitYearCentury + v : twoDigitYearCentury + v - 100;
          },
      
          toDate: function() {
              if (this.unix !== undefined) {
                  return new Date(this.unix * 1000);
              }
              if (this.day === undefined || this.month === undefined) {
                  // Can't make a date from this.
                  return undefined;
              }
              if (this.year === undefined) {
                  // A date without a year. Set current year, or previous year
                  // if date would be in the future.
                  var now = new Date();
                  this.year = now.getFullYear();
                  var date = this.toDate();
                  if (date.getTime() - now.getTime() > maxFutureDelta) {
                      date.setFullYear(now.getFullYear() - 1);
                  }
                  return date;
              }
              var MM = to2Digit(this.month);
              var DD = to2Digit(this.day);
              var hh = to2Digit(this.hours);
              var mm = to2Digit(this.minutes);
              var ss = to2Digit(this.seconds);
              return new Date(this.year + "-" + MM + "-" + DD + "T" + hh + ":" + mm + ":" + ss + this.offset);
          }
      }
      
      function date_time_try_pattern(fmt, str, tzOffset) {
          var date = new DateContainer(tzOffset);
          var pos = date_time_try_pattern_at_pos(fmt, str, 0, date);
          return pos !== undefined? date.toDate() : undefined;
      }
      
      function date_time_try_pattern_at_pos(fmt, str, pos, date) {
          var len = str.length;
          for (var proc = 0; pos !== undefined && pos < len && proc < fmt.length; proc++) {
              pos = fmt[proc](str, pos, date);
          }
          return pos;
      }
      
      function date_time(opts) {
          return function (evt) {
              var tzOffset = opts.tz || tz_offset;
              if (tzOffset === "event") {
                  tzOffset = evt.Get("event.timezone");
              }
              var str = date_time_join_args(evt, opts.args);
              for (var i = 0; i < opts.fmts.length; i++) {
                  var date = date_time_try_pattern(opts.fmts[i], str, tzOffset);
                  if (date !== undefined) {
                      evt.Put(FIELDS_PREFIX + opts.dest, date);
                      return;
                  }
              }
              if (debug) console.warn("in date_time: id=" + opts.id + " FAILED: " + str);
          };
      }
      
      var uA = 60 * 60 * 24;
      var uD = 60 * 60 * 24;
      var uF = 60 * 60;
      var uG = 60 * 60 * 24 * 30;
      var uH = 60 * 60;
      var uI = 60 * 60;
      var uJ = 60 * 60 * 24;
      var uM = 60 * 60 * 24 * 30;
      var uN = 60 * 60;
      var uO = 1;
      var uS = 1;
      var uT = 60;
      var uU = 60;
      var uc = dc;
      
      function duration(opts) {
          return function(evt) {
              var str = date_time_join_args(evt, opts.args);
              for (var i = 0; i < opts.fmts.length; i++) {
                  var seconds = duration_try_pattern(opts.fmts[i], str);
                  if (seconds !== undefined) {
                      evt.Put(FIELDS_PREFIX + opts.dest, seconds);
                      return;
                  }
              }
              if (debug) console.warn("in duration: id=" + opts.id + " (s) FAILED: " + str);
          };
      }
      
      function duration_try_pattern(fmt, str) {
          var secs = 0;
          var pos = 0;
          for (var i=0; i<fmt.length; i++) {
              if (fmt[i] instanceof Function) {
                  if ((pos = fmt[i](str, pos)) === undefined) return;
                  continue;
              }
              var start = skipws(str, pos);
              var end = skipdigits(str, start);
              if (end === start) return;
              var s = str.substr(start, end - start);
              var value = parseInt(s, 10);
              if (isNaN(value)) return;
              secs += value * fmt[i];
              pos = end;
          }
          return secs;
      }
      
      function remove(fields) {
          return function (evt) {
              for (var i = 0; i < fields.length; i++) {
                  evt.Delete(FIELDS_PREFIX + fields[i]);
              }
          };
      }
      
      function dc(ct) {
          var match = function (ct, str, pos) {
              var n = str.length;
              if (n - pos < ct.length) return;
              var part = str.substr(pos, ct.length);
              if (part !== ct) {
                  return;
              }
              return pos + ct.length;
          };
          return function (str, pos, date) {
              var outPos = match(ct, str, pos);
              if (outPos === undefined) {
                  // Try again, trimming leading space at str[pos:] and ct
                  outPos = match(ct.substr(skipws(ct, 0)), str, skipws(str, pos));
              }
              return outPos;
          };
      }
      
      
      var shortMonths = {
          // mon => [ month_id , how many chars to skip if month in long form ]
          "Jan": [0, 4],
          "Feb": [1, 5],
          "Mar": [2, 2],
          "Apr": [3, 2],
          "May": [4, 0],
          "Jun": [5, 1],
          "Jul": [6, 1],
          "Aug": [7, 3],
          "Sep": [8, 6],
          "Oct": [9, 4],
          "Nov": [10, 5],
          "Dec": [11, 4],
          "jan": [0, 4],
          "feb": [1, 5],
          "mar": [2, 2],
          "apr": [3, 2],
          "may": [4, 0],
          "jun": [5, 1],
          "jul": [6, 1],
          "aug": [7, 3],
          "sep": [8, 6],
          "oct": [9, 4],
          "nov": [10, 5],
          "dec": [11, 4],
      };
      
      // var dC = undefined;
      var dR = dateMonthName(true);
      var dB = dateMonthName(false);
      var dM = dateFixedWidthNumber("M", 2, 1, 12, DateContainer.prototype.setMonth);
      var dG = dateVariableWidthNumber("G", 1, 12,  DateContainer.prototype.setMonth);
      var dD = dateFixedWidthNumber("D", 2, 1, 31, DateContainer.prototype.setDay);
      var dF = dateVariableWidthNumber("F", 1, 31, DateContainer.prototype.setDay);
      var dH = dateFixedWidthNumber("H", 2, 0, 24, DateContainer.prototype.setHours);
      var dI = dateVariableWidthNumber("I", 0, 24, DateContainer.prototype.setHours); // Accept hours >12
      var dN = dateVariableWidthNumber("N", 0, 24, DateContainer.prototype.setHours);
      var dT = dateFixedWidthNumber("T", 2, 0, 59, DateContainer.prototype.setMinutes);
      var dU = dateVariableWidthNumber("U", 0, 59, DateContainer.prototype.setMinutes);
      var dP = parseAMPM; // AM|PM
      var dQ = parseAMPM; // A.M.|P.M
      var dS = dateFixedWidthNumber("S", 2, 0, 60, DateContainer.prototype.setSeconds);
      var dO = dateVariableWidthNumber("O", 0, 60, DateContainer.prototype.setSeconds);
      var dY = dateFixedWidthNumber("Y", 2, 0, 99, DateContainer.prototype.set2DigitYear);
      var dW = dateFixedWidthNumber("W", 4, 1000, 9999, DateContainer.prototype.setYear);
      var dZ = parseHMS;
      var dX = dateVariableWidthNumber("X", 0, 0x10000000000, DateContainer.prototype.setUNIX);
      
      // parseAMPM parses "A.M", "AM", "P.M", "PM" from logs.
      // Only works if this modifier appears after the hour has been read from logs
      // which is always the case in the 300 devices.
      function parseAMPM(str, pos, date) {
          var n = str.length;
          var start = skipws(str, pos);
          if (start + 2 > n) return;
          var head = str.substr(start, 2).toUpperCase();
          var isPM = false;
          var skip = false;
          switch (head) {
              case "A.":
                  skip = true;
              /* falls through */
              case "AM":
                  break;
              case "P.":
                  skip = true;
              /* falls through */
              case "PM":
                  isPM = true;
                  break;
              default:
                  if (debug) console.warn("can't parse pos " + start + " as AM/PM: " + str + "(head:" + head + ")");
                  return;
          }
          pos = start + 2;
          if (skip) {
              if (pos+2 > n || str.substr(pos, 2).toUpperCase() !== "M.") {
                  if (debug) console.warn("can't parse pos " + start + " as AM/PM: " + str + "(tail)");
                  return;
              }
              pos += 2;
          }
          var hh = date.hours;
          if (isPM) {
              // Accept existing hour in 24h format.
              if (hh < 12) hh += 12;
          } else {
              if (hh === 12) hh = 0;
          }
          date.setHours(hh);
          return pos;
      }
      
      function parseHMS(str, pos, date) {
          return date_time_try_pattern_at_pos([dN, dc(":"), dU, dc(":"), dO], str, pos, date);
      }
      
      function skipws(str, pos) {
          for ( var n = str.length;
                pos < n && str.charAt(pos) === " ";
                pos++)
              ;
          return pos;
      }
      
      function skipdigits(str, pos) {
          var c;
          for (var n = str.length;
               pos < n && (c = str.charAt(pos)) >= "0" && c <= "9";
               pos++)
              ;
          return pos;
      }
      
      function dSkip(str, pos, date) {
          var chr;
          for (;pos < str.length && (chr=str[pos])<'0' || chr>'9'; pos++) {}
          return pos < str.length? pos : undefined;
      }
      
      function dateVariableWidthNumber(fmtChar, min, max, setter) {
          return function (str, pos, date) {
              var start = skipws(str, pos);
              pos = skipdigits(str, start);
              var s = str.substr(start, pos - start);
              var value = parseInt(s, 10);
              if (value >= min && value <= max) {
                  setter.call(date, value);
                  return pos;
              }
              return;
          };
      }
      
      function dateFixedWidthNumber(fmtChar, width, min, max, setter) {
          return function (str, pos, date) {
              pos = skipws(str, pos);
              var n = str.length;
              if (pos + width > n) return;
              var s = str.substr(pos, width);
              var value = parseInt(s, 10);
              if (value >= min && value <= max) {
                  setter.call(date, value);
                  return pos + width;
              }
              return;
          };
      }
      
      // Short month name (Jan..Dec).
      function dateMonthName(long) {
          return function (str, pos, date) {
              pos = skipws(str, pos);
              var n = str.length;
              if (pos + 3 > n) return;
              var mon = str.substr(pos, 3);
              var idx = shortMonths[mon];
              if (idx === undefined) {
                  idx = shortMonths[mon.toLowerCase()];
              }
              if (idx === undefined) {
                  //console.warn("parsing date_time: '" + mon + "' is not a valid short month (%B)");
                  return;
              }
              date.setMonth(idx[0]+1);
              return pos + 3 + (long ? idx[1] : 0);
          };
      }
      
      function url_wrapper(dst, src, fn) {
          return function(evt) {
              var value = evt.Get(FIELDS_PREFIX + src), result;
              if (value != null && (result = fn(value))!== undefined) {
                  evt.Put(FIELDS_PREFIX + dst, result);
              } else {
                  console.error(fn.name + " failed for '" + value + "'");
              }
          };
      }
      
      // The following regular expression for parsing URLs from:
      // https://github.com/wizard04wsu/URI_Parsing
      //
      // The MIT License (MIT)
      //
      // Copyright (c) 2014 Andrew Harrison
      //
      // Permission is hereby granted, free of charge, to any person obtaining a copy of
      // this software and associated documentation files (the "Software"), to deal in
      // the Software without restriction, including without limitation the rights to
      // use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
      // the Software, and to permit persons to whom the Software is furnished to do so,
      // subject to the following conditions:
      //
      // The above copyright notice and this permission notice shall be included in all
      // copies or substantial portions of the Software.
      //
      // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
      // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
      // FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
      // COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
      // IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
      // CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
      var uriRegExp = /^([a-z][a-z0-9+.\-]*):(?:\/\/((?:(?=((?:[a-z0-9\-._~!$&'()*+,;=:]|%[0-9A-F]{2})*))(\3)@)?(?=(\[[0-9A-F:.]{2,}\]|(?:[a-z0-9\-._~!$&'()*+,;=]|%[0-9A-F]{2})*))\5(?::(?=(\d*))\6)?)(\/(?=((?:[a-z0-9-._~!$&'()*+,;=:@\/]|%[0-9A-F]{2})*))\8)?|(\/?(?!\/)(?=((?:[a-z0-9-._~!$&'()*+,;=:@\/]|%[0-9A-F]{2})*))\10)?)(?:\?(?=((?:[a-z0-9-._~!$&'()*+,;=:@\/?]|%[0-9A-F]{2})*))\11)?(?:#(?=((?:[a-z0-9-._~!$&'()*+,;=:@\/?]|%[0-9A-F]{2})*))\12)?$/i;
      
      var uriScheme = 1;
      var uriDomain = 5;
      var uriPort = 6;
      var uriPath = 7;
      var uriPathAlt = 9;
      var uriQuery = 11;
      
      function domain(dst, src) {
          return url_wrapper(dst, src, extract_domain);
      }
      
      function split_url(value) {
          var m = value.match(uriRegExp);
          if (m && m[uriDomain]) return m;
          // Support input in the form "www.example.net/path", but not "/path".
          m = ("null://" + value).match(uriRegExp);
          if (m) return m;
      }
      
      function extract_domain(value) {
          var m = split_url(value);
          if (m && m[uriDomain]) return m[uriDomain];
      }
      
      var extFromPage = /\.[^.]+$/;
      function extract_ext(value) {
          var page = extract_page(value);
          if (page) {
              var m = page.match(extFromPage);
              if (m) return m[0];
          }
      }
      
      function ext(dst, src) {
          return url_wrapper(dst, src, extract_ext);
      }
      
      function fqdn(dst, src) {
          // TODO: fqdn and domain(eTLD+1) are currently the same.
          return domain(dst, src);
      }
      
      var pageFromPathRegExp = /\/([^\/]+)$/;
      var pageName = 1;
      
      function extract_page(value) {
          value = extract_path(value);
          if (!value) return undefined;
          var m = value.match(pageFromPathRegExp);
          if (m) return m[pageName];
      }
      
      function page(dst, src) {
          return url_wrapper(dst, src, extract_page);
      }
      
      function extract_path(value) {
          var m = split_url(value);
          return m? m[uriPath] || m[uriPathAlt] : undefined;
      }
      
      function path(dst, src) {
          return url_wrapper(dst, src, extract_path);
      }
      
      // Map common schemes to their default port.
      // port has to be a string (will be converted at a later stage).
      var schemePort = {
          "ftp": "21",
          "ssh": "22",
          "http": "80",
          "https": "443",
      };
      
      function extract_port(value) {
          var m = split_url(value);
          if (!m) return undefined;
          if (m[uriPort]) return m[uriPort];
          if (m[uriScheme]) {
              return schemePort[m[uriScheme]];
          }
      }
      
      function port(dst, src) {
          return url_wrapper(dst, src, extract_port);
      }
      
      function extract_query(value) {
          var m = split_url(value);
          if (m && m[uriQuery]) return m[uriQuery];
      }
      
      function query(dst, src) {
          return url_wrapper(dst, src, extract_query);
      }
      
      function extract_root(value) {
          var m = split_url(value);
          if (m && m[uriDomain] && m[uriDomain]) {
              var scheme = m[uriScheme] && m[uriScheme] !== "null"?
                  m[uriScheme] + "://" : "";
              var port = m[uriPort]? ":" + m[uriPort] : "";
              return scheme + m[uriDomain] + port;
          }
      }
      
      function root(dst, src) {
          return url_wrapper(dst, src, extract_root);
      }
      
      function tagval(id, src, cfg, keys, on_success) {
          var fail = function(evt) {
              evt.Put(FLAG_FIELD, "tagval_parsing_error");
          }
          if (cfg.kv_separator.length !== 1) {
              throw("Invalid TAGVALMAP ValueDelimiter (must have 1 character)");
          }
          var quotes_len = cfg.open_quote.length > 0 && cfg.close_quote.length > 0?
              cfg.open_quote.length + cfg.close_quote.length : 0;
          var kv_regex = new RegExp('^*([^' + cfg.kv_separator + ']*)*' + cfg.kv_separator + '*(.*)*$');
          return function(evt) {
              var msg = evt.Get(src);
              if (msg === undefined) {
                  console.warn("tagval: input field is missing");
                  return fail(evt);
              }
              var pairs = msg.split(cfg.pair_separator);
              var i;
              var success = false;
              var prev = "";
              for (i=0; i<pairs.length; i++) {
                  var m = pairs[i].match(kv_regex);
                  var field;
                  if (m === null || m.length !== 3 || m[1] === undefined || m[2] === undefined) {
                      prev += pairs[i] + cfg.pair_separator;
                      continue;
                  }
                  var key = prev + m[1];
                  prev = "";
                  if ( (field=keys[key]) === undefined && (field=keys[key.trim()])===undefined ) {
                      continue;
                  }
                  var value = m[2].trim();
                  if (quotes_len > 0 &&
                      value.length >= cfg.open_quote.length + cfg.close_quote.length &&
                      value.substr(0, cfg.open_quote.length) === cfg.open_quote &&
                      value.substr(value.length - cfg.close_quote.length) === cfg.close_quote) {
                      value = value.substr(cfg.open_quote.length, value.length - quotes_len);
                  }
                  evt.Put(FIELDS_PREFIX + field, value);
                  success = true;
              }
              if (!success) {
                  return fail(evt);
              }
              if (on_success != null) {
                  on_success(evt);
              }
          }
      }
      
      var ecs_mappings = {
          "_facility": {convert: to_long, to:[{field: "log.syslog.facility.code", setter: fld_set}]},
          "_pri": {convert: to_long, to:[{field: "log.syslog.priority", setter: fld_set}]},
          "_severity": {convert: to_long, to:[{field: "log.syslog.severity.code", setter: fld_set}]},
          "action": {to:[{field: "event.action", setter: fld_prio, prio: 0}]},
          "administrator": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 4}]},
          "alias.ip": {convert: to_ip, to:[{field: "host.ip", setter: fld_prio, prio: 3},{field: "related.ip", setter: fld_append}]},
          "alias.ipv6": {convert: to_ip, to:[{field: "host.ip", setter: fld_prio, prio: 4},{field: "related.ip", setter: fld_append}]},
          "alias.mac": {convert: to_mac, to:[{field: "host.mac", setter: fld_prio, prio: 1}]},
          "application": {to:[{field: "network.application", setter: fld_set}]},
          "bytes": {convert: to_long, to:[{field: "network.bytes", setter: fld_set}]},
          "c_domain": {to:[{field: "source.domain", setter: fld_prio, prio: 1}]},
          "c_logon_id": {to:[{field: "user.id", setter: fld_prio, prio: 2}]},
          "c_user_name": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 8}]},
          "c_username": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 2}]},
          "cctld": {to:[{field: "url.top_level_domain", setter: fld_prio, prio: 1}]},
          "child_pid": {convert: to_long, to:[{field: "process.pid", setter: fld_prio, prio: 1}]},
          "child_pid_val": {to:[{field: "process.title", setter: fld_set}]},
          "child_process": {to:[{field: "process.name", setter: fld_prio, prio: 1}]},
          "city.dst": {to:[{field: "destination.geo.city_name", setter: fld_set}]},
          "city.src": {to:[{field: "source.geo.city_name", setter: fld_set}]},
          "daddr": {convert: to_ip, to:[{field: "destination.ip", setter: fld_append},{field: "related.ip", setter: fld_append}]},
          "daddr_v6": {convert: to_ip, to:[{field: "destination.ip", setter: fld_append},{field: "related.ip", setter: fld_append}]},
          "ddomain": {to:[{field: "destination.domain", setter: fld_prio, prio: 0}]},
          "devicehostip": {convert: to_ip, to:[{field: "host.ip", setter: fld_prio, prio: 2},{field: "related.ip", setter: fld_append}]},
          "devicehostmac": {convert: to_mac, to:[{field: "host.mac", setter: fld_prio, prio: 0}]},
          "dhost": {to:[{field: "destination.address", setter: fld_set}]},
          "dinterface": {to:[{field: "observer.egress.interface.name", setter: fld_set}]},
          "direction": {to:[{field: "network.direction", setter: fld_set}]},
          "directory": {to:[{field: "file.directory", setter: fld_set}]},
          "dmacaddr": {convert: to_mac, to:[{field: "destination.mac", setter: fld_set}]},
          "dns.responsetype": {to:[{field: "dns.answers.type", setter: fld_set}]},
          "dns.resptext": {to:[{field: "dns.answers.name", setter: fld_set}]},
          "dns_querytype": {to:[{field: "dns.question.type", setter: fld_set}]},
          "domain": {to:[{field: "server.domain", setter: fld_prio, prio: 0}]},
          "domain.dst": {to:[{field: "destination.domain", setter: fld_prio, prio: 1}]},
          "domain.src": {to:[{field: "source.domain", setter: fld_prio, prio: 2}]},
          "domain_id": {to:[{field: "user.domain", setter: fld_set}]},
          "domainname": {to:[{field: "server.domain", setter: fld_prio, prio: 1}]},
          "dport": {convert: to_long, to:[{field: "destination.port", setter: fld_prio, prio: 0}]},
          "dtransaddr": {convert: to_ip, to:[{field: "destination.nat.ip", setter: fld_prio, prio: 0},{field: "related.ip", setter: fld_append}]},
          "dtransport": {convert: to_long, to:[{field: "destination.nat.port", setter: fld_prio, prio: 0}]},
          "ec_outcome": {to:[{field: "event.outcome", setter: fld_ecs_outcome}]},
          "event_description": {to:[{field: "message", setter: fld_prio, prio: 0}]},
          "event_time": {convert: to_date, to:[{field: "@timestamp", setter: fld_set}]},
          "event_type": {to:[{field: "event.action", setter: fld_prio, prio: 1}]},
          "extension": {to:[{field: "file.extension", setter: fld_prio, prio: 1}]},
          "file.attributes": {to:[{field: "file.attributes", setter: fld_set}]},
          "filename": {to:[{field: "file.name", setter: fld_prio, prio: 0}]},
          "filename_size": {convert: to_long, to:[{field: "file.size", setter: fld_set}]},
          "filepath": {to:[{field: "file.path", setter: fld_set}]},
          "filetype": {to:[{field: "file.type", setter: fld_set}]},
          "group": {to:[{field: "group.name", setter: fld_set}]},
          "groupid": {to:[{field: "group.id", setter: fld_set}]},
          "host": {to:[{field: "host.name", setter: fld_prio, prio: 1}]},
          "hostip": {convert: to_ip, to:[{field: "host.ip", setter: fld_prio, prio: 0},{field: "related.ip", setter: fld_append}]},
          "hostip_v6": {convert: to_ip, to:[{field: "host.ip", setter: fld_prio, prio: 1},{field: "related.ip", setter: fld_append}]},
          "hostname": {to:[{field: "host.name", setter: fld_prio, prio: 0}]},
          "id": {to:[{field: "event.code", setter: fld_prio, prio: 0}]},
          "interface": {to:[{field: "network.interface.name", setter: fld_set}]},
          "ip.orig": {convert: to_ip, to:[{field: "network.forwarded_ip", setter: fld_prio, prio: 0},{field: "related.ip", setter: fld_append}]},
          "ip.trans.dst": {convert: to_ip, to:[{field: "destination.nat.ip", setter: fld_prio, prio: 1},{field: "related.ip", setter: fld_append}]},
          "ip.trans.src": {convert: to_ip, to:[{field: "source.nat.ip", setter: fld_prio, prio: 1},{field: "related.ip", setter: fld_append}]},
          "ipv6.orig": {convert: to_ip, to:[{field: "network.forwarded_ip", setter: fld_prio, prio: 2},{field: "related.ip", setter: fld_append}]},
          "latdec_dst": {convert: to_double, to:[{field: "destination.geo.location.lat", setter: fld_set}]},
          "latdec_src": {convert: to_double, to:[{field: "source.geo.location.lat", setter: fld_set}]},
          "location_city": {to:[{field: "geo.city_name", setter: fld_set}]},
          "location_country": {to:[{field: "geo.country_name", setter: fld_set}]},
          "location_desc": {to:[{field: "geo.name", setter: fld_set}]},
          "location_dst": {to:[{field: "destination.geo.country_name", setter: fld_set}]},
          "location_src": {to:[{field: "source.geo.country_name", setter: fld_set}]},
          "location_state": {to:[{field: "geo.region_name", setter: fld_set}]},
          "logon_id": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 5}]},
          "longdec_dst": {convert: to_double, to:[{field: "destination.geo.location.lon", setter: fld_set}]},
          "longdec_src": {convert: to_double, to:[{field: "source.geo.location.lon", setter: fld_set}]},
          "macaddr": {convert: to_mac, to:[{field: "host.mac", setter: fld_prio, prio: 2}]},
          "messageid": {to:[{field: "event.code", setter: fld_prio, prio: 1}]},
          "method": {to:[{field: "http.request.method", setter: fld_set}]},
          "msg": {to:[{field: "log.original", setter: fld_set}]},
          "orig_ip": {convert: to_ip, to:[{field: "network.forwarded_ip", setter: fld_prio, prio: 1},{field: "related.ip", setter: fld_append}]},
          "owner": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 6}]},
          "packets": {convert: to_long, to:[{field: "network.packets", setter: fld_set}]},
          "parent_pid": {convert: to_long, to:[{field: "process.ppid", setter: fld_prio, prio: 0}]},
          "parent_pid_val": {to:[{field: "process.parent.title", setter: fld_set}]},
          "parent_process": {to:[{field: "process.parent.name", setter: fld_prio, prio: 0}]},
          "patient_fullname": {to:[{field: "user.full_name", setter: fld_prio, prio: 1}]},
          "port.dst": {convert: to_long, to:[{field: "destination.port", setter: fld_prio, prio: 1}]},
          "port.src": {convert: to_long, to:[{field: "source.port", setter: fld_prio, prio: 1}]},
          "port.trans.dst": {convert: to_long, to:[{field: "destination.nat.port", setter: fld_prio, prio: 1}]},
          "port.trans.src": {convert: to_long, to:[{field: "source.nat.port", setter: fld_prio, prio: 1}]},
          "process": {to:[{field: "process.name", setter: fld_prio, prio: 0}]},
          "process_id": {convert: to_long, to:[{field: "process.pid", setter: fld_prio, prio: 0}]},
          "process_id_src": {convert: to_long, to:[{field: "process.ppid", setter: fld_prio, prio: 1}]},
          "process_src": {to:[{field: "process.parent.name", setter: fld_prio, prio: 1}]},
          "product": {to:[{field: "observer.product", setter: fld_set}]},
          "protocol": {to:[{field: "network.protocol", setter: fld_set}]},
          "query": {to:[{field: "url.query", setter: fld_prio, prio: 2}]},
          "rbytes": {convert: to_long, to:[{field: "destination.bytes", setter: fld_set}]},
          "referer": {to:[{field: "http.request.referrer", setter: fld_prio, prio: 1}]},
          "rulename": {to:[{field: "rule.name", setter: fld_set}]},
          "saddr": {convert: to_ip, to:[{field: "source.ip", setter: fld_append},{field: "related.ip", setter: fld_append}]},
          "saddr_v6": {convert: to_ip, to:[{field: "source.ip", setter: fld_append},{field: "related.ip", setter: fld_append}]},
          "sbytes": {convert: to_long, to:[{field: "source.bytes", setter: fld_set}]},
          "sdomain": {to:[{field: "source.domain", setter: fld_prio, prio: 0}]},
          "service": {to:[{field: "service.name", setter: fld_prio, prio: 1}]},
          "service.name": {to:[{field: "service.name", setter: fld_prio, prio: 0}]},
          "service_account": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 7}]},
          "severity": {to:[{field: "log.level", setter: fld_set}]},
          "shost": {to:[{field: "host.hostname", setter: fld_set},{field: "source.address", setter: fld_set}]},
          "sinterface": {to:[{field: "observer.ingress.interface.name", setter: fld_set}]},
          "sld": {to:[{field: "url.registered_domain", setter: fld_set}]},
          "smacaddr": {convert: to_mac, to:[{field: "source.mac", setter: fld_set}]},
          "sport": {convert: to_long, to:[{field: "source.port", setter: fld_prio, prio: 0}]},
          "stransaddr": {convert: to_ip, to:[{field: "source.nat.ip", setter: fld_prio, prio: 0},{field: "related.ip", setter: fld_append}]},
          "stransport": {convert: to_long, to:[{field: "source.nat.port", setter: fld_prio, prio: 0}]},
          "tcp.dstport": {convert: to_long, to:[{field: "destination.port", setter: fld_prio, prio: 2}]},
          "tcp.srcport": {convert: to_long, to:[{field: "source.port", setter: fld_prio, prio: 2}]},
          "timezone": {to:[{field: "event.timezone", setter: fld_set}]},
          "tld": {to:[{field: "url.top_level_domain", setter: fld_prio, prio: 0}]},
          "udp.dstport": {convert: to_long, to:[{field: "destination.port", setter: fld_prio, prio: 3}]},
          "udp.srcport": {convert: to_long, to:[{field: "source.port", setter: fld_prio, prio: 3}]},
          "uid": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 3}]},
          "url": {to:[{field: "url.original", setter: fld_prio, prio: 1}]},
          "url_raw": {to:[{field: "url.original", setter: fld_prio, prio: 0}]},
          "urldomain": {to:[{field: "url.domain", setter: fld_prio, prio: 0}]},
          "urlquery": {to:[{field: "url.query", setter: fld_prio, prio: 0}]},
          "user": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 0}]},
          "user.id": {to:[{field: "user.id", setter: fld_prio, prio: 1}]},
          "user_agent": {to:[{field: "user_agent.original", setter: fld_set}]},
          "user_fullname": {to:[{field: "user.full_name", setter: fld_prio, prio: 0}]},
          "user_id": {to:[{field: "user.id", setter: fld_prio, prio: 0}]},
          "username": {to:[{field: "related.user", setter: fld_append},{field: "user.name", setter: fld_prio, prio: 1}]},
          "version": {to:[{field: "observer.version", setter: fld_set}]},
          "web_domain": {to:[{field: "url.domain", setter: fld_prio, prio: 1}]},
          "web_extension": {to:[{field: "file.extension", setter: fld_prio, prio: 0}]},
          "web_query": {to:[{field: "url.query", setter: fld_prio, prio: 1}]},
          "web_referer": {to:[{field: "http.request.referrer", setter: fld_prio, prio: 0}]},
          "web_root": {to:[{field: "url.path", setter: fld_set}]},
          "webpage": {to:[{field: "file.name", setter: fld_prio, prio: 1}]},
      };
      
      var rsa_mappings = {
          "access_point": {to:[{field: "rsa.wireless.access_point", setter: fld_set}]},
          "accesses": {to:[{field: "rsa.identity.accesses", setter: fld_set}]},
          "acl_id": {to:[{field: "rsa.misc.acl_id", setter: fld_set}]},
          "acl_op": {to:[{field: "rsa.misc.acl_op", setter: fld_set}]},
          "acl_pos": {to:[{field: "rsa.misc.acl_pos", setter: fld_set}]},
          "acl_table": {to:[{field: "rsa.misc.acl_table", setter: fld_set}]},
          "action": {to:[{field: "rsa.misc.action", setter: fld_append}]},
          "ad_computer_dst": {to:[{field: "rsa.network.ad_computer_dst", setter: fld_set}]},
          "addr": {to:[{field: "rsa.network.addr", setter: fld_set}]},
          "admin": {to:[{field: "rsa.misc.admin", setter: fld_set}]},
          "agent": {to:[{field: "rsa.misc.client", setter: fld_prio, prio: 0}]},
          "agent.id": {to:[{field: "rsa.misc.agent_id", setter: fld_set}]},
          "alarm_id": {to:[{field: "rsa.misc.alarm_id", setter: fld_set}]},
          "alarmname": {to:[{field: "rsa.misc.alarmname", setter: fld_set}]},
          "alert": {to:[{field: "rsa.threat.alert", setter: fld_set}]},
          "alert_id": {to:[{field: "rsa.misc.alert_id", setter: fld_set}]},
          "alias.host": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "analysis.file": {to:[{field: "rsa.investigations.analysis_file", setter: fld_set}]},
          "analysis.service": {to:[{field: "rsa.investigations.analysis_service", setter: fld_set}]},
          "analysis.session": {to:[{field: "rsa.investigations.analysis_session", setter: fld_set}]},
          "app_id": {to:[{field: "rsa.misc.app_id", setter: fld_set}]},
          "attachment": {to:[{field: "rsa.file.attachment", setter: fld_set}]},
          "audit": {to:[{field: "rsa.misc.audit", setter: fld_set}]},
          "audit_class": {to:[{field: "rsa.internal.audit_class", setter: fld_set}]},
          "audit_object": {to:[{field: "rsa.misc.audit_object", setter: fld_set}]},
          "auditdata": {to:[{field: "rsa.misc.auditdata", setter: fld_set}]},
          "authmethod": {to:[{field: "rsa.identity.auth_method", setter: fld_set}]},
          "autorun_type": {to:[{field: "rsa.misc.autorun_type", setter: fld_set}]},
          "bcc": {to:[{field: "rsa.email.email", setter: fld_append}]},
          "benchmark": {to:[{field: "rsa.misc.benchmark", setter: fld_set}]},
          "binary": {to:[{field: "rsa.file.binary", setter: fld_set}]},
          "boc": {to:[{field: "rsa.investigations.boc", setter: fld_set}]},
          "bssid": {to:[{field: "rsa.wireless.wlan_ssid", setter: fld_prio, prio: 1}]},
          "bypass": {to:[{field: "rsa.misc.bypass", setter: fld_set}]},
          "c_sid": {to:[{field: "rsa.identity.user_sid_src", setter: fld_set}]},
          "cache": {to:[{field: "rsa.misc.cache", setter: fld_set}]},
          "cache_hit": {to:[{field: "rsa.misc.cache_hit", setter: fld_set}]},
          "calling_from": {to:[{field: "rsa.misc.phone", setter: fld_prio, prio: 1}]},
          "calling_to": {to:[{field: "rsa.misc.phone", setter: fld_prio, prio: 0}]},
          "category": {to:[{field: "rsa.misc.category", setter: fld_set}]},
          "cc": {to:[{field: "rsa.email.email", setter: fld_append}]},
          "cc.number": {convert: to_long, to:[{field: "rsa.misc.cc_number", setter: fld_set}]},
          "cefversion": {to:[{field: "rsa.misc.cefversion", setter: fld_set}]},
          "cert.serial": {to:[{field: "rsa.crypto.cert_serial", setter: fld_set}]},
          "cert_ca": {to:[{field: "rsa.crypto.cert_ca", setter: fld_set}]},
          "cert_checksum": {to:[{field: "rsa.crypto.cert_checksum", setter: fld_set}]},
          "cert_common": {to:[{field: "rsa.crypto.cert_common", setter: fld_set}]},
          "cert_error": {to:[{field: "rsa.crypto.cert_error", setter: fld_set}]},
          "cert_hostname": {to:[{field: "rsa.crypto.cert_host_name", setter: fld_set}]},
          "cert_hostname_cat": {to:[{field: "rsa.crypto.cert_host_cat", setter: fld_set}]},
          "cert_issuer": {to:[{field: "rsa.crypto.cert_issuer", setter: fld_set}]},
          "cert_keysize": {to:[{field: "rsa.crypto.cert_keysize", setter: fld_set}]},
          "cert_status": {to:[{field: "rsa.crypto.cert_status", setter: fld_set}]},
          "cert_subject": {to:[{field: "rsa.crypto.cert_subject", setter: fld_set}]},
          "cert_username": {to:[{field: "rsa.crypto.cert_username", setter: fld_set}]},
          "cfg.attr": {to:[{field: "rsa.misc.cfg_attr", setter: fld_set}]},
          "cfg.obj": {to:[{field: "rsa.misc.cfg_obj", setter: fld_set}]},
          "cfg.path": {to:[{field: "rsa.misc.cfg_path", setter: fld_set}]},
          "change_attribute": {to:[{field: "rsa.misc.change_attrib", setter: fld_set}]},
          "change_new": {to:[{field: "rsa.misc.change_new", setter: fld_set}]},
          "change_old": {to:[{field: "rsa.misc.change_old", setter: fld_set}]},
          "changes": {to:[{field: "rsa.misc.changes", setter: fld_set}]},
          "checksum": {to:[{field: "rsa.misc.checksum", setter: fld_set}]},
          "checksum.dst": {to:[{field: "rsa.misc.checksum_dst", setter: fld_set}]},
          "checksum.src": {to:[{field: "rsa.misc.checksum_src", setter: fld_set}]},
          "cid": {to:[{field: "rsa.internal.cid", setter: fld_set}]},
          "client": {to:[{field: "rsa.misc.client", setter: fld_prio, prio: 1}]},
          "client_ip": {to:[{field: "rsa.misc.client_ip", setter: fld_set}]},
          "clustermembers": {to:[{field: "rsa.misc.clustermembers", setter: fld_set}]},
          "cmd": {to:[{field: "rsa.misc.cmd", setter: fld_set}]},
          "cn_acttimeout": {to:[{field: "rsa.misc.cn_acttimeout", setter: fld_set}]},
          "cn_asn_dst": {to:[{field: "rsa.web.cn_asn_dst", setter: fld_set}]},
          "cn_asn_src": {to:[{field: "rsa.misc.cn_asn_src", setter: fld_set}]},
          "cn_bgpv4nxthop": {to:[{field: "rsa.misc.cn_bgpv4nxthop", setter: fld_set}]},
          "cn_ctr_dst_code": {to:[{field: "rsa.misc.cn_ctr_dst_code", setter: fld_set}]},
          "cn_dst_tos": {to:[{field: "rsa.misc.cn_dst_tos", setter: fld_set}]},
          "cn_dst_vlan": {to:[{field: "rsa.misc.cn_dst_vlan", setter: fld_set}]},
          "cn_engine_id": {to:[{field: "rsa.misc.cn_engine_id", setter: fld_set}]},
          "cn_engine_type": {to:[{field: "rsa.misc.cn_engine_type", setter: fld_set}]},
          "cn_f_switch": {to:[{field: "rsa.misc.cn_f_switch", setter: fld_set}]},
          "cn_flowsampid": {to:[{field: "rsa.misc.cn_flowsampid", setter: fld_set}]},
          "cn_flowsampintv": {to:[{field: "rsa.misc.cn_flowsampintv", setter: fld_set}]},
          "cn_flowsampmode": {to:[{field: "rsa.misc.cn_flowsampmode", setter: fld_set}]},
          "cn_inacttimeout": {to:[{field: "rsa.misc.cn_inacttimeout", setter: fld_set}]},
          "cn_inpermbyts": {to:[{field: "rsa.misc.cn_inpermbyts", setter: fld_set}]},
          "cn_inpermpckts": {to:[{field: "rsa.misc.cn_inpermpckts", setter: fld_set}]},
          "cn_invalid": {to:[{field: "rsa.misc.cn_invalid", setter: fld_set}]},
          "cn_ip_proto_ver": {to:[{field: "rsa.misc.cn_ip_proto_ver", setter: fld_set}]},
          "cn_ipv4_ident": {to:[{field: "rsa.misc.cn_ipv4_ident", setter: fld_set}]},
          "cn_l_switch": {to:[{field: "rsa.misc.cn_l_switch", setter: fld_set}]},
          "cn_log_did": {to:[{field: "rsa.misc.cn_log_did", setter: fld_set}]},
          "cn_log_rid": {to:[{field: "rsa.misc.cn_log_rid", setter: fld_set}]},
          "cn_max_ttl": {to:[{field: "rsa.misc.cn_max_ttl", setter: fld_set}]},
          "cn_maxpcktlen": {to:[{field: "rsa.misc.cn_maxpcktlen", setter: fld_set}]},
          "cn_min_ttl": {to:[{field: "rsa.misc.cn_min_ttl", setter: fld_set}]},
          "cn_minpcktlen": {to:[{field: "rsa.misc.cn_minpcktlen", setter: fld_set}]},
          "cn_mpls_lbl_1": {to:[{field: "rsa.misc.cn_mpls_lbl_1", setter: fld_set}]},
          "cn_mpls_lbl_10": {to:[{field: "rsa.misc.cn_mpls_lbl_10", setter: fld_set}]},
          "cn_mpls_lbl_2": {to:[{field: "rsa.misc.cn_mpls_lbl_2", setter: fld_set}]},
          "cn_mpls_lbl_3": {to:[{field: "rsa.misc.cn_mpls_lbl_3", setter: fld_set}]},
          "cn_mpls_lbl_4": {to:[{field: "rsa.misc.cn_mpls_lbl_4", setter: fld_set}]},
          "cn_mpls_lbl_5": {to:[{field: "rsa.misc.cn_mpls_lbl_5", setter: fld_set}]},
          "cn_mpls_lbl_6": {to:[{field: "rsa.misc.cn_mpls_lbl_6", setter: fld_set}]},
          "cn_mpls_lbl_7": {to:[{field: "rsa.misc.cn_mpls_lbl_7", setter: fld_set}]},
          "cn_mpls_lbl_8": {to:[{field: "rsa.misc.cn_mpls_lbl_8", setter: fld_set}]},
          "cn_mpls_lbl_9": {to:[{field: "rsa.misc.cn_mpls_lbl_9", setter: fld_set}]},
          "cn_mplstoplabel": {to:[{field: "rsa.misc.cn_mplstoplabel", setter: fld_set}]},
          "cn_mplstoplabip": {to:[{field: "rsa.misc.cn_mplstoplabip", setter: fld_set}]},
          "cn_mul_dst_byt": {to:[{field: "rsa.misc.cn_mul_dst_byt", setter: fld_set}]},
          "cn_mul_dst_pks": {to:[{field: "rsa.misc.cn_mul_dst_pks", setter: fld_set}]},
          "cn_muligmptype": {to:[{field: "rsa.misc.cn_muligmptype", setter: fld_set}]},
          "cn_rpackets": {to:[{field: "rsa.web.cn_rpackets", setter: fld_set}]},
          "cn_sampalgo": {to:[{field: "rsa.misc.cn_sampalgo", setter: fld_set}]},
          "cn_sampint": {to:[{field: "rsa.misc.cn_sampint", setter: fld_set}]},
          "cn_seqctr": {to:[{field: "rsa.misc.cn_seqctr", setter: fld_set}]},
          "cn_spackets": {to:[{field: "rsa.misc.cn_spackets", setter: fld_set}]},
          "cn_src_tos": {to:[{field: "rsa.misc.cn_src_tos", setter: fld_set}]},
          "cn_src_vlan": {to:[{field: "rsa.misc.cn_src_vlan", setter: fld_set}]},
          "cn_sysuptime": {to:[{field: "rsa.misc.cn_sysuptime", setter: fld_set}]},
          "cn_template_id": {to:[{field: "rsa.misc.cn_template_id", setter: fld_set}]},
          "cn_totbytsexp": {to:[{field: "rsa.misc.cn_totbytsexp", setter: fld_set}]},
          "cn_totflowexp": {to:[{field: "rsa.misc.cn_totflowexp", setter: fld_set}]},
          "cn_totpcktsexp": {to:[{field: "rsa.misc.cn_totpcktsexp", setter: fld_set}]},
          "cn_unixnanosecs": {to:[{field: "rsa.misc.cn_unixnanosecs", setter: fld_set}]},
          "cn_v6flowlabel": {to:[{field: "rsa.misc.cn_v6flowlabel", setter: fld_set}]},
          "cn_v6optheaders": {to:[{field: "rsa.misc.cn_v6optheaders", setter: fld_set}]},
          "code": {to:[{field: "rsa.misc.code", setter: fld_set}]},
          "command": {to:[{field: "rsa.misc.command", setter: fld_set}]},
          "comments": {to:[{field: "rsa.misc.comments", setter: fld_set}]},
          "comp_class": {to:[{field: "rsa.misc.comp_class", setter: fld_set}]},
          "comp_name": {to:[{field: "rsa.misc.comp_name", setter: fld_set}]},
          "comp_rbytes": {to:[{field: "rsa.misc.comp_rbytes", setter: fld_set}]},
          "comp_sbytes": {to:[{field: "rsa.misc.comp_sbytes", setter: fld_set}]},
          "component_version": {to:[{field: "rsa.misc.comp_version", setter: fld_set}]},
          "connection_id": {to:[{field: "rsa.misc.connection_id", setter: fld_prio, prio: 1}]},
          "connectionid": {to:[{field: "rsa.misc.connection_id", setter: fld_prio, prio: 0}]},
          "content": {to:[{field: "rsa.misc.content", setter: fld_set}]},
          "content_type": {to:[{field: "rsa.misc.content_type", setter: fld_set}]},
          "content_version": {to:[{field: "rsa.misc.content_version", setter: fld_set}]},
          "context": {to:[{field: "rsa.misc.context", setter: fld_set}]},
          "count": {to:[{field: "rsa.misc.count", setter: fld_set}]},
          "cpu": {convert: to_long, to:[{field: "rsa.misc.cpu", setter: fld_set}]},
          "cpu_data": {to:[{field: "rsa.misc.cpu_data", setter: fld_set}]},
          "criticality": {to:[{field: "rsa.misc.criticality", setter: fld_set}]},
          "cs_agency_dst": {to:[{field: "rsa.misc.cs_agency_dst", setter: fld_set}]},
          "cs_analyzedby": {to:[{field: "rsa.misc.cs_analyzedby", setter: fld_set}]},
          "cs_av_other": {to:[{field: "rsa.misc.cs_av_other", setter: fld_set}]},
          "cs_av_primary": {to:[{field: "rsa.misc.cs_av_primary", setter: fld_set}]},
          "cs_av_secondary": {to:[{field: "rsa.misc.cs_av_secondary", setter: fld_set}]},
          "cs_bgpv6nxthop": {to:[{field: "rsa.misc.cs_bgpv6nxthop", setter: fld_set}]},
          "cs_bit9status": {to:[{field: "rsa.misc.cs_bit9status", setter: fld_set}]},
          "cs_context": {to:[{field: "rsa.misc.cs_context", setter: fld_set}]},
          "cs_control": {to:[{field: "rsa.misc.cs_control", setter: fld_set}]},
          "cs_data": {to:[{field: "rsa.misc.cs_data", setter: fld_set}]},
          "cs_datecret": {to:[{field: "rsa.misc.cs_datecret", setter: fld_set}]},
          "cs_dst_tld": {to:[{field: "rsa.misc.cs_dst_tld", setter: fld_set}]},
          "cs_eth_dst_ven": {to:[{field: "rsa.misc.cs_eth_dst_ven", setter: fld_set}]},
          "cs_eth_src_ven": {to:[{field: "rsa.misc.cs_eth_src_ven", setter: fld_set}]},
          "cs_event_uuid": {to:[{field: "rsa.misc.cs_event_uuid", setter: fld_set}]},
          "cs_filetype": {to:[{field: "rsa.misc.cs_filetype", setter: fld_set}]},
          "cs_fld": {to:[{field: "rsa.misc.cs_fld", setter: fld_set}]},
          "cs_if_desc": {to:[{field: "rsa.misc.cs_if_desc", setter: fld_set}]},
          "cs_if_name": {to:[{field: "rsa.misc.cs_if_name", setter: fld_set}]},
          "cs_ip_next_hop": {to:[{field: "rsa.misc.cs_ip_next_hop", setter: fld_set}]},
          "cs_ipv4dstpre": {to:[{field: "rsa.misc.cs_ipv4dstpre", setter: fld_set}]},
          "cs_ipv4srcpre": {to:[{field: "rsa.misc.cs_ipv4srcpre", setter: fld_set}]},
          "cs_lifetime": {to:[{field: "rsa.misc.cs_lifetime", setter: fld_set}]},
          "cs_log_medium": {to:[{field: "rsa.misc.cs_log_medium", setter: fld_set}]},
          "cs_loginname": {to:[{field: "rsa.misc.cs_loginname", setter: fld_set}]},
          "cs_modulescore": {to:[{field: "rsa.misc.cs_modulescore", setter: fld_set}]},
          "cs_modulesign": {to:[{field: "rsa.misc.cs_modulesign", setter: fld_set}]},
          "cs_opswatresult": {to:[{field: "rsa.misc.cs_opswatresult", setter: fld_set}]},
          "cs_payload": {to:[{field: "rsa.misc.cs_payload", setter: fld_set}]},
          "cs_registrant": {to:[{field: "rsa.misc.cs_registrant", setter: fld_set}]},
          "cs_registrar": {to:[{field: "rsa.misc.cs_registrar", setter: fld_set}]},
          "cs_represult": {to:[{field: "rsa.misc.cs_represult", setter: fld_set}]},
          "cs_rpayload": {to:[{field: "rsa.misc.cs_rpayload", setter: fld_set}]},
          "cs_sampler_name": {to:[{field: "rsa.misc.cs_sampler_name", setter: fld_set}]},
          "cs_sourcemodule": {to:[{field: "rsa.misc.cs_sourcemodule", setter: fld_set}]},
          "cs_streams": {to:[{field: "rsa.misc.cs_streams", setter: fld_set}]},
          "cs_targetmodule": {to:[{field: "rsa.misc.cs_targetmodule", setter: fld_set}]},
          "cs_v6nxthop": {to:[{field: "rsa.misc.cs_v6nxthop", setter: fld_set}]},
          "cs_whois_server": {to:[{field: "rsa.misc.cs_whois_server", setter: fld_set}]},
          "cs_yararesult": {to:[{field: "rsa.misc.cs_yararesult", setter: fld_set}]},
          "cve": {to:[{field: "rsa.misc.cve", setter: fld_set}]},
          "d_certauth": {to:[{field: "rsa.crypto.d_certauth", setter: fld_set}]},
          "d_cipher": {to:[{field: "rsa.crypto.cipher_dst", setter: fld_set}]},
          "d_ciphersize": {convert: to_long, to:[{field: "rsa.crypto.cipher_size_dst", setter: fld_set}]},
          "d_sslver": {to:[{field: "rsa.crypto.ssl_ver_dst", setter: fld_set}]},
          "data": {to:[{field: "rsa.internal.data", setter: fld_set}]},
          "data_type": {to:[{field: "rsa.misc.data_type", setter: fld_set}]},
          "date": {to:[{field: "rsa.time.date", setter: fld_set}]},
          "datetime": {to:[{field: "rsa.time.datetime", setter: fld_set}]},
          "day": {to:[{field: "rsa.time.day", setter: fld_set}]},
          "db_id": {to:[{field: "rsa.db.db_id", setter: fld_set}]},
          "db_name": {to:[{field: "rsa.db.database", setter: fld_set}]},
          "db_pid": {convert: to_long, to:[{field: "rsa.db.db_pid", setter: fld_set}]},
          "dclass_counter1": {convert: to_long, to:[{field: "rsa.counters.dclass_c1", setter: fld_set}]},
          "dclass_counter1_string": {to:[{field: "rsa.counters.dclass_c1_str", setter: fld_set}]},
          "dclass_counter2": {convert: to_long, to:[{field: "rsa.counters.dclass_c2", setter: fld_set}]},
          "dclass_counter2_string": {to:[{field: "rsa.counters.dclass_c2_str", setter: fld_set}]},
          "dclass_counter3": {convert: to_long, to:[{field: "rsa.counters.dclass_c3", setter: fld_set}]},
          "dclass_counter3_string": {to:[{field: "rsa.counters.dclass_c3_str", setter: fld_set}]},
          "dclass_ratio1": {to:[{field: "rsa.counters.dclass_r1", setter: fld_set}]},
          "dclass_ratio1_string": {to:[{field: "rsa.counters.dclass_r1_str", setter: fld_set}]},
          "dclass_ratio2": {to:[{field: "rsa.counters.dclass_r2", setter: fld_set}]},
          "dclass_ratio2_string": {to:[{field: "rsa.counters.dclass_r2_str", setter: fld_set}]},
          "dclass_ratio3": {to:[{field: "rsa.counters.dclass_r3", setter: fld_set}]},
          "dclass_ratio3_string": {to:[{field: "rsa.counters.dclass_r3_str", setter: fld_set}]},
          "dead": {convert: to_long, to:[{field: "rsa.internal.dead", setter: fld_set}]},
          "description": {to:[{field: "rsa.misc.description", setter: fld_set}]},
          "detail": {to:[{field: "rsa.misc.event_desc", setter: fld_set}]},
          "device": {to:[{field: "rsa.misc.device_name", setter: fld_set}]},
          "device.class": {to:[{field: "rsa.internal.device_class", setter: fld_set}]},
          "device.group": {to:[{field: "rsa.internal.device_group", setter: fld_set}]},
          "device.host": {to:[{field: "rsa.internal.device_host", setter: fld_set}]},
          "device.ip": {convert: to_ip, to:[{field: "rsa.internal.device_ip", setter: fld_set}]},
          "device.ipv6": {convert: to_ip, to:[{field: "rsa.internal.device_ipv6", setter: fld_set}]},
          "device.type": {to:[{field: "rsa.internal.device_type", setter: fld_set}]},
          "device.type.id": {convert: to_long, to:[{field: "rsa.internal.device_type_id", setter: fld_set}]},
          "devicehostname": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "devvendor": {to:[{field: "rsa.misc.devvendor", setter: fld_set}]},
          "dhost": {to:[{field: "rsa.network.host_dst", setter: fld_set}]},
          "did": {to:[{field: "rsa.internal.did", setter: fld_set}]},
          "dinterface": {to:[{field: "rsa.network.dinterface", setter: fld_set}]},
          "directory.dst": {to:[{field: "rsa.file.directory_dst", setter: fld_set}]},
          "directory.src": {to:[{field: "rsa.file.directory_src", setter: fld_set}]},
          "disk_volume": {to:[{field: "rsa.storage.disk_volume", setter: fld_set}]},
          "disposition": {to:[{field: "rsa.misc.disposition", setter: fld_set}]},
          "distance": {to:[{field: "rsa.misc.distance", setter: fld_set}]},
          "dmask": {to:[{field: "rsa.network.dmask", setter: fld_set}]},
          "dn": {to:[{field: "rsa.identity.dn", setter: fld_set}]},
          "dns_a_record": {to:[{field: "rsa.network.dns_a_record", setter: fld_set}]},
          "dns_cname_record": {to:[{field: "rsa.network.dns_cname_record", setter: fld_set}]},
          "dns_id": {to:[{field: "rsa.network.dns_id", setter: fld_set}]},
          "dns_opcode": {to:[{field: "rsa.network.dns_opcode", setter: fld_set}]},
          "dns_ptr_record": {to:[{field: "rsa.network.dns_ptr_record", setter: fld_set}]},
          "dns_resp": {to:[{field: "rsa.network.dns_resp", setter: fld_set}]},
          "dns_type": {to:[{field: "rsa.network.dns_type", setter: fld_set}]},
          "doc_number": {convert: to_long, to:[{field: "rsa.misc.doc_number", setter: fld_set}]},
          "domain": {to:[{field: "rsa.network.domain", setter: fld_set}]},
          "domain1": {to:[{field: "rsa.network.domain1", setter: fld_set}]},
          "dst_dn": {to:[{field: "rsa.identity.dn_dst", setter: fld_set}]},
          "dst_payload": {to:[{field: "rsa.misc.payload_dst", setter: fld_set}]},
          "dst_spi": {to:[{field: "rsa.misc.spi_dst", setter: fld_set}]},
          "dst_zone": {to:[{field: "rsa.network.zone_dst", setter: fld_set}]},
          "dstburb": {to:[{field: "rsa.misc.dstburb", setter: fld_set}]},
          "duration": {convert: to_double, to:[{field: "rsa.time.duration_time", setter: fld_set}]},
          "duration_string": {to:[{field: "rsa.time.duration_str", setter: fld_set}]},
          "ec_activity": {to:[{field: "rsa.investigations.ec_activity", setter: fld_set}]},
          "ec_outcome": {to:[{field: "rsa.investigations.ec_outcome", setter: fld_set}]},
          "ec_subject": {to:[{field: "rsa.investigations.ec_subject", setter: fld_set}]},
          "ec_theme": {to:[{field: "rsa.investigations.ec_theme", setter: fld_set}]},
          "edomain": {to:[{field: "rsa.misc.edomain", setter: fld_set}]},
          "edomaub": {to:[{field: "rsa.misc.edomaub", setter: fld_set}]},
          "effective_time": {convert: to_date, to:[{field: "rsa.time.effective_time", setter: fld_set}]},
          "ein.number": {convert: to_long, to:[{field: "rsa.misc.ein_number", setter: fld_set}]},
          "email": {to:[{field: "rsa.email.email", setter: fld_append}]},
          "encryption_type": {to:[{field: "rsa.crypto.crypto", setter: fld_set}]},
          "endtime": {convert: to_date, to:[{field: "rsa.time.endtime", setter: fld_set}]},
          "entropy.req": {convert: to_long, to:[{field: "rsa.internal.entropy_req", setter: fld_set}]},
          "entropy.res": {convert: to_long, to:[{field: "rsa.internal.entropy_res", setter: fld_set}]},
          "entry": {to:[{field: "rsa.internal.entry", setter: fld_set}]},
          "eoc": {to:[{field: "rsa.investigations.eoc", setter: fld_set}]},
          "error": {to:[{field: "rsa.misc.error", setter: fld_set}]},
          "eth_type": {convert: to_long, to:[{field: "rsa.network.eth_type", setter: fld_set}]},
          "euid": {to:[{field: "rsa.misc.euid", setter: fld_set}]},
          "event.cat": {convert: to_long, to:[{field: "rsa.investigations.event_cat", setter: fld_prio, prio: 1}]},
          "event.cat.name": {to:[{field: "rsa.investigations.event_cat_name", setter: fld_prio, prio: 1}]},
          "event_cat": {convert: to_long, to:[{field: "rsa.investigations.event_cat", setter: fld_prio, prio: 0}]},
          "event_cat_name": {to:[{field: "rsa.investigations.event_cat_name", setter: fld_prio, prio: 0}]},
          "event_category": {to:[{field: "rsa.misc.event_category", setter: fld_set}]},
          "event_computer": {to:[{field: "rsa.misc.event_computer", setter: fld_set}]},
          "event_counter": {convert: to_long, to:[{field: "rsa.counters.event_counter", setter: fld_set}]},
          "event_description": {to:[{field: "rsa.internal.event_desc", setter: fld_set}]},
          "event_id": {to:[{field: "rsa.misc.event_id", setter: fld_set}]},
          "event_log": {to:[{field: "rsa.misc.event_log", setter: fld_set}]},
          "event_name": {to:[{field: "rsa.internal.event_name", setter: fld_set}]},
          "event_queue_time": {convert: to_date, to:[{field: "rsa.time.event_queue_time", setter: fld_set}]},
          "event_source": {to:[{field: "rsa.misc.event_source", setter: fld_set}]},
          "event_state": {to:[{field: "rsa.misc.event_state", setter: fld_set}]},
          "event_time": {convert: to_date, to:[{field: "rsa.time.event_time", setter: fld_set}]},
          "event_time_str": {to:[{field: "rsa.time.event_time_str", setter: fld_prio, prio: 1}]},
          "event_time_string": {to:[{field: "rsa.time.event_time_str", setter: fld_prio, prio: 0}]},
          "event_type": {to:[{field: "rsa.misc.event_type", setter: fld_set}]},
          "event_user": {to:[{field: "rsa.misc.event_user", setter: fld_set}]},
          "eventtime": {to:[{field: "rsa.time.eventtime", setter: fld_set}]},
          "expected_val": {to:[{field: "rsa.misc.expected_val", setter: fld_set}]},
          "expiration_time": {convert: to_date, to:[{field: "rsa.time.expire_time", setter: fld_set}]},
          "expiration_time_string": {to:[{field: "rsa.time.expire_time_str", setter: fld_set}]},
          "facility": {to:[{field: "rsa.misc.facility", setter: fld_set}]},
          "facilityname": {to:[{field: "rsa.misc.facilityname", setter: fld_set}]},
          "faddr": {to:[{field: "rsa.network.faddr", setter: fld_set}]},
          "fcatnum": {to:[{field: "rsa.misc.fcatnum", setter: fld_set}]},
          "federated_idp": {to:[{field: "rsa.identity.federated_idp", setter: fld_set}]},
          "federated_sp": {to:[{field: "rsa.identity.federated_sp", setter: fld_set}]},
          "feed.category": {to:[{field: "rsa.internal.feed_category", setter: fld_set}]},
          "feed_desc": {to:[{field: "rsa.internal.feed_desc", setter: fld_set}]},
          "feed_name": {to:[{field: "rsa.internal.feed_name", setter: fld_set}]},
          "fhost": {to:[{field: "rsa.network.fhost", setter: fld_set}]},
          "file_entropy": {convert: to_double, to:[{field: "rsa.file.file_entropy", setter: fld_set}]},
          "file_vendor": {to:[{field: "rsa.file.file_vendor", setter: fld_set}]},
          "filename_dst": {to:[{field: "rsa.file.filename_dst", setter: fld_set}]},
          "filename_src": {to:[{field: "rsa.file.filename_src", setter: fld_set}]},
          "filename_tmp": {to:[{field: "rsa.file.filename_tmp", setter: fld_set}]},
          "filesystem": {to:[{field: "rsa.file.filesystem", setter: fld_set}]},
          "filter": {to:[{field: "rsa.misc.filter", setter: fld_set}]},
          "finterface": {to:[{field: "rsa.misc.finterface", setter: fld_set}]},
          "flags": {to:[{field: "rsa.misc.flags", setter: fld_set}]},
          "forensic_info": {to:[{field: "rsa.misc.forensic_info", setter: fld_set}]},
          "forward.ip": {convert: to_ip, to:[{field: "rsa.internal.forward_ip", setter: fld_set}]},
          "forward.ipv6": {convert: to_ip, to:[{field: "rsa.internal.forward_ipv6", setter: fld_set}]},
          "found": {to:[{field: "rsa.misc.found", setter: fld_set}]},
          "fport": {to:[{field: "rsa.network.fport", setter: fld_set}]},
          "fqdn": {to:[{field: "rsa.web.fqdn", setter: fld_set}]},
          "fresult": {convert: to_long, to:[{field: "rsa.misc.fresult", setter: fld_set}]},
          "from": {to:[{field: "rsa.email.email_src", setter: fld_set}]},
          "gaddr": {to:[{field: "rsa.misc.gaddr", setter: fld_set}]},
          "gateway": {to:[{field: "rsa.network.gateway", setter: fld_set}]},
          "gmtdate": {to:[{field: "rsa.time.gmtdate", setter: fld_set}]},
          "gmttime": {to:[{field: "rsa.time.gmttime", setter: fld_set}]},
          "group": {to:[{field: "rsa.misc.group", setter: fld_set}]},
          "group_object": {to:[{field: "rsa.misc.group_object", setter: fld_set}]},
          "groupid": {to:[{field: "rsa.misc.group_id", setter: fld_set}]},
          "h_code": {to:[{field: "rsa.internal.hcode", setter: fld_set}]},
          "hardware_id": {to:[{field: "rsa.misc.hardware_id", setter: fld_set}]},
          "header.id": {to:[{field: "rsa.internal.header_id", setter: fld_set}]},
          "host.orig": {to:[{field: "rsa.network.host_orig", setter: fld_set}]},
          "host.state": {to:[{field: "rsa.endpoint.host_state", setter: fld_set}]},
          "host.type": {to:[{field: "rsa.network.host_type", setter: fld_set}]},
          "host_role": {to:[{field: "rsa.identity.host_role", setter: fld_set}]},
          "hostid": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "hostname": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "hour": {to:[{field: "rsa.time.hour", setter: fld_set}]},
          "https.insact": {to:[{field: "rsa.crypto.https_insact", setter: fld_set}]},
          "https.valid": {to:[{field: "rsa.crypto.https_valid", setter: fld_set}]},
          "icmpcode": {convert: to_long, to:[{field: "rsa.network.icmp_code", setter: fld_set}]},
          "icmptype": {convert: to_long, to:[{field: "rsa.network.icmp_type", setter: fld_set}]},
          "id": {to:[{field: "rsa.misc.reference_id", setter: fld_set}]},
          "id1": {to:[{field: "rsa.misc.reference_id1", setter: fld_set}]},
          "id2": {to:[{field: "rsa.misc.reference_id2", setter: fld_set}]},
          "id3": {to:[{field: "rsa.misc.id3", setter: fld_set}]},
          "ike": {to:[{field: "rsa.crypto.ike", setter: fld_set}]},
          "ike_cookie1": {to:[{field: "rsa.crypto.ike_cookie1", setter: fld_set}]},
          "ike_cookie2": {to:[{field: "rsa.crypto.ike_cookie2", setter: fld_set}]},
          "im_buddyid": {to:[{field: "rsa.misc.im_buddyid", setter: fld_set}]},
          "im_buddyname": {to:[{field: "rsa.misc.im_buddyname", setter: fld_set}]},
          "im_client": {to:[{field: "rsa.misc.im_client", setter: fld_set}]},
          "im_croomid": {to:[{field: "rsa.misc.im_croomid", setter: fld_set}]},
          "im_croomtype": {to:[{field: "rsa.misc.im_croomtype", setter: fld_set}]},
          "im_members": {to:[{field: "rsa.misc.im_members", setter: fld_set}]},
          "im_userid": {to:[{field: "rsa.misc.im_userid", setter: fld_set}]},
          "im_username": {to:[{field: "rsa.misc.im_username", setter: fld_set}]},
          "index": {to:[{field: "rsa.misc.index", setter: fld_set}]},
          "info": {to:[{field: "rsa.db.index", setter: fld_set}]},
          "inode": {convert: to_long, to:[{field: "rsa.internal.inode", setter: fld_set}]},
          "inout": {to:[{field: "rsa.misc.inout", setter: fld_set}]},
          "instance": {to:[{field: "rsa.db.instance", setter: fld_set}]},
          "interface": {to:[{field: "rsa.network.interface", setter: fld_set}]},
          "inv.category": {to:[{field: "rsa.investigations.inv_category", setter: fld_set}]},
          "inv.context": {to:[{field: "rsa.investigations.inv_context", setter: fld_set}]},
          "ioc": {to:[{field: "rsa.investigations.ioc", setter: fld_set}]},
          "ip_proto": {convert: to_long, to:[{field: "rsa.network.ip_proto", setter: fld_set}]},
          "ipkt": {to:[{field: "rsa.misc.ipkt", setter: fld_set}]},
          "ipscat": {to:[{field: "rsa.misc.ipscat", setter: fld_set}]},
          "ipspri": {to:[{field: "rsa.misc.ipspri", setter: fld_set}]},
          "jobname": {to:[{field: "rsa.misc.jobname", setter: fld_set}]},
          "jobnum": {to:[{field: "rsa.misc.job_num", setter: fld_set}]},
          "laddr": {to:[{field: "rsa.network.laddr", setter: fld_set}]},
          "language": {to:[{field: "rsa.misc.language", setter: fld_set}]},
          "latitude": {to:[{field: "rsa.misc.latitude", setter: fld_set}]},
          "lc.cid": {to:[{field: "rsa.internal.lc_cid", setter: fld_set}]},
          "lc.ctime": {convert: to_date, to:[{field: "rsa.internal.lc_ctime", setter: fld_set}]},
          "ldap": {to:[{field: "rsa.identity.ldap", setter: fld_set}]},
          "ldap.query": {to:[{field: "rsa.identity.ldap_query", setter: fld_set}]},
          "ldap.response": {to:[{field: "rsa.identity.ldap_response", setter: fld_set}]},
          "level": {convert: to_long, to:[{field: "rsa.internal.level", setter: fld_set}]},
          "lhost": {to:[{field: "rsa.network.lhost", setter: fld_set}]},
          "library": {to:[{field: "rsa.misc.library", setter: fld_set}]},
          "lifetime": {convert: to_long, to:[{field: "rsa.misc.lifetime", setter: fld_set}]},
          "linenum": {to:[{field: "rsa.misc.linenum", setter: fld_set}]},
          "link": {to:[{field: "rsa.misc.link", setter: fld_set}]},
          "linterface": {to:[{field: "rsa.network.linterface", setter: fld_set}]},
          "list_name": {to:[{field: "rsa.misc.list_name", setter: fld_set}]},
          "listnum": {to:[{field: "rsa.misc.listnum", setter: fld_set}]},
          "load_data": {to:[{field: "rsa.misc.load_data", setter: fld_set}]},
          "location_floor": {to:[{field: "rsa.misc.location_floor", setter: fld_set}]},
          "location_mark": {to:[{field: "rsa.misc.location_mark", setter: fld_set}]},
          "log_id": {to:[{field: "rsa.misc.log_id", setter: fld_set}]},
          "log_type": {to:[{field: "rsa.misc.log_type", setter: fld_set}]},
          "logid": {to:[{field: "rsa.misc.logid", setter: fld_set}]},
          "logip": {to:[{field: "rsa.misc.logip", setter: fld_set}]},
          "logname": {to:[{field: "rsa.misc.logname", setter: fld_set}]},
          "logon_type": {to:[{field: "rsa.identity.logon_type", setter: fld_set}]},
          "logon_type_desc": {to:[{field: "rsa.identity.logon_type_desc", setter: fld_set}]},
          "longitude": {to:[{field: "rsa.misc.longitude", setter: fld_set}]},
          "lport": {to:[{field: "rsa.misc.lport", setter: fld_set}]},
          "lread": {convert: to_long, to:[{field: "rsa.db.lread", setter: fld_set}]},
          "lun": {to:[{field: "rsa.storage.lun", setter: fld_set}]},
          "lwrite": {convert: to_long, to:[{field: "rsa.db.lwrite", setter: fld_set}]},
          "macaddr": {convert: to_mac, to:[{field: "rsa.network.eth_host", setter: fld_set}]},
          "mail_id": {to:[{field: "rsa.misc.mail_id", setter: fld_set}]},
          "mask": {to:[{field: "rsa.network.mask", setter: fld_set}]},
          "match": {to:[{field: "rsa.misc.match", setter: fld_set}]},
          "mbug_data": {to:[{field: "rsa.misc.mbug_data", setter: fld_set}]},
          "mcb.req": {convert: to_long, to:[{field: "rsa.internal.mcb_req", setter: fld_set}]},
          "mcb.res": {convert: to_long, to:[{field: "rsa.internal.mcb_res", setter: fld_set}]},
          "mcbc.req": {convert: to_long, to:[{field: "rsa.internal.mcbc_req", setter: fld_set}]},
          "mcbc.res": {convert: to_long, to:[{field: "rsa.internal.mcbc_res", setter: fld_set}]},
          "medium": {convert: to_long, to:[{field: "rsa.internal.medium", setter: fld_set}]},
          "message": {to:[{field: "rsa.internal.message", setter: fld_set}]},
          "message_body": {to:[{field: "rsa.misc.message_body", setter: fld_set}]},
          "messageid": {to:[{field: "rsa.internal.messageid", setter: fld_set}]},
          "min": {to:[{field: "rsa.time.min", setter: fld_set}]},
          "misc": {to:[{field: "rsa.misc.misc", setter: fld_set}]},
          "misc_name": {to:[{field: "rsa.misc.misc_name", setter: fld_set}]},
          "mode": {to:[{field: "rsa.misc.mode", setter: fld_set}]},
          "month": {to:[{field: "rsa.time.month", setter: fld_set}]},
          "msg": {to:[{field: "rsa.internal.msg", setter: fld_set}]},
          "msgIdPart1": {to:[{field: "rsa.misc.msgIdPart1", setter: fld_set}]},
          "msgIdPart2": {to:[{field: "rsa.misc.msgIdPart2", setter: fld_set}]},
          "msgIdPart3": {to:[{field: "rsa.misc.msgIdPart3", setter: fld_set}]},
          "msgIdPart4": {to:[{field: "rsa.misc.msgIdPart4", setter: fld_set}]},
          "msg_id": {to:[{field: "rsa.internal.msg_id", setter: fld_set}]},
          "msg_type": {to:[{field: "rsa.misc.msg_type", setter: fld_set}]},
          "msgid": {to:[{field: "rsa.misc.msgid", setter: fld_set}]},
          "name": {to:[{field: "rsa.misc.name", setter: fld_set}]},
          "netname": {to:[{field: "rsa.network.netname", setter: fld_set}]},
          "netsessid": {to:[{field: "rsa.misc.netsessid", setter: fld_set}]},
          "network_port": {convert: to_long, to:[{field: "rsa.network.network_port", setter: fld_set}]},
          "network_service": {to:[{field: "rsa.network.network_service", setter: fld_set}]},
          "node": {to:[{field: "rsa.misc.node", setter: fld_set}]},
          "nodename": {to:[{field: "rsa.internal.node_name", setter: fld_set}]},
          "ntype": {to:[{field: "rsa.misc.ntype", setter: fld_set}]},
          "num": {to:[{field: "rsa.misc.num", setter: fld_set}]},
          "number": {to:[{field: "rsa.misc.number", setter: fld_set}]},
          "number1": {to:[{field: "rsa.misc.number1", setter: fld_set}]},
          "number2": {to:[{field: "rsa.misc.number2", setter: fld_set}]},
          "nwe.callback_id": {to:[{field: "rsa.internal.nwe_callback_id", setter: fld_set}]},
          "nwwn": {to:[{field: "rsa.misc.nwwn", setter: fld_set}]},
          "obj_id": {to:[{field: "rsa.internal.obj_id", setter: fld_set}]},
          "obj_name": {to:[{field: "rsa.misc.obj_name", setter: fld_set}]},
          "obj_server": {to:[{field: "rsa.internal.obj_server", setter: fld_set}]},
          "obj_type": {to:[{field: "rsa.misc.obj_type", setter: fld_set}]},
          "obj_value": {to:[{field: "rsa.internal.obj_val", setter: fld_set}]},
          "object": {to:[{field: "rsa.misc.object", setter: fld_set}]},
          "observed_val": {to:[{field: "rsa.misc.observed_val", setter: fld_set}]},
          "operation": {to:[{field: "rsa.misc.operation", setter: fld_set}]},
          "operation_id": {to:[{field: "rsa.misc.operation_id", setter: fld_set}]},
          "opkt": {to:[{field: "rsa.misc.opkt", setter: fld_set}]},
          "org.dst": {to:[{field: "rsa.physical.org_dst", setter: fld_prio, prio: 1}]},
          "org.src": {to:[{field: "rsa.physical.org_src", setter: fld_set}]},
          "org_dst": {to:[{field: "rsa.physical.org_dst", setter: fld_prio, prio: 0}]},
          "orig_from": {to:[{field: "rsa.misc.orig_from", setter: fld_set}]},
          "origin": {to:[{field: "rsa.network.origin", setter: fld_set}]},
          "original_owner": {to:[{field: "rsa.identity.owner", setter: fld_set}]},
          "os": {to:[{field: "rsa.misc.OS", setter: fld_set}]},
          "owner_id": {to:[{field: "rsa.misc.owner_id", setter: fld_set}]},
          "p_action": {to:[{field: "rsa.misc.p_action", setter: fld_set}]},
          "p_date": {to:[{field: "rsa.time.p_date", setter: fld_set}]},
          "p_filter": {to:[{field: "rsa.misc.p_filter", setter: fld_set}]},
          "p_group_object": {to:[{field: "rsa.misc.p_group_object", setter: fld_set}]},
          "p_id": {to:[{field: "rsa.misc.p_id", setter: fld_set}]},
          "p_month": {to:[{field: "rsa.time.p_month", setter: fld_set}]},
          "p_msgid": {to:[{field: "rsa.misc.p_msgid", setter: fld_set}]},
          "p_msgid1": {to:[{field: "rsa.misc.p_msgid1", setter: fld_set}]},
          "p_msgid2": {to:[{field: "rsa.misc.p_msgid2", setter: fld_set}]},
          "p_result1": {to:[{field: "rsa.misc.p_result1", setter: fld_set}]},
          "p_time": {to:[{field: "rsa.time.p_time", setter: fld_set}]},
          "p_time1": {to:[{field: "rsa.time.p_time1", setter: fld_set}]},
          "p_time2": {to:[{field: "rsa.time.p_time2", setter: fld_set}]},
          "p_url": {to:[{field: "rsa.web.p_url", setter: fld_set}]},
          "p_user_agent": {to:[{field: "rsa.web.p_user_agent", setter: fld_set}]},
          "p_web_cookie": {to:[{field: "rsa.web.p_web_cookie", setter: fld_set}]},
          "p_web_method": {to:[{field: "rsa.web.p_web_method", setter: fld_set}]},
          "p_web_referer": {to:[{field: "rsa.web.p_web_referer", setter: fld_set}]},
          "p_year": {to:[{field: "rsa.time.p_year", setter: fld_set}]},
          "packet_length": {to:[{field: "rsa.network.packet_length", setter: fld_set}]},
          "paddr": {convert: to_ip, to:[{field: "rsa.network.paddr", setter: fld_set}]},
          "param": {to:[{field: "rsa.misc.param", setter: fld_set}]},
          "param.dst": {to:[{field: "rsa.misc.param_dst", setter: fld_set}]},
          "param.src": {to:[{field: "rsa.misc.param_src", setter: fld_set}]},
          "parent_node": {to:[{field: "rsa.misc.parent_node", setter: fld_set}]},
          "parse.error": {to:[{field: "rsa.internal.parse_error", setter: fld_set}]},
          "password": {to:[{field: "rsa.identity.password", setter: fld_set}]},
          "password_chg": {to:[{field: "rsa.misc.password_chg", setter: fld_set}]},
          "password_expire": {to:[{field: "rsa.misc.password_expire", setter: fld_set}]},
          "patient_fname": {to:[{field: "rsa.healthcare.patient_fname", setter: fld_set}]},
          "patient_id": {to:[{field: "rsa.healthcare.patient_id", setter: fld_set}]},
          "patient_lname": {to:[{field: "rsa.healthcare.patient_lname", setter: fld_set}]},
          "patient_mname": {to:[{field: "rsa.healthcare.patient_mname", setter: fld_set}]},
          "payload.req": {convert: to_long, to:[{field: "rsa.internal.payload_req", setter: fld_set}]},
          "payload.res": {convert: to_long, to:[{field: "rsa.internal.payload_res", setter: fld_set}]},
          "peer": {to:[{field: "rsa.crypto.peer", setter: fld_set}]},
          "peer_id": {to:[{field: "rsa.crypto.peer_id", setter: fld_set}]},
          "permgranted": {to:[{field: "rsa.misc.permgranted", setter: fld_set}]},
          "permissions": {to:[{field: "rsa.db.permissions", setter: fld_set}]},
          "permwanted": {to:[{field: "rsa.misc.permwanted", setter: fld_set}]},
          "pgid": {to:[{field: "rsa.misc.pgid", setter: fld_set}]},
          "phone_number": {to:[{field: "rsa.misc.phone", setter: fld_prio, prio: 2}]},
          "phost": {to:[{field: "rsa.network.phost", setter: fld_set}]},
          "pid": {to:[{field: "rsa.misc.pid", setter: fld_set}]},
          "policy": {to:[{field: "rsa.misc.policy", setter: fld_set}]},
          "policyUUID": {to:[{field: "rsa.misc.policyUUID", setter: fld_set}]},
          "policy_id": {to:[{field: "rsa.misc.policy_id", setter: fld_set}]},
          "policy_value": {to:[{field: "rsa.misc.policy_value", setter: fld_set}]},
          "policy_waiver": {to:[{field: "rsa.misc.policy_waiver", setter: fld_set}]},
          "policyname": {to:[{field: "rsa.misc.policy_name", setter: fld_prio, prio: 0}]},
          "pool_id": {to:[{field: "rsa.misc.pool_id", setter: fld_set}]},
          "pool_name": {to:[{field: "rsa.misc.pool_name", setter: fld_set}]},
          "port": {convert: to_long, to:[{field: "rsa.network.port", setter: fld_set}]},
          "portname": {to:[{field: "rsa.misc.port_name", setter: fld_set}]},
          "pread": {convert: to_long, to:[{field: "rsa.db.pread", setter: fld_set}]},
          "priority": {to:[{field: "rsa.misc.priority", setter: fld_set}]},
          "privilege": {to:[{field: "rsa.file.privilege", setter: fld_set}]},
          "process.vid.dst": {to:[{field: "rsa.internal.process_vid_dst", setter: fld_set}]},
          "process.vid.src": {to:[{field: "rsa.internal.process_vid_src", setter: fld_set}]},
          "process_id_val": {to:[{field: "rsa.misc.process_id_val", setter: fld_set}]},
          "processing_time": {to:[{field: "rsa.time.process_time", setter: fld_set}]},
          "profile": {to:[{field: "rsa.identity.profile", setter: fld_set}]},
          "prog_asp_num": {to:[{field: "rsa.misc.prog_asp_num", setter: fld_set}]},
          "program": {to:[{field: "rsa.misc.program", setter: fld_set}]},
          "protocol_detail": {to:[{field: "rsa.network.protocol_detail", setter: fld_set}]},
          "pwwn": {to:[{field: "rsa.storage.pwwn", setter: fld_set}]},
          "r_hostid": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "real_data": {to:[{field: "rsa.misc.real_data", setter: fld_set}]},
          "realm": {to:[{field: "rsa.identity.realm", setter: fld_set}]},
          "reason": {to:[{field: "rsa.misc.reason", setter: fld_set}]},
          "rec_asp_device": {to:[{field: "rsa.misc.rec_asp_device", setter: fld_set}]},
          "rec_asp_num": {to:[{field: "rsa.misc.rec_asp_num", setter: fld_set}]},
          "rec_library": {to:[{field: "rsa.misc.rec_library", setter: fld_set}]},
          "recorded_time": {convert: to_date, to:[{field: "rsa.time.recorded_time", setter: fld_set}]},
          "recordnum": {to:[{field: "rsa.misc.recordnum", setter: fld_set}]},
          "registry.key": {to:[{field: "rsa.endpoint.registry_key", setter: fld_set}]},
          "registry.value": {to:[{field: "rsa.endpoint.registry_value", setter: fld_set}]},
          "remote_domain": {to:[{field: "rsa.web.remote_domain", setter: fld_set}]},
          "remote_domain_id": {to:[{field: "rsa.network.remote_domain_id", setter: fld_set}]},
          "reputation_num": {convert: to_double, to:[{field: "rsa.web.reputation_num", setter: fld_set}]},
          "resource": {to:[{field: "rsa.internal.resource", setter: fld_set}]},
          "resource_class": {to:[{field: "rsa.internal.resource_class", setter: fld_set}]},
          "result": {to:[{field: "rsa.misc.result", setter: fld_set}]},
          "result_code": {to:[{field: "rsa.misc.result_code", setter: fld_prio, prio: 1}]},
          "resultcode": {to:[{field: "rsa.misc.result_code", setter: fld_prio, prio: 0}]},
          "rid": {convert: to_long, to:[{field: "rsa.internal.rid", setter: fld_set}]},
          "risk": {to:[{field: "rsa.misc.risk", setter: fld_set}]},
          "risk_info": {to:[{field: "rsa.misc.risk_info", setter: fld_set}]},
          "risk_num": {convert: to_double, to:[{field: "rsa.misc.risk_num", setter: fld_set}]},
          "risk_num_comm": {convert: to_double, to:[{field: "rsa.misc.risk_num_comm", setter: fld_set}]},
          "risk_num_next": {convert: to_double, to:[{field: "rsa.misc.risk_num_next", setter: fld_set}]},
          "risk_num_sand": {convert: to_double, to:[{field: "rsa.misc.risk_num_sand", setter: fld_set}]},
          "risk_num_static": {convert: to_double, to:[{field: "rsa.misc.risk_num_static", setter: fld_set}]},
          "risk_suspicious": {to:[{field: "rsa.misc.risk_suspicious", setter: fld_set}]},
          "risk_warning": {to:[{field: "rsa.misc.risk_warning", setter: fld_set}]},
          "rpayload": {to:[{field: "rsa.network.rpayload", setter: fld_set}]},
          "ruid": {to:[{field: "rsa.misc.ruid", setter: fld_set}]},
          "rule": {to:[{field: "rsa.misc.rule", setter: fld_set}]},
          "rule_group": {to:[{field: "rsa.misc.rule_group", setter: fld_set}]},
          "rule_template": {to:[{field: "rsa.misc.rule_template", setter: fld_set}]},
          "rule_uid": {to:[{field: "rsa.misc.rule_uid", setter: fld_set}]},
          "rulename": {to:[{field: "rsa.misc.rule_name", setter: fld_set}]},
          "s_certauth": {to:[{field: "rsa.crypto.s_certauth", setter: fld_set}]},
          "s_cipher": {to:[{field: "rsa.crypto.cipher_src", setter: fld_set}]},
          "s_ciphersize": {convert: to_long, to:[{field: "rsa.crypto.cipher_size_src", setter: fld_set}]},
          "s_context": {to:[{field: "rsa.misc.context_subject", setter: fld_set}]},
          "s_sslver": {to:[{field: "rsa.crypto.ssl_ver_src", setter: fld_set}]},
          "sburb": {to:[{field: "rsa.misc.sburb", setter: fld_set}]},
          "scheme": {to:[{field: "rsa.crypto.scheme", setter: fld_set}]},
          "sdomain_fld": {to:[{field: "rsa.misc.sdomain_fld", setter: fld_set}]},
          "search.text": {to:[{field: "rsa.misc.search_text", setter: fld_set}]},
          "sec": {to:[{field: "rsa.misc.sec", setter: fld_set}]},
          "second": {to:[{field: "rsa.misc.second", setter: fld_set}]},
          "sensor": {to:[{field: "rsa.misc.sensor", setter: fld_set}]},
          "sensorname": {to:[{field: "rsa.misc.sensorname", setter: fld_set}]},
          "seqnum": {to:[{field: "rsa.misc.seqnum", setter: fld_set}]},
          "serial_number": {to:[{field: "rsa.misc.serial_number", setter: fld_set}]},
          "service.account": {to:[{field: "rsa.identity.service_account", setter: fld_set}]},
          "session": {to:[{field: "rsa.misc.session", setter: fld_set}]},
          "session.split": {to:[{field: "rsa.internal.session_split", setter: fld_set}]},
          "sessionid": {to:[{field: "rsa.misc.log_session_id", setter: fld_set}]},
          "sessionid1": {to:[{field: "rsa.misc.log_session_id1", setter: fld_set}]},
          "sessiontype": {to:[{field: "rsa.misc.sessiontype", setter: fld_set}]},
          "severity": {to:[{field: "rsa.misc.severity", setter: fld_set}]},
          "sid": {to:[{field: "rsa.identity.user_sid_dst", setter: fld_set}]},
          "sig.name": {to:[{field: "rsa.misc.sig_name", setter: fld_set}]},
          "sigUUID": {to:[{field: "rsa.misc.sigUUID", setter: fld_set}]},
          "sigcat": {to:[{field: "rsa.misc.sigcat", setter: fld_set}]},
          "sigid": {convert: to_long, to:[{field: "rsa.misc.sig_id", setter: fld_set}]},
          "sigid1": {convert: to_long, to:[{field: "rsa.misc.sig_id1", setter: fld_set}]},
          "sigid_string": {to:[{field: "rsa.misc.sig_id_str", setter: fld_set}]},
          "signame": {to:[{field: "rsa.misc.policy_name", setter: fld_prio, prio: 1}]},
          "sigtype": {to:[{field: "rsa.crypto.sig_type", setter: fld_set}]},
          "sinterface": {to:[{field: "rsa.network.sinterface", setter: fld_set}]},
          "site": {to:[{field: "rsa.internal.site", setter: fld_set}]},
          "size": {convert: to_long, to:[{field: "rsa.internal.size", setter: fld_set}]},
          "smask": {to:[{field: "rsa.network.smask", setter: fld_set}]},
          "snmp.oid": {to:[{field: "rsa.misc.snmp_oid", setter: fld_set}]},
          "snmp.value": {to:[{field: "rsa.misc.snmp_value", setter: fld_set}]},
          "sourcefile": {to:[{field: "rsa.internal.sourcefile", setter: fld_set}]},
          "space": {to:[{field: "rsa.misc.space", setter: fld_set}]},
          "space1": {to:[{field: "rsa.misc.space1", setter: fld_set}]},
          "spi": {to:[{field: "rsa.misc.spi", setter: fld_set}]},
          "sql": {to:[{field: "rsa.misc.sql", setter: fld_set}]},
          "src_dn": {to:[{field: "rsa.identity.dn_src", setter: fld_set}]},
          "src_payload": {to:[{field: "rsa.misc.payload_src", setter: fld_set}]},
          "src_spi": {to:[{field: "rsa.misc.spi_src", setter: fld_set}]},
          "src_zone": {to:[{field: "rsa.network.zone_src", setter: fld_set}]},
          "srcburb": {to:[{field: "rsa.misc.srcburb", setter: fld_set}]},
          "srcdom": {to:[{field: "rsa.misc.srcdom", setter: fld_set}]},
          "srcservice": {to:[{field: "rsa.misc.srcservice", setter: fld_set}]},
          "ssid": {to:[{field: "rsa.wireless.wlan_ssid", setter: fld_prio, prio: 0}]},
          "stamp": {convert: to_date, to:[{field: "rsa.time.stamp", setter: fld_set}]},
          "starttime": {convert: to_date, to:[{field: "rsa.time.starttime", setter: fld_set}]},
          "state": {to:[{field: "rsa.misc.state", setter: fld_set}]},
          "statement": {to:[{field: "rsa.internal.statement", setter: fld_set}]},
          "status": {to:[{field: "rsa.misc.status", setter: fld_set}]},
          "status1": {to:[{field: "rsa.misc.status1", setter: fld_set}]},
          "streams": {convert: to_long, to:[{field: "rsa.misc.streams", setter: fld_set}]},
          "subcategory": {to:[{field: "rsa.misc.subcategory", setter: fld_set}]},
          "subject": {to:[{field: "rsa.email.subject", setter: fld_set}]},
          "svcno": {to:[{field: "rsa.misc.svcno", setter: fld_set}]},
          "system": {to:[{field: "rsa.misc.system", setter: fld_set}]},
          "t_context": {to:[{field: "rsa.misc.context_target", setter: fld_set}]},
          "task_name": {to:[{field: "rsa.file.task_name", setter: fld_set}]},
          "tbdstr1": {to:[{field: "rsa.misc.tbdstr1", setter: fld_set}]},
          "tbdstr2": {to:[{field: "rsa.misc.tbdstr2", setter: fld_set}]},
          "tbl_name": {to:[{field: "rsa.db.table_name", setter: fld_set}]},
          "tcp_flags": {convert: to_long, to:[{field: "rsa.misc.tcp_flags", setter: fld_set}]},
          "terminal": {to:[{field: "rsa.misc.terminal", setter: fld_set}]},
          "tgtdom": {to:[{field: "rsa.misc.tgtdom", setter: fld_set}]},
          "tgtdomain": {to:[{field: "rsa.misc.tgtdomain", setter: fld_set}]},
          "threat_name": {to:[{field: "rsa.threat.threat_category", setter: fld_set}]},
          "threat_source": {to:[{field: "rsa.threat.threat_source", setter: fld_set}]},
          "threat_val": {to:[{field: "rsa.threat.threat_desc", setter: fld_set}]},
          "threshold": {to:[{field: "rsa.misc.threshold", setter: fld_set}]},
          "time": {convert: to_date, to:[{field: "rsa.internal.time", setter: fld_set}]},
          "timestamp": {to:[{field: "rsa.time.timestamp", setter: fld_set}]},
          "timezone": {to:[{field: "rsa.time.timezone", setter: fld_set}]},
          "to": {to:[{field: "rsa.email.email_dst", setter: fld_set}]},
          "tos": {convert: to_long, to:[{field: "rsa.misc.tos", setter: fld_set}]},
          "trans_from": {to:[{field: "rsa.email.trans_from", setter: fld_set}]},
          "trans_id": {to:[{field: "rsa.db.transact_id", setter: fld_set}]},
          "trans_to": {to:[{field: "rsa.email.trans_to", setter: fld_set}]},
          "trigger_desc": {to:[{field: "rsa.misc.trigger_desc", setter: fld_set}]},
          "trigger_val": {to:[{field: "rsa.misc.trigger_val", setter: fld_set}]},
          "type": {to:[{field: "rsa.misc.type", setter: fld_set}]},
          "type1": {to:[{field: "rsa.misc.type1", setter: fld_set}]},
          "tzone": {to:[{field: "rsa.time.tzone", setter: fld_set}]},
          "ubc.req": {convert: to_long, to:[{field: "rsa.internal.ubc_req", setter: fld_set}]},
          "ubc.res": {convert: to_long, to:[{field: "rsa.internal.ubc_res", setter: fld_set}]},
          "udb_class": {to:[{field: "rsa.misc.udb_class", setter: fld_set}]},
          "url_fld": {to:[{field: "rsa.misc.url_fld", setter: fld_set}]},
          "urlpage": {to:[{field: "rsa.web.urlpage", setter: fld_set}]},
          "urlroot": {to:[{field: "rsa.web.urlroot", setter: fld_set}]},
          "user_address": {to:[{field: "rsa.email.email", setter: fld_append}]},
          "user_dept": {to:[{field: "rsa.identity.user_dept", setter: fld_set}]},
          "user_div": {to:[{field: "rsa.misc.user_div", setter: fld_set}]},
          "user_fname": {to:[{field: "rsa.identity.firstname", setter: fld_set}]},
          "user_lname": {to:[{field: "rsa.identity.lastname", setter: fld_set}]},
          "user_mname": {to:[{field: "rsa.identity.middlename", setter: fld_set}]},
          "user_org": {to:[{field: "rsa.identity.org", setter: fld_set}]},
          "user_role": {to:[{field: "rsa.identity.user_role", setter: fld_set}]},
          "userid": {to:[{field: "rsa.misc.userid", setter: fld_set}]},
          "username_fld": {to:[{field: "rsa.misc.username_fld", setter: fld_set}]},
          "utcstamp": {to:[{field: "rsa.misc.utcstamp", setter: fld_set}]},
          "v_instafname": {to:[{field: "rsa.misc.v_instafname", setter: fld_set}]},
          "vendor_event_cat": {to:[{field: "rsa.investigations.event_vcat", setter: fld_set}]},
          "version": {to:[{field: "rsa.misc.version", setter: fld_set}]},
          "vid": {to:[{field: "rsa.internal.msg_vid", setter: fld_set}]},
          "virt_data": {to:[{field: "rsa.misc.virt_data", setter: fld_set}]},
          "virusname": {to:[{field: "rsa.misc.virusname", setter: fld_set}]},
          "vlan": {convert: to_long, to:[{field: "rsa.network.vlan", setter: fld_set}]},
          "vlan.name": {to:[{field: "rsa.network.vlan_name", setter: fld_set}]},
          "vm_target": {to:[{field: "rsa.misc.vm_target", setter: fld_set}]},
          "vpnid": {to:[{field: "rsa.misc.vpnid", setter: fld_set}]},
          "vsys": {to:[{field: "rsa.misc.vsys", setter: fld_set}]},
          "vuln_ref": {to:[{field: "rsa.misc.vuln_ref", setter: fld_set}]},
          "web_cookie": {to:[{field: "rsa.web.web_cookie", setter: fld_set}]},
          "web_extension_tmp": {to:[{field: "rsa.web.web_extension_tmp", setter: fld_set}]},
          "web_host": {to:[{field: "rsa.web.alias_host", setter: fld_set}]},
          "web_method": {to:[{field: "rsa.misc.action", setter: fld_append}]},
          "web_page": {to:[{field: "rsa.web.web_page", setter: fld_set}]},
          "web_ref_domain": {to:[{field: "rsa.web.web_ref_domain", setter: fld_set}]},
          "web_ref_host": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "web_ref_page": {to:[{field: "rsa.web.web_ref_page", setter: fld_set}]},
          "web_ref_query": {to:[{field: "rsa.web.web_ref_query", setter: fld_set}]},
          "web_ref_root": {to:[{field: "rsa.web.web_ref_root", setter: fld_set}]},
          "wifi_channel": {convert: to_long, to:[{field: "rsa.wireless.wlan_channel", setter: fld_set}]},
          "wlan": {to:[{field: "rsa.wireless.wlan_name", setter: fld_set}]},
          "word": {to:[{field: "rsa.internal.word", setter: fld_set}]},
          "workspace_desc": {to:[{field: "rsa.misc.workspace", setter: fld_set}]},
          "workstation": {to:[{field: "rsa.network.alias_host", setter: fld_append}]},
          "year": {to:[{field: "rsa.time.year", setter: fld_set}]},
          "zone": {to:[{field: "rsa.network.zone", setter: fld_set}]},
      };
      
      function to_date(value) {
          switch (typeof (value)) {
              case "object":
                  // This is a Date. But as it was obtained from evt.Get(), the VM
                  // doesn't see it as a JS Date anymore, thus value instanceof Date === false.
                  // Have to trust that any object here is a valid Date for Go.
                  return value;
              case "string":
                  var asDate = new Date(value);
                  if (!isNaN(asDate)) return asDate;
          }
      }
      
      // ECMAScript 5.1 doesn't have Object.MAX_SAFE_INTEGER / Object.MIN_SAFE_INTEGER.
      var maxSafeInt = Math.pow(2, 53) - 1;
      var minSafeInt = -maxSafeInt;
      
      function to_long(value) {
          var num = parseInt(value);
          // Better not to index a number if it's not safe (above 53 bits).
          return !isNaN(num) && minSafeInt <= num && num <= maxSafeInt ? num : undefined;
      }
      
      function to_ip(value) {
          if (value.indexOf(":") === -1)
              return to_ipv4(value);
          return to_ipv6(value);
      }
      
      var ipv4_regex = /^(\d+)\.(\d+)\.(\d+)\.(\d+)$/;
      var ipv6_hex_regex = /^[0-9A-Fa-f]{1,4}$/;
      
      function to_ipv4(value) {
          var result = ipv4_regex.exec(value);
          if (result == null || result.length !== 5) return;
          for (var i = 1; i < 5; i++) {
              var num = strictToInt(result[i]);
              if (isNaN(num) || num < 0 || num > 255) return;
          }
          return value;
      }
      
      function to_ipv6(value) {
          var sqEnd = value.indexOf("]");
          if (sqEnd > -1) {
              if (value.charAt(0) !== "[") return;
              value = value.substr(1, sqEnd - 1);
          }
          var zoneOffset = value.indexOf("%");
          if (zoneOffset > -1) {
              value = value.substr(0, zoneOffset);
          }
          var parts = value.split(":");
          if (parts == null || parts.length < 3 || parts.length > 8) return;
          var numEmpty = 0;
          var innerEmpty = 0;
          for (var i = 0; i < parts.length; i++) {
              if (parts[i].length === 0) {
                  numEmpty++;
                  if (i > 0 && i + 1 < parts.length) innerEmpty++;
              } else if (!parts[i].match(ipv6_hex_regex) &&
                  // Accept an IPv6 with a valid IPv4 at the end.
                  ((i + 1 < parts.length) || !to_ipv4(parts[i]))) {
                  return;
              }
          }
          return innerEmpty === 0 && parts.length === 8 || innerEmpty === 1 ? value : undefined;
      }
      
      function to_double(value) {
          return parseFloat(value);
      }
      
      function to_mac(value) {
          // ES doesn't have a mac datatype so it's safe to ingest whatever was captured.
          return value;
      }
      
      function to_lowercase(value) {
          // to_lowercase is used against keyword fields, which can accept
          // any other type (numbers, dates).
          return typeof(value) === "string"? value.toLowerCase() : value;
      }
      
      function fld_set(dst, value) {
          dst[this.field] = { v: value };
      }
      
      function fld_append(dst, value) {
          if (dst[this.field] === undefined) {
              dst[this.field] = { v: [value] };
          } else {
              var base = dst[this.field];
              if (base.v.indexOf(value)===-1) base.v.push(value);
          }
      }
      
      function fld_prio(dst, value) {
          if (dst[this.field] === undefined) {
              dst[this.field] = { v: value, prio: this.prio};
          } else if(this.prio < dst[this.field].prio) {
              dst[this.field].v = value;
              dst[this.field].prio = this.prio;
          }
      }
      
      var valid_ecs_outcome = {
          'failure': true,
          'success': true,
          'unknown': true
      };
      
      function fld_ecs_outcome(dst, value) {
          value = value.toLowerCase();
          if (valid_ecs_outcome[value] === undefined) {
              value = 'unknown';
          }
          if (dst[this.field] === undefined) {
              dst[this.field] = { v: value };
          } else if (dst[this.field].v === 'unknown') {
              dst[this.field] = { v: value };
          }
      }
      
      function map_all(evt, targets, value) {
          for (var i = 0; i < targets.length; i++) {
              evt.Put(targets[i], value);
          }
      }
      
      function populate_fields(evt) {
          var base = evt.Get(FIELDS_OBJECT);
          if (base === null) return;
          alternate_datetime(evt);
          if (map_ecs) {
              do_populate(evt, base, ecs_mappings);
          }
          if (map_rsa) {
              do_populate(evt, base, rsa_mappings);
          }
          if (keep_raw) {
              evt.Put("rsa.raw", base);
          }
          evt.Delete(FIELDS_OBJECT);
      }
      
      var datetime_alt_components = [
          {field: "day", fmts: [[dF]]},
          {field: "year", fmts: [[dW]]},
          {field: "month", fmts: [[dB],[dG]]},
          {field: "date", fmts: [[dW,dSkip,dG,dSkip,dF],[dW,dSkip,dB,dSkip,dF],[dW,dSkip,dR,dSkip,dF]]},
          {field: "hour", fmts: [[dN]]},
          {field: "min", fmts: [[dU]]},
          {field: "secs", fmts: [[dO]]},
          {field: "time", fmts: [[dN, dSkip, dU, dSkip, dO]]},
      ];
      
      function alternate_datetime(evt) {
          if (evt.Get(FIELDS_PREFIX + "event_time") != null) {
              return;
          }
          var tzOffset = tz_offset;
          if (tzOffset === "event") {
              tzOffset = evt.Get("event.timezone");
          }
          var container = new DateContainer(tzOffset);
          for (var i=0; i<datetime_alt_components.length; i++) {
              var dtc = datetime_alt_components[i];
              var value = evt.Get(FIELDS_PREFIX + dtc.field) || evt.Get(FIELDS_PREFIX + "h" + dtc.field);
              if (value == null) continue;
              for (var f=0; f<dtc.fmts.length; f++) {
                  var pos = date_time_try_pattern_at_pos(dtc.fmts[f], value, 0, container);
                  if (pos !== undefined) {
                      break;
                  }
              }
          }
          var date = container.toDate();
          if (date !== undefined) {
              evt.Put(FIELDS_PREFIX + "event_time", date);
          }
      }
      
      function do_populate(evt, base, targets) {
          var result = {};
          var key;
          for (key in base) {
              if (!base.hasOwnProperty(key)) continue;
              var mapping = targets[key];
              if (mapping === undefined) continue;
              var value = base[key];
              if (mapping.convert !== undefined) {
                  value = mapping.convert(value);
                  if (value === undefined) {
                      if (debug) {
                          console.debug("Failed to convert field '" + key + "' = '" + base[key] + "' with " + mapping.convert.name);
                      }
                      continue;
                  }
              }
              for (var i=0; i<mapping.to.length; i++) {
                  var tgt = mapping.to[i];
                  tgt.setter(result, value);
              }
          }
          for (key in result) {
              if (!result.hasOwnProperty(key)) continue;
              evt.Put(key, result[key].v);
          }
      }
      
      function test() {
          // Silence console output during test.
          var saved = console;
          console = {
              debug: function() {},
              warn: function() {},
              error: function() {},
          };
          test_date_times();
          test_tz();
          test_conversions();
          test_mappings();
          test_url();
          test_calls();
          test_assumptions();
          test_tvm();
          console = saved;
      }
      
      function pass_test(input, output) {
          return {input: input, expected: output !== undefined ? output : input};
      }
      
      function fail_test(input) {
          return {input: input};
      }
      
      function test_date_times() {
          var date_time = function(input) {
              var res = date_time_try_pattern(input.fmt, input.str, input.tz);
              return res !== undefined? res.toISOString() : res;
          };
          test_fn_call(date_time, [
              pass_test(
                  {
                      fmt: [dW,dc("-"),dM,dc("-"),dD,dc("T"),dH,dc(":"),dT,dc(":"),dS],
                      str: "2017-10-16T15:23:42"
                  },
                  "2017-10-16T15:23:42.000Z"),
              pass_test(
                  {
                      fmt: [dW,dc("-"),dM,dc("-"),dD,dc("T"),dH,dc(":"),dT,dc(":"),dS],
                      str: "2017-10-16T15:23:42",
                      tz: "-02:00",
                  },
                  "2017-10-16T17:23:42.000Z"),
              pass_test(
                  {
                      fmt: [dR, dF, dc("th"), dY, dc(","), dI, dQ, dU, dc("min"), dO, dc("secs")],
                      str: "October 7th 22, 3 P.M. 5 min 12 secs"
                  },
                  "2022-10-07T15:05:12.000Z"),
              pass_test(
                  {
                      fmt: [dF, dc("/"), dB, dY, dc(","), dI, dP],
                      str: "31/OCT 70, 12am"
                  },
                  "1970-10-31T00:00:00.000Z"),
              pass_test(
                  {
                      fmt: [dX],
                      str: "1592241213",
                      tz: "+00:00"
                  },
                  "2020-06-15T17:13:33.000Z"),
              pass_test(
                  {
                      fmt: [dW, dG, dF, dZ],
                      str: "20314 12 3:5:42",
                      tz: "+02:00"
                  }, "2031-04-12T01:05:42.000Z"),
              pass_test(
                  {
                      fmt: [dW, dG, dF, dZ],
                      str: "20314 12 3:5:42",
                      tz: "-07:30",
                  }, "2031-04-12T10:35:42.000Z"),
              pass_test(
                  {
                      fmt: [dW, dG, dF, dZ],
                      str: "20314 12 3:5:42",
                      tz: "+0500",
                  }, "2031-04-11T22:05:42.000Z")
          ]);
      }
      
      function test_tz() {
          test_fn_call(parse_local_tz_offset, [
              pass_test(0, "+00:00"),
              pass_test(59, "+00:59"),
              pass_test(60, "+01:00"),
              pass_test(61, "+01:01"),
              pass_test(-1, "-00:01"),
              pass_test(-59, "-00:59"),
              pass_test(-60, "-01:00"),
              pass_test(705, "+11:45"),
              pass_test(-705, "-11:45"),
          ]);
          var date = new Date();
          var localOff = parse_local_tz_offset(-date.getTimezoneOffset());
          test_fn_call(parse_tz_offset, [
              pass_test("local", localOff),
              pass_test("event", "event"),
              pass_test("-07:00", "-07:00"),
              pass_test("-1145", "-11:45"),
              pass_test("+02", "+02:00"),
          ]);
      }
      
      function test_conversions() {
          test_fn_call(to_ip, [
              pass_test("127.0.0.1"),
              pass_test("255.255.255.255"),
              pass_test("008.189.239.199"),
              fail_test(""),
              fail_test("not an IP"),
              fail_test("42"),
              fail_test("127.0.0.1."),
              fail_test("127.0.0."),
              fail_test("10.100.1000.1"),
              pass_test("fd00:1111:2222:3333:4444:5555:6666:7777"),
              pass_test("fd00::7777%eth0", "fd00::7777"),
              pass_test("[fd00::7777]", "fd00::7777"),
              pass_test("[fd00::7777%enp0s3]", "fd00::7777"),
              pass_test("::1"),
              pass_test("::"),
              fail_test(":::"),
              fail_test("fff::1::3"),
              pass_test("ffff::ffff"),
              fail_test("::1ffff"),
              fail_test(":1234:"),
              fail_test("::1234z"),
              pass_test("1::3:4:5:6:7:8"),
              pass_test("::255.255.255.255"),
              pass_test("64:ff9b::192.0.2.33"),
              fail_test("::255.255.255.255:8"),
          ]);
          test_fn_call(to_long, [
              pass_test("1234", 1234),
              pass_test("0x2a", 42),
              fail_test("9007199254740992"),
              fail_test("9223372036854775808"),
              fail_test("NaN"),
              pass_test("-0x1fffffffffffff", -9007199254740991),
              pass_test("+9007199254740991", 9007199254740991),
              fail_test("-0x20000000000000"),
              fail_test("+9007199254740992"),
              pass_test(42),
          ]);
          test_fn_call(to_date, [
              {
                  input: new Date("2017-10-16T08:30:42Z"),
                  expected: "2017-10-16T08:30:42.000Z",
                  convert: Date.prototype.toISOString,
              },
              {
                  input: "2017-10-16T08:30:42Z",
                  expected: new Date("2017-10-16T08:30:42Z").toISOString(),
                  convert: Date.prototype.toISOString,
              },
              fail_test("Not really a date."),
          ]);
          test_fn_call(to_lowercase, [
              pass_test("Hello", "hello"),
              pass_test(45),
              pass_test(Date.now()),
          ]);
      }
      
      function test_fn_call(fn, cases) {
          cases.forEach(function (test, idx) {
              var result = fn(test.input);
              if (test.convert !== undefined) {
                  result = test.convert.call(result);
              }
              if (result !== test.expected) {
                  throw "test " + fn.name + "#" + idx + " failed."
                      + " Input:" + JSON.stringify(test.input)
                      + " Expected:" + JSON.stringify(test.expected)
                      + " Got:" + JSON.stringify(result);
              }
          });
          if (debug) console.debug("test " + fn.name + " PASS.");
      }
      
      function test_mappings() {
          var test_mappings = {
              "a": {to: [{field: "raw.a", setter: fld_set}, {field: "list", setter: fld_append}]},
              "b": {to: [{field: "list", setter: fld_append}]},
              "c": {to: [{field: "raw.c", setter: fld_set}, {field: "list", setter: fld_append}]},
              "d": {to: [{field: "unique", setter: fld_prio, prio: 2}]},
              "e": {to: [{field: "unique", setter: fld_prio, prio: 1}]},
              "f": {to: [{field: "unique", setter: fld_prio, prio: 3}]}
          };
          var values = {
              "a": "value1",
              "b": "value2",
              "c": "value1",
              "d": "value3",
              "e": "value4",
              "f": "value5"
          };
          var expected = {
              "raw.a": "value1",
              "raw.c": "value1",
              "list": ["value1", "value2"],
              "unique": "value4"
          };
          var evt = new Event({});
          do_populate(evt, values, test_mappings);
          var key;
          for (key in expected) {
              var got = JSON.stringify(evt.Get(key));
              var exp = JSON.stringify(expected[key]);
              if (got !== exp) {
                  throw "test test_mappings failed for key " + key
                      + ". Expected:" + exp
                      + " Got:" + got;
              }
          }
      }
      
      function copy_name(dst, src) {
          Object.defineProperty(dst, "name", { value: src.name });
          return dst;
      }
      
      function test_url() {
          function test(fn) {
              return copy_name(function (input) {
                  var evt = new Event({});
                  evt.Put(FIELDS_PREFIX + "src", input);
                  fn("dst", "src")(evt);
                  var result = evt.Get(FIELDS_PREFIX + "dst");
                  return result? result : undefined;
              }, fn);
          }
          test_fn_call(test(domain), [
              pass_test("http://example.com", "example.com"),
              pass_test("http://example.com/", "example.com"),
              pass_test("ftp+ssh://example.com/path", "example.com"),
              pass_test("https://example.com:4443/path", "example.com"),
              pass_test("www.example.net/foo/bar", "www.example.net"),
              pass_test("http://127.0.0.1:8080", "127.0.0.1"),
              pass_test("http://[::1]", "[::1]"),
              pass_test("http://[::1]:8080", "[::1]"),
              pass_test("https://root:pass@example.org:80/foo/bar", "example.org"),
              pass_test("root:pass@example.org:80/foo/bar", "example.org"),
              fail_test("/my/path"),
              fail_test(""),
          ]);
          test_fn_call(test(path), [
              pass_test("http://example.net/a/b/d?x=z", "/a/b/d"),
              pass_test("root:pass@www.example.net:80/a/b/d?x=z", "/a/b/d"),
              pass_test("/a/b/d?x=z#frag", "/a/b/d"),
              pass_test("localhost/", "/"),
              fail_test("domain"),
              fail_test(""),
              fail_test(" "),
          ]);
          test_fn_call(test(page), [
             pass_test("http://example.net/index.html", "index.html"),
              pass_test("http://localhost/index.html", "index.html"),
              pass_test("example.com/a/b/c", "c"),
              fail_test("ftp://example.com/"),
              pass_test("ftp://example.com/main#fragment", "main"),
              pass_test("ftp://example.com/0#fragment", "0"),
              fail_test(""),
          ]);
          test_fn_call(test(port), [
              pass_test("http://0.0.0.0:1234", "1234"),
              pass_test("https://0.0.0.0", "443"),
              pass_test("https://[::abcd:1234]:4443/a?b#c", "4443"),
              fail_test("www.example.net"),
              fail_test(""),
          ]);
          test_fn_call(test(query), [
              pass_test("http://localhost/post?request=1234&user=root", "request=1234&user=root"),
              pass_test("http://localhost/post?request=1234&user=root#m1234", "request=1234&user=root"),
              fail_test("http://localhost/post"),
              fail_test("http://localhost/post?"),
              fail_test(""),
          ]);
          test_fn_call(test(root), [
              pass_test("http://localhost/post?request=1234&user=root", "http://localhost"),
              pass_test("https://[::abcd:1234]:4443/a?b#c", "https://[::abcd:1234]:4443"),
              pass_test("localhost"),
              fail_test("/a/b/c"),
              fail_test(""),
              pass_test("http://user:pass@example.net", "http://example.net"),
          ]);
          test_fn_call(test(ext), [
              pass_test("http://example.net/index.html", ".html"),
              pass_test("http://localhost/index.html?a=b#c", ".html"),
              fail_test("example.com/a/b/c"),
              fail_test("ftp://example.com/"),
              pass_test("ftp://example.com/main.txt#fragment", ".txt"),
              fail_test("ftp://example.com/0#fragment"),
              fail_test(""),
          ]);
      }
      
      function test_calls() {
          test_fn_call(RMQ, [
              fail_test(["a", "b"]),
              fail_test([]),
              pass_test(["unquoted"], "unquoted"),
              pass_test([""], ""),
              pass_test(["''"], ""),
              pass_test(["'hello'"], "hello"),
              pass_test([" 'world'  "], "world"),
              pass_test(['" "'], " "),
              pass_test(["``"], ""),
              pass_test(["`woot'"], "`woot'"),
          ]);
          test_fn_call(CALC, [
              fail_test([]),
              fail_test(["1"]),
              fail_test(["01", "+"]),
              pass_test(["2","+","2"], "4"),
              pass_test(["012","*","2"], "24"),
              pass_test(["0x10","+","1"], "17"),
              pass_test(["0","-","1"], "-1"),
              fail_test(["15","/","3"]),
          ]);
          test_fn_call(STRCAT, [
              pass_test([], ""),
              pass_test(["1"], "1"),
              pass_test(["01", "+"], "01+"),
              pass_test(["hell", "oW", "ORLD"], "helloWORLD"),
          ]);
          var evt = new Event({});
          evt.Put(FIELDS_PREFIX + "a", "7");
          evt.Put(FIELDS_PREFIX + "b", "'hello'");
          evt.Put(FIELDS_PREFIX + "c", "11");
          var call_test = function(fn) {
              return function(input) {
                  call({
                      args: input,
                      "fn": fn,
                      dest: FIELDS_PREFIX+"z",
                  })(evt);
                  var result = evt.Get(FIELDS_PREFIX + "z");
                  evt.Delete(FIELDS_PREFIX + "z");
                  return result != null? result : undefined;
              }
          }
          test_fn_call(call_test(RMQ), [
              pass_test([field("b")], "hello"),
              pass_test([constant("'world'")], "world"),
          ]);
          test_fn_call(call_test(CALC), [
              pass_test([field("a"), constant("-"), field("c")], "-4"),
              pass_test([field("a"), constant("*"), constant("7")], "49"),
              fail_test([field("a"), constant("*"), constant("7a")]),
          ]);
          test_fn_call(call_test(STRCAT), [
              pass_test([field("a"), constant("-"), field("c")], "7-11"),
          ]);
      }
      
      function test_assumptions() {
          var str = "011";
          if (strictToInt(str) !== 11) {
              throw("string conversion interprets leading zeros as octal");
          }
          if (parseInt(str) !== 11) {
              throw("parseInt interprets leading zeros as octal");
          }
          if (Number(str) !== 11) {
              throw("Number conversion interprets leading zeros as octal");
          }
          str = "17a";
          if (!isNaN(strictToInt(str))) {
              throw("string conversion accepts extra chars");
          }
          if (isNaN(parseInt(str))) {
              throw("parseInt doesn't accept extra chars");
          }
          if (!isNaN(Number(str))) {
              throw("Number conversion accepts extra chars");
          }
      }
      
      // Tests the TAGVALMAP feature.
      function test_tvm() {
          var tests = [
              {
                  config: {
                      pair_separator: ',',
                      kv_separator: '=',
                      open_quote: '[',
                      close_quote: ']'
                  },
                  mappings: {
                      "key a": "url",
                      "key_b": "b",
                      "Operation": "operation",
                  },
                  on_success: processor_chain([
                                      setf("d","b")
                                  ]),
                  message: "key_b=value for=B, key a = [http://example.com/] ,Operation=[COPY],other stuff=null,,ignore",
                  expected: {
                      "nwparser.url": "http://example.com/",
                      "nwparser.b": "value for=B",
                      "nwparser.operation": "COPY",
                      "nwparser.d": "value for=B",
                      "log.flags": null,
                  }
              },
              {
                  config: {
                      pair_separator: ',',
                      kv_separator: '=',
                      open_quote: '[',
                      close_quote: ']'
                  },
                  mappings: {
                      "key a": "url",
                      "key_b": "b",
                      "Operation": "operation"
                  },
                  on_success: processor_chain([
                      setf("d","b")
                  ]),
                  message: "nothing to see here",
                  expected: {
                      "nwparser.url": null,
                      "nwparser.d": null,
                      "log.flags": "tagval_parsing_error",
                  }
              },
              {
                  config: {
                      pair_separator: ' ',
                      kv_separator: ':',
                      open_quote: '"',
                      close_quote: '"'
                  },
                  mappings: {
                      "ICMP Type": "icmp_type",
                      "ICMP Code": "icmp_code",
                      "Operation": "operation",
                  },
                  on_success: processor_chain([
                      setc("success","true")
                  ]),
                  message: "Operation:drop ICMP Type:5 ICMP Code:1 ",
                  expected: {
                      "nwparser.icmp_code": "1",
                      "nwparser.icmp_type": "5",
                      "nwparser.operation": "drop",
                      "nwparser.success": "true",
                      "log.flags": null,
                  }
              },
          ];
          var assertEqual = function(evt, key, expected) {
              var value = evt.Get(key);
              if (value !== expected)
                  throw("failed for " + key + ": expected:'" + expected + "' got:'" + value + "'");
          };
          tests.forEach(function (test, idx) {
              var processor = tagval("test", "message", test.config, test.mappings, test.on_success);
              var evt = new Event({
                  "message": test.message,
              });
              processor(evt);
              for (var key in test.expected) {
                  assertEqual(evt, key, test.expected[key]);
              }
          });
      }
      
      //  Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
      //  or more contributor license agreements. Licensed under the Elastic License;
      //  you may not use this file except in compliance with the Elastic License.
      var tvm = {
      	pair_separator: ";",
      	kv_separator: "=",
      	open_quote: "\"",
      	close_quote: "\"",
      };
      
      function DeviceProcessor() {
      	var builder = new processor.Chain();
      	builder.Add(save_flags);
      	builder.Add(strip_syslog_priority);
      	builder.Add(chain1);
      	builder.Add(populate_fields);
      	builder.Add(restore_flags);
      	var chain = builder.Build();
      	return {
      		process: chain.Run,
      	}
      }
      
      var dup1 = setc("eventcategory","1501040000");
      
      var dup2 = setf("msg","$MSG");
      
      var dup3 = setf("id","messageid");
      
      var dup4 = setc("eventcategory","1605020000");
      
      var dup5 = setc("eventcategory","1401030000");
      
      var dup6 = setc("ec_subject","User");
      
      var dup7 = setc("ec_activity","Logon");
      
      var dup8 = setc("ec_theme","Authentication");
      
      var dup9 = setc("ec_outcome","Failure");
      
      var dup10 = setc("eventcategory","1401060000");
      
      var dup11 = setc("ec_outcome","Success");
      
      var dup12 = setc("eventcategory","1401070000");
      
      var dup13 = setc("ec_activity","Logoff");
      
      var dup14 = setc("ec_theme","Policy");
      
      var dup15 = setc("eventcategory","1803000000");
      
      var dup16 = setc("ec_subject","NetworkComm");
      
      var dup17 = setc("ec_theme","Communication");
      
      var dup18 = setc("ec_theme","AccessControl");
      
      var dup19 = setc("eventcategory","1801000000");
      
      var dup20 = setc("eventcategory","1801020000");
      
      var dup21 = setc("eventcategory","1609000000");
      
      var dup22 = setc("eventcategory","1603050000");
      
      var dup23 = setc("eventcategory","1612010000");
      
      var dup24 = date_time({
      	dest: "event_time",
      	args: ["hdatetime"],
      	fmts: [
      		[dW,dc("-"),dM,dc("-"),dD,dc("T"),dZ,dc("Z")],
      	],
      });
      
      var dup25 = date_time({
      	dest: "event_time",
      	args: ["hmonth","hday","htime"],
      	fmts: [
      		[dB,dD,dZ],
      	],
      });
      
      var dup26 = setc("eventcategory","1612000000");
      
      var dup27 = setc("eventcategory","1303000000");
      
      var dup28 = setc("ec_outcome","Error");
      
      var dup29 = setc("ec_activity","Disable");
      
      var dup30 = setc("eventcategory","1401050200");
      
      var dup31 = match("MESSAGE#568:300:02/0", "nwparser.payload", "Version=%{p0}");
      
      var dup32 = match("MESSAGE#568:300:02/1_0", "nwparser.p0", "\"%{version}\";Message=%{p0}");
      
      var dup33 = match("MESSAGE#568:300:02/1_1", "nwparser.p0", "%{version};Message=%{p0}");
      
      var dup34 = match("MESSAGE#568:300:02/2_0", "nwparser.p0", "\"%{action}\";Issuer=%{p0}");
      
      var dup35 = match("MESSAGE#568:300:02/2_1", "nwparser.p0", "%{action};Issuer=%{p0}");
      
      var dup36 = match("MESSAGE#568:300:02/3_0", "nwparser.p0", "\"%{username}\";Station=%{p0}");
      
      var dup37 = match("MESSAGE#568:300:02/3_1", "nwparser.p0", "%{username};Station=%{p0}");
      
      var dup38 = match("MESSAGE#568:300:02/4_0", "nwparser.p0", "\"%{hostip}\";File=%{p0}");
      
      var dup39 = match("MESSAGE#568:300:02/4_1", "nwparser.p0", "%{hostip};File=%{p0}");
      
      var dup40 = match("MESSAGE#568:300:02/5_0", "nwparser.p0", "\"%{filename}\";Safe=%{p0}");
      
      var dup41 = match("MESSAGE#568:300:02/5_1", "nwparser.p0", "%{filename};Safe=%{p0}");
      
      var dup42 = match("MESSAGE#568:300:02/6_0", "nwparser.p0", "\"%{group_object}\";Location=%{p0}");
      
      var dup43 = match("MESSAGE#568:300:02/6_1", "nwparser.p0", "%{group_object};Location=%{p0}");
      
      var dup44 = match("MESSAGE#568:300:02/7_0", "nwparser.p0", "\"%{directory}\";Category=%{p0}");
      
      var dup45 = match("MESSAGE#568:300:02/7_1", "nwparser.p0", "%{directory};Category=%{p0}");
      
      var dup46 = match("MESSAGE#568:300:02/8_0", "nwparser.p0", "\"%{category}\";RequestId=%{p0}");
      
      var dup47 = match("MESSAGE#568:300:02/8_1", "nwparser.p0", "%{category};RequestId=%{p0}");
      
      var dup48 = match("MESSAGE#568:300:02/9_0", "nwparser.p0", "\"%{id1}\";Reason=%{p0}");
      
      var dup49 = match("MESSAGE#568:300:02/9_1", "nwparser.p0", "%{id1};Reason=%{p0}");
      
      var dup50 = match("MESSAGE#568:300:02/10_0", "nwparser.p0", "\"%{event_description}\";Severity=%{p0}");
      
      var dup51 = match("MESSAGE#568:300:02/10_1", "nwparser.p0", "%{event_description};Severity=%{p0}");
      
      var dup52 = match("MESSAGE#568:300:02/11_0", "nwparser.p0", "\"%{severity}\";SourceUser=%{p0}");
      
      var dup53 = match("MESSAGE#568:300:02/11_1", "nwparser.p0", "%{severity};SourceUser=%{p0}");
      
      var dup54 = match("MESSAGE#568:300:02/12_0", "nwparser.p0", "\"%{group}\";TargetUser=%{p0}");
      
      var dup55 = match("MESSAGE#568:300:02/12_1", "nwparser.p0", "%{group};TargetUser=%{p0}");
      
      var dup56 = match("MESSAGE#568:300:02/13_0", "nwparser.p0", "\"%{uid}\";GatewayStation=%{p0}");
      
      var dup57 = match("MESSAGE#568:300:02/13_1", "nwparser.p0", "%{uid};GatewayStation=%{p0}");
      
      var dup58 = match("MESSAGE#568:300:02/14_0", "nwparser.p0", "\"%{saddr}\";TicketID=%{p0}");
      
      var dup59 = match("MESSAGE#568:300:02/14_1", "nwparser.p0", "%{saddr};TicketID=%{p0}");
      
      var dup60 = match("MESSAGE#568:300:02/15_0", "nwparser.p0", "\"%{operation_id}\";PolicyID=%{p0}");
      
      var dup61 = match("MESSAGE#568:300:02/15_1", "nwparser.p0", "%{operation_id};PolicyID=%{p0}");
      
      var dup62 = match("MESSAGE#568:300:02/16_0", "nwparser.p0", "\"%{policyname}\";UserName=%{p0}");
      
      var dup63 = match("MESSAGE#568:300:02/16_1", "nwparser.p0", "%{policyname};UserName=%{p0}");
      
      var dup64 = match("MESSAGE#568:300:02/17_0", "nwparser.p0", "\"%{fld11}\";LogonDomain=%{p0}");
      
      var dup65 = match("MESSAGE#568:300:02/17_1", "nwparser.p0", "%{fld11};LogonDomain=%{p0}");
      
      var dup66 = match("MESSAGE#568:300:02/18_0", "nwparser.p0", "\"%{domain}\";Address=%{p0}");
      
      var dup67 = match("MESSAGE#568:300:02/18_1", "nwparser.p0", "%{domain};Address=%{p0}");
      
      var dup68 = match("MESSAGE#568:300:02/19_0", "nwparser.p0", "\"%{fld14}\";CPMStatus=%{p0}");
      
      var dup69 = match("MESSAGE#568:300:02/19_1", "nwparser.p0", "%{fld14};CPMStatus=%{p0}");
      
      var dup70 = match("MESSAGE#568:300:02/20_0", "nwparser.p0", "\"%{disposition}\";Port=%{p0}");
      
      var dup71 = match("MESSAGE#568:300:02/20_1", "nwparser.p0", "%{disposition};Port=%{p0}");
      
      var dup72 = match("MESSAGE#568:300:02/21_0", "nwparser.p0", "\"%{dport}\";Database=%{p0}");
      
      var dup73 = match("MESSAGE#568:300:02/21_1", "nwparser.p0", "%{dport};Database=%{p0}");
      
      var dup74 = match("MESSAGE#568:300:02/22_0", "nwparser.p0", "\"%{db_name}\";DeviceType=%{p0}");
      
      var dup75 = match("MESSAGE#568:300:02/22_1", "nwparser.p0", "%{db_name};DeviceType=%{p0}");
      
      var dup76 = match("MESSAGE#568:300:02/23_0", "nwparser.p0", "\"%{obj_type}\";ExtraDetails=\"ApplicationType=%{p0}");
      
      var dup77 = match("MESSAGE#568:300:02/23_1", "nwparser.p0", "%{obj_type};ExtraDetails=\"ApplicationType=%{p0}");
      
      var dup78 = setc("eventcategory","1502000000");
      
      var dup79 = setc("eventcategory","1402040100");
      
      var dup80 = setc("ec_activity","Modify");
      
      var dup81 = setc("ec_theme","Password");
      
      var dup82 = setc("eventcategory","1608000000");
      
      var dup83 = setc("eventcategory","1501000000");
      
      var dup84 = setc("eventcategory","1206000000");
      
      var dup85 = match("MESSAGE#621:411/1_0", "nwparser.p0", "\"%{version}\";%{p0}");
      
      var dup86 = match("MESSAGE#621:411/1_1", "nwparser.p0", "%{version};%{p0}");
      
      var dup87 = match("MESSAGE#621:411/2", "nwparser.p0", "Message=%{p0}");
      
      var dup88 = match("MESSAGE#621:411/3_0", "nwparser.p0", "\"%{action}\";%{p0}");
      
      var dup89 = match("MESSAGE#621:411/3_1", "nwparser.p0", "%{action};%{p0}");
      
      var dup90 = match("MESSAGE#621:411/4", "nwparser.p0", "Issuer=%{p0}");
      
      var dup91 = match("MESSAGE#621:411/5_0", "nwparser.p0", "\"%{username}\";%{p0}");
      
      var dup92 = match("MESSAGE#621:411/5_1", "nwparser.p0", "%{username};%{p0}");
      
      var dup93 = match("MESSAGE#621:411/6", "nwparser.p0", "Station=%{p0}");
      
      var dup94 = match("MESSAGE#621:411/7_0", "nwparser.p0", "\"%{hostip}\";%{p0}");
      
      var dup95 = match("MESSAGE#621:411/7_1", "nwparser.p0", "%{hostip};%{p0}");
      
      var dup96 = match("MESSAGE#621:411/8", "nwparser.p0", "File=%{p0}");
      
      var dup97 = match("MESSAGE#621:411/9_0", "nwparser.p0", "\"%{filename}\";%{p0}");
      
      var dup98 = match("MESSAGE#621:411/9_1", "nwparser.p0", "%{filename};%{p0}");
      
      var dup99 = match("MESSAGE#621:411/10", "nwparser.p0", "Safe=%{p0}");
      
      var dup100 = match("MESSAGE#621:411/11_0", "nwparser.p0", "\"%{group_object}\";%{p0}");
      
      var dup101 = match("MESSAGE#621:411/11_1", "nwparser.p0", "%{group_object};%{p0}");
      
      var dup102 = match("MESSAGE#621:411/12", "nwparser.p0", "Location=%{p0}");
      
      var dup103 = match("MESSAGE#621:411/13_0", "nwparser.p0", "\"%{directory}\";%{p0}");
      
      var dup104 = match("MESSAGE#621:411/13_1", "nwparser.p0", "%{directory};%{p0}");
      
      var dup105 = match("MESSAGE#621:411/14", "nwparser.p0", "Category=%{p0}");
      
      var dup106 = match("MESSAGE#621:411/15_0", "nwparser.p0", "\"%{category}\";%{p0}");
      
      var dup107 = match("MESSAGE#621:411/15_1", "nwparser.p0", "%{category};%{p0}");
      
      var dup108 = match("MESSAGE#621:411/16", "nwparser.p0", "RequestId=%{p0}");
      
      var dup109 = match("MESSAGE#621:411/17_0", "nwparser.p0", "\"%{id1}\";%{p0}");
      
      var dup110 = match("MESSAGE#621:411/17_1", "nwparser.p0", "%{id1};%{p0}");
      
      var dup111 = match("MESSAGE#621:411/18", "nwparser.p0", "Reason=%{p0}");
      
      var dup112 = match("MESSAGE#621:411/19_0", "nwparser.p0", "\"%{event_description}\";%{p0}");
      
      var dup113 = match("MESSAGE#621:411/19_1", "nwparser.p0", "%{event_description};%{p0}");
      
      var dup114 = match("MESSAGE#621:411/20", "nwparser.p0", "Severity=%{p0}");
      
      var dup115 = match("MESSAGE#621:411/21_0", "nwparser.p0", "\"%{severity}\";SourceUser=\"%{group}\";TargetUser=\"%{uid}\";%{p0}");
      
      var dup116 = match("MESSAGE#621:411/21_1", "nwparser.p0", "%{severity};SourceUser=%{group};TargetUser=%{uid};%{p0}");
      
      var dup117 = match("MESSAGE#621:411/21_2", "nwparser.p0", "\"%{severity}\";%{p0}");
      
      var dup118 = match("MESSAGE#621:411/21_3", "nwparser.p0", "%{severity};%{p0}");
      
      var dup119 = match("MESSAGE#621:411/22", "nwparser.p0", "GatewayStation=%{p0}");
      
      var dup120 = match("MESSAGE#621:411/23_0", "nwparser.p0", "\"%{saddr}\";%{p0}");
      
      var dup121 = match("MESSAGE#621:411/23_1", "nwparser.p0", "%{saddr};%{p0}");
      
      var dup122 = match("MESSAGE#621:411/24", "nwparser.p0", "TicketID=%{p0}");
      
      var dup123 = match("MESSAGE#621:411/25_0", "nwparser.p0", "\"%{operation_id}\";%{p0}");
      
      var dup124 = match("MESSAGE#621:411/25_1", "nwparser.p0", "%{operation_id};%{p0}");
      
      var dup125 = match("MESSAGE#621:411/26", "nwparser.p0", "PolicyID=%{p0}");
      
      var dup126 = match("MESSAGE#621:411/27_0", "nwparser.p0", "\"%{policyname}\";%{p0}");
      
      var dup127 = match("MESSAGE#621:411/27_1", "nwparser.p0", "%{policyname};%{p0}");
      
      var dup128 = match("MESSAGE#621:411/28", "nwparser.p0", "UserName=%{p0}");
      
      var dup129 = match("MESSAGE#621:411/29_0", "nwparser.p0", "\"%{c_username}\";%{p0}");
      
      var dup130 = match("MESSAGE#621:411/29_1", "nwparser.p0", "%{c_username};%{p0}");
      
      var dup131 = match("MESSAGE#621:411/30", "nwparser.p0", "LogonDomain=%{p0}");
      
      var dup132 = match("MESSAGE#621:411/31_0", "nwparser.p0", "\"%{domain}\";%{p0}");
      
      var dup133 = match("MESSAGE#621:411/31_1", "nwparser.p0", "%{domain};%{p0}");
      
      var dup134 = match("MESSAGE#621:411/32", "nwparser.p0", "Address=%{p0}");
      
      var dup135 = match("MESSAGE#621:411/33_0", "nwparser.p0", "\"%{dhost}\";%{p0}");
      
      var dup136 = match("MESSAGE#621:411/33_1", "nwparser.p0", "%{dhost};%{p0}");
      
      var dup137 = match("MESSAGE#621:411/34", "nwparser.p0", "CPMStatus=%{p0}");
      
      var dup138 = match("MESSAGE#621:411/35_0", "nwparser.p0", "\"%{disposition}\";%{p0}");
      
      var dup139 = match("MESSAGE#621:411/35_1", "nwparser.p0", "%{disposition};%{p0}");
      
      var dup140 = match("MESSAGE#621:411/36", "nwparser.p0", "Port=%{p0}");
      
      var dup141 = match("MESSAGE#621:411/37_0", "nwparser.p0", "\"%{dport}\";%{p0}");
      
      var dup142 = match("MESSAGE#621:411/37_1", "nwparser.p0", "%{dport};%{p0}");
      
      var dup143 = match("MESSAGE#621:411/38", "nwparser.p0", "Database=%{p0}");
      
      var dup144 = match("MESSAGE#621:411/39_0", "nwparser.p0", "\"%{db_name}\";%{p0}");
      
      var dup145 = match("MESSAGE#621:411/39_1", "nwparser.p0", "%{db_name};%{p0}");
      
      var dup146 = match("MESSAGE#621:411/40", "nwparser.p0", "DeviceType=%{p0}");
      
      var dup147 = match("MESSAGE#621:411/41_0", "nwparser.p0", "\"%{obj_type}\";%{p0}");
      
      var dup148 = match("MESSAGE#621:411/41_1", "nwparser.p0", "%{obj_type};%{p0}");
      
      var dup149 = match("MESSAGE#621:411/42", "nwparser.p0", "ExtraDetails=%{p0}");
      
      var dup150 = match("MESSAGE#621:411/43_1", "nwparser.p0", "%{info};");
      
      var dup151 = tagval("MESSAGE#0:1:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup1,
      	dup2,
      	dup3,
      ]));
      
      var dup152 = match("MESSAGE#1:1", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup1,
      	dup2,
      ]));
      
      var dup153 = tagval("MESSAGE#2:2:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup4,
      	dup2,
      	dup3,
      ]));
      
      var dup154 = match("MESSAGE#3:2", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup4,
      	dup2,
      ]));
      
      var dup155 = tagval("MESSAGE#6:4:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup5,
      	dup6,
      	dup7,
      	dup8,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var dup156 = match("MESSAGE#7:4", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup5,
      	dup6,
      	dup7,
      	dup8,
      	dup9,
      	dup2,
      ]));
      
      var dup157 = tagval("MESSAGE#20:13:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup15,
      	dup16,
      	dup17,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var dup158 = match("MESSAGE#21:13", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup15,
      	dup16,
      	dup17,
      	dup9,
      	dup2,
      ]));
      
      var dup159 = tagval("MESSAGE#26:16:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup19,
      	dup2,
      	dup3,
      ]));
      
      var dup160 = match("MESSAGE#27:16", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup19,
      	dup2,
      ]));
      
      var dup161 = tagval("MESSAGE#30:18:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup15,
      	dup2,
      	dup3,
      ]));
      
      var dup162 = match("MESSAGE#31:18", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup15,
      	dup2,
      ]));
      
      var dup163 = tagval("MESSAGE#38:22:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup21,
      	dup2,
      	dup3,
      ]));
      
      var dup164 = match("MESSAGE#39:22", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup21,
      	dup2,
      ]));
      
      var dup165 = tagval("MESSAGE#70:38:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup23,
      	dup2,
      	dup3,
      ]));
      
      var dup166 = match("MESSAGE#71:38", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup23,
      	dup2,
      ]));
      
      var dup167 = tagval("MESSAGE#116:61:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup20,
      	dup2,
      	dup3,
      ]));
      
      var dup168 = match("MESSAGE#117:61", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup20,
      	dup2,
      ]));
      
      var dup169 = tagval("MESSAGE#126:66:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup26,
      	dup2,
      	dup3,
      ]));
      
      var dup170 = match("MESSAGE#127:66", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup26,
      	dup2,
      ]));
      
      var dup171 = tagval("MESSAGE#190:98:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup26,
      	dup2,
      	dup3,
      	dup24,
      	dup25,
      ]));
      
      var dup172 = linear_select([
      	dup32,
      	dup33,
      ]);
      
      var dup173 = linear_select([
      	dup34,
      	dup35,
      ]);
      
      var dup174 = linear_select([
      	dup36,
      	dup37,
      ]);
      
      var dup175 = linear_select([
      	dup38,
      	dup39,
      ]);
      
      var dup176 = linear_select([
      	dup40,
      	dup41,
      ]);
      
      var dup177 = linear_select([
      	dup42,
      	dup43,
      ]);
      
      var dup178 = linear_select([
      	dup44,
      	dup45,
      ]);
      
      var dup179 = linear_select([
      	dup46,
      	dup47,
      ]);
      
      var dup180 = linear_select([
      	dup48,
      	dup49,
      ]);
      
      var dup181 = linear_select([
      	dup50,
      	dup51,
      ]);
      
      var dup182 = linear_select([
      	dup52,
      	dup53,
      ]);
      
      var dup183 = linear_select([
      	dup54,
      	dup55,
      ]);
      
      var dup184 = linear_select([
      	dup56,
      	dup57,
      ]);
      
      var dup185 = linear_select([
      	dup58,
      	dup59,
      ]);
      
      var dup186 = linear_select([
      	dup60,
      	dup61,
      ]);
      
      var dup187 = linear_select([
      	dup62,
      	dup63,
      ]);
      
      var dup188 = linear_select([
      	dup64,
      	dup65,
      ]);
      
      var dup189 = linear_select([
      	dup66,
      	dup67,
      ]);
      
      var dup190 = linear_select([
      	dup68,
      	dup69,
      ]);
      
      var dup191 = linear_select([
      	dup70,
      	dup71,
      ]);
      
      var dup192 = linear_select([
      	dup72,
      	dup73,
      ]);
      
      var dup193 = linear_select([
      	dup74,
      	dup75,
      ]);
      
      var dup194 = linear_select([
      	dup76,
      	dup77,
      ]);
      
      var dup195 = tagval("MESSAGE#591:317:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup79,
      	dup80,
      	dup81,
      	dup2,
      	dup3,
      ]));
      
      var dup196 = match("MESSAGE#592:317", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup79,
      	dup80,
      	dup81,
      	dup2,
      ]));
      
      var dup197 = tagval("MESSAGE#595:355:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup82,
      	dup2,
      	dup3,
      ]));
      
      var dup198 = match("MESSAGE#596:355", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup82,
      	dup2,
      ]));
      
      var dup199 = tagval("MESSAGE#599:357:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup83,
      	dup2,
      	dup3,
      ]));
      
      var dup200 = match("MESSAGE#600:357", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup83,
      	dup2,
      ]));
      
      var dup201 = match("MESSAGE#617:372", "nwparser.payload", "Version=%{version};Message=%{action};Issuer=%{username};Station=%{hostip};File=%{filename};Safe=%{group_object};Location=%{directory};Category=%{category};RequestId=%{id1};Reason=%{event_description};Severity=%{severity};GatewayStation=%{saddr};TicketID=%{operation_id};PolicyID=%{policyname};UserName=%{c_username};LogonDomain=%{domain};Address=%{dhost};CPMStatus=%{disposition};Port=\"%{dport}\";Database=%{db_name};DeviceType=%{obj_type};ExtraDetails=%{info};", processor_chain([
      	dup4,
      	dup2,
      	dup3,
      ]));
      
      var dup202 = linear_select([
      	dup85,
      	dup86,
      ]);
      
      var dup203 = linear_select([
      	dup88,
      	dup89,
      ]);
      
      var dup204 = linear_select([
      	dup91,
      	dup92,
      ]);
      
      var dup205 = linear_select([
      	dup94,
      	dup95,
      ]);
      
      var dup206 = linear_select([
      	dup97,
      	dup98,
      ]);
      
      var dup207 = linear_select([
      	dup100,
      	dup101,
      ]);
      
      var dup208 = linear_select([
      	dup103,
      	dup104,
      ]);
      
      var dup209 = linear_select([
      	dup106,
      	dup107,
      ]);
      
      var dup210 = linear_select([
      	dup109,
      	dup110,
      ]);
      
      var dup211 = linear_select([
      	dup112,
      	dup113,
      ]);
      
      var dup212 = linear_select([
      	dup115,
      	dup116,
      	dup117,
      	dup118,
      ]);
      
      var dup213 = linear_select([
      	dup120,
      	dup121,
      ]);
      
      var dup214 = linear_select([
      	dup123,
      	dup124,
      ]);
      
      var dup215 = linear_select([
      	dup126,
      	dup127,
      ]);
      
      var dup216 = linear_select([
      	dup129,
      	dup130,
      ]);
      
      var dup217 = linear_select([
      	dup132,
      	dup133,
      ]);
      
      var dup218 = linear_select([
      	dup135,
      	dup136,
      ]);
      
      var dup219 = linear_select([
      	dup138,
      	dup139,
      ]);
      
      var dup220 = linear_select([
      	dup141,
      	dup142,
      ]);
      
      var dup221 = linear_select([
      	dup144,
      	dup145,
      ]);
      
      var dup222 = linear_select([
      	dup147,
      	dup148,
      ]);
      
      var hdr1 = match("HEADER#0:0001", "message", "%{hmonth->} %{hday->} %{htime->} %{hproduct->} ProductName=\"%{hdevice}\",ProductAccount=\"%{hfld1}\",ProductProcess=\"%{process}\",EventId=\"%{messageid}\", %{p0}", processor_chain([
      	setc("header_id","0001"),
      	call({
      		dest: "nwparser.payload",
      		fn: STRCAT,
      		args: [
      			field("hdevice"),
      			constant("\",ProductAccount=\""),
      			field("hfld1"),
      			constant("\",ProductProcess=\""),
      			field("process"),
      			constant("\",EventId=\""),
      			field("messageid"),
      			constant("\", "),
      			field("p0"),
      		],
      	}),
      ]));
      
      var hdr2 = match("HEADER#1:0005", "message", "%{hfld1->} %{hdatetime->} %{hproduct->} ProductName=\"%{hdevice}\",ProductAccount=\"%{hfld4}\",ProductProcess=\"%{process}\",EventId=\"%{messageid}\", %{p0}", processor_chain([
      	setc("header_id","0005"),
      	call({
      		dest: "nwparser.payload",
      		fn: STRCAT,
      		args: [
      			field("hdevice"),
      			constant("\",ProductAccount=\""),
      			field("hfld4"),
      			constant("\",ProductProcess=\""),
      			field("process"),
      			constant("\",EventId=\""),
      			field("messageid"),
      			constant("\", "),
      			field("p0"),
      		],
      	}),
      ]));
      
      var hdr3 = match("HEADER#2:0002", "message", "%{hmonth->} %{hday->} %{htime->} %{hproduct->} %CYBERARK: MessageID=\"%{messageid}\";%{payload}", processor_chain([
      	setc("header_id","0002"),
      ]));
      
      var hdr4 = match("HEADER#3:0003", "message", "%{hfld1->} %{hdatetime->} %{hostname->} %CYBERARK: MessageID=\"%{messageid}\";%{payload}", processor_chain([
      	setc("header_id","0003"),
      ]));
      
      var hdr5 = match("HEADER#4:0004", "message", "%CYBERARK: MessageID=\"%{messageid}\";%{payload}", processor_chain([
      	setc("header_id","0004"),
      ]));
      
      var hdr6 = match("HEADER#5:0006", "message", "%{hdatetime->} %{hostname->} %CYBERARK: MessageID=\"%{messageid}\";%{payload}", processor_chain([
      	setc("header_id","0006"),
      ]));
      
      var select1 = linear_select([
      	hdr1,
      	hdr2,
      	hdr3,
      	hdr4,
      	hdr5,
      	hdr6,
      ]);
      
      var msg1 = msg("1:01", dup151);
      
      var msg2 = msg("1", dup152);
      
      var select2 = linear_select([
      	msg1,
      	msg2,
      ]);
      
      var msg3 = msg("2:01", dup153);
      
      var msg4 = msg("2", dup154);
      
      var select3 = linear_select([
      	msg3,
      	msg4,
      ]);
      
      var msg5 = msg("3:01", dup151);
      
      var msg6 = msg("3", dup152);
      
      var select4 = linear_select([
      	msg5,
      	msg6,
      ]);
      
      var msg7 = msg("4:01", dup155);
      
      var msg8 = msg("4", dup156);
      
      var select5 = linear_select([
      	msg7,
      	msg8,
      ]);
      
      var part1 = tagval("MESSAGE#8:7:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup10,
      	dup6,
      	dup7,
      	dup8,
      	dup11,
      	dup2,
      	dup3,
      ]));
      
      var msg9 = msg("7:01", part1);
      
      var part2 = match("MESSAGE#9:7", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup10,
      	dup6,
      	dup7,
      	dup8,
      	dup11,
      	dup2,
      ]));
      
      var msg10 = msg("7", part2);
      
      var select6 = linear_select([
      	msg9,
      	msg10,
      ]);
      
      var part3 = tagval("MESSAGE#10:8:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup12,
      	dup6,
      	dup13,
      	dup8,
      	dup11,
      	dup2,
      	dup3,
      ]));
      
      var msg11 = msg("8:01", part3);
      
      var part4 = match("MESSAGE#11:8", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup12,
      	dup6,
      	dup13,
      	dup8,
      	dup11,
      	dup2,
      ]));
      
      var msg12 = msg("8", part4);
      
      var select7 = linear_select([
      	msg11,
      	msg12,
      ]);
      
      var part5 = tagval("MESSAGE#12:9:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup1,
      	dup14,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var msg13 = msg("9:01", part5);
      
      var part6 = match("MESSAGE#13:9", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup1,
      	dup14,
      	dup9,
      	dup2,
      ]));
      
      var msg14 = msg("9", part6);
      
      var select8 = linear_select([
      	msg13,
      	msg14,
      ]);
      
      var msg15 = msg("10:01", dup151);
      
      var msg16 = msg("10", dup152);
      
      var select9 = linear_select([
      	msg15,
      	msg16,
      ]);
      
      var msg17 = msg("11:01", dup151);
      
      var msg18 = msg("11", dup152);
      
      var select10 = linear_select([
      	msg17,
      	msg18,
      ]);
      
      var msg19 = msg("12:01", dup151);
      
      var msg20 = msg("12", dup152);
      
      var select11 = linear_select([
      	msg19,
      	msg20,
      ]);
      
      var msg21 = msg("13:01", dup157);
      
      var msg22 = msg("13", dup158);
      
      var select12 = linear_select([
      	msg21,
      	msg22,
      ]);
      
      var msg23 = msg("14:01", dup157);
      
      var msg24 = msg("14", dup158);
      
      var select13 = linear_select([
      	msg23,
      	msg24,
      ]);
      
      var part7 = tagval("MESSAGE#24:15:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup15,
      	dup18,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var msg25 = msg("15:01", part7);
      
      var part8 = match("MESSAGE#25:15", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup15,
      	dup18,
      	dup9,
      	dup2,
      ]));
      
      var msg26 = msg("15", part8);
      
      var select14 = linear_select([
      	msg25,
      	msg26,
      ]);
      
      var msg27 = msg("16:01", dup159);
      
      var msg28 = msg("16", dup160);
      
      var select15 = linear_select([
      	msg27,
      	msg28,
      ]);
      
      var msg29 = msg("17:01", dup151);
      
      var msg30 = msg("17", dup152);
      
      var select16 = linear_select([
      	msg29,
      	msg30,
      ]);
      
      var msg31 = msg("18:01", dup161);
      
      var msg32 = msg("18", dup162);
      
      var select17 = linear_select([
      	msg31,
      	msg32,
      ]);
      
      var part9 = tagval("MESSAGE#32:19:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup20,
      	dup16,
      	dup11,
      	dup2,
      	dup3,
      ]));
      
      var msg33 = msg("19:01", part9);
      
      var part10 = match("MESSAGE#33:19", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup20,
      	dup16,
      	dup11,
      	dup2,
      ]));
      
      var msg34 = msg("19", part10);
      
      var select18 = linear_select([
      	msg33,
      	msg34,
      ]);
      
      var part11 = tagval("MESSAGE#34:20:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup19,
      	dup16,
      	dup2,
      	dup3,
      ]));
      
      var msg35 = msg("20:01", part11);
      
      var part12 = match("MESSAGE#35:20", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup19,
      	dup16,
      	dup2,
      ]));
      
      var msg36 = msg("20", part12);
      
      var select19 = linear_select([
      	msg35,
      	msg36,
      ]);
      
      var part13 = tagval("MESSAGE#36:21:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup15,
      	dup16,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var msg37 = msg("21:01", part13);
      
      var part14 = match("MESSAGE#37:21", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup15,
      	dup16,
      	dup9,
      	dup2,
      ]));
      
      var msg38 = msg("21", part14);
      
      var select20 = linear_select([
      	msg37,
      	msg38,
      ]);
      
      var msg39 = msg("22:01", dup163);
      
      var msg40 = msg("22", dup164);
      
      var select21 = linear_select([
      	msg39,
      	msg40,
      ]);
      
      var part15 = tagval("MESSAGE#40:23:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup22,
      	dup2,
      	dup3,
      ]));
      
      var msg41 = msg("23:01", part15);
      
      var part16 = match("MESSAGE#41:23", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup22,
      	dup2,
      ]));
      
      var msg42 = msg("23", part16);
      
      var select22 = linear_select([
      	msg41,
      	msg42,
      ]);
      
      var msg43 = msg("24:01", dup163);
      
      var msg44 = msg("24", dup164);
      
      var select23 = linear_select([
      	msg43,
      	msg44,
      ]);
      
      var msg45 = msg("25:01", dup151);
      
      var msg46 = msg("25", dup152);
      
      var select24 = linear_select([
      	msg45,
      	msg46,
      ]);
      
      var msg47 = msg("26:01", dup151);
      
      var msg48 = msg("26", dup152);
      
      var select25 = linear_select([
      	msg47,
      	msg48,
      ]);
      
      var msg49 = msg("27:01", dup151);
      
      var msg50 = msg("27", dup152);
      
      var select26 = linear_select([
      	msg49,
      	msg50,
      ]);
      
      var msg51 = msg("28:01", dup163);
      
      var msg52 = msg("28", dup164);
      
      var select27 = linear_select([
      	msg51,
      	msg52,
      ]);
      
      var msg53 = msg("29:01", dup151);
      
      var msg54 = msg("29", dup152);
      
      var select28 = linear_select([
      	msg53,
      	msg54,
      ]);
      
      var msg55 = msg("30:01", dup151);
      
      var msg56 = msg("30", dup152);
      
      var select29 = linear_select([
      	msg55,
      	msg56,
      ]);
      
      var msg57 = msg("31:01", dup163);
      
      var msg58 = msg("31", dup164);
      
      var select30 = linear_select([
      	msg57,
      	msg58,
      ]);
      
      var msg59 = msg("32:01", dup163);
      
      var msg60 = msg("32", dup164);
      
      var select31 = linear_select([
      	msg59,
      	msg60,
      ]);
      
      var msg61 = msg("33:01", dup163);
      
      var msg62 = msg("33", dup164);
      
      var select32 = linear_select([
      	msg61,
      	msg62,
      ]);
      
      var msg63 = msg("34:01", dup151);
      
      var msg64 = msg("34", dup152);
      
      var select33 = linear_select([
      	msg63,
      	msg64,
      ]);
      
      var msg65 = msg("35:01", dup151);
      
      var msg66 = msg("35", dup152);
      
      var select34 = linear_select([
      	msg65,
      	msg66,
      ]);
      
      var msg67 = msg("36:01", dup163);
      
      var msg68 = msg("36", dup164);
      
      var select35 = linear_select([
      	msg67,
      	msg68,
      ]);
      
      var msg69 = msg("37:01", dup163);
      
      var msg70 = msg("37", dup164);
      
      var select36 = linear_select([
      	msg69,
      	msg70,
      ]);
      
      var msg71 = msg("38:01", dup165);
      
      var msg72 = msg("38", dup166);
      
      var select37 = linear_select([
      	msg71,
      	msg72,
      ]);
      
      var msg73 = msg("39:01", dup163);
      
      var msg74 = msg("39", dup164);
      
      var select38 = linear_select([
      	msg73,
      	msg74,
      ]);
      
      var msg75 = msg("40:01", dup151);
      
      var msg76 = msg("40", dup152);
      
      var select39 = linear_select([
      	msg75,
      	msg76,
      ]);
      
      var msg77 = msg("41:01", dup151);
      
      var msg78 = msg("41", dup152);
      
      var select40 = linear_select([
      	msg77,
      	msg78,
      ]);
      
      var msg79 = msg("42:01", dup151);
      
      var msg80 = msg("42", dup152);
      
      var select41 = linear_select([
      	msg79,
      	msg80,
      ]);
      
      var msg81 = msg("43:01", dup151);
      
      var msg82 = msg("43", dup152);
      
      var select42 = linear_select([
      	msg81,
      	msg82,
      ]);
      
      var msg83 = msg("44:01", dup151);
      
      var msg84 = msg("44", dup152);
      
      var select43 = linear_select([
      	msg83,
      	msg84,
      ]);
      
      var msg85 = msg("45:01", dup151);
      
      var msg86 = msg("45", dup152);
      
      var select44 = linear_select([
      	msg85,
      	msg86,
      ]);
      
      var msg87 = msg("46:01", dup151);
      
      var msg88 = msg("46", dup152);
      
      var select45 = linear_select([
      	msg87,
      	msg88,
      ]);
      
      var msg89 = msg("47:01", dup151);
      
      var msg90 = msg("47", dup152);
      
      var select46 = linear_select([
      	msg89,
      	msg90,
      ]);
      
      var msg91 = msg("48:01", dup151);
      
      var msg92 = msg("48", dup152);
      
      var select47 = linear_select([
      	msg91,
      	msg92,
      ]);
      
      var msg93 = msg("49:01", dup151);
      
      var msg94 = msg("49", dup152);
      
      var select48 = linear_select([
      	msg93,
      	msg94,
      ]);
      
      var part17 = tagval("MESSAGE#94:50:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup21,
      	dup2,
      	dup3,
      	dup24,
      	dup25,
      ]));
      
      var msg95 = msg("50:01", part17);
      
      var msg96 = msg("50", dup164);
      
      var select49 = linear_select([
      	msg95,
      	msg96,
      ]);
      
      var msg97 = msg("51:01", dup163);
      
      var msg98 = msg("51", dup164);
      
      var select50 = linear_select([
      	msg97,
      	msg98,
      ]);
      
      var msg99 = msg("52:01", dup163);
      
      var msg100 = msg("52", dup164);
      
      var select51 = linear_select([
      	msg99,
      	msg100,
      ]);
      
      var msg101 = msg("53:01", dup151);
      
      var msg102 = msg("53", dup152);
      
      var select52 = linear_select([
      	msg101,
      	msg102,
      ]);
      
      var msg103 = msg("54:01", dup151);
      
      var msg104 = msg("54", dup152);
      
      var select53 = linear_select([
      	msg103,
      	msg104,
      ]);
      
      var msg105 = msg("55:01", dup151);
      
      var msg106 = msg("55", dup152);
      
      var select54 = linear_select([
      	msg105,
      	msg106,
      ]);
      
      var msg107 = msg("56:01", dup151);
      
      var msg108 = msg("56", dup152);
      
      var select55 = linear_select([
      	msg107,
      	msg108,
      ]);
      
      var msg109 = msg("57:01", dup165);
      
      var msg110 = msg("57", dup166);
      
      var select56 = linear_select([
      	msg109,
      	msg110,
      ]);
      
      var msg111 = msg("58:01", dup163);
      
      var msg112 = msg("58", dup164);
      
      var select57 = linear_select([
      	msg111,
      	msg112,
      ]);
      
      var msg113 = msg("59:01", dup163);
      
      var msg114 = msg("59", dup164);
      
      var select58 = linear_select([
      	msg113,
      	msg114,
      ]);
      
      var msg115 = msg("60:01", dup165);
      
      var msg116 = msg("60", dup166);
      
      var select59 = linear_select([
      	msg115,
      	msg116,
      ]);
      
      var msg117 = msg("61:01", dup167);
      
      var msg118 = msg("61", dup168);
      
      var select60 = linear_select([
      	msg117,
      	msg118,
      ]);
      
      var msg119 = msg("62:01", dup163);
      
      var msg120 = msg("62", dup164);
      
      var select61 = linear_select([
      	msg119,
      	msg120,
      ]);
      
      var msg121 = msg("63:01", dup151);
      
      var msg122 = msg("63", dup152);
      
      var select62 = linear_select([
      	msg121,
      	msg122,
      ]);
      
      var msg123 = msg("64:01", dup167);
      
      var msg124 = msg("64", dup168);
      
      var select63 = linear_select([
      	msg123,
      	msg124,
      ]);
      
      var msg125 = msg("65:01", dup151);
      
      var msg126 = msg("65", dup152);
      
      var select64 = linear_select([
      	msg125,
      	msg126,
      ]);
      
      var msg127 = msg("66:01", dup169);
      
      var msg128 = msg("66", dup170);
      
      var select65 = linear_select([
      	msg127,
      	msg128,
      ]);
      
      var msg129 = msg("67:01", dup169);
      
      var msg130 = msg("67", dup170);
      
      var select66 = linear_select([
      	msg129,
      	msg130,
      ]);
      
      var msg131 = msg("68:01", dup169);
      
      var msg132 = msg("68", dup170);
      
      var select67 = linear_select([
      	msg131,
      	msg132,
      ]);
      
      var msg133 = msg("69:01", dup169);
      
      var msg134 = msg("69", dup170);
      
      var select68 = linear_select([
      	msg133,
      	msg134,
      ]);
      
      var msg135 = msg("70:01", dup151);
      
      var msg136 = msg("70", dup152);
      
      var select69 = linear_select([
      	msg135,
      	msg136,
      ]);
      
      var msg137 = msg("71:01", dup169);
      
      var msg138 = msg("71", dup170);
      
      var select70 = linear_select([
      	msg137,
      	msg138,
      ]);
      
      var msg139 = msg("72:01", dup151);
      
      var msg140 = msg("72", dup152);
      
      var select71 = linear_select([
      	msg139,
      	msg140,
      ]);
      
      var msg141 = msg("73:01", dup169);
      
      var msg142 = msg("73", dup170);
      
      var select72 = linear_select([
      	msg141,
      	msg142,
      ]);
      
      var msg143 = msg("74:01", dup151);
      
      var msg144 = msg("74", dup152);
      
      var select73 = linear_select([
      	msg143,
      	msg144,
      ]);
      
      var msg145 = msg("75:01", dup169);
      
      var msg146 = msg("75", dup170);
      
      var select74 = linear_select([
      	msg145,
      	msg146,
      ]);
      
      var msg147 = msg("76:01", dup151);
      
      var msg148 = msg("76", dup152);
      
      var select75 = linear_select([
      	msg147,
      	msg148,
      ]);
      
      var msg149 = msg("77:01", dup151);
      
      var msg150 = msg("77", dup152);
      
      var select76 = linear_select([
      	msg149,
      	msg150,
      ]);
      
      var msg151 = msg("78:01", dup151);
      
      var msg152 = msg("78", dup152);
      
      var select77 = linear_select([
      	msg151,
      	msg152,
      ]);
      
      var msg153 = msg("79:01", dup169);
      
      var msg154 = msg("79", dup170);
      
      var select78 = linear_select([
      	msg153,
      	msg154,
      ]);
      
      var msg155 = msg("80:01", dup169);
      
      var msg156 = msg("80", dup170);
      
      var select79 = linear_select([
      	msg155,
      	msg156,
      ]);
      
      var msg157 = msg("81:01", dup167);
      
      var msg158 = msg("81", dup168);
      
      var select80 = linear_select([
      	msg157,
      	msg158,
      ]);
      
      var msg159 = msg("82:01", dup151);
      
      var msg160 = msg("82", dup152);
      
      var select81 = linear_select([
      	msg159,
      	msg160,
      ]);
      
      var msg161 = msg("83:01", dup169);
      
      var msg162 = msg("83", dup170);
      
      var select82 = linear_select([
      	msg161,
      	msg162,
      ]);
      
      var msg163 = msg("84:01", dup169);
      
      var msg164 = msg("84", dup170);
      
      var select83 = linear_select([
      	msg163,
      	msg164,
      ]);
      
      var msg165 = msg("85:01", dup151);
      
      var msg166 = msg("85", dup152);
      
      var select84 = linear_select([
      	msg165,
      	msg166,
      ]);
      
      var msg167 = msg("86:01", dup159);
      
      var msg168 = msg("86", dup160);
      
      var select85 = linear_select([
      	msg167,
      	msg168,
      ]);
      
      var msg169 = msg("87:01", dup151);
      
      var msg170 = msg("87", dup152);
      
      var select86 = linear_select([
      	msg169,
      	msg170,
      ]);
      
      var msg171 = msg("88:01", dup169);
      
      var msg172 = msg("88", dup170);
      
      var select87 = linear_select([
      	msg171,
      	msg172,
      ]);
      
      var msg173 = msg("89:01", dup151);
      
      var msg174 = msg("89", dup152);
      
      var select88 = linear_select([
      	msg173,
      	msg174,
      ]);
      
      var msg175 = msg("90:01", dup151);
      
      var msg176 = msg("90", dup152);
      
      var select89 = linear_select([
      	msg175,
      	msg176,
      ]);
      
      var msg177 = msg("91:01", dup151);
      
      var msg178 = msg("91", dup152);
      
      var select90 = linear_select([
      	msg177,
      	msg178,
      ]);
      
      var msg179 = msg("92:01", dup151);
      
      var msg180 = msg("92", dup152);
      
      var select91 = linear_select([
      	msg179,
      	msg180,
      ]);
      
      var msg181 = msg("93:01", dup151);
      
      var msg182 = msg("93", dup152);
      
      var select92 = linear_select([
      	msg181,
      	msg182,
      ]);
      
      var msg183 = msg("94:01", dup169);
      
      var msg184 = msg("94", dup170);
      
      var select93 = linear_select([
      	msg183,
      	msg184,
      ]);
      
      var msg185 = msg("95:01", dup169);
      
      var msg186 = msg("95", dup170);
      
      var select94 = linear_select([
      	msg185,
      	msg186,
      ]);
      
      var msg187 = msg("96:01", dup151);
      
      var msg188 = msg("96", dup152);
      
      var select95 = linear_select([
      	msg187,
      	msg188,
      ]);
      
      var msg189 = msg("97:01", dup151);
      
      var msg190 = msg("97", dup152);
      
      var select96 = linear_select([
      	msg189,
      	msg190,
      ]);
      
      var msg191 = msg("98:01", dup171);
      
      var msg192 = msg("98", dup170);
      
      var select97 = linear_select([
      	msg191,
      	msg192,
      ]);
      
      var msg193 = msg("99:01", dup171);
      
      var msg194 = msg("99", dup170);
      
      var select98 = linear_select([
      	msg193,
      	msg194,
      ]);
      
      var msg195 = msg("100:01", dup151);
      
      var msg196 = msg("100", dup152);
      
      var select99 = linear_select([
      	msg195,
      	msg196,
      ]);
      
      var msg197 = msg("101:01", dup151);
      
      var msg198 = msg("101", dup152);
      
      var select100 = linear_select([
      	msg197,
      	msg198,
      ]);
      
      var msg199 = msg("102:01", dup155);
      
      var msg200 = msg("102", dup156);
      
      var select101 = linear_select([
      	msg199,
      	msg200,
      ]);
      
      var part18 = tagval("MESSAGE#200:103:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup27,
      	dup6,
      	dup7,
      	dup8,
      	dup28,
      	dup2,
      	dup3,
      ]));
      
      var msg201 = msg("103:01", part18);
      
      var part19 = match("MESSAGE#201:103", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup27,
      	dup6,
      	dup7,
      	dup8,
      	dup28,
      	dup2,
      ]));
      
      var msg202 = msg("103", part19);
      
      var select102 = linear_select([
      	msg201,
      	msg202,
      ]);
      
      var part20 = tagval("MESSAGE#202:104:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup27,
      	dup6,
      	dup29,
      	dup2,
      	dup3,
      ]));
      
      var msg203 = msg("104:01", part20);
      
      var part21 = match("MESSAGE#203:104", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup27,
      	dup6,
      	dup29,
      	dup2,
      ]));
      
      var msg204 = msg("104", part21);
      
      var select103 = linear_select([
      	msg203,
      	msg204,
      ]);
      
      var msg205 = msg("105:01", dup169);
      
      var msg206 = msg("105", dup170);
      
      var select104 = linear_select([
      	msg205,
      	msg206,
      ]);
      
      var msg207 = msg("106:01", dup169);
      
      var msg208 = msg("106", dup170);
      
      var select105 = linear_select([
      	msg207,
      	msg208,
      ]);
      
      var msg209 = msg("107:01", dup169);
      
      var msg210 = msg("107", dup170);
      
      var select106 = linear_select([
      	msg209,
      	msg210,
      ]);
      
      var msg211 = msg("108:01", dup169);
      
      var msg212 = msg("108", dup170);
      
      var select107 = linear_select([
      	msg211,
      	msg212,
      ]);
      
      var msg213 = msg("109:01", dup169);
      
      var msg214 = msg("109", dup170);
      
      var select108 = linear_select([
      	msg213,
      	msg214,
      ]);
      
      var msg215 = msg("110:01", dup151);
      
      var msg216 = msg("110", dup152);
      
      var select109 = linear_select([
      	msg215,
      	msg216,
      ]);
      
      var msg217 = msg("111:01", dup169);
      
      var msg218 = msg("111", dup170);
      
      var select110 = linear_select([
      	msg217,
      	msg218,
      ]);
      
      var msg219 = msg("112:01", dup169);
      
      var msg220 = msg("112", dup170);
      
      var select111 = linear_select([
      	msg219,
      	msg220,
      ]);
      
      var msg221 = msg("114:01", dup169);
      
      var msg222 = msg("114", dup170);
      
      var select112 = linear_select([
      	msg221,
      	msg222,
      ]);
      
      var msg223 = msg("115:01", dup169);
      
      var msg224 = msg("115", dup170);
      
      var select113 = linear_select([
      	msg223,
      	msg224,
      ]);
      
      var msg225 = msg("116:01", dup151);
      
      var msg226 = msg("116", dup152);
      
      var select114 = linear_select([
      	msg225,
      	msg226,
      ]);
      
      var msg227 = msg("117:01", dup151);
      
      var msg228 = msg("117", dup152);
      
      var select115 = linear_select([
      	msg227,
      	msg228,
      ]);
      
      var msg229 = msg("118:01", dup169);
      
      var msg230 = msg("118", dup170);
      
      var select116 = linear_select([
      	msg229,
      	msg230,
      ]);
      
      var msg231 = msg("119:01", dup169);
      
      var msg232 = msg("119", dup170);
      
      var select117 = linear_select([
      	msg231,
      	msg232,
      ]);
      
      var msg233 = msg("120:01", dup169);
      
      var msg234 = msg("120", dup170);
      
      var select118 = linear_select([
      	msg233,
      	msg234,
      ]);
      
      var msg235 = msg("121:01", dup169);
      
      var msg236 = msg("121", dup170);
      
      var select119 = linear_select([
      	msg235,
      	msg236,
      ]);
      
      var msg237 = msg("122:01", dup169);
      
      var msg238 = msg("122", dup170);
      
      var select120 = linear_select([
      	msg237,
      	msg238,
      ]);
      
      var msg239 = msg("123:01", dup169);
      
      var msg240 = msg("123", dup170);
      
      var select121 = linear_select([
      	msg239,
      	msg240,
      ]);
      
      var msg241 = msg("124:01", dup169);
      
      var msg242 = msg("124", dup170);
      
      var select122 = linear_select([
      	msg241,
      	msg242,
      ]);
      
      var msg243 = msg("125:01", dup169);
      
      var msg244 = msg("125", dup170);
      
      var select123 = linear_select([
      	msg243,
      	msg244,
      ]);
      
      var msg245 = msg("126:01", dup169);
      
      var msg246 = msg("126", dup170);
      
      var select124 = linear_select([
      	msg245,
      	msg246,
      ]);
      
      var msg247 = msg("127:01", dup169);
      
      var msg248 = msg("127", dup170);
      
      var select125 = linear_select([
      	msg247,
      	msg248,
      ]);
      
      var msg249 = msg("128:01", dup169);
      
      var msg250 = msg("128", dup170);
      
      var select126 = linear_select([
      	msg249,
      	msg250,
      ]);
      
      var msg251 = msg("129:01", dup169);
      
      var msg252 = msg("129", dup170);
      
      var select127 = linear_select([
      	msg251,
      	msg252,
      ]);
      
      var msg253 = msg("130:01", dup169);
      
      var msg254 = msg("130", dup170);
      
      var select128 = linear_select([
      	msg253,
      	msg254,
      ]);
      
      var msg255 = msg("131:01", dup151);
      
      var msg256 = msg("131", dup152);
      
      var select129 = linear_select([
      	msg255,
      	msg256,
      ]);
      
      var msg257 = msg("132:01", dup151);
      
      var msg258 = msg("132", dup152);
      
      var select130 = linear_select([
      	msg257,
      	msg258,
      ]);
      
      var msg259 = msg("133:01", dup151);
      
      var msg260 = msg("133", dup152);
      
      var select131 = linear_select([
      	msg259,
      	msg260,
      ]);
      
      var part22 = tagval("MESSAGE#260:134:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup30,
      	dup2,
      	dup3,
      ]));
      
      var msg261 = msg("134:01", part22);
      
      var part23 = match("MESSAGE#261:134", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup30,
      	dup2,
      ]));
      
      var msg262 = msg("134", part23);
      
      var select132 = linear_select([
      	msg261,
      	msg262,
      ]);
      
      var msg263 = msg("135:01", dup151);
      
      var msg264 = msg("135", dup152);
      
      var select133 = linear_select([
      	msg263,
      	msg264,
      ]);
      
      var msg265 = msg("136:01", dup169);
      
      var msg266 = msg("136", dup170);
      
      var select134 = linear_select([
      	msg265,
      	msg266,
      ]);
      
      var msg267 = msg("137:01", dup169);
      
      var msg268 = msg("137", dup170);
      
      var select135 = linear_select([
      	msg267,
      	msg268,
      ]);
      
      var msg269 = msg("138:01", dup169);
      
      var msg270 = msg("138", dup170);
      
      var select136 = linear_select([
      	msg269,
      	msg270,
      ]);
      
      var msg271 = msg("139:01", dup169);
      
      var msg272 = msg("139", dup170);
      
      var select137 = linear_select([
      	msg271,
      	msg272,
      ]);
      
      var msg273 = msg("140:01", dup169);
      
      var msg274 = msg("140", dup170);
      
      var select138 = linear_select([
      	msg273,
      	msg274,
      ]);
      
      var msg275 = msg("141:01", dup169);
      
      var msg276 = msg("141", dup170);
      
      var select139 = linear_select([
      	msg275,
      	msg276,
      ]);
      
      var msg277 = msg("142:01", dup169);
      
      var msg278 = msg("142", dup170);
      
      var select140 = linear_select([
      	msg277,
      	msg278,
      ]);
      
      var msg279 = msg("143:01", dup169);
      
      var msg280 = msg("143", dup170);
      
      var select141 = linear_select([
      	msg279,
      	msg280,
      ]);
      
      var msg281 = msg("144:01", dup169);
      
      var msg282 = msg("144", dup170);
      
      var select142 = linear_select([
      	msg281,
      	msg282,
      ]);
      
      var msg283 = msg("145:01", dup169);
      
      var msg284 = msg("145", dup170);
      
      var select143 = linear_select([
      	msg283,
      	msg284,
      ]);
      
      var msg285 = msg("146:01", dup151);
      
      var msg286 = msg("146", dup152);
      
      var select144 = linear_select([
      	msg285,
      	msg286,
      ]);
      
      var msg287 = msg("147:01", dup151);
      
      var msg288 = msg("147", dup152);
      
      var select145 = linear_select([
      	msg287,
      	msg288,
      ]);
      
      var msg289 = msg("148:01", dup151);
      
      var msg290 = msg("148", dup152);
      
      var select146 = linear_select([
      	msg289,
      	msg290,
      ]);
      
      var msg291 = msg("149:01", dup151);
      
      var msg292 = msg("149", dup152);
      
      var select147 = linear_select([
      	msg291,
      	msg292,
      ]);
      
      var msg293 = msg("150:01", dup151);
      
      var msg294 = msg("150", dup152);
      
      var select148 = linear_select([
      	msg293,
      	msg294,
      ]);
      
      var msg295 = msg("152:01", dup151);
      
      var msg296 = msg("152", dup152);
      
      var select149 = linear_select([
      	msg295,
      	msg296,
      ]);
      
      var msg297 = msg("153:01", dup151);
      
      var msg298 = msg("153", dup152);
      
      var select150 = linear_select([
      	msg297,
      	msg298,
      ]);
      
      var msg299 = msg("154:01", dup151);
      
      var msg300 = msg("154", dup152);
      
      var select151 = linear_select([
      	msg299,
      	msg300,
      ]);
      
      var msg301 = msg("155:01", dup151);
      
      var msg302 = msg("155", dup152);
      
      var select152 = linear_select([
      	msg301,
      	msg302,
      ]);
      
      var msg303 = msg("156:01", dup151);
      
      var msg304 = msg("156", dup152);
      
      var select153 = linear_select([
      	msg303,
      	msg304,
      ]);
      
      var msg305 = msg("157:01", dup151);
      
      var msg306 = msg("157", dup152);
      
      var select154 = linear_select([
      	msg305,
      	msg306,
      ]);
      
      var msg307 = msg("158:01", dup151);
      
      var msg308 = msg("158", dup152);
      
      var select155 = linear_select([
      	msg307,
      	msg308,
      ]);
      
      var msg309 = msg("159:01", dup151);
      
      var msg310 = msg("159", dup152);
      
      var select156 = linear_select([
      	msg309,
      	msg310,
      ]);
      
      var msg311 = msg("160:01", dup151);
      
      var msg312 = msg("160", dup152);
      
      var select157 = linear_select([
      	msg311,
      	msg312,
      ]);
      
      var msg313 = msg("161:01", dup151);
      
      var msg314 = msg("161", dup152);
      
      var select158 = linear_select([
      	msg313,
      	msg314,
      ]);
      
      var msg315 = msg("162:01", dup151);
      
      var msg316 = msg("162", dup152);
      
      var select159 = linear_select([
      	msg315,
      	msg316,
      ]);
      
      var msg317 = msg("163:01", dup151);
      
      var msg318 = msg("163", dup152);
      
      var select160 = linear_select([
      	msg317,
      	msg318,
      ]);
      
      var msg319 = msg("164:01", dup151);
      
      var msg320 = msg("164", dup152);
      
      var select161 = linear_select([
      	msg319,
      	msg320,
      ]);
      
      var msg321 = msg("165:01", dup151);
      
      var msg322 = msg("165", dup152);
      
      var select162 = linear_select([
      	msg321,
      	msg322,
      ]);
      
      var msg323 = msg("166:01", dup151);
      
      var msg324 = msg("166", dup152);
      
      var select163 = linear_select([
      	msg323,
      	msg324,
      ]);
      
      var msg325 = msg("167:01", dup151);
      
      var msg326 = msg("167", dup152);
      
      var select164 = linear_select([
      	msg325,
      	msg326,
      ]);
      
      var msg327 = msg("168:01", dup151);
      
      var msg328 = msg("168", dup152);
      
      var select165 = linear_select([
      	msg327,
      	msg328,
      ]);
      
      var msg329 = msg("169:01", dup151);
      
      var msg330 = msg("169", dup152);
      
      var select166 = linear_select([
      	msg329,
      	msg330,
      ]);
      
      var msg331 = msg("170:01", dup169);
      
      var msg332 = msg("170", dup170);
      
      var select167 = linear_select([
      	msg331,
      	msg332,
      ]);
      
      var msg333 = msg("171:01", dup151);
      
      var msg334 = msg("171", dup152);
      
      var select168 = linear_select([
      	msg333,
      	msg334,
      ]);
      
      var msg335 = msg("172:01", dup169);
      
      var msg336 = msg("172", dup170);
      
      var select169 = linear_select([
      	msg335,
      	msg336,
      ]);
      
      var msg337 = msg("173:01", dup151);
      
      var msg338 = msg("173", dup152);
      
      var select170 = linear_select([
      	msg337,
      	msg338,
      ]);
      
      var msg339 = msg("174:01", dup151);
      
      var msg340 = msg("174", dup152);
      
      var select171 = linear_select([
      	msg339,
      	msg340,
      ]);
      
      var msg341 = msg("175:01", dup151);
      
      var msg342 = msg("175", dup152);
      
      var select172 = linear_select([
      	msg341,
      	msg342,
      ]);
      
      var msg343 = msg("176:01", dup151);
      
      var msg344 = msg("176", dup152);
      
      var select173 = linear_select([
      	msg343,
      	msg344,
      ]);
      
      var msg345 = msg("177:01", dup151);
      
      var msg346 = msg("177", dup152);
      
      var select174 = linear_select([
      	msg345,
      	msg346,
      ]);
      
      var msg347 = msg("178:01", dup151);
      
      var msg348 = msg("178", dup152);
      
      var select175 = linear_select([
      	msg347,
      	msg348,
      ]);
      
      var msg349 = msg("179:01", dup169);
      
      var msg350 = msg("179", dup170);
      
      var select176 = linear_select([
      	msg349,
      	msg350,
      ]);
      
      var msg351 = msg("180:01", dup169);
      
      var msg352 = msg("180", dup170);
      
      var select177 = linear_select([
      	msg351,
      	msg352,
      ]);
      
      var msg353 = msg("181:01", dup169);
      
      var msg354 = msg("181", dup170);
      
      var select178 = linear_select([
      	msg353,
      	msg354,
      ]);
      
      var msg355 = msg("182:01", dup169);
      
      var msg356 = msg("182", dup170);
      
      var select179 = linear_select([
      	msg355,
      	msg356,
      ]);
      
      var msg357 = msg("183:01", dup169);
      
      var msg358 = msg("183", dup170);
      
      var select180 = linear_select([
      	msg357,
      	msg358,
      ]);
      
      var msg359 = msg("184:01", dup169);
      
      var msg360 = msg("184", dup170);
      
      var select181 = linear_select([
      	msg359,
      	msg360,
      ]);
      
      var msg361 = msg("185:01", dup169);
      
      var msg362 = msg("185", dup170);
      
      var select182 = linear_select([
      	msg361,
      	msg362,
      ]);
      
      var msg363 = msg("186:01", dup151);
      
      var msg364 = msg("186", dup152);
      
      var select183 = linear_select([
      	msg363,
      	msg364,
      ]);
      
      var msg365 = msg("187:01", dup169);
      
      var msg366 = msg("187", dup170);
      
      var select184 = linear_select([
      	msg365,
      	msg366,
      ]);
      
      var msg367 = msg("188:01", dup169);
      
      var msg368 = msg("188", dup170);
      
      var select185 = linear_select([
      	msg367,
      	msg368,
      ]);
      
      var msg369 = msg("189:01", dup169);
      
      var msg370 = msg("189", dup170);
      
      var select186 = linear_select([
      	msg369,
      	msg370,
      ]);
      
      var msg371 = msg("191:01", dup151);
      
      var msg372 = msg("191", dup152);
      
      var select187 = linear_select([
      	msg371,
      	msg372,
      ]);
      
      var msg373 = msg("192:01", dup169);
      
      var msg374 = msg("192", dup170);
      
      var select188 = linear_select([
      	msg373,
      	msg374,
      ]);
      
      var msg375 = msg("193:01", dup151);
      
      var msg376 = msg("193", dup152);
      
      var select189 = linear_select([
      	msg375,
      	msg376,
      ]);
      
      var msg377 = msg("194:01", dup169);
      
      var msg378 = msg("194", dup170);
      
      var select190 = linear_select([
      	msg377,
      	msg378,
      ]);
      
      var msg379 = msg("195:01", dup169);
      
      var msg380 = msg("195", dup170);
      
      var select191 = linear_select([
      	msg379,
      	msg380,
      ]);
      
      var msg381 = msg("196:01", dup151);
      
      var msg382 = msg("196", dup152);
      
      var select192 = linear_select([
      	msg381,
      	msg382,
      ]);
      
      var msg383 = msg("197:01", dup151);
      
      var msg384 = msg("197", dup152);
      
      var select193 = linear_select([
      	msg383,
      	msg384,
      ]);
      
      var msg385 = msg("198:01", dup169);
      
      var msg386 = msg("198", dup170);
      
      var select194 = linear_select([
      	msg385,
      	msg386,
      ]);
      
      var msg387 = msg("199:01", dup169);
      
      var msg388 = msg("199", dup170);
      
      var select195 = linear_select([
      	msg387,
      	msg388,
      ]);
      
      var msg389 = msg("200:01", dup169);
      
      var msg390 = msg("200", dup170);
      
      var select196 = linear_select([
      	msg389,
      	msg390,
      ]);
      
      var msg391 = msg("201:01", dup169);
      
      var msg392 = msg("201", dup170);
      
      var select197 = linear_select([
      	msg391,
      	msg392,
      ]);
      
      var msg393 = msg("202:01", dup169);
      
      var msg394 = msg("202", dup170);
      
      var select198 = linear_select([
      	msg393,
      	msg394,
      ]);
      
      var msg395 = msg("203:01", dup169);
      
      var msg396 = msg("203", dup170);
      
      var select199 = linear_select([
      	msg395,
      	msg396,
      ]);
      
      var msg397 = msg("204:01", dup151);
      
      var msg398 = msg("204", dup152);
      
      var select200 = linear_select([
      	msg397,
      	msg398,
      ]);
      
      var msg399 = msg("205:01", dup151);
      
      var msg400 = msg("205", dup152);
      
      var select201 = linear_select([
      	msg399,
      	msg400,
      ]);
      
      var msg401 = msg("206:01", dup151);
      
      var msg402 = msg("206", dup152);
      
      var select202 = linear_select([
      	msg401,
      	msg402,
      ]);
      
      var msg403 = msg("207:01", dup151);
      
      var msg404 = msg("207", dup152);
      
      var select203 = linear_select([
      	msg403,
      	msg404,
      ]);
      
      var msg405 = msg("208:01", dup151);
      
      var msg406 = msg("208", dup152);
      
      var select204 = linear_select([
      	msg405,
      	msg406,
      ]);
      
      var msg407 = msg("209:01", dup169);
      
      var msg408 = msg("209", dup170);
      
      var select205 = linear_select([
      	msg407,
      	msg408,
      ]);
      
      var msg409 = msg("211:01", dup169);
      
      var msg410 = msg("211", dup170);
      
      var select206 = linear_select([
      	msg409,
      	msg410,
      ]);
      
      var msg411 = msg("212:01", dup169);
      
      var msg412 = msg("212", dup170);
      
      var select207 = linear_select([
      	msg411,
      	msg412,
      ]);
      
      var msg413 = msg("213:01", dup169);
      
      var msg414 = msg("213", dup170);
      
      var select208 = linear_select([
      	msg413,
      	msg414,
      ]);
      
      var msg415 = msg("214:01", dup151);
      
      var msg416 = msg("214", dup152);
      
      var select209 = linear_select([
      	msg415,
      	msg416,
      ]);
      
      var msg417 = msg("215:01", dup151);
      
      var msg418 = msg("215", dup152);
      
      var select210 = linear_select([
      	msg417,
      	msg418,
      ]);
      
      var msg419 = msg("216:01", dup151);
      
      var msg420 = msg("216", dup152);
      
      var select211 = linear_select([
      	msg419,
      	msg420,
      ]);
      
      var msg421 = msg("217:01", dup169);
      
      var msg422 = msg("217", dup170);
      
      var select212 = linear_select([
      	msg421,
      	msg422,
      ]);
      
      var msg423 = msg("218:01", dup169);
      
      var msg424 = msg("218", dup170);
      
      var select213 = linear_select([
      	msg423,
      	msg424,
      ]);
      
      var msg425 = msg("219:01", dup169);
      
      var msg426 = msg("219", dup170);
      
      var select214 = linear_select([
      	msg425,
      	msg426,
      ]);
      
      var msg427 = msg("220:01", dup169);
      
      var msg428 = msg("220", dup170);
      
      var select215 = linear_select([
      	msg427,
      	msg428,
      ]);
      
      var msg429 = msg("221:01", dup169);
      
      var msg430 = msg("221", dup170);
      
      var select216 = linear_select([
      	msg429,
      	msg430,
      ]);
      
      var msg431 = msg("222:01", dup151);
      
      var msg432 = msg("222", dup152);
      
      var select217 = linear_select([
      	msg431,
      	msg432,
      ]);
      
      var msg433 = msg("223:01", dup169);
      
      var msg434 = msg("223", dup170);
      
      var select218 = linear_select([
      	msg433,
      	msg434,
      ]);
      
      var msg435 = msg("224:01", dup169);
      
      var msg436 = msg("224", dup170);
      
      var select219 = linear_select([
      	msg435,
      	msg436,
      ]);
      
      var msg437 = msg("229:01", dup169);
      
      var msg438 = msg("229", dup170);
      
      var select220 = linear_select([
      	msg437,
      	msg438,
      ]);
      
      var msg439 = msg("230:01", dup151);
      
      var msg440 = msg("230", dup152);
      
      var select221 = linear_select([
      	msg439,
      	msg440,
      ]);
      
      var msg441 = msg("231:01", dup151);
      
      var msg442 = msg("231", dup152);
      
      var select222 = linear_select([
      	msg441,
      	msg442,
      ]);
      
      var msg443 = msg("232:01", dup151);
      
      var msg444 = msg("232", dup152);
      
      var select223 = linear_select([
      	msg443,
      	msg444,
      ]);
      
      var msg445 = msg("233:01", dup151);
      
      var msg446 = msg("233", dup152);
      
      var select224 = linear_select([
      	msg445,
      	msg446,
      ]);
      
      var msg447 = msg("236:01", dup153);
      
      var msg448 = msg("236", dup154);
      
      var select225 = linear_select([
      	msg447,
      	msg448,
      ]);
      
      var msg449 = msg("237:01", dup169);
      
      var msg450 = msg("237", dup170);
      
      var select226 = linear_select([
      	msg449,
      	msg450,
      ]);
      
      var msg451 = msg("238:01", dup151);
      
      var msg452 = msg("238", dup152);
      
      var select227 = linear_select([
      	msg451,
      	msg452,
      ]);
      
      var msg453 = msg("239:01", dup169);
      
      var msg454 = msg("239", dup170);
      
      var select228 = linear_select([
      	msg453,
      	msg454,
      ]);
      
      var msg455 = msg("240:01", dup169);
      
      var msg456 = msg("240", dup170);
      
      var select229 = linear_select([
      	msg455,
      	msg456,
      ]);
      
      var msg457 = msg("241:01", dup169);
      
      var msg458 = msg("241", dup170);
      
      var select230 = linear_select([
      	msg457,
      	msg458,
      ]);
      
      var msg459 = msg("243:01", dup151);
      
      var msg460 = msg("243", dup152);
      
      var select231 = linear_select([
      	msg459,
      	msg460,
      ]);
      
      var msg461 = msg("244:01", dup151);
      
      var msg462 = msg("244", dup152);
      
      var select232 = linear_select([
      	msg461,
      	msg462,
      ]);
      
      var msg463 = msg("246:01", dup169);
      
      var msg464 = msg("246", dup170);
      
      var select233 = linear_select([
      	msg463,
      	msg464,
      ]);
      
      var msg465 = msg("247:01", dup169);
      
      var msg466 = msg("247", dup170);
      
      var select234 = linear_select([
      	msg465,
      	msg466,
      ]);
      
      var msg467 = msg("248:01", dup151);
      
      var msg468 = msg("248", dup152);
      
      var select235 = linear_select([
      	msg467,
      	msg468,
      ]);
      
      var msg469 = msg("249:01", dup151);
      
      var msg470 = msg("249", dup152);
      
      var select236 = linear_select([
      	msg469,
      	msg470,
      ]);
      
      var msg471 = msg("250:01", dup151);
      
      var msg472 = msg("250", dup152);
      
      var select237 = linear_select([
      	msg471,
      	msg472,
      ]);
      
      var msg473 = msg("251:01", dup169);
      
      var msg474 = msg("251", dup170);
      
      var select238 = linear_select([
      	msg473,
      	msg474,
      ]);
      
      var msg475 = msg("252:01", dup169);
      
      var msg476 = msg("252", dup170);
      
      var select239 = linear_select([
      	msg475,
      	msg476,
      ]);
      
      var msg477 = msg("253:01", dup151);
      
      var msg478 = msg("253", dup152);
      
      var select240 = linear_select([
      	msg477,
      	msg478,
      ]);
      
      var msg479 = msg("254:01", dup169);
      
      var msg480 = msg("254", dup170);
      
      var select241 = linear_select([
      	msg479,
      	msg480,
      ]);
      
      var msg481 = msg("255:01", dup151);
      
      var msg482 = msg("255", dup152);
      
      var select242 = linear_select([
      	msg481,
      	msg482,
      ]);
      
      var msg483 = msg("256:01", dup169);
      
      var msg484 = msg("256", dup170);
      
      var select243 = linear_select([
      	msg483,
      	msg484,
      ]);
      
      var msg485 = msg("257:01", dup169);
      
      var msg486 = msg("257", dup170);
      
      var select244 = linear_select([
      	msg485,
      	msg486,
      ]);
      
      var msg487 = msg("259:01", dup169);
      
      var msg488 = msg("259", dup170);
      
      var select245 = linear_select([
      	msg487,
      	msg488,
      ]);
      
      var msg489 = msg("260:01", dup151);
      
      var msg490 = msg("260", dup152);
      
      var select246 = linear_select([
      	msg489,
      	msg490,
      ]);
      
      var msg491 = msg("261:01", dup151);
      
      var msg492 = msg("261", dup152);
      
      var select247 = linear_select([
      	msg491,
      	msg492,
      ]);
      
      var msg493 = msg("262:01", dup151);
      
      var msg494 = msg("262", dup152);
      
      var select248 = linear_select([
      	msg493,
      	msg494,
      ]);
      
      var msg495 = msg("263:01", dup151);
      
      var msg496 = msg("263", dup152);
      
      var select249 = linear_select([
      	msg495,
      	msg496,
      ]);
      
      var msg497 = msg("264:01", dup169);
      
      var msg498 = msg("264", dup170);
      
      var select250 = linear_select([
      	msg497,
      	msg498,
      ]);
      
      var msg499 = msg("265:01", dup169);
      
      var msg500 = msg("265", dup170);
      
      var select251 = linear_select([
      	msg499,
      	msg500,
      ]);
      
      var msg501 = msg("266:01", dup169);
      
      var msg502 = msg("266", dup170);
      
      var select252 = linear_select([
      	msg501,
      	msg502,
      ]);
      
      var msg503 = msg("267:01", dup169);
      
      var msg504 = msg("267", dup170);
      
      var select253 = linear_select([
      	msg503,
      	msg504,
      ]);
      
      var msg505 = msg("268:01", dup169);
      
      var msg506 = msg("268", dup170);
      
      var select254 = linear_select([
      	msg505,
      	msg506,
      ]);
      
      var msg507 = msg("269:01", dup151);
      
      var msg508 = msg("269", dup152);
      
      var select255 = linear_select([
      	msg507,
      	msg508,
      ]);
      
      var msg509 = msg("270:01", dup169);
      
      var msg510 = msg("270", dup170);
      
      var select256 = linear_select([
      	msg509,
      	msg510,
      ]);
      
      var msg511 = msg("271:01", dup151);
      
      var msg512 = msg("271", dup152);
      
      var select257 = linear_select([
      	msg511,
      	msg512,
      ]);
      
      var msg513 = msg("272:01", dup169);
      
      var msg514 = msg("272", dup170);
      
      var select258 = linear_select([
      	msg513,
      	msg514,
      ]);
      
      var msg515 = msg("273:01", dup169);
      
      var msg516 = msg("273", dup170);
      
      var select259 = linear_select([
      	msg515,
      	msg516,
      ]);
      
      var msg517 = msg("274:01", dup169);
      
      var msg518 = msg("274", dup170);
      
      var select260 = linear_select([
      	msg517,
      	msg518,
      ]);
      
      var msg519 = msg("275:01", dup169);
      
      var msg520 = msg("275", dup170);
      
      var select261 = linear_select([
      	msg519,
      	msg520,
      ]);
      
      var msg521 = msg("276:01", dup169);
      
      var msg522 = msg("276", dup170);
      
      var select262 = linear_select([
      	msg521,
      	msg522,
      ]);
      
      var msg523 = msg("277:01", dup169);
      
      var msg524 = msg("277", dup170);
      
      var select263 = linear_select([
      	msg523,
      	msg524,
      ]);
      
      var msg525 = msg("278:01", dup169);
      
      var msg526 = msg("278", dup170);
      
      var select264 = linear_select([
      	msg525,
      	msg526,
      ]);
      
      var msg527 = msg("279:01", dup169);
      
      var msg528 = msg("279", dup170);
      
      var select265 = linear_select([
      	msg527,
      	msg528,
      ]);
      
      var msg529 = msg("280:01", dup151);
      
      var msg530 = msg("280", dup152);
      
      var select266 = linear_select([
      	msg529,
      	msg530,
      ]);
      
      var msg531 = msg("281:01", dup151);
      
      var msg532 = msg("281", dup152);
      
      var select267 = linear_select([
      	msg531,
      	msg532,
      ]);
      
      var msg533 = msg("282:01", dup169);
      
      var msg534 = msg("282", dup170);
      
      var select268 = linear_select([
      	msg533,
      	msg534,
      ]);
      
      var msg535 = msg("283:01", dup169);
      
      var msg536 = msg("283", dup170);
      
      var select269 = linear_select([
      	msg535,
      	msg536,
      ]);
      
      var msg537 = msg("284:01", dup151);
      
      var msg538 = msg("284", dup152);
      
      var select270 = linear_select([
      	msg537,
      	msg538,
      ]);
      
      var msg539 = msg("285:01", dup159);
      
      var msg540 = msg("285", dup160);
      
      var select271 = linear_select([
      	msg539,
      	msg540,
      ]);
      
      var msg541 = msg("286:01", dup169);
      
      var msg542 = msg("286", dup170);
      
      var select272 = linear_select([
      	msg541,
      	msg542,
      ]);
      
      var msg543 = msg("287:01", dup169);
      
      var msg544 = msg("287", dup170);
      
      var select273 = linear_select([
      	msg543,
      	msg544,
      ]);
      
      var msg545 = msg("288:01", dup169);
      
      var msg546 = msg("288", dup170);
      
      var select274 = linear_select([
      	msg545,
      	msg546,
      ]);
      
      var msg547 = msg("289:01", dup169);
      
      var msg548 = msg("289", dup170);
      
      var select275 = linear_select([
      	msg547,
      	msg548,
      ]);
      
      var msg549 = msg("290:01", dup169);
      
      var msg550 = msg("290", dup170);
      
      var select276 = linear_select([
      	msg549,
      	msg550,
      ]);
      
      var msg551 = msg("291:01", dup169);
      
      var msg552 = msg("291", dup170);
      
      var select277 = linear_select([
      	msg551,
      	msg552,
      ]);
      
      var msg553 = msg("292:01", dup169);
      
      var msg554 = msg("292", dup170);
      
      var select278 = linear_select([
      	msg553,
      	msg554,
      ]);
      
      var msg555 = msg("293:01", dup169);
      
      var msg556 = msg("293", dup170);
      
      var select279 = linear_select([
      	msg555,
      	msg556,
      ]);
      
      var msg557 = msg("294:01", dup169);
      
      var msg558 = msg("294", dup170);
      
      var select280 = linear_select([
      	msg557,
      	msg558,
      ]);
      
      var msg559 = msg("295:01", dup169);
      
      var msg560 = msg("295", dup170);
      
      var select281 = linear_select([
      	msg559,
      	msg560,
      ]);
      
      var msg561 = msg("296:01", dup169);
      
      var msg562 = msg("296", dup170);
      
      var select282 = linear_select([
      	msg561,
      	msg562,
      ]);
      
      var msg563 = msg("297:01", dup151);
      
      var msg564 = msg("297", dup152);
      
      var select283 = linear_select([
      	msg563,
      	msg564,
      ]);
      
      var msg565 = msg("298:01", dup151);
      
      var msg566 = msg("298", dup152);
      
      var select284 = linear_select([
      	msg565,
      	msg566,
      ]);
      
      var msg567 = msg("299:01", dup169);
      
      var msg568 = msg("299", dup170);
      
      var select285 = linear_select([
      	msg567,
      	msg568,
      ]);
      
      var part24 = match("MESSAGE#568:300:02/24", "nwparser.p0", "%{application};DstHost=%{dhost};Protocol=%{protocol};PSMID=%{fld10};SessionID=%{sessionid};SrcHost=%{shost};User=%{c_username};\"");
      
      var all1 = all_match({
      	processors: [
      		dup31,
      		dup172,
      		dup173,
      		dup174,
      		dup175,
      		dup176,
      		dup177,
      		dup178,
      		dup179,
      		dup180,
      		dup181,
      		dup182,
      		dup183,
      		dup184,
      		dup185,
      		dup186,
      		dup187,
      		dup188,
      		dup189,
      		dup190,
      		dup191,
      		dup192,
      		dup193,
      		dup194,
      		part24,
      	],
      	on_success: processor_chain([
      		dup4,
      		dup2,
      		dup3,
      		dup24,
      	]),
      });
      
      var msg569 = msg("300:02", all1);
      
      var part25 = tagval("MESSAGE#569:300:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup4,
      	dup2,
      	dup3,
      	dup24,
      ]));
      
      var msg570 = msg("300:01", part25);
      
      var msg571 = msg("300", dup154);
      
      var select286 = linear_select([
      	msg569,
      	msg570,
      	msg571,
      ]);
      
      var msg572 = msg("301:01", dup163);
      
      var msg573 = msg("301", dup164);
      
      var select287 = linear_select([
      	msg572,
      	msg573,
      ]);
      
      var part26 = match("MESSAGE#573:302:02/24", "nwparser.p0", "%{application};DstHost=%{dhost};Protocol=%{protocol};PSMID=%{fld12};SessionDuration=%{duration_string};SessionID=%{sessionid};SrcHost=%{shost};User=%{c_username};\"");
      
      var all2 = all_match({
      	processors: [
      		dup31,
      		dup172,
      		dup173,
      		dup174,
      		dup175,
      		dup176,
      		dup177,
      		dup178,
      		dup179,
      		dup180,
      		dup181,
      		dup182,
      		dup183,
      		dup184,
      		dup185,
      		dup186,
      		dup187,
      		dup188,
      		dup189,
      		dup190,
      		dup191,
      		dup192,
      		dup193,
      		dup194,
      		part26,
      	],
      	on_success: processor_chain([
      		dup21,
      		dup2,
      		dup3,
      		dup24,
      	]),
      });
      
      var msg574 = msg("302:02", all2);
      
      var msg575 = msg("302:01", dup163);
      
      var msg576 = msg("302", dup164);
      
      var select288 = linear_select([
      	msg574,
      	msg575,
      	msg576,
      ]);
      
      var msg577 = msg("303:01", dup163);
      
      var msg578 = msg("303", dup164);
      
      var select289 = linear_select([
      	msg577,
      	msg578,
      ]);
      
      var part27 = match("MESSAGE#578:304:02/23_0", "nwparser.p0", "\"%{obj_type}\";ExtraDetails=\"DstHost=%{p0}");
      
      var part28 = match("MESSAGE#578:304:02/23_1", "nwparser.p0", "%{obj_type};ExtraDetails=\"DstHost=%{p0}");
      
      var select290 = linear_select([
      	part27,
      	part28,
      ]);
      
      var part29 = match("MESSAGE#578:304:02/24", "nwparser.p0", "%{dhost};Protocol=%{protocol};PSMID=%{fld10};SessionDuration=%{duration_string};SessionID=%{sessionid};SrcHost=%{shost};User=%{c_username};\"");
      
      var all3 = all_match({
      	processors: [
      		dup31,
      		dup172,
      		dup173,
      		dup174,
      		dup175,
      		dup176,
      		dup177,
      		dup178,
      		dup179,
      		dup180,
      		dup181,
      		dup182,
      		dup183,
      		dup184,
      		dup185,
      		dup186,
      		dup187,
      		dup188,
      		dup189,
      		dup190,
      		dup191,
      		dup192,
      		dup193,
      		select290,
      		part29,
      	],
      	on_success: processor_chain([
      		dup26,
      		dup2,
      		dup3,
      		dup24,
      	]),
      });
      
      var msg579 = msg("304:02", all3);
      
      var msg580 = msg("304:01", dup169);
      
      var msg581 = msg("304", dup170);
      
      var select291 = linear_select([
      	msg579,
      	msg580,
      	msg581,
      ]);
      
      var msg582 = msg("305:01", dup169);
      
      var msg583 = msg("305", dup170);
      
      var select292 = linear_select([
      	msg582,
      	msg583,
      ]);
      
      var msg584 = msg("306:01", dup151);
      
      var msg585 = msg("306", dup152);
      
      var select293 = linear_select([
      	msg584,
      	msg585,
      ]);
      
      var msg586 = msg("307:01", dup151);
      
      var msg587 = msg("307", dup152);
      
      var select294 = linear_select([
      	msg586,
      	msg587,
      ]);
      
      var part30 = tagval("MESSAGE#587:308:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup78,
      	dup2,
      	dup3,
      ]));
      
      var msg588 = msg("308:01", part30);
      
      var part31 = match("MESSAGE#588:308", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup78,
      	dup2,
      ]));
      
      var msg589 = msg("308", part31);
      
      var select295 = linear_select([
      	msg588,
      	msg589,
      ]);
      
      var part32 = tagval("MESSAGE#589:309:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup10,
      	dup6,
      	dup7,
      	dup8,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var msg590 = msg("309:01", part32);
      
      var part33 = match("MESSAGE#590:309", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup10,
      	dup6,
      	dup7,
      	dup8,
      	dup9,
      	dup2,
      ]));
      
      var msg591 = msg("309", part33);
      
      var select296 = linear_select([
      	msg590,
      	msg591,
      ]);
      
      var msg592 = msg("317:01", dup195);
      
      var msg593 = msg("317", dup196);
      
      var select297 = linear_select([
      	msg592,
      	msg593,
      ]);
      
      var msg594 = msg("316:01", dup195);
      
      var msg595 = msg("316", dup196);
      
      var select298 = linear_select([
      	msg594,
      	msg595,
      ]);
      
      var msg596 = msg("355:01", dup197);
      
      var msg597 = msg("355", dup198);
      
      var select299 = linear_select([
      	msg596,
      	msg597,
      ]);
      
      var msg598 = msg("356:01", dup197);
      
      var msg599 = msg("356", dup198);
      
      var select300 = linear_select([
      	msg598,
      	msg599,
      ]);
      
      var msg600 = msg("357:01", dup199);
      
      var msg601 = msg("357", dup200);
      
      var select301 = linear_select([
      	msg600,
      	msg601,
      ]);
      
      var msg602 = msg("358:01", dup199);
      
      var msg603 = msg("358", dup200);
      
      var select302 = linear_select([
      	msg602,
      	msg603,
      ]);
      
      var part34 = tagval("MESSAGE#603:190:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup84,
      	dup2,
      	dup3,
      ]));
      
      var msg604 = msg("190:01", part34);
      
      var part35 = match("MESSAGE#604:190", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup84,
      	dup2,
      ]));
      
      var msg605 = msg("190", part35);
      
      var select303 = linear_select([
      	msg604,
      	msg605,
      ]);
      
      var msg606 = msg("5:01", dup161);
      
      var msg607 = msg("5", dup162);
      
      var select304 = linear_select([
      	msg606,
      	msg607,
      ]);
      
      var msg608 = msg("310:01", dup153);
      
      var msg609 = msg("310", dup154);
      
      var select305 = linear_select([
      	msg608,
      	msg609,
      ]);
      
      var msg610 = msg("311:01", dup153);
      
      var msg611 = msg("311", dup154);
      
      var select306 = linear_select([
      	msg610,
      	msg611,
      ]);
      
      var msg612 = msg("312:01", dup153);
      
      var msg613 = msg("312", dup154);
      
      var select307 = linear_select([
      	msg612,
      	msg613,
      ]);
      
      var msg614 = msg("313:01", dup153);
      
      var msg615 = msg("313", dup154);
      
      var select308 = linear_select([
      	msg614,
      	msg615,
      ]);
      
      var msg616 = msg("359:01", dup153);
      
      var msg617 = msg("359", dup154);
      
      var select309 = linear_select([
      	msg616,
      	msg617,
      ]);
      
      var msg618 = msg("372", dup201);
      
      var msg619 = msg("374", dup201);
      
      var msg620 = msg("376", dup201);
      
      var part36 = match("MESSAGE#620:411:01/17_0", "nwparser.p0", "\"%{fld89}\";LogonDomain=%{p0}");
      
      var part37 = match("MESSAGE#620:411:01/17_1", "nwparser.p0", "%{fld89};LogonDomain=%{p0}");
      
      var select310 = linear_select([
      	part36,
      	part37,
      ]);
      
      var part38 = match("MESSAGE#620:411:01/23_0", "nwparser.p0", "\"%{obj_type}\";ExtraDetails=\"Command=%{p0}");
      
      var part39 = match("MESSAGE#620:411:01/23_1", "nwparser.p0", "%{obj_type};ExtraDetails=\"Command=%{p0}");
      
      var select311 = linear_select([
      	part38,
      	part39,
      ]);
      
      var part40 = match("MESSAGE#620:411:01/24", "nwparser.p0", "%{param};ConnectionComponentId=%{fld67};DstHost=%{dhost};Protocol=%{protocol};PSMID=%{fld11};RDPOffset=%{fld12};SessionID=%{sessionid};SrcHost=%{shost};User=%{c_username};VIDOffset=%{fld13};");
      
      var all4 = all_match({
      	processors: [
      		dup31,
      		dup172,
      		dup173,
      		dup174,
      		dup175,
      		dup176,
      		dup177,
      		dup178,
      		dup179,
      		dup180,
      		dup181,
      		dup182,
      		dup183,
      		dup184,
      		dup185,
      		dup186,
      		dup187,
      		select310,
      		dup189,
      		dup190,
      		dup191,
      		dup192,
      		dup193,
      		select311,
      		part40,
      	],
      	on_success: processor_chain([
      		dup4,
      		dup2,
      		dup3,
      		dup24,
      	]),
      });
      
      var msg621 = msg("411:01", all4);
      
      var part41 = match("MESSAGE#621:411/43_0", "nwparser.p0", "\"Command=%{param};ConnectionComponentId=%{fld1};DstHost=%{fld2};ProcessId=%{process_id};ProcessName=%{process};Protocol=%{protocol};PSMID=%{fld3};RDPOffset=%{fld4};SessionID=%{sessionid};SrcHost=%{shost};User=%{fld5};VIDOffset=%{fld6};\"");
      
      var select312 = linear_select([
      	part41,
      	dup150,
      ]);
      
      var all5 = all_match({
      	processors: [
      		dup31,
      		dup202,
      		dup87,
      		dup203,
      		dup90,
      		dup204,
      		dup93,
      		dup205,
      		dup96,
      		dup206,
      		dup99,
      		dup207,
      		dup102,
      		dup208,
      		dup105,
      		dup209,
      		dup108,
      		dup210,
      		dup111,
      		dup211,
      		dup114,
      		dup212,
      		dup119,
      		dup213,
      		dup122,
      		dup214,
      		dup125,
      		dup215,
      		dup128,
      		dup216,
      		dup131,
      		dup217,
      		dup134,
      		dup218,
      		dup137,
      		dup219,
      		dup140,
      		dup220,
      		dup143,
      		dup221,
      		dup146,
      		dup222,
      		dup149,
      		select312,
      	],
      	on_success: processor_chain([
      		dup4,
      		dup2,
      		dup3,
      	]),
      });
      
      var msg622 = msg("411", all5);
      
      var select313 = linear_select([
      	msg621,
      	msg622,
      ]);
      
      var part42 = match("MESSAGE#622:385", "nwparser.payload", "Version=%{version};Message=%{action};Issuer=%{username};Station=%{hostip};File=%{filename};Safe=%{group_object};Location=\"%{directory}\";Category=%{category};RequestId=%{id1};Reason=%{event_description};Severity=%{severity};GatewayStation=%{saddr};TicketID=%{operation_id};PolicyID=%{policyname};UserName=%{c_username};LogonDomain=%{domain};Address=%{dhost};CPMStatus=%{disposition};Port=\"%{dport}\";Database=%{db_name};DeviceType=%{obj_type};ExtraDetails=%{info}", processor_chain([
      	dup4,
      	dup2,
      	dup3,
      ]));
      
      var msg623 = msg("385", part42);
      
      var part43 = match("MESSAGE#623:361/43_0", "nwparser.p0", "\"Command=%{param};ConnectionComponentId=%{fld1};DstHost=%{fld2};Protocol=%{protocol};PSMID=%{fld3};SessionID=%{sessionid};SrcHost=%{shost};SSHOffset=%{fld4};User=%{fld5};VIDOffset=%{fld6};\"");
      
      var select314 = linear_select([
      	part43,
      	dup150,
      ]);
      
      var all6 = all_match({
      	processors: [
      		dup31,
      		dup202,
      		dup87,
      		dup203,
      		dup90,
      		dup204,
      		dup93,
      		dup205,
      		dup96,
      		dup206,
      		dup99,
      		dup207,
      		dup102,
      		dup208,
      		dup105,
      		dup209,
      		dup108,
      		dup210,
      		dup111,
      		dup211,
      		dup114,
      		dup212,
      		dup119,
      		dup213,
      		dup122,
      		dup214,
      		dup125,
      		dup215,
      		dup128,
      		dup216,
      		dup131,
      		dup217,
      		dup134,
      		dup218,
      		dup137,
      		dup219,
      		dup140,
      		dup220,
      		dup143,
      		dup221,
      		dup146,
      		dup222,
      		dup149,
      		select314,
      	],
      	on_success: processor_chain([
      		dup4,
      		dup2,
      		dup3,
      	]),
      });
      
      var msg624 = msg("361", all6);
      
      var part44 = match("MESSAGE#624:412/43_0", "nwparser.p0", "\"Command=%{param};ConnectionComponentId=%{fld1};DstHost=%{fld2};Protocol=%{protocol};PSMID=%{fld3};SessionID=%{sessionid};SrcHost=%{shost};TXTOffset=%{fld4};User=%{fld5};VIDOffset=%{fld6};\"");
      
      var select315 = linear_select([
      	part44,
      	dup150,
      ]);
      
      var all7 = all_match({
      	processors: [
      		dup31,
      		dup202,
      		dup87,
      		dup203,
      		dup90,
      		dup204,
      		dup93,
      		dup205,
      		dup96,
      		dup206,
      		dup99,
      		dup207,
      		dup102,
      		dup208,
      		dup105,
      		dup209,
      		dup108,
      		dup210,
      		dup111,
      		dup211,
      		dup114,
      		dup212,
      		dup119,
      		dup213,
      		dup122,
      		dup214,
      		dup125,
      		dup215,
      		dup128,
      		dup216,
      		dup131,
      		dup217,
      		dup134,
      		dup218,
      		dup137,
      		dup219,
      		dup140,
      		dup220,
      		dup143,
      		dup221,
      		dup146,
      		dup222,
      		dup149,
      		select315,
      	],
      	on_success: processor_chain([
      		dup4,
      		dup2,
      		dup3,
      	]),
      });
      
      var msg625 = msg("412", all7);
      
      var msg626 = msg("378", dup153);
      
      var msg627 = msg("321", dup153);
      
      var msg628 = msg("322", dup153);
      
      var msg629 = msg("323", dup153);
      
      var msg630 = msg("318", dup153);
      
      var msg631 = msg("380", dup153);
      
      var chain1 = processor_chain([
      	select1,
      	msgid_select({
      		"1": select2,
      		"10": select9,
      		"100": select99,
      		"101": select100,
      		"102": select101,
      		"103": select102,
      		"104": select103,
      		"105": select104,
      		"106": select105,
      		"107": select106,
      		"108": select107,
      		"109": select108,
      		"11": select10,
      		"110": select109,
      		"111": select110,
      		"112": select111,
      		"114": select112,
      		"115": select113,
      		"116": select114,
      		"117": select115,
      		"118": select116,
      		"119": select117,
      		"12": select11,
      		"120": select118,
      		"121": select119,
      		"122": select120,
      		"123": select121,
      		"124": select122,
      		"125": select123,
      		"126": select124,
      		"127": select125,
      		"128": select126,
      		"129": select127,
      		"13": select12,
      		"130": select128,
      		"131": select129,
      		"132": select130,
      		"133": select131,
      		"134": select132,
      		"135": select133,
      		"136": select134,
      		"137": select135,
      		"138": select136,
      		"139": select137,
      		"14": select13,
      		"140": select138,
      		"141": select139,
      		"142": select140,
      		"143": select141,
      		"144": select142,
      		"145": select143,
      		"146": select144,
      		"147": select145,
      		"148": select146,
      		"149": select147,
      		"15": select14,
      		"150": select148,
      		"152": select149,
      		"153": select150,
      		"154": select151,
      		"155": select152,
      		"156": select153,
      		"157": select154,
      		"158": select155,
      		"159": select156,
      		"16": select15,
      		"160": select157,
      		"161": select158,
      		"162": select159,
      		"163": select160,
      		"164": select161,
      		"165": select162,
      		"166": select163,
      		"167": select164,
      		"168": select165,
      		"169": select166,
      		"17": select16,
      		"170": select167,
      		"171": select168,
      		"172": select169,
      		"173": select170,
      		"174": select171,
      		"175": select172,
      		"176": select173,
      		"177": select174,
      		"178": select175,
      		"179": select176,
      		"18": select17,
      		"180": select177,
      		"181": select178,
      		"182": select179,
      		"183": select180,
      		"184": select181,
      		"185": select182,
      		"186": select183,
      		"187": select184,
      		"188": select185,
      		"189": select186,
      		"19": select18,
      		"190": select303,
      		"191": select187,
      		"192": select188,
      		"193": select189,
      		"194": select190,
      		"195": select191,
      		"196": select192,
      		"197": select193,
      		"198": select194,
      		"199": select195,
      		"2": select3,
      		"20": select19,
      		"200": select196,
      		"201": select197,
      		"202": select198,
      		"203": select199,
      		"204": select200,
      		"205": select201,
      		"206": select202,
      		"207": select203,
      		"208": select204,
      		"209": select205,
      		"21": select20,
      		"211": select206,
      		"212": select207,
      		"213": select208,
      		"214": select209,
      		"215": select210,
      		"216": select211,
      		"217": select212,
      		"218": select213,
      		"219": select214,
      		"22": select21,
      		"220": select215,
      		"221": select216,
      		"222": select217,
      		"223": select218,
      		"224": select219,
      		"229": select220,
      		"23": select22,
      		"230": select221,
      		"231": select222,
      		"232": select223,
      		"233": select224,
      		"236": select225,
      		"237": select226,
      		"238": select227,
      		"239": select228,
      		"24": select23,
      		"240": select229,
      		"241": select230,
      		"243": select231,
      		"244": select232,
      		"246": select233,
      		"247": select234,
      		"248": select235,
      		"249": select236,
      		"25": select24,
      		"250": select237,
      		"251": select238,
      		"252": select239,
      		"253": select240,
      		"254": select241,
      		"255": select242,
      		"256": select243,
      		"257": select244,
      		"259": select245,
      		"26": select25,
      		"260": select246,
      		"261": select247,
      		"262": select248,
      		"263": select249,
      		"264": select250,
      		"265": select251,
      		"266": select252,
      		"267": select253,
      		"268": select254,
      		"269": select255,
      		"27": select26,
      		"270": select256,
      		"271": select257,
      		"272": select258,
      		"273": select259,
      		"274": select260,
      		"275": select261,
      		"276": select262,
      		"277": select263,
      		"278": select264,
      		"279": select265,
      		"28": select27,
      		"280": select266,
      		"281": select267,
      		"282": select268,
      		"283": select269,
      		"284": select270,
      		"285": select271,
      		"286": select272,
      		"287": select273,
      		"288": select274,
      		"289": select275,
      		"29": select28,
      		"290": select276,
      		"291": select277,
      		"292": select278,
      		"293": select279,
      		"294": select280,
      		"295": select281,
      		"296": select282,
      		"297": select283,
      		"298": select284,
      		"299": select285,
      		"3": select4,
      		"30": select29,
      		"300": select286,
      		"301": select287,
      		"302": select288,
      		"303": select289,
      		"304": select291,
      		"305": select292,
      		"306": select293,
      		"307": select294,
      		"308": select295,
      		"309": select296,
      		"31": select30,
      		"310": select305,
      		"311": select306,
      		"312": select307,
      		"313": select308,
      		"316": select298,
      		"317": select297,
      		"318": msg630,
      		"32": select31,
      		"321": msg627,
      		"322": msg628,
      		"323": msg629,
      		"33": select32,
      		"34": select33,
      		"35": select34,
      		"355": select299,
      		"356": select300,
      		"357": select301,
      		"358": select302,
      		"359": select309,
      		"36": select35,
      		"361": msg624,
      		"37": select36,
      		"372": msg618,
      		"374": msg619,
      		"376": msg620,
      		"378": msg626,
      		"38": select37,
      		"380": msg631,
      		"385": msg623,
      		"39": select38,
      		"4": select5,
      		"40": select39,
      		"41": select40,
      		"411": select313,
      		"412": msg625,
      		"42": select41,
      		"43": select42,
      		"44": select43,
      		"45": select44,
      		"46": select45,
      		"47": select46,
      		"48": select47,
      		"49": select48,
      		"5": select304,
      		"50": select49,
      		"51": select50,
      		"52": select51,
      		"53": select52,
      		"54": select53,
      		"55": select54,
      		"56": select55,
      		"57": select56,
      		"58": select57,
      		"59": select58,
      		"60": select59,
      		"61": select60,
      		"62": select61,
      		"63": select62,
      		"64": select63,
      		"65": select64,
      		"66": select65,
      		"67": select66,
      		"68": select67,
      		"69": select68,
      		"7": select6,
      		"70": select69,
      		"71": select70,
      		"72": select71,
      		"73": select72,
      		"74": select73,
      		"75": select74,
      		"76": select75,
      		"77": select76,
      		"78": select77,
      		"79": select78,
      		"8": select7,
      		"80": select79,
      		"81": select80,
      		"82": select81,
      		"83": select82,
      		"84": select83,
      		"85": select84,
      		"86": select85,
      		"87": select86,
      		"88": select87,
      		"89": select88,
      		"9": select8,
      		"90": select89,
      		"91": select90,
      		"92": select91,
      		"93": select92,
      		"94": select93,
      		"95": select94,
      		"96": select95,
      		"97": select96,
      		"98": select97,
      		"99": select98,
      	}),
      ]);
      
      var part45 = match("MESSAGE#568:300:02/0", "nwparser.payload", "Version=%{p0}");
      
      var part46 = match("MESSAGE#568:300:02/1_0", "nwparser.p0", "\"%{version}\";Message=%{p0}");
      
      var part47 = match("MESSAGE#568:300:02/1_1", "nwparser.p0", "%{version};Message=%{p0}");
      
      var part48 = match("MESSAGE#568:300:02/2_0", "nwparser.p0", "\"%{action}\";Issuer=%{p0}");
      
      var part49 = match("MESSAGE#568:300:02/2_1", "nwparser.p0", "%{action};Issuer=%{p0}");
      
      var part50 = match("MESSAGE#568:300:02/3_0", "nwparser.p0", "\"%{username}\";Station=%{p0}");
      
      var part51 = match("MESSAGE#568:300:02/3_1", "nwparser.p0", "%{username};Station=%{p0}");
      
      var part52 = match("MESSAGE#568:300:02/4_0", "nwparser.p0", "\"%{hostip}\";File=%{p0}");
      
      var part53 = match("MESSAGE#568:300:02/4_1", "nwparser.p0", "%{hostip};File=%{p0}");
      
      var part54 = match("MESSAGE#568:300:02/5_0", "nwparser.p0", "\"%{filename}\";Safe=%{p0}");
      
      var part55 = match("MESSAGE#568:300:02/5_1", "nwparser.p0", "%{filename};Safe=%{p0}");
      
      var part56 = match("MESSAGE#568:300:02/6_0", "nwparser.p0", "\"%{group_object}\";Location=%{p0}");
      
      var part57 = match("MESSAGE#568:300:02/6_1", "nwparser.p0", "%{group_object};Location=%{p0}");
      
      var part58 = match("MESSAGE#568:300:02/7_0", "nwparser.p0", "\"%{directory}\";Category=%{p0}");
      
      var part59 = match("MESSAGE#568:300:02/7_1", "nwparser.p0", "%{directory};Category=%{p0}");
      
      var part60 = match("MESSAGE#568:300:02/8_0", "nwparser.p0", "\"%{category}\";RequestId=%{p0}");
      
      var part61 = match("MESSAGE#568:300:02/8_1", "nwparser.p0", "%{category};RequestId=%{p0}");
      
      var part62 = match("MESSAGE#568:300:02/9_0", "nwparser.p0", "\"%{id1}\";Reason=%{p0}");
      
      var part63 = match("MESSAGE#568:300:02/9_1", "nwparser.p0", "%{id1};Reason=%{p0}");
      
      var part64 = match("MESSAGE#568:300:02/10_0", "nwparser.p0", "\"%{event_description}\";Severity=%{p0}");
      
      var part65 = match("MESSAGE#568:300:02/10_1", "nwparser.p0", "%{event_description};Severity=%{p0}");
      
      var part66 = match("MESSAGE#568:300:02/11_0", "nwparser.p0", "\"%{severity}\";SourceUser=%{p0}");
      
      var part67 = match("MESSAGE#568:300:02/11_1", "nwparser.p0", "%{severity};SourceUser=%{p0}");
      
      var part68 = match("MESSAGE#568:300:02/12_0", "nwparser.p0", "\"%{group}\";TargetUser=%{p0}");
      
      var part69 = match("MESSAGE#568:300:02/12_1", "nwparser.p0", "%{group};TargetUser=%{p0}");
      
      var part70 = match("MESSAGE#568:300:02/13_0", "nwparser.p0", "\"%{uid}\";GatewayStation=%{p0}");
      
      var part71 = match("MESSAGE#568:300:02/13_1", "nwparser.p0", "%{uid};GatewayStation=%{p0}");
      
      var part72 = match("MESSAGE#568:300:02/14_0", "nwparser.p0", "\"%{saddr}\";TicketID=%{p0}");
      
      var part73 = match("MESSAGE#568:300:02/14_1", "nwparser.p0", "%{saddr};TicketID=%{p0}");
      
      var part74 = match("MESSAGE#568:300:02/15_0", "nwparser.p0", "\"%{operation_id}\";PolicyID=%{p0}");
      
      var part75 = match("MESSAGE#568:300:02/15_1", "nwparser.p0", "%{operation_id};PolicyID=%{p0}");
      
      var part76 = match("MESSAGE#568:300:02/16_0", "nwparser.p0", "\"%{policyname}\";UserName=%{p0}");
      
      var part77 = match("MESSAGE#568:300:02/16_1", "nwparser.p0", "%{policyname};UserName=%{p0}");
      
      var part78 = match("MESSAGE#568:300:02/17_0", "nwparser.p0", "\"%{fld11}\";LogonDomain=%{p0}");
      
      var part79 = match("MESSAGE#568:300:02/17_1", "nwparser.p0", "%{fld11};LogonDomain=%{p0}");
      
      var part80 = match("MESSAGE#568:300:02/18_0", "nwparser.p0", "\"%{domain}\";Address=%{p0}");
      
      var part81 = match("MESSAGE#568:300:02/18_1", "nwparser.p0", "%{domain};Address=%{p0}");
      
      var part82 = match("MESSAGE#568:300:02/19_0", "nwparser.p0", "\"%{fld14}\";CPMStatus=%{p0}");
      
      var part83 = match("MESSAGE#568:300:02/19_1", "nwparser.p0", "%{fld14};CPMStatus=%{p0}");
      
      var part84 = match("MESSAGE#568:300:02/20_0", "nwparser.p0", "\"%{disposition}\";Port=%{p0}");
      
      var part85 = match("MESSAGE#568:300:02/20_1", "nwparser.p0", "%{disposition};Port=%{p0}");
      
      var part86 = match("MESSAGE#568:300:02/21_0", "nwparser.p0", "\"%{dport}\";Database=%{p0}");
      
      var part87 = match("MESSAGE#568:300:02/21_1", "nwparser.p0", "%{dport};Database=%{p0}");
      
      var part88 = match("MESSAGE#568:300:02/22_0", "nwparser.p0", "\"%{db_name}\";DeviceType=%{p0}");
      
      var part89 = match("MESSAGE#568:300:02/22_1", "nwparser.p0", "%{db_name};DeviceType=%{p0}");
      
      var part90 = match("MESSAGE#568:300:02/23_0", "nwparser.p0", "\"%{obj_type}\";ExtraDetails=\"ApplicationType=%{p0}");
      
      var part91 = match("MESSAGE#568:300:02/23_1", "nwparser.p0", "%{obj_type};ExtraDetails=\"ApplicationType=%{p0}");
      
      var part92 = match("MESSAGE#621:411/1_0", "nwparser.p0", "\"%{version}\";%{p0}");
      
      var part93 = match("MESSAGE#621:411/1_1", "nwparser.p0", "%{version};%{p0}");
      
      var part94 = match("MESSAGE#621:411/2", "nwparser.p0", "Message=%{p0}");
      
      var part95 = match("MESSAGE#621:411/3_0", "nwparser.p0", "\"%{action}\";%{p0}");
      
      var part96 = match("MESSAGE#621:411/3_1", "nwparser.p0", "%{action};%{p0}");
      
      var part97 = match("MESSAGE#621:411/4", "nwparser.p0", "Issuer=%{p0}");
      
      var part98 = match("MESSAGE#621:411/5_0", "nwparser.p0", "\"%{username}\";%{p0}");
      
      var part99 = match("MESSAGE#621:411/5_1", "nwparser.p0", "%{username};%{p0}");
      
      var part100 = match("MESSAGE#621:411/6", "nwparser.p0", "Station=%{p0}");
      
      var part101 = match("MESSAGE#621:411/7_0", "nwparser.p0", "\"%{hostip}\";%{p0}");
      
      var part102 = match("MESSAGE#621:411/7_1", "nwparser.p0", "%{hostip};%{p0}");
      
      var part103 = match("MESSAGE#621:411/8", "nwparser.p0", "File=%{p0}");
      
      var part104 = match("MESSAGE#621:411/9_0", "nwparser.p0", "\"%{filename}\";%{p0}");
      
      var part105 = match("MESSAGE#621:411/9_1", "nwparser.p0", "%{filename};%{p0}");
      
      var part106 = match("MESSAGE#621:411/10", "nwparser.p0", "Safe=%{p0}");
      
      var part107 = match("MESSAGE#621:411/11_0", "nwparser.p0", "\"%{group_object}\";%{p0}");
      
      var part108 = match("MESSAGE#621:411/11_1", "nwparser.p0", "%{group_object};%{p0}");
      
      var part109 = match("MESSAGE#621:411/12", "nwparser.p0", "Location=%{p0}");
      
      var part110 = match("MESSAGE#621:411/13_0", "nwparser.p0", "\"%{directory}\";%{p0}");
      
      var part111 = match("MESSAGE#621:411/13_1", "nwparser.p0", "%{directory};%{p0}");
      
      var part112 = match("MESSAGE#621:411/14", "nwparser.p0", "Category=%{p0}");
      
      var part113 = match("MESSAGE#621:411/15_0", "nwparser.p0", "\"%{category}\";%{p0}");
      
      var part114 = match("MESSAGE#621:411/15_1", "nwparser.p0", "%{category};%{p0}");
      
      var part115 = match("MESSAGE#621:411/16", "nwparser.p0", "RequestId=%{p0}");
      
      var part116 = match("MESSAGE#621:411/17_0", "nwparser.p0", "\"%{id1}\";%{p0}");
      
      var part117 = match("MESSAGE#621:411/17_1", "nwparser.p0", "%{id1};%{p0}");
      
      var part118 = match("MESSAGE#621:411/18", "nwparser.p0", "Reason=%{p0}");
      
      var part119 = match("MESSAGE#621:411/19_0", "nwparser.p0", "\"%{event_description}\";%{p0}");
      
      var part120 = match("MESSAGE#621:411/19_1", "nwparser.p0", "%{event_description};%{p0}");
      
      var part121 = match("MESSAGE#621:411/20", "nwparser.p0", "Severity=%{p0}");
      
      var part122 = match("MESSAGE#621:411/21_0", "nwparser.p0", "\"%{severity}\";SourceUser=\"%{group}\";TargetUser=\"%{uid}\";%{p0}");
      
      var part123 = match("MESSAGE#621:411/21_1", "nwparser.p0", "%{severity};SourceUser=%{group};TargetUser=%{uid};%{p0}");
      
      var part124 = match("MESSAGE#621:411/21_2", "nwparser.p0", "\"%{severity}\";%{p0}");
      
      var part125 = match("MESSAGE#621:411/21_3", "nwparser.p0", "%{severity};%{p0}");
      
      var part126 = match("MESSAGE#621:411/22", "nwparser.p0", "GatewayStation=%{p0}");
      
      var part127 = match("MESSAGE#621:411/23_0", "nwparser.p0", "\"%{saddr}\";%{p0}");
      
      var part128 = match("MESSAGE#621:411/23_1", "nwparser.p0", "%{saddr};%{p0}");
      
      var part129 = match("MESSAGE#621:411/24", "nwparser.p0", "TicketID=%{p0}");
      
      var part130 = match("MESSAGE#621:411/25_0", "nwparser.p0", "\"%{operation_id}\";%{p0}");
      
      var part131 = match("MESSAGE#621:411/25_1", "nwparser.p0", "%{operation_id};%{p0}");
      
      var part132 = match("MESSAGE#621:411/26", "nwparser.p0", "PolicyID=%{p0}");
      
      var part133 = match("MESSAGE#621:411/27_0", "nwparser.p0", "\"%{policyname}\";%{p0}");
      
      var part134 = match("MESSAGE#621:411/27_1", "nwparser.p0", "%{policyname};%{p0}");
      
      var part135 = match("MESSAGE#621:411/28", "nwparser.p0", "UserName=%{p0}");
      
      var part136 = match("MESSAGE#621:411/29_0", "nwparser.p0", "\"%{c_username}\";%{p0}");
      
      var part137 = match("MESSAGE#621:411/29_1", "nwparser.p0", "%{c_username};%{p0}");
      
      var part138 = match("MESSAGE#621:411/30", "nwparser.p0", "LogonDomain=%{p0}");
      
      var part139 = match("MESSAGE#621:411/31_0", "nwparser.p0", "\"%{domain}\";%{p0}");
      
      var part140 = match("MESSAGE#621:411/31_1", "nwparser.p0", "%{domain};%{p0}");
      
      var part141 = match("MESSAGE#621:411/32", "nwparser.p0", "Address=%{p0}");
      
      var part142 = match("MESSAGE#621:411/33_0", "nwparser.p0", "\"%{dhost}\";%{p0}");
      
      var part143 = match("MESSAGE#621:411/33_1", "nwparser.p0", "%{dhost};%{p0}");
      
      var part144 = match("MESSAGE#621:411/34", "nwparser.p0", "CPMStatus=%{p0}");
      
      var part145 = match("MESSAGE#621:411/35_0", "nwparser.p0", "\"%{disposition}\";%{p0}");
      
      var part146 = match("MESSAGE#621:411/35_1", "nwparser.p0", "%{disposition};%{p0}");
      
      var part147 = match("MESSAGE#621:411/36", "nwparser.p0", "Port=%{p0}");
      
      var part148 = match("MESSAGE#621:411/37_0", "nwparser.p0", "\"%{dport}\";%{p0}");
      
      var part149 = match("MESSAGE#621:411/37_1", "nwparser.p0", "%{dport};%{p0}");
      
      var part150 = match("MESSAGE#621:411/38", "nwparser.p0", "Database=%{p0}");
      
      var part151 = match("MESSAGE#621:411/39_0", "nwparser.p0", "\"%{db_name}\";%{p0}");
      
      var part152 = match("MESSAGE#621:411/39_1", "nwparser.p0", "%{db_name};%{p0}");
      
      var part153 = match("MESSAGE#621:411/40", "nwparser.p0", "DeviceType=%{p0}");
      
      var part154 = match("MESSAGE#621:411/41_0", "nwparser.p0", "\"%{obj_type}\";%{p0}");
      
      var part155 = match("MESSAGE#621:411/41_1", "nwparser.p0", "%{obj_type};%{p0}");
      
      var part156 = match("MESSAGE#621:411/42", "nwparser.p0", "ExtraDetails=%{p0}");
      
      var part157 = match("MESSAGE#621:411/43_1", "nwparser.p0", "%{info};");
      
      var part158 = tagval("MESSAGE#0:1:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup1,
      	dup2,
      	dup3,
      ]));
      
      var part159 = match("MESSAGE#1:1", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup1,
      	dup2,
      ]));
      
      var part160 = tagval("MESSAGE#2:2:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup4,
      	dup2,
      	dup3,
      ]));
      
      var part161 = match("MESSAGE#3:2", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup4,
      	dup2,
      ]));
      
      var part162 = tagval("MESSAGE#6:4:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup5,
      	dup6,
      	dup7,
      	dup8,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var part163 = match("MESSAGE#7:4", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup5,
      	dup6,
      	dup7,
      	dup8,
      	dup9,
      	dup2,
      ]));
      
      var part164 = tagval("MESSAGE#20:13:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup15,
      	dup16,
      	dup17,
      	dup9,
      	dup2,
      	dup3,
      ]));
      
      var part165 = match("MESSAGE#21:13", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup15,
      	dup16,
      	dup17,
      	dup9,
      	dup2,
      ]));
      
      var part166 = tagval("MESSAGE#26:16:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup19,
      	dup2,
      	dup3,
      ]));
      
      var part167 = match("MESSAGE#27:16", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup19,
      	dup2,
      ]));
      
      var part168 = tagval("MESSAGE#30:18:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup15,
      	dup2,
      	dup3,
      ]));
      
      var part169 = match("MESSAGE#31:18", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup15,
      	dup2,
      ]));
      
      var part170 = tagval("MESSAGE#38:22:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup21,
      	dup2,
      	dup3,
      ]));
      
      var part171 = match("MESSAGE#39:22", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup21,
      	dup2,
      ]));
      
      var part172 = tagval("MESSAGE#70:38:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup23,
      	dup2,
      	dup3,
      ]));
      
      var part173 = match("MESSAGE#71:38", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup23,
      	dup2,
      ]));
      
      var part174 = tagval("MESSAGE#116:61:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup20,
      	dup2,
      	dup3,
      ]));
      
      var part175 = match("MESSAGE#117:61", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup20,
      	dup2,
      ]));
      
      var part176 = tagval("MESSAGE#126:66:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup26,
      	dup2,
      	dup3,
      ]));
      
      var part177 = match("MESSAGE#127:66", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup26,
      	dup2,
      ]));
      
      var part178 = tagval("MESSAGE#190:98:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup26,
      	dup2,
      	dup3,
      	dup24,
      	dup25,
      ]));
      
      var select316 = linear_select([
      	dup32,
      	dup33,
      ]);
      
      var select317 = linear_select([
      	dup34,
      	dup35,
      ]);
      
      var select318 = linear_select([
      	dup36,
      	dup37,
      ]);
      
      var select319 = linear_select([
      	dup38,
      	dup39,
      ]);
      
      var select320 = linear_select([
      	dup40,
      	dup41,
      ]);
      
      var select321 = linear_select([
      	dup42,
      	dup43,
      ]);
      
      var select322 = linear_select([
      	dup44,
      	dup45,
      ]);
      
      var select323 = linear_select([
      	dup46,
      	dup47,
      ]);
      
      var select324 = linear_select([
      	dup48,
      	dup49,
      ]);
      
      var select325 = linear_select([
      	dup50,
      	dup51,
      ]);
      
      var select326 = linear_select([
      	dup52,
      	dup53,
      ]);
      
      var select327 = linear_select([
      	dup54,
      	dup55,
      ]);
      
      var select328 = linear_select([
      	dup56,
      	dup57,
      ]);
      
      var select329 = linear_select([
      	dup58,
      	dup59,
      ]);
      
      var select330 = linear_select([
      	dup60,
      	dup61,
      ]);
      
      var select331 = linear_select([
      	dup62,
      	dup63,
      ]);
      
      var select332 = linear_select([
      	dup64,
      	dup65,
      ]);
      
      var select333 = linear_select([
      	dup66,
      	dup67,
      ]);
      
      var select334 = linear_select([
      	dup68,
      	dup69,
      ]);
      
      var select335 = linear_select([
      	dup70,
      	dup71,
      ]);
      
      var select336 = linear_select([
      	dup72,
      	dup73,
      ]);
      
      var select337 = linear_select([
      	dup74,
      	dup75,
      ]);
      
      var select338 = linear_select([
      	dup76,
      	dup77,
      ]);
      
      var part179 = tagval("MESSAGE#591:317:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup79,
      	dup80,
      	dup81,
      	dup2,
      	dup3,
      ]));
      
      var part180 = match("MESSAGE#592:317", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup79,
      	dup80,
      	dup81,
      	dup2,
      ]));
      
      var part181 = tagval("MESSAGE#595:355:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup82,
      	dup2,
      	dup3,
      ]));
      
      var part182 = match("MESSAGE#596:355", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup82,
      	dup2,
      ]));
      
      var part183 = tagval("MESSAGE#599:357:01", "nwparser.payload", tvm, {
      	"Address": "dhost",
      	"CPMStatus": "disposition",
      	"Category": "category",
      	"Database": "db_name",
      	"DeviceType": "obj_type",
      	"ExtraDetails": "info",
      	"File": "filename",
      	"GatewayStation": "saddr",
      	"Issuer": "username",
      	"Location": "directory",
      	"LogonDomain": "domain",
      	"Message": "action",
      	"PolicyID": "policyname",
      	"Port": "dport",
      	"Reason": "event_description",
      	"RequestId": "id1",
      	"Safe": "group_object",
      	"Severity": "severity",
      	"SourceUser": "group",
      	"Station": "hostip",
      	"TargetUser": "uid",
      	"TicketID": "operation_id",
      	"UserName": "c_username",
      	"Version": "version",
      }, processor_chain([
      	dup83,
      	dup2,
      	dup3,
      ]));
      
      var part184 = match("MESSAGE#600:357", "nwparser.payload", "%{product->} %{version}\",ProductAccount=\"%{service_account}\",ProductProcess=\"%{fld2}\",EventId=\"%{id}\",EventClass=\"%{fld3}\",EventSeverity=\"%{severity}\",EventMessage=\"%{action}\",ActingUserName=\"%{username}\",ActingAddress=\"%{hostip}\",ActionSourceUser=\"%{fld4}\",ActionTargetUser=\"%{c_username}\",ActionObject=\"%{filename}\",ActionSafe=\"%{group_object}\",ActionLocation=\"%{directory}\",ActionCategory=\"%{category}\",ActionRequestId=\"%{id1}\",ActionReason=\"%{event_description}\",ActionExtraDetails=\"%{info}\"", processor_chain([
      	dup83,
      	dup2,
      ]));
      
      var part185 = match("MESSAGE#617:372", "nwparser.payload", "Version=%{version};Message=%{action};Issuer=%{username};Station=%{hostip};File=%{filename};Safe=%{group_object};Location=%{directory};Category=%{category};RequestId=%{id1};Reason=%{event_description};Severity=%{severity};GatewayStation=%{saddr};TicketID=%{operation_id};PolicyID=%{policyname};UserName=%{c_username};LogonDomain=%{domain};Address=%{dhost};CPMStatus=%{disposition};Port=\"%{dport}\";Database=%{db_name};DeviceType=%{obj_type};ExtraDetails=%{info};", processor_chain([
      	dup4,
      	dup2,
      	dup3,
      ]));
      
      var select339 = linear_select([
      	dup85,
      	dup86,
      ]);
      
      var select340 = linear_select([
      	dup88,
      	dup89,
      ]);
      
      var select341 = linear_select([
      	dup91,
      	dup92,
      ]);
      
      var select342 = linear_select([
      	dup94,
      	dup95,
      ]);
      
      var select343 = linear_select([
      	dup97,
      	dup98,
      ]);
      
      var select344 = linear_select([
      	dup100,
      	dup101,
      ]);
      
      var select345 = linear_select([
      	dup103,
      	dup104,
      ]);
      
      var select346 = linear_select([
      	dup106,
      	dup107,
      ]);
      
      var select347 = linear_select([
      	dup109,
      	dup110,
      ]);
      
      var select348 = linear_select([
      	dup112,
      	dup113,
      ]);
      
      var select349 = linear_select([
      	dup115,
      	dup116,
      	dup117,
      	dup118,
      ]);
      
      var select350 = linear_select([
      	dup120,
      	dup121,
      ]);
      
      var select351 = linear_select([
      	dup123,
      	dup124,
      ]);
      
      var select352 = linear_select([
      	dup126,
      	dup127,
      ]);
      
      var select353 = linear_select([
      	dup129,
      	dup130,
      ]);
      
      var select354 = linear_select([
      	dup132,
      	dup133,
      ]);
      
      var select355 = linear_select([
      	dup135,
      	dup136,
      ]);
      
      var select356 = linear_select([
      	dup138,
      	dup139,
      ]);
      
      var select357 = linear_select([
      	dup141,
      	dup142,
      ]);
      
      var select358 = linear_select([
      	dup144,
      	dup145,
      ]);
      
      var select359 = linear_select([
      	dup147,
      	dup148,
      ]);
      
- community_id:
- add_locale: ~
- add_fields:
    target: ''
    fields:
        ecs.version: 1.6.0
