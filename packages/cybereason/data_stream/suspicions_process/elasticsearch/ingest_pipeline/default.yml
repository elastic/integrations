---
description: Pipeline for processing suspicions_process logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - set:
      field: event.kind
      tag: set_event_kind
      value: alert
  - set:
      field: event.category
      tag: set_event_category
      value: ["malware"]
  - set:
      field: event.type
      tag: set_event_type
      value: ["info"]
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      if: ctx.event?.original != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_parse_different_message_object
      description: Script to parse different(suspicionsmap and evidencemap) message objects.
      if: ctx.json != null
      source: >-
        ctx.suspicionsMap = ctx.json[1];
        ctx.evidenceMap = ctx.json[2];
        ctx.json = ctx.json[0];
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - fingerprint:
      fields:
        - json.guidString
      target_field: _id
      ignore_missing: true
  - foreach:
      field: json.elementValues.calculatedUser.elementValues
      if: ctx.json?.elementValues?.calculatedUser?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_calculatedUser_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.calculatedUser.elementValues
      if: ctx.json?.elementValues?.calculatedUser?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_calculatedUser_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.calculatedUser.elementValues
      if: ctx.json?.elementValues?.calculatedUser?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_calculatedUser_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.calculatedUser.elementValues
      if: ctx.json?.elementValues?.calculatedUser?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_calculatedUser_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.calculatedUser.elementValues
      if: ctx.json?.elementValues?.calculatedUser?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_calculatedUser_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.calculatedUser.elementValues
      if: ctx.json?.elementValues?.calculatedUser?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          tag: remove_elementValues_calculatedUser_elementValues_duplicate_values
          ignore_missing: true
  - rename:
      field: json.elementValues.calculatedUser.elementValues
      tag: rename_elementValues_calculatedUser_elementValues
      target_field: cybereason.suspicions_process.element_values.calculated_user.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.calculatedUser.guessedTotal
      tag: convert_elementValues_calculatedUser_guessedTotal_to_long
      target_field: cybereason.suspicions_process.element_values.calculated_user.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.calculatedUser.totalMalicious
      tag: convert_elementValues_calculatedUser_totalMalicious_to_long
      target_field: cybereason.suspicions_process.element_values.calculated_user.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.calculatedUser.totalSuspicious
      tag: convert_elementValues_calculatedUser_totalSuspicious_to_long
      target_field: cybereason.suspicions_process.element_values.calculated_user.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.calculatedUser.totalValues
      tag: convert_elementValues_calculatedUser_totalValues_to_long
      target_field: cybereason.suspicions_process.element_values.calculated_user.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.children.elementValues
      if: ctx.json?.elementValues?.children?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_children_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.children.elementValues
      if: ctx.json?.elementValues?.children?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_children_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.children.elementValues
      if: ctx.json?.elementValues?.children?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_children_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.children.elementValues
      if: ctx.json?.elementValues?.children?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_children_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.children.elementValues
      if: ctx.json?.elementValues?.children?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_children_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.children.elementValues
      if: ctx.json?.elementValues?.children?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          tag: remove_elementValues_children_elementValues_duplicate_values
          ignore_missing: true
  - rename:
      field: json.elementValues.children.elementValues
      tag: rename_elementValues_children_elementValues
      target_field: cybereason.suspicions_process.element_values.children.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.children.guessedTotal
      tag: convert_elementValues_children_guessedTotal_to_long
      target_field: cybereason.suspicions_process.element_values.children.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.children.totalMalicious
      tag: convert_elementValues_children_totalMalicious_to_long
      target_field: cybereason.suspicions_process.element_values.children.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.children.totalSuspicious
      tag: convert_elementValues_children_totalSuspicious_to_long
      target_field: cybereason.suspicions_process.element_values.children.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.children.totalValues
      tag: convert_elementValues_children_totalValues_to_long
      target_field: cybereason.suspicions_process.element_values.children.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_imageFile_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: file.uid
          tag: append_elementValues_imageFile_elementValues_guid_into_file_uid
          value: '{{{_ingest._value.guid}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_imageFile_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_imageFile_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: file.name
          tag: append_elementValues_imageFile_elementValues_name_into_file_name
          value: '{{{_ingest._value.name}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_imageFile_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_imageFile_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.imageFile.elementValues
      if: ctx.json?.elementValues?.imageFile?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          tag: remove_elementValues_imageFile_elementValues_duplicate_values
          ignore_missing: true
  - rename:
      field: json.elementValues.imageFile.elementValues
      tag: rename_elementValues_imageFile_elementValues
      target_field: cybereason.suspicions_process.element_values.image_file.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.imageFile.guessedTotal
      tag: convert_elementValues_imageFile_guessedTotal_to_long
      target_field: cybereason.suspicions_process.element_values.image_file.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.imageFile.totalMalicious
      tag: convert_elementValues_imageFile_totalMalicious_to_long
      target_field: cybereason.suspicions_process.element_values.image_file.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.imageFile.totalSuspicious
      tag: convert_elementValues_imageFile_totalSuspicious_to_long
      target_field: cybereason.suspicions_process.element_values.image_file.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.imageFile.totalValues
      tag: convert_elementValues_imageFile_totalValues_to_long
      target_field: cybereason.suspicions_process.element_values.image_file.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_ownerMachine_elementValues_elementType
          target_field: _ingest._value.element_type
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: process.real_user.id
          tag: append_elementValues_ownerMachine_elementValues_guid_into_process_real_user_id
          value: '{{{_ingest._value.guid}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: related.user
          tag: append_elementValues_ownerMachine_elementValues_guid_into_related_user
          value: '{{{_ingest._value.guid}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_ownerMachine_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_ownerMachine_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: process.real_user.name
          tag: append_elementValues_ownerMachine_elementValues_guid_into_process_real_user_name
          value: '{{{_ingest._value.name}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: related.user
          tag: append_elementValues_ownerMachine_elementValues_name_into_related_user
          value: '{{{_ingest._value.name}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_ownerMachine_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_ownerMachine_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          tag: remove_elementValues_ownerMachine_elementValues_duplicate_values
          ignore_missing: true
  - rename:
      field: json.elementValues.ownerMachine.elementValues
      tag: rename_elementValues_ownerMachine_elementValues
      target_field: cybereason.suspicions_process.element_values.owner_machine.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.ownerMachine.guessedTotal
      tag: convert_elementValues_ownerMachine_guessedTotal_to_long
      target_field: cybereason.suspicions_process.element_values.owner_machine.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.ownerMachine.totalMalicious
      tag: convert_elementValues_ownerMachine_totalMalicious_to_long
      target_field: cybereason.suspicions_process.element_values.owner_machine.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.ownerMachine.totalSuspicious
      tag: convert_elementValues_ownerMachine_totalSuspicious_to_long
      target_field: cybereason.suspicions_process.element_values.owner_machine.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.ownerMachine.totalValues
      tag: convert_elementValues_ownerMachine_totalValues_to_long
      target_field: cybereason.suspicions_process.element_values.owner_machine.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_parentProcess_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: process.parent.entity_id
          tag: append_elementValues_parentProcess_elementValues_guid_into_process_parent_entity_id
          value: '{{{_ingest._value.guid}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_parentProcess_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_parentProcess_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: process.parent.name
          tag: append_elementValues_parentProcess_elementValues_name_into_process_parent_name
          value: '{{{_ingest._value.name}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_parentProcess_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_parentProcess_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.parentProcess.elementValues
      if: ctx.json?.elementValues?.parentProcess?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          tag: remove_elementValues_parentProcess_elementValues_duplicate_values
          ignore_missing: true
  - rename:
      field: json.elementValues.parentProcess.elementValues
      tag: rename_elementValues_parentProcess_elementValues
      target_field: cybereason.suspicions_process.element_values.parent_process.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.parentProcess.guessedTotal
      tag: convert_elementValues_parentProcess_guessedTotal_to_long
      target_field: cybereason.suspicions_process.element_values.parent_process.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.parentProcess.totalMalicious
      tag: convert_elementValues_parentProcess_totalMalicious_to_long
      target_field: cybereason.suspicions_process.element_values.parent_process.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.parentProcess.totalSuspicious
      tag: convert_elementValues_parentProcess_totalSuspicious_to_long
      target_field: cybereason.suspicions_process.element_values.parent_process.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.parentProcess.totalValues
      tag: convert_elementValues_parentProcess_totalValues_to_long
      target_field: cybereason.suspicions_process.element_values.parent_process.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: evidenceMap
      tag: rename_evidenceMap
      target_field: cybereason.suspicions_process.evidence_map
      ignore_missing: true
  - rename:
      field: json.filterData.groupByValue
      tag: rename_filterData_groupByValue
      target_field: cybereason.suspicions_process.filter_data.group_by_value
      ignore_missing: true
  - rename:
      field: json.filterData.sortInGroupValue
      tag: rename_filterData_sortInGroupValue
      target_field: cybereason.suspicions_process.filter_data.sort_in_group_value
      ignore_missing: true
  - rename:
      field: json.guidString
      tag: rename_guidString
      target_field: cybereason.suspicions_process.guid_string
      ignore_missing: true
  - set:
      field: event.id
      tag: set_guidString_into_event_id
      copy_from: cybereason.suspicions_process.guid_string
      ignore_empty_value: true
  - convert:
      field: json.isMalicious
      tag: convert_isMalicious_to_boolean
      target_field: cybereason.suspicions_process.is_malicious
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.labelsIds
      tag: rename_labelsIds
      target_field: cybereason.suspicions_process.labels_ids
      ignore_missing: true
  - convert:
      field: json.malicious
      tag: convert_malicious_to_boolean
      target_field: cybereason.suspicions_process.malicious
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.malopPriority
      tag: rename_malopPriority
      target_field: cybereason.suspicions_process.malop_priority
      ignore_missing: true
  - convert:
      field: json.simpleValues.commandLine.totalValues
      tag: convert_simpleValues_commandLine_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.command_line.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.commandLine.values
      tag: rename_simpleValues_commandLine_values
      target_field: cybereason.suspicions_process.simple_values.command_line.values
      ignore_missing: true
  - set:
      field: process.command_line
      tag: set_process_command_line_from_suspicions_process_simple_values_command_line_values
      copy_from: cybereason.suspicions_process.simple_values.command_line.values
      ignore_empty_value: true
  - convert:
      field: json.simpleValues.creationTime.totalValues
      tag: convert_simpleValues_creationTime_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.creation_time.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.creationTime.values
      if: ctx.json?.simpleValues?.creationTime?.values != null
      ignore_failure: true
      processor:
        date:
          field: _ingest._value
          tag: date_simpleValues_creationTime_values
          target_field: _ingest._value
          formats:
            - UNIX_MS
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
  - foreach:
      field: json.simpleValues.creationTime.values
      if: ctx.json?.simpleValues?.creationTime?.values != null
      ignore_failure: true
      processor:
        append:
          field: event.created
          tag: append_simpleValues_creationTime_values_into_event_created
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - rename:
      field: json.simpleValues.creationTime.values
      tag: rename_simpleValues_creationTime_values
      target_field: cybereason.suspicions_process.simple_values.creation_time.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.elementDisplayName.totalValues
      tag: convert_simpleValues_elementDisplayName_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.element_display_name.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.elementDisplayName.values
      tag: rename_simpleValues_elementDisplayName_values
      target_field: cybereason.suspicions_process.simple_values.element_display_name.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.endTime.totalValues
      tag: convert_simpleValues_endTime_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.end_time.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.endTime.values
      if: ctx.json?.simpleValues?.endTime?.values != null
      ignore_failure: true
      processor:
        date:
          field: _ingest._value
          tag: date_simpleValues_endTime_values
          target_field: _ingest._value
          formats:
            - UNIX_MS
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
  - foreach:
      field: json.simpleValues.endTime.values
      if: ctx.json?.simpleValues?.endTime?.values != null
      ignore_failure: true
      processor:
        set:
          field: '@timestamp'
          tag: set_simpleValues_endTime_values_into_@timestamp
          copy_from: _ingest._value
          ignore_empty_value: true
  - rename:
      field: json.simpleValues.endTime.values
      tag: rename_simpleValues_endTime_values
      target_field: cybereason.suspicions_process.simple_values.end_time.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.executionPrevented.totalValues
      tag: convert_simpleValues_executionPrevented_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.execution_prevented.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.executionPrevented.values
      if: ctx.json?.simpleValues?.executionPrevented?.values != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value
          tag: convert_simpleValues_executionPrevented_values_to_boolean
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.executionPrevented.values
      tag: rename_simpleValues_executionPrevented_values
      target_field: cybereason.suspicions_process.simple_values.execution_prevented.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.group.totalValues
      tag: convert_simpleValues_group_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.group.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.group.values
      tag: rename_simpleValues_group_values
      target_field: cybereason.suspicions_process.simple_values.group.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.iconBase64.totalValues
      tag: convert_simpleValues_iconBase64_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.icon_base64.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.iconBase64.values
      tag: rename_simpleValues_iconBase64_values
      target_field: cybereason.suspicions_process.simple_values.icon_base64.values
      ignore_missing: true
  - script:
      lang: painless
      tag: script_to_rename_imageFile_companyName
      description: Script to Rename imageFile_companyName
      if: ctx.json?.simpleValues["imageFile.companyName"] != null
      source: >-
        def obj = ctx.json.simpleValues.remove("imageFile.companyName");
        ctx.cybereason.suspicions_process.simple_values.image_file_company_name = obj;
  - convert:
      field: cybereason.suspicions_process.simple_values.image_file_company_name.totalValues
      tag: convert_simpleValues_imageFile_companyName_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.image_file_company_name.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_rename_image_file_hash_icon_base64
      description: Script to Rename image_file_hash_icon_base64
      if: ctx.json?.simpleValues["imageFile.fileHash.iconBase64"] != null
      source: >-
        def obj = ctx.json.simpleValues.remove("imageFile.fileHash.iconBase64");
        ctx.cybereason.suspicions_process.simple_values.image_file_hash_icon_base64 = obj;
  - convert:
      field: cybereason.suspicions_process.simple_values.image_file_hash_icon_base64.totalValues
      tag: convert_simpleValues_imageFile_fileHash_iconBase64_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.image_file_hash_icon_base64.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_rename_image_file_malicious_classification_type
      description: Script to Rename image_file_malicious_classification_type
      if: ctx.json?.simpleValues["imageFile.maliciousClassificationType"] != null
      source: >-
        def obj = ctx.json.simpleValues.remove("imageFile.maliciousClassificationType");
        ctx.cybereason.suspicions_process.simple_values.image_file_malicious_classification_type = obj;
  - convert:
      field: cybereason.suspicions_process.simple_values.image_file_malicious_classification_type.totalValues
      tag: convert_simpleValues_imageFile_maliciousClassificationType_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.image_file_malicious_classification_type.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_rename_image_file_md5_string
      description: Script to Rename image_file_md5_string
      if: ctx.json?.simpleValues["imageFile.md5String"] != null
      source: >-
        def obj = ctx.json.simpleValues.remove("imageFile.md5String");
        ctx.cybereason.suspicions_process.simple_values.image_file_md5_string = obj;
  - convert:
      field: cybereason.suspicions_process.simple_values.image_file_md5_string.totalValues
      tag: convert_simpleValues_imageFile_md5String_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.image_file_md5_string.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: file.hash.md5
      tag: set_file_hash_md5_from_suspicions_process_simple_values_image_file_md5string_values
      copy_from: cybereason.suspicions_process.simple_values.image_file_md5_string.values
      ignore_empty_value: true
  - foreach:
      field: cybereason.suspicions_process.simple_values.image_file_md5_string.values
      if: ctx.cybereason?.suspicions_process?.simple_values?.image_file_md5_string?.values != null
      ignore_failure: true
      processor:
        append:
          field: related.hash
          tag: append_suspicions_process_simple_values_image_file_md5String_values_into_related_hash
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - script:
      lang: painless
      tag: script_to_rename_image_file_product_name
      description: Script to Rename image_file_product_name
      if: ctx.json?.simpleValues["imageFile.productName"] != null
      source: >-
        def obj = ctx.json.simpleValues.remove("imageFile.productName");
        ctx.cybereason.suspicions_process.simple_values.image_file_product_name = obj;
  - convert:
      field: cybereason.suspicions_process.simple_values.image_file_product_name.totalValues
      tag: convert_simpleValues_imageFile_productName_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.image_file_product_name.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_rename_image_file_sha1_string
      description: Script to Rename image_file_sha1_string
      if: ctx.json?.simpleValues["imageFile.sha1String"] != null
      source: >-
        def obj = ctx.json.simpleValues.remove("imageFile.sha1String");
        ctx.cybereason.suspicions_process.simple_values.image_file_sha1_string = obj;
  - convert:
      field: cybereason.suspicions_process.simple_values.image_file_sha1_string.totalValues
      tag: convert_simpleValues_imageFile_sha1String_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.image_file_sha1_string.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: file.hash.sha1
      tag: set_file_hash_sha1_from_suspicions_process_simple_values_image_file_sha1string_values
      copy_from: cybereason.suspicions_process.simple_values.image_file_sha1_string.values
      ignore_empty_value: true
  - foreach:
      field: cybereason.suspicions_process.simple_values.image_file_sha1_string.values
      if: ctx.cybereason?.suspicions_process?.simple_values?.image_file_sha1_string?.values != null
      ignore_failure: true
      processor:
        append:
          field: related.hash
          tag: append_suspicions_process_simple_values_image_file_sha1string_values_into_related_hash
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - remove:
      tag: remove_duplicate_totalValues
      field:
        - cybereason.suspicions_process.simple_values.image_file_company_name.totalValues
        - cybereason.suspicions_process.simple_values.image_file_hash_icon_base64.totalValues
        - cybereason.suspicions_process.simple_values.image_file_malicious_classification_type.totalValues
        - cybereason.suspicions_process.simple_values.image_file_md5_string.totalValues
        - cybereason.suspicions_process.simple_values.image_file_product_name.totalValues
        - cybereason.suspicions_process.simple_values.image_file_sha1_string.totalValues
      ignore_missing: true
  - convert:
      field: json.simpleValues.isImageFileSignedAndVerified.totalValues
      tag: convert_simpleValues_isImageFileSignedAndVerified_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.is_image_file_signed_and_verified.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.isImageFileSignedAndVerified.values
      if: ctx.json?.simpleValues?.isImageFileSignedAndVerified?.values != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value
          tag: convert_simpleValues_isImageFileSignedAndVerified_values_to_boolean
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.isImageFileSignedAndVerified.values
      tag: rename_simpleValues_isImageFileSignedAndVerified_values
      target_field: cybereason.suspicions_process.simple_values.is_image_file_signed_and_verified.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.isWhiteListClassification.totalValues
      tag: convert_simpleValues_isWhiteListClassification_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.is_white_list_classification.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.isWhiteListClassification.values
      if: ctx.json?.simpleValues?.isWhiteListClassification?.values != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value
          tag: convert_simpleValues_isWhiteListClassification_values_to_boolean
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.isWhiteListClassification.values
      tag: rename_simpleValues_isWhiteListClassification_values
      target_field: cybereason.suspicions_process.simple_values.is_white_list_classification.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.productType.totalValues
      tag: convert_simpleValues_productType_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.product_type.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.productType.values
      tag: rename_simpleValues_productType_values
      target_field: cybereason.suspicions_process.simple_values.product_type.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.ransomwareAutoRemediationSuspended.totalValues
      tag: convert_simpleValues_ransomwareAutoRemediationSuspended_totalValues_to_long
      target_field: cybereason.suspicions_process.simple_values.ransomware_auto_remediation_suspended.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.ransomwareAutoRemediationSuspended.values
      if: ctx.json?.simpleValues?.ransomwareAutoRemediationSuspended?.values != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value
          tag: convert_simpleValues_ransomwareAutoRemediationSuspended_values_to_boolean
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.ransomwareAutoRemediationSuspended.values
      tag: rename_simpleValues_ransomwareAutoRemediationSuspended_values
      target_field: cybereason.suspicions_process.simple_values.ransomware_auto_remediation_suspended.values
      ignore_missing: true
  - convert:
      field: json.suspect
      tag: convert_suspect_to_boolean
      target_field: cybereason.suspicions_process.suspect
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.suspicionCount
      tag: convert_suspicionCount_to_long
      target_field: cybereason.suspicions_process.suspicion_count
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.suspicions
      tag: rename_suspicions
      target_field: cybereason.suspicions_process.suspicions
      ignore_missing: true
  - rename:
      field: suspicionsMap
      tag: rename_suspicionsMap
      target_field: cybereason.suspicions_process.suspicions_map
      ignore_missing: true
  - foreach:
      field: cybereason.suspicions_process.element_values.image_file.element_values
      if: ctx.cybereason?.suspicions_process?.element_values?.image_file?.element_values != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.guid
            - _ingest._value.name
          tag: remove_custom_duplicate_fields_from_cybereason_suspicions_process_element_values_image_file_element_values
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: cybereason.suspicions_process.element_values.owner_machine.element_values
      if: ctx.cybereason?.suspicions_process?.element_values?.owner_machine?.element_values != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.guid
            - _ingest._value.name
          tag: remove_custom_duplicate_fields_from_cybereason_suspicions_process_element_values_owner_machine_element_values
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: cybereason.suspicions_process.element_values.parent_process.element_values
      if: ctx.cybereason?.suspicions_process?.element_values?.parent_process?.element_values != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.guid
            - _ingest._value.name
          tag: remove_custom_duplicate_fields_from_cybereason_suspicions_process_element_values_parent_process_element_values
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field:
        - cybereason.suspicions_process.simple_values.command_line.values
        - cybereason.suspicions_process.simple_values.creation_time.values
        - cybereason.suspicions_process.simple_values.end_time.values
        - cybereason.suspicions_process.simple_values.image_file_sha1_string.values
        - cybereason.suspicions_process.simple_values.image_file_md5_string.values
        - cybereason.suspicions_process.guid_string
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
