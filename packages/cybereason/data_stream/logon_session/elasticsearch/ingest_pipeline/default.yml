---
description: Pipeline for processing logon_session logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - set:
      field: event.kind
      tag: set_event_kind
      value: alert
  - set:
      field: event.category
      tag: set_event_category
      value: ["malware"]
  - set:
      field: event.type
      tag: set_event_type
      value: ["info"]
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      if: ctx.event?.original != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_parse_different_message_object
      description: Script to parse different(suspicionsmap and evidencemap) message objects.
      if: ctx.json != null
      source: >-
        ctx.suspicionsMap = ctx.json[1];
        ctx.evidenceMap = ctx.json[2];
        ctx.json = ctx.json[0];
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - fingerprint:
      fields:
        - json.guidString
      target_field: _id
      ignore_missing: true
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_ownerMachine_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_ownerMachine_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_ownerMachine_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_ownerMachine_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_ownerMachine_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.ownerMachine.elementValues
      if: ctx.json?.elementValues?.ownerMachine?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          tag: remove_elementValues_ownerMachine_elementValues_hasMalopsSuspicions
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          ignore_missing: true
  - rename:
      field: json.elementValues.ownerMachine.elementValues
      tag: rename_elementValues_ownerMachine_elementValues
      target_field: cybereason.logon_session.element_values.owner_machine.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.ownerMachine.guessedTotal
      tag: convert_elementValues_ownerMachine_guessedTotal_to_long
      target_field: cybereason.logon_session.element_values.owner_machine.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.ownerMachine.totalMalicious
      tag: convert_elementValues_ownerMachine_totalMalicious_to_long
      target_field: cybereason.logon_session.element_values.owner_machine.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.ownerMachine.totalSuspicious
      tag: convert_elementValues_ownerMachine_totalSuspicious_to_long
      target_field: cybereason.logon_session.element_values.owner_machine.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.ownerMachine.totalValues
      tag: convert_elementValues_ownerMachine_totalValues_to_long
      target_field: cybereason.logon_session.element_values.owner_machine.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.processes.elementValues
      if: ctx.json?.elementValues?.processes?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_processes_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.processes.elementValues
      if: ctx.json?.elementValues?.processes?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_processes_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.processes.elementValues
      if: ctx.json?.elementValues?.processes?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_processes_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.processes.elementValues
      if: ctx.json?.elementValues?.processes?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_processes_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.processes.elementValues
      if: ctx.json?.elementValues?.processes?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_processes_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - rename:
      field: json.elementValues.processes.elementValues
      tag: rename_elementValues_processes_elementValues
      target_field: cybereason.logon_session.element_values.processes.element_values
      ignore_missing: true
  - foreach:
      field: cybereason.logon_session.element_values.processes.element_values
      if: ctx.cybereason?.logon_session?.element_values?.processes?.element_values != null
      ignore_failure: true
      processor:
        remove:
          tag: remove_elementValues_processes_elementValues_hasMalopsSuspicions
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          ignore_missing: true
  - rename:
      field: json.elementValues.processes.elementValues
      tag: rename_elementValues_processes_elementValues
      target_field: cybereason.logon_session.element_values.processes.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.processes.guessedTotal
      tag: convert_elementValues_processes_guessedTotal_to_long
      target_field: cybereason.logon_session.element_values.processes.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.processes.totalMalicious
      tag: convert_elementValues_processes_totalMalicious_to_long
      target_field: cybereason.logon_session.element_values.processes.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.processes.totalSuspicious
      tag: convert_elementValues_processes_totalSuspicious_to_long
      target_field: cybereason.logon_session.element_values.processes.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.processes.totalValues
      tag: convert_elementValues_processes_totalValues_to_long
      target_field: cybereason.logon_session.element_values.processes.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.remoteMachine.elementValues
      if: ctx.json?.elementValues?.remoteMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_remoteMachine_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.remoteMachine.elementValues
      if: ctx.json?.elementValues?.remoteMachine?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_remoteMachine_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.remoteMachine.elementValues
      if: ctx.json?.elementValues?.remoteMachine?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_remoteMachine_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.remoteMachine.elementValues
      if: ctx.json?.elementValues?.remoteMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_remoteMachine_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.remoteMachine.elementValues
      if: ctx.json?.elementValues?.remoteMachine?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_remoteMachine_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - foreach:
      field: json.elementValues.remoteMachine.elementValues
      if: ctx.json?.elementValues?.remoteMachine?.elementValues != null
      ignore_failure: true
      processor:
        remove:
          tag: remove_elementValues_remoteMachine_elementValues_hasMalopsSuspicions
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          ignore_missing: true
  - rename:
      field: json.elementValues.remoteMachine.elementValues
      tag: rename_elementValues_remoteMachine_elementValues
      target_field: cybereason.logon_session.element_values.remote_machine.element_values
      ignore_missing: true
  - convert:
      field: json.elementValues.remoteMachine.guessedTotal
      tag: convert_elementValues_remoteMachine_guessedTotal_to_long
      target_field: cybereason.logon_session.element_values.remote_machine.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.remoteMachine.totalMalicious
      tag: convert_elementValues_remoteMachine_totalMalicious_to_long
      target_field: cybereason.logon_session.element_values.remote_machine.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.remoteMachine.totalSuspicious
      tag: convert_elementValues_remoteMachine_totalSuspicious_to_long
      target_field: cybereason.logon_session.element_values.remote_machine.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.remoteMachine.totalValues
      tag: convert_elementValues_remoteMachine_totalValues_to_long
      target_field: cybereason.logon_session.element_values.remote_machine.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementType
          tag: rename_elementValues_user_elementValues_elementType
          target_field: _ingest._value.element_type
          ignore_missing: true
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: user.id
          tag: append_elementValues_user_elementValues_guid_into_user_id
          value: '{{{_ingest._value.guid}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: related.user
          tag: append_elementValues_user_elementValues_guid_into_related_user
          value: '{{{_ingest._value.guid}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasMalops
          tag: convert_elementValues_user_elementValues_hasMalops_to_boolean
          target_field: _ingest._value.has_malops
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasMalops
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.hasSuspicions
          tag: convert_elementValues_user_elementValues_hasSuspicions_to_boolean
          target_field: _ingest._value.has_suspicions
          type: boolean
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.hasSuspicions
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: user.name
          tag: append_elementValues_user_elementValues_name_into_user_name
          value: '{{{_ingest._value.name}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        append:
          field: related.user
          tag: append_elementValues_user_elementValues_name_into_related_user
          value: '{{{_ingest._value.name}}}'
          allow_duplicates: false
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.elementValues
          tag: rename_elementValues_user_elementValues_elementValues
          target_field: _ingest._value.object
          ignore_missing: true
  - foreach:
      field: json.elementValues.user.elementValues
      if: ctx.json?.elementValues?.user?.elementValues != null
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.simpleValues
          tag: rename_elementValues_user_elementValues_simpleValues
          target_field: _ingest._value.simple_values
          ignore_missing: true
  - rename:
      field: json.elementValues.user.elementValues
      tag: rename_elementValues_user_elementValues
      target_field: cybereason.logon_session.element_values.user.element_values
      ignore_missing: true
  - foreach:
      field: cybereason.logon_session.element_values.user.element_values
      if: ctx.cybereason?.logon_session?.element_values?.user?.element_values != null
      ignore_failure: true
      processor:
        remove:
          tag: remove_elementValues_user_elementValues_hasMalopsSuspicions
          field:
            - _ingest._value.hasMalops
            - _ingest._value.hasSuspicions
          ignore_missing: true
  - convert:
      field: json.elementValues.user.guessedTotal
      tag: convert_elementValues_user_guessedTotal_to_long
      target_field: cybereason.logon_session.element_values.user.guessed_total
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.user.totalMalicious
      tag: convert_elementValues_user_totalMalicious_to_long
      target_field: cybereason.logon_session.element_values.user.total_malicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.user.totalSuspicious
      tag: convert_elementValues_user_totalSuspicious_to_long
      target_field: cybereason.logon_session.element_values.user.total_suspicious
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.elementValues.user.totalValues
      tag: convert_elementValues_user_totalValues_to_long
      target_field: cybereason.logon_session.element_values.user.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: evidenceMap
      tag: rename_evidenceMap
      target_field: cybereason.logon_session.evidence_map
      ignore_missing: true
  - rename:
      field: json.filterData.groupByValue
      tag: rename_filterData_groupByValue
      target_field: cybereason.logon_session.filter_data.group_by_value
      ignore_missing: true
  - rename:
      field: json.filterData.sortInGroupValue
      tag: rename_filterData_sortInGroupValue
      target_field: cybereason.logon_session.filter_data.sort_in_group_value
      ignore_missing: true
  - rename:
      field: json.guidString
      tag: rename_guidString
      target_field: cybereason.logon_session.guid_string
      ignore_missing: true
  - set:
      field: event.id
      tag: set_guidString_into_event_id
      copy_from: cybereason.logon_session.guid_string
      ignore_empty_value: true
  - convert:
      field: json.isMalicious
      tag: convert_isMalicious_to_boolean
      target_field: cybereason.logon_session.is_malicious
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.labelsIds
      tag: rename_labelsIds
      target_field: cybereason.logon_session.labels_ids
      ignore_missing: true
  - convert:
      field: json.malicious
      tag: convert_malicious_to_boolean
      target_field: cybereason.logon_session.malicious
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.malopPriority
      tag: rename_malopPriority
      target_field: cybereason.logon_session.malop_priority
      ignore_missing: true
  - convert:
      field: json.simpleValues.creationTime.totalValues
      tag: convert_simpleValues_creationTime_totalValues_to_long
      target_field: cybereason.logon_session.simple_values.creation_time.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.simpleValues.creationTime.values
      if: ctx.json?.simpleValues?.creationTime?.values != null
      ignore_failure: true
      processor:
        date:
          field: _ingest._value
          tag: date_simpleValues_creationTime_values
          target_field: _ingest._value
          formats:
            - UNIX_MS
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
  - foreach:
      field: json.simpleValues.creationTime.values
      if: ctx.json?.simpleValues?.creationTime?.values != null
      ignore_failure: true
      processor:
        set:
          field: '@timestamp'
          tag: set_simpleValues_creationTime_values_into_@timestamp
          copy_from: _ingest._value
          ignore_empty_value: true
  - rename:
      field: json.simpleValues.creationTime.values
      tag: rename_simpleValues_creationTime_values
      target_field: cybereason.logon_session.simple_values.creation_time.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.elementDisplayName.totalValues
      tag: convert_simpleValues_elementDisplayName_totalValues_to_long
      target_field: cybereason.logon_session.simple_values.element_display_name.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.elementDisplayName.values
      tag: rename_simpleValues_elementDisplayName_values
      target_field: cybereason.logon_session.simple_values.element_display_name.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.group.totalValues
      tag: convert_simpleValues_group_totalValues_to_long
      target_field: cybereason.logon_session.simple_values.group.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.group.values
      tag: rename_simpleValues_group_values
      target_field: cybereason.logon_session.simple_values.group.values
      ignore_missing: true
  - convert:
      field: json.simpleValues.logonType.totalValues
      tag: convert_simpleValues_logonType_totalValues_to_long
      target_field: cybereason.logon_session.simple_values.logon_type.total_values
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.simpleValues.logonType.values
      tag: rename_simpleValues_logonType_values
      target_field: cybereason.logon_session.simple_values.logon_type.values
      ignore_missing: true
  - convert:
      field: json.suspect
      tag: convert_suspect_to_boolean
      target_field: cybereason.logon_session.suspect
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.suspicionCount
      tag: convert_suspicionCount_to_long
      target_field: cybereason.logon_session.suspicion_count
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.suspicions
      tag: rename_suspicions
      target_field: cybereason.logon_session.suspicions
      ignore_missing: true
  - rename:
      field: suspicionsMap
      tag: rename_suspicionsMap
      target_field: cybereason.logon_session.suspicions_map
      ignore_missing: true
  - foreach:
      field: cybereason.logon_session.element_values.user.element_values
      if: ctx.cybereason?.logon_session?.element_values?.user?.element_values != null
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.guid
            - _ingest._value.name
          tag: remove_custom_duplicate_fields_from_cybereason_logon_session_element_values_user_element_values
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field:
        - cybereason.logon_session.simple_values.creation_time.values
        - cybereason.logon_session.guid_string
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
