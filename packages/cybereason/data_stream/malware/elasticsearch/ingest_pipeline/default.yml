---
description: Pipeline for processing malware logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - set:
      field: event.kind
      tag: set_event_kind
      value: alert
  - set:
      field: event.category
      tag: set_event_category
      value: ["malware"]
  - set:
      field: event.type
      tag: set_event_type
      value: ["info"]
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      if: ctx.event?.original != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.malwareDataModel.@class
      tag: rename_malwareDataModel_@class
      target_field: cybereason.malware.data_model.class
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.description
      tag: rename_malwareDataModel_description
      target_field: cybereason.malware.data_model.description
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.detectionName
      tag: rename_malwareDataModel_detectionName
      target_field: cybereason.malware.data_model.detection.name
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.detectionRule
      tag: rename_malwareDataModel_detectionRule
      target_field: cybereason.malware.data_model.detection.rule
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.filePath
      tag: rename_malwareDataModel_filePath
      target_field: cybereason.malware.data_model.file_path
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.module
      tag: rename_malwareDataModel_module
      target_field: cybereason.malware.data_model.module
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.processName
      tag: rename_malwareDataModel_processName
      target_field: cybereason.malware.data_model.process_name
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.type
      tag: rename_malwareDataModel_type
      target_field: cybereason.malware.data_model.type
      ignore_missing: true
  - rename:
      field: json.malwareDataModel.url
      tag: rename_malwareDataModel_url
      target_field: cybereason.malware.data_model.url
      ignore_missing: true
  - rename:
      field: json.detectionEngine
      tag: rename_detectionEngine
      target_field: cybereason.malware.detection.engine
      ignore_missing: true
  - rename:
      field: json.detectionValue
      tag: rename_detectionValue
      target_field: cybereason.malware.detection.value.original
      ignore_missing: true
  - rename:
      field: json.detectionValueType
      tag: rename_detectionValueType
      target_field: cybereason.malware.detection.value.type
      ignore_missing: true
  - rename:
      field: json.elementType
      tag: rename_elementType
      target_field: cybereason.malware.element_type
      ignore_missing: true
  - rename:
      field: json.guid
      tag: rename_guid
      target_field: cybereason.malware.guid
      ignore_missing: true
  - rename:
      field: json.id.elementType
      tag: rename_id_elementType
      target_field: cybereason.malware.id.element_type
      ignore_missing: true
  - rename:
      field: json.id.guid
      tag: rename_id_guid
      target_field: cybereason.malware.id.guid
      ignore_missing: true
  - rename:
      field: json.id.malwareType
      tag: rename_id_malwareType
      target_field: cybereason.malware.id.malware_type
      ignore_missing: true
  - date:
      field: json.id.timestamp
      tag: date_id_timestamp
      target_field: cybereason.malware.id.timestamp
      formats:
        - UNIX_MS
      if: ctx.json?.id?.timestamp != null && ctx.json.id.timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.machineName
      tag: rename_machineName
      target_field: cybereason.malware.machine_name
      ignore_missing: true
  - append:
      field: related.hosts
      tag: append_machine_name_related_hosts
      value: '{{{cybereason.malware.machine_name}}}'
      allow_duplicates: false
      if: ctx.cybereason?.malware?.machine_name != null
  - set:
      field: host.hostname
      tag: set_host_hostname_from_malware_machine_name
      copy_from: cybereason.malware.machine_name
      ignore_empty_value: true
  - rename:
      field: json.name
      tag: rename_name
      target_field: cybereason.malware.name
      ignore_missing: true
  - convert:
      field: json.needsAttention
      tag: convert_needsAttention_to_boolean
      target_field: cybereason.malware.needs_attention
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.referenceElementType
      tag: rename_referenceElementType
      target_field: cybereason.malware.reference.element_type
      ignore_missing: true
  - rename:
      field: json.referenceGuid
      tag: rename_referenceGuid
      target_field: cybereason.malware.reference.guid
      ignore_missing: true
  - convert:
      field: json.schedulerScan
      tag: convert_schedulerScan_to_boolean
      target_field: cybereason.malware.scheduler_scan
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.score
      tag: convert_score_to_double
      target_field: cybereason.malware.score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.status
      tag: rename_status
      target_field: cybereason.malware.status
      ignore_missing: true
  - date:
      field: json.timestamp
      tag: date_timestamp
      target_field: cybereason.malware.timestamp
      formats:
        - UNIX_MS
      if: ctx.json?.timestamp != null && ctx.json.timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_malware_timestamp
      copy_from: cybereason.malware.timestamp
      ignore_empty_value: true
  - rename:
      field: json.type
      tag: rename_type
      target_field: cybereason.malware.type
      ignore_missing: true
  - remove:
      field:
        - cybereason.malware.machine_name
        - cybereason.malware.timestamp
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
