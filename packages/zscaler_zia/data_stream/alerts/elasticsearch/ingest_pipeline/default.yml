---
description: Pipeline for Zscaler alert logs.
processors:
  - set:
      field: ecs.version
      value: '8.5.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - grok:
      field: event.original
      patterns:
        - '^<%{NUMBER:log.syslog.priority:long}>%{SYSLOGTIMESTAMP:_tmp.timestamp} \[%{IPORHOST:destination.address}\] %{GREEDYDATA:message}$'
      ignore_failure: true
  - grok:
      field: message
      patterns:
        - '^ZscalerNSS: Zscaler cloud configuration connection to  %{IPORHOST:destination.address}:%{NUMBER:destination.port:long} lost and unavailable for the past %{NUMBER:zscaler_zia.alerts.connection_lost_minutes:double} minutes$'
        - '^ZscalerNSS: SIEM Feed connection "%{GREEDYDATA:zscaler_zia.alerts.log_feed_name}" to %{IPORHOST:destination.address}:%{NUMBER:destination.port:long} lost and unavailable for the past %{NUMBER:zscaler_zia.alerts.connection_lost_minutes:double} minutes$'
      ignore_failure: true
  - convert:
      field: destination.address
      target_field: destination.ip
      type: ip
      ignore_missing: true
      on_failure:
        - remove:
            field: destination.address
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      value: '{{{destination.ip}}}'
      if: ctx.destination?.ip != null
      allow_duplicates: false
      ignore_failure: true
  - date:
      field: _tmp.timestamp
      formats:
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
        - MMM d HH:mm:ss
        - ISO8601
      if: ctx._tmp?.timestamp != null && ctx._tmp.timestamp != ''
      on_failure:
        - remove:
            field: _tmp.timestamp
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - remove:
      field:
        - _tmp
      ignore_missing: true
  - remove:
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
on_failure:
- append:
    field: error.message
    value: '{{{ _ingest.on_failure_message }}}'
