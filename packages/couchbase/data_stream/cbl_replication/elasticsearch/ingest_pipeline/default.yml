---
description: Pipeline for parsing Couchbase Sync Gateway CBL Replication metrics.
processors:
  - set:
      field: ecs.version
      value: 8.3.0
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.type
      value: [info]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.kind
      value: metric
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.category
      value: [database]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.ingested
      value: "{{{_ingest.timestamp}}}"
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.module
      value: couchbase
      override: true
      ignore_failure: true
      ignore_empty_value: true
  - rename:
      field: prometheus.labels.instance
      target_field: server.address
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.labels.database
      target_field: couchbase.cbl_replication.database.name
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_conflict_write_count
      target_field: couchbase.cbl_replication.push.conflict.write.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_write_processing_time
      target_field: couchbase.cbl_replication.push.write.processing.time
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_doc_push_count
      target_field: couchbase.cbl_replication.push.doc.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_sync_function_time
      target_field: couchbase.cbl_replication.push.sync.function.time
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_propose_change_time
      target_field: couchbase.cbl_replication.push.propose.change.time
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_propose_change_count
      target_field: couchbase.cbl_replication.push.propose.change.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_attachment_push_count
      target_field: couchbase.cbl_replication.push.attachment.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_push_attachment_push_bytes
      target_field: couchbase.cbl_replication.push.attachment.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_request_changes_time
      target_field: couchbase.cbl_replication.pull.request.changes.time
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_rev_send_latency
      target_field: couchbase.cbl_replication.pull.rev.latency.send
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_attachment_pull_count
      target_field: couchbase.cbl_replication.pull.attachment.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_attachment_pull_bytes
      target_field: couchbase.cbl_replication.pull.attachment.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_num_pull_repl_total_one_shot
      target_field: couchbase.cbl_replication.pull.num.one_shot.total
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_num_pull_repl_total_continuous
      target_field: couchbase.cbl_replication.pull.num.continuous.total
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_num_pull_repl_active_one_shot
      target_field: couchbase.cbl_replication.pull.num.one_shot.active
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_num_pull_repl_active_continuous
      target_field: couchbase.cbl_replication.pull.num.continuous.active
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_num_pull_repl_since_zero
      target_field: couchbase.cbl_replication.pull.num.since_zero
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.sgw_replication_pull_num_pull_repl_caught_up
      target_field: couchbase.cbl_replication.pull.num.caught_up
      ignore_missing: true
      ignore_failure: true
  - script:
      description: Add job to tag list.
      lang: painless
      ignore_failure: true
      source: |
        if (ctx.tags == null) {
            ctx.tags = new ArrayList();
        }
        ctx.tags.add(ctx.prometheus.labels.job)
  - remove:
      field: prometheus
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
