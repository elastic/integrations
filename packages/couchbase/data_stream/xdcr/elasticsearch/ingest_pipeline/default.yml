---
description: Pipeline for parsing Couchbase XDCR metrics.
processors:
  - set:
      field: ecs.version
      value: 8.3.0
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.type
      value: [info]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.kind
      value: metric
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.category
      value: [database]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.module
      value: couchbase
      override: true
      ignore_failure: true
      ignore_empty_value: true
  - script:
      lang: painless
      source: |-
        def getLastElement(def x) {
          def index = x.length - 1;
          return x[index];
        }
        if (ctx.http?.xdcr?.op?.samples != null) {
          if (ctx.http.xdcr.op.samples.ep_dcp_xdcr_backoff != null) {
            ctx.backoff = getLastElement(ctx.http.xdcr.op.samples.ep_dcp_xdcr_backoff);
          }
          if (ctx.http.xdcr.op.samples.ep_dcp_xdcr_total_bytes != null) {
            ctx.bytes_total = getLastElement(ctx.http.xdcr.op.samples.ep_dcp_xdcr_total_bytes);
          }
          if (ctx.http.xdcr.op.samples.ep_dcp_xdcr_count != null) {
            ctx.count = getLastElement(ctx.http.xdcr.op.samples.ep_dcp_xdcr_count);
          }
          if (ctx.http.xdcr.op.samples.ep_dcp_xdcr_items_remaining != null) {
            ctx.items_remaining = getLastElement(ctx.http.xdcr.op.samples.ep_dcp_xdcr_items_remaining);
          }
          if (ctx.http.xdcr.op.samples.ep_dcp_xdcr_items_sent != null) {
            ctx.items_sent = getLastElement(ctx.http.xdcr.op.samples.ep_dcp_xdcr_items_sent);
          }
          if (ctx.http.xdcr.op.samples.ep_oom_errors != null) {
            ctx.oom_errors = getLastElement(ctx.http.xdcr.op.samples.ep_oom_errors);
          }
          if (ctx.http.xdcr.op.samples.ep_dcp_xdcr_producer_count != null) {
            ctx.producer_count = getLastElement(ctx.http.xdcr.op.samples.ep_dcp_xdcr_producer_count);
          }
        }
      ignore_failure: true        
      description: Convert array response to last value of an array.
  - rename:
      field: backoff
      target_field: couchbase.xdcr.backoff
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: bytes_total
      target_field: couchbase.xdcr.bytes.total
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: count
      target_field: couchbase.xdcr.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: items_remaining
      target_field: couchbase.xdcr.items.remaining
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: items_sent
      target_field: couchbase.xdcr.items.sent
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: oom_errors
      target_field: couchbase.xdcr.errors.out_of_memory
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: producer_count
      target_field: couchbase.xdcr.producer.count
      ignore_missing: true
      ignore_failure: true
  - remove:
      field: http
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
