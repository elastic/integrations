---
description: Pipeline for parsing Couchbase Cluster metrics
processors:
  - set:
      field: ecs.version
      value: 8.3.0
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.type
      value: [info]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.kind
      value: metric
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.category
      value: [database]
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.ingested
      value: "{{{_ingest.timestamp}}}"
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: event.module
      value: couchbase
      override: true
      ignore_failure: true
      ignore_empty_value: true
  - rename:
      field: http.cluster.maxBucketCount
      target_field: couchbase.cluster.buckets.max.count
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.hdd.free
      target_field: couchbase.cluster.hdd.free.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.hdd.quotaTotal
      target_field: couchbase.cluster.hdd.quota.total.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.hdd.total
      target_field: couchbase.cluster.hdd.total.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.hdd.usedByData
      target_field: couchbase.cluster.hdd.used.data.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.hdd.used
      target_field: couchbase.cluster.hdd.used.value.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.indexMemoryQuota
      target_field: couchbase.cluster.memory.quota.index.mb
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.memoryQuota
      target_field: couchbase.cluster.memory.quota.mb
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.quotaTotalPerNode
      target_field: couchbase.cluster.ram.quota.total.per_node.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.quotaTotal
      target_field: couchbase.cluster.ram.quota.total.value.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.quotaUsedPerNode
      target_field: couchbase.cluster.ram.quota.used.per_node.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.quotaUsed
      target_field: couchbase.cluster.ram.quota.used.value.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.total
      target_field: couchbase.cluster.ram.total.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.usedByData
      target_field: couchbase.cluster.ram.used.data.bytes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: http.cluster.storageTotals.ram.used
      target_field: couchbase.cluster.ram.used.value.bytes
      ignore_missing: true
      ignore_failure: true
  - remove:
      field: http
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
