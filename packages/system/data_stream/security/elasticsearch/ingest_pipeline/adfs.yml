---
description: Pipeline for ADFS Audit events. 
processors:
  - gsub:
      pattern: "\n"
      ignore_missing: true
      field: "winlog.event_data.param2"
      replacement: ""
  - grok:
      ignore_failure: true
      field: "winlog.event_data.param2"
      patterns:
      - "^%{AUDITXMLROOT}%{SPACE}<ContextComponents>(?:%{SPACE}%{RESOURCEAUDIT}%{SPACE}%{AUTHNAUDIT}%{SPACE}%{PROTOCOLAUDIT})?%{SPACE}%{REQUESTAUDIT}%{SPACE}(?:%{SIGNOUTAUDIT}%{SPACE})?</ContextComponents></AuditBase>$"
      ignore_missing: true
      tag: "adfs_grok"
      pattern_definitions:
        AUTHNAUDIT: "<Component %{DATA}AuthNAuditComponent%{DATA}>%{SPACE}<PrimaryAuth>(N/A|%{DATA:winlog.adfs.primary_auth})</PrimaryAuth>%{SPACE}<DeviceAuth>%{DATA:winlog.adfs.device_auth:boolean}</DeviceAuth>%{SPACE}<DeviceId>(N/A|%{DATA:winlog.adfs.device_id})</DeviceId>%{SPACE}<MfaPerformed>%{DATA:winlog.adfs.mfa_performed:boolean}</MfaPerformed>%{SPACE}<MfaMethod>(N/A|%{DATA:winlog.adfs.mfa_method})</MfaMethod>%{SPACE}<TokenBindingProvidedId>%{DATA:winlog.adfs.binding_provided_id:boolean}</TokenBindingProvidedId>%{SPACE}<TokenBindingReferredId>%{DATA:winlog.adfs.binding_referred_id:boolean}</TokenBindingReferredId>%{SPACE}<SsoBindingValidationLevel>%{DATA:winlog.adfs.binding_level:keyword}</SsoBindingValidationLevel>%{SPACE}</Component>"
        RESOURCEAUDIT: "<Component%{DATA}ResourceAuditComponent%{DATA}%{SPACE}<RelyingParty>%{DATA:winlog.adfs.relaying_party}</RelyingParty>%{SPACE}<ClaimsProvider>%{DATA:winlog.adfs.claims_provider}</ClaimsProvider>%{SPACE}<UserId>%{DATA:winlog.adfs.user_id:keyword}</UserId>%{SPACE}</Component>"
        SIGNOUTAUDIT: "<Component%{DATA}SignOutAuditComponent%{DATA}>%{SPACE}<SignedInRPs>%{SPACE}<SignedInRPs>%{DATA:winlog.adfs.signed_in_rps}</SignedInRPs>%{SPACE}</SignedInRPs>%{SPACE}</Component>"
        REQUESTAUDIT: "<Component%{DATA}RequestAuditComponent%{DATA}>%{SPACE}<Server>%{DATA:winlog.adfs.server:keyword}</Server>%{SPACE}<AuthProtocol>%{DATA:winlog.adfs.auth_protocol}</AuthProtocol>%{SPACE}<NetworkLocation>%{DATA:winlog.adfs.network_location:keyword}</NetworkLocation>%{SPACE}<IpAddress>%{IPORHOST:winlog.adfs.ip_address}</IpAddress>%{SPACE}<ForwardedIpAddress>(?:%{IPORHOST:winlog.adfs.forwarded_ip},\
          \ )?%{IPORHOST:winlog.adfs.forwarded_ip}</ForwardedIpAddress>%{SPACE}<ProxyIpAddress>(N/A|%{IPORHOST:winlog.adfs.proxy_ip})</ProxyIpAddress>%{SPACE}<NetworkIpAddress>(N/A|%{IPORHOST:winlog.adfs.network_ip})</NetworkIpAddress>%{SPACE}<ProxyServer>(N/A|%{DATA:winlog.adfs.proxy_server:keyword})</ProxyServer>%{SPACE}<UserAgentString>%{DATA:winlog.adfs.user_agent:keyword}</UserAgentString>%{SPACE}<Endpoint>%{DATA:winlog.adfs.endpoint}</Endpoint>%{SPACE}</Component>"
        PROTOCOLAUDIT: "<Component%{DATA}>%{SPACE}<OAuthClientId>(N/A|%{DATA:winlog.adfs.oauth.client_id})</OAuthClientId>%{SPACE}<OAuthGrant>(N/A|%{DATA:winlog.adfs.oauth.grant})</OAuthGrant>%{SPACE}</Component>"
        AUDITXMLROOT: "<\\?xml%{DATA}<AuditType>%{DATA:winlog.adfs.audit_type}</AuditType>%{SPACE}<AuditResult>%{DATA:winlog.adfs.audit_result}</AuditResult>%{SPACE}<FailureType>%{DATA:winlog.adfs.audit_failure_type}</FailureType>%{SPACE}<ErrorCode>(N/A|%{DATA:winlog.adfs.error.code})</ErrorCode>"
      if: "ctx?.event?.provider == \"AD FS Auditing\""
  - grok:
      ignore_failure: true
      ignore_missing: true
      field: "winlog.adfs.user_id"
      patterns:
      - "(%{DATA:user.domain}\\\\%{USER:user.name})|(%{USER:user.name}@%{DATA:user.domain}$)|(%{GREEDYDATA:user.name}$)"
  - user_agent:
      extract_device_type: false
      ignore_failure: true
      ignore_missing: true
      field: "winlog.adfs.user_agent"
      properties:
      - "name"
      - "os"
      - "device"
      - "original"
      - "version"
  - script:
      ignore_failure: true
      source: "      def sourceIp = ctx.winlog?.adfs?.ip_address;\n      def forwardedIps\
        \ = ctx.winlog?.adfs?.forwarded_ip;\n      \n      if (sourceIp != null &&\
        \ forwardedIps != null) {\n        // Convert to list if it's not already\n\
        \        if (!(forwardedIps instanceof List)) {\n          forwardedIps =\
        \ [forwardedIps];\n        }\n        \n        // If source_ip is in forwarded_ip\
        \ list, use source_ip\n        if (forwardedIps.contains(sourceIp)) {\n  \
        \        ctx.source = [\"ip\": sourceIp];\n        } \n        // If there's\
        \ only one forwarded IP, use that\n        else if (forwardedIps.size() ==\
        \ 1) {\n          ctx.source = [\"ip\": forwardedIps[0]];\n        }\n   \
        \   }"
      lang: "painless"
  - remove:
      ignore_failure: true
      ignore_missing: true
      field: "winlog.event_data.param2"
  - rename:
      field: "winlog.event_data.param1"
      target_field: "winlog.activity_id"
  - set:
      ignore_empty_value: true
      override: false
      field: "trace.id"
      copy_from: "winlog.activity_id"
  - geoip:
      ignore_failure: true
      ignore_missing: true
      field: "source.ip"
      target_field: "source.geo"
  - geoip:
      database_file: "GeoLite2-ASN.mmdb"
      ignore_failure: true
      ignore_missing: true
      field: "source.ip"
      target_field: "source.as"
  - append:
      field: "related.user"
      allow_duplicates: false
      value:
      - "{{winlog.user.name}}"
      - "{{user.name}}"
  - append:
      description: "event.category: authentication; event.code: 1202, 1203 "
      field: "event.category"
      allow_duplicates: false
      value:
      - "authentication"
      if: "ctx?.event?.code == 1203 || ctx?.event?.code == 1202|| ctx?.event?.code\
        \ == 1206"
  - set:
      description: "event.action: sign-in; event.code: 1203"
      field: "event.action"
      value: "sign-in"
      if: "ctx?.event?.code == 1203 || ctx?.event?.code == 1202"
  - set:
      description: "event.action: sign-out; event.code: 1206"
      field: "event.action"
      value: "sign-out"
      if: "ctx?.event?.code == 1206"
  - append:
      description: "event.category: iam; event.code: 1205, 1204"
      field: "event.category"
      value:
      - "iam"
      if: "ctx?.event?.code ==  1205 ||ctx?.event?.code ==  1204"
  - set:
      description: "event.action: change-password; event.code: 1205, 1204"
      field: "event.action"
      value: "change-password"
      if: "ctx?.event?.code == 1205 || ctx?.event?.code == 1204"
  - set:
      description: "event.type: change; event.code: 1205, 1204"
      field: "event.type"
      value: "change"
      if: "ctx?.event?.code == 1205 || ctx?.event?.code == 1204"
