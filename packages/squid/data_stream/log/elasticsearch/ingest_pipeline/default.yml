---
description: Pipeline for processing Squid logs.
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: event.original
      copy_from: message
  - remove:
      field: message
  - set:
      field: observer.vendor
      value: Squid
  - set:
      field: observer.product
      value: Squid
  - set:
      field: observer.type
      value: proxy
  - set:
      field: event.kind
      value: event
  - set:
      field: event.category
      value: [web]
  - set:
      field: event.type
      value: [access]

  - grok:
      tag: grok_message
      field: event.original
      patterns:
        - '^%{NUMBER:_tmp.time_s:long}\.%{NUMBER:_tmp.time_ms:long}%{SPACE}%{NUMBER:_tmp.elapsed:long} %{NOTSPACE:_tmp.source_ip} %{NOTSLASH:_tmp.code}/%{NOTSPACE:_tmp.status:long} %{NUMBER:_tmp.destination_bytes:long} %{NOTSPACE:_tmp.method} %{NOTSPACE:_tmp.url} %{NOTSPACE:_tmp.user_name} %{NOTSLASH:_tmp.peer_status}/%{NOTSPACE:_tmp.peer_host} %{NOTSPACE:_tmp.content_type}$'
      pattern_definitions:
        NOTSLASH: '[^/]+'
        NOTBRACKET: '[^\[\]]+'
        NUMBER: '[0-9]+'

  - script:
      tag: remove_empty_fields
      lang: painless
      source: >-
        ctx._tmp?.values().removeIf(value -> value == "-");

  - script:
      tag: compute_timestamp
      lang: painless
      if: ctx._tmp?.time_s instanceof Number && ctx._tmp?.time_ms instanceof Number
      source: >-
        ctx["@timestamp"] = new Date(ctx._tmp.time_s * 1000 + ctx._tmp.time_ms);
  - script:
      tag: compute_elapsed
      lang: painless
      if: ctx._tmp?.elapsed instanceof Number
      source: >-
        ctx.event["duration"] = ctx._tmp.elapsed * 1000000;

  - rename:
      tag: move_user_name
      field: _tmp.user_name
      target_field: source.user.name
      ignore_missing: true
  - append:
      tag: append_related_source_user
      field: related.user
      value: '{{{source.user.name}}}'
      allow_duplicates: false
      if: ctx.source?.user?.name != null

  - convert:
      tag: convert_source_ip
      field: _tmp.source_ip
      type: ip
      target_field: source.ip
      ignore_missing: true
  - set:
      tag: set_source_address
      field: source.address
      copy_from: source.ip
      ignore_empty_value: true
  - append:
      tag: append_related_source_ip
      field: related.ip
      value: '{{{source.ip}}}'
      allow_duplicates: false
      if: ctx.source?.ip != null

  - rename:
      tag: move_destination_bytes
      field: _tmp.destination_bytes
      target_field: destination.bytes
      ignore_missing: true
  - set:
      tag: set_http_request_body_bytes
      field: http.request.body.bytes
      copy_from: destination.bytes
      ignore_empty_value: true

  - rename:
      tag: move_http_method
      field: _tmp.method
      target_field: http.request.method
      ignore_missing: true
  - uri_parts:
      tag: uri_parts
      field: _tmp.url
      if: ctx.http?.request?.method != 'CONNECT'
      ignore_missing: true
  - rename:
      tag: move_connect_hostport
      field: _tmp.url
      target_field: url.original
      if: ctx._tmp?.url != null && ctx.http?.request?.method == 'CONNECT'
  - set:
      tag: set_destination_address
      field: destination.address
      copy_from: url.domain
      ignore_empty_value: true

  - set:
      tag: set_event_outcome_success
      field: event.outcome
      value: success
      if: ctx._tmp?.status instanceof Number && ctx._tmp.status < 400
  - set:
      tag: set_event_outcome_failure
      field: event.outcome
      value: failure
      if: ctx._tmp?.status instanceof Number && ctx._tmp.status >= 400
  - rename:
      tag: move_status_code
      field: _tmp.status
      target_field: squid.status_code
      ignore_missing: true

  - rename:
      tag: move_result_code
      field: _tmp.code
      target_field: squid.result_code
      ignore_missing: true
  - rename:
      tag: move_peer_status
      field: _tmp.peer_status
      target_field: squid.peer_status
      ignore_missing: true
  - rename:
      tag: move_content_type
      field: _tmp.content_type
      target_field: squid.content_type
      ignore_missing: true
  - rename:
      tag: move_peer_host
      field: _tmp.peer_host
      target_field: squid.peer_host
      ignore_missing: true

  - remove:
      field:
        - _tmp
      ignore_missing: true

on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
