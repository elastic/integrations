---
description: Pipeline for processing vulnerability logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.

  # parse the event JSON
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json

  # rename to snake case
  - script:
      tag: script_convert_camelcase_to_snake_case
      lang: painless
      description: Convert camelCase to snake_case.
      source: |
        // Helper function to convert camelCase to snake_case
        String camelToSnake(String str) {
          def result = "";
          def lastCharWasUpperCase = false;
          for (int i = 0; i < str.length(); i++) {
            char c = str.charAt(i);
            if (Character.isUpperCase(c)) {
              if (i > 0 && !lastCharWasUpperCase) {
                result += "_";
              }
              result += Character.toLowerCase(c);
              lastCharWasUpperCase = true;
            } else {
              result += c;
              lastCharWasUpperCase = false;
            }
          }
          return result;
        }

        // Recursive function to handle nested fields
        def convertToSnakeCase(def obj) {
          if (obj instanceof Map) {
            // Convert each key in the map
            def newObj = [:];
            for (entry in obj.entrySet()) {
              // Skip fields that contain '@' in their name
              if (!entry.getKey().contains("@")) {
                String newKey = camelToSnake(entry.getKey());
                newObj[newKey] = convertToSnakeCase(entry.getValue());
              }
            }
            return newObj;
          } else if (obj instanceof List) {
            // If it's a list, process each item recursively
            def newList = [];
            for (item in obj) {
              newList.add(convertToSnakeCase(item));
            }
            return newList;
          } else {
            return obj;
          }
        }

        // Apply the conversion
        ctx.sysdig = ctx.sysdig ?: [:];
        if (ctx.json != null) {
          ctx.sysdig.vulnerability = convertToSnakeCase(ctx.json);
        }

  # convert values
  - date:
      field: sysdig.vulnerability.metadata.created_at
      tag: date_metadata_createdAt
      target_field: sysdig.vulnerability.metadata.created_at
      formats:
        - ISO8601
      if: ctx.sysdig?.vulnerability?.metadata?.created_at != null && ctx.sysdig.vulnerability.metadata.created_at != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.metadata.created_at
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - dissect:
      field: sysdig.vulnerability.metadata.digest
      tag: dissect_package_layers_digest
      pattern: '%{}:%{_tmp.metadata.digest_hash}'
      ignore_failure: true
  - dot_expander:
      field: "*"
      path: sysdig.vulnerability.metadata.labels
      override: true
      ignore_failure: true
  - rename:
      field: sysdig.vulnerability.metadata.labels.org.label-schema
      tag: rename_metadata_labels_org_label-schema
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema
      ignore_missing: true
  - rename:
      field: sysdig.vulnerability.metadata.labels.org.label_schema.build-date
      tag: rename_metadata_labels_org_label_schema_build-date
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
      ignore_missing: true
  - date:
      field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
      tag: date_metadata_labels_org_label_schema_build_date
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
      formats:
        - ISO8601
        - basic_date
      if: ctx.sysdig?.vulnerability?.metadata?.labels?.org?.label_schema?.build_date != null && ctx.sysdig.vulnerability.metadata.labels.org.label_schema.build_date != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.metadata.labels.org.label_schema.build_date
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: sysdig.vulnerability.metadata.labels.org.label_schema.vcs-ref
      tag: rename_metadata_labels_org_label_schema_vcs-ref
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.vcs_ref
      ignore_missing: true
  - rename:
      field: sysdig.vulnerability.metadata.labels.org.label_schema.vcs-url
      tag: rename_metadata_labels_org_label_schema_vcs-url
      target_field: sysdig.vulnerability.metadata.labels.org.label_schema.vcs_url
      ignore_missing: true
  - convert:
      field: sysdig.vulnerability.metadata.size
      tag: convert_metadata_size_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.metadata.size
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.package.is_removed
      tag: convert_package_is_removed_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.is_removed
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.package.is_running
      tag: convert_package_is_running_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.is_running
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - dissect:
      field: sysdig.vulnerability.package.layers.digest
      tag: dissect_package_layers_digest
      pattern: '%{sysdig.vulnerability.package.layers.digest_algorithm}:%{sysdig.vulnerability.package.layers.digest_hash}'
      ignore_failure: true
  - convert:
      field: sysdig.vulnerability.package.layers.index
      tag: convert_package_layers_index_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.layers.index
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.package.layers.size
      tag: convert_package_layers_size_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.layers.size
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.package.vulnerability.cvss_score.score
      tag: convert_package_vulnerability_cvss_score_score_to_double
      type: double
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.vulnerability.cvss_score.score
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: sysdig.vulnerability.package.vulnerability.disclosure_date
      tag: date_package_vulnerability_disclosure_date
      target_field: sysdig.vulnerability.package.vulnerability.disclosure_date
      formats:
        - strict_date
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.disclosure_date != null && ctx.sysdig.vulnerability.package.vulnerability.disclosure_date != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.vulnerability.disclosure_date
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: sysdig.vulnerability.package.vulnerability.solution_date
      tag: date_package_vulnerability_solution_date
      target_field: sysdig.vulnerability.package.vulnerability.solution_date
      formats:
        - strict_date
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.solution_date != null && ctx.sysdig.vulnerability.package.vulnerability.solution_date != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.vulnerability.solution_date
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: sysdig.vulnerability.producer.produced_at
      tag: date_producer_produced_at
      target_field: sysdig.vulnerability.producer.produced_at
      formats:
        - strict_date_optional_time_nanos
      if: ctx.sysdig?.vulnerability?.producer?.produced_at != null && ctx.sysdig.vulnerability.producer.produced_at != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.producer.produced_at
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: sysdig.vulnerability.package.vulnerability.exploit.publication_date
      tag: date_package_vulnerability_exploit_publication_date
      target_field: sysdig.vulnerability.package.vulnerability.exploit.publication_date
      formats:
        - ISO8601
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.exploit?.publication_date != null && ctx.sysdig.vulnerability.package.vulnerability.exploit.publication_date != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.vulnerability.exploit.publication_date
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.package.vulnerability.exploitable
      tag: convert_package_vulnerability_exploitable_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.package.vulnerability.exploitable
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.is_risk_spotlight_enabled
      tag: convert_is_risk_spotlight_enabled_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.is_risk_spotlight_enabled
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: sysdig.vulnerability.package.vulnerability.risk_accepts
      tag: foreach_package_vulnerability_risk_accepts
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.risk_accepts instanceof List
      processor:
        date:
          field: _ingest._value.created_at
          tag: date_package_vulnerability_risk_accepts_created_at
          target_field: _ingest._value.created_at
          formats:
            - strict_date_optional_time_nanos
          on_failure:
            - remove:
                field: _ingest._value.created_at
  - foreach:
      field: sysdig.vulnerability.package.vulnerability.risk_accepts
      tag: foreach_package_vulnerability_risk_accepts
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.risk_accepts instanceof List
      processor:
        date:
          field: _ingest._value.expiration_date
          tag: date_package_vulnerability_risk_accepts_expiration_date
          target_field: _ingest._value.expiration_date
          formats:
            - date
          on_failure:
            - remove:
                field: _ingest._value.expiration_date
  - foreach:
      field: sysdig.vulnerability.package.vulnerability.risk_accepts
      tag: foreach_package_vulnerability_risk_accepts
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.risk_accepts instanceof List
      processor:
        date:
          field: _ingest._value.updated_at
          tag: date_package_vulnerability_risk_accepts_updated_at
          target_field: _ingest._value.updated_at
          formats:
            - strict_date_optional_time_nanos
          on_failure:
            - remove:
                field: _ingest._value.updated_at
  - rename:
      field: sysdig.vulnerability.scope.cloud_provider
      tag: rename_scope_cloud_provider
      target_field: sysdig.vulnerability.scope.cloud_provider.name
      ignore_missing: true
  - dot_expander:
      field: '*'
      tag: dot_expander_scope
      path: sysdig.vulnerability.scope
      if: ctx.sysdig?.vulnerability?.scope != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.scope.azure.instance.id
      tag: convert_scope_azure_instance_id_to_string
      type: string
      ignore_missing: true
  - convert:
      field: sysdig.vulnerability.scope.cloud_provider.account.id
      tag: convert_scope_cloud_provider_account_id_to_string
      type: string
      ignore_missing: true
  - dissect:
      field: sysdig.vulnerability.image_id
      tag: dissect_image_id
      pattern: '%{sysdig.vulnerability.image_id_algorithm}:%{sysdig.vulnerability.image_id_hash}'
      ignore_failure: true
  - convert:
      field: sysdig.vulnerability.running_vuln_total_by_severity.critical
      tag: convert_running_vuln_total_by_severity_critical
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.running_vuln_total_by_severity.critical
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.running_vuln_total_by_severity.high
      tag: convert_running_vuln_total_by_severity_high
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.running_vuln_total_by_severity.high
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.running_vuln_total_by_severity.low
      tag: convert_running_vuln_total_by_severity_low
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.running_vuln_total_by_severity.low
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.running_vuln_total_by_severity.medium
      tag: convert_running_vuln_total_by_severity_medium
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.running_vuln_total_by_severity.medium
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.running_vuln_total_by_severity.negligible
      tag: convert_running_vuln_total_by_severity_negligible
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.running_vuln_total_by_severity.negligible
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.vuln_total_by_severity.critical
      tag: convert_vuln_total_by_severity_critical
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.vuln_total_by_severity.critical
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.vuln_total_by_severity.high
      tag: convert_vuln_total_by_severity_high
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.vuln_total_by_severity.high
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.vuln_total_by_severity.low
      tag: convert_vuln_total_by_severity_low
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.vuln_total_by_severity.low
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.vuln_total_by_severity.medium
      tag: convert_vuln_total_by_severity_medium
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.vuln_total_by_severity.medium
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: sysdig.vulnerability.vuln_total_by_severity.negligible
      tag: convert_vuln_total_by_severity_negligible
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: sysdig.vulnerability.vuln_total_by_severity.negligible
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: sysdig.vulnerability.created_at
      tag: date_created_at
      target_field: sysdig.vulnerability.created_at
      formats:
        - strict_date_optional_time_nanos
      if: ctx.sysdig?.vulnerability?.created_at != null && ctx.sysdig.vulnerability.created_at != ''
      on_failure:
        - remove:
            field: sysdig.vulnerability.created_at
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: sysdig.vulnerability.policies.evaluations
      tag: foreach_policies_evaluations
      if: ctx.sysdig?.vulnerability?.policies?.evaluations instanceof List
      processor:
        date:
          field: _ingest._value.created_at
          tag: date_policies_evaluations_created_at
          target_field: _ingest._value.created_at
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.created_at
  - foreach:
      field: sysdig.vulnerability.policies.evaluations
      tag: foreach_policies_evaluations
      if: ctx.sysdig?.vulnerability?.policies?.evaluations instanceof List
      processor:
        date:
          field: _ingest._value.updated_at
          tag: date_policies_evaluations_updated_at
          target_field: _ingest._value.updated_at
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.updated_at

  # populate ECS fields

  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_vulnerability_producer_produced_at
      copy_from: sysdig.vulnerability.producer.produced_at
      ignore_empty_value: true

  # event.*
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - append:
      field: event.category
      tag: append_vulnerability_into_event_category
      value: vulnerability
  - append:
      field: event.type
      tag: append_info_into_event_type
      value: info
  - set:
      field: event.id
      tag: set_event_id
      value: '{{{sysdig.vulnerability.result_id}}}|{{{sysdig.vulnerability.package.package_ref}}}|{{{sysdig.vulnerability.package.vulnerability.vulnerabilities_ref}}}|{{{sysdig.vulnerability.producer.produced_at}}}'
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.vulnerabilities_ref != null
  - set:
      field: event.created
      tag: set_event_created_from_vulnerability_producer_produced_at
      copy_from: sysdig.vulnerability.producer.produced_at
      ignore_empty_value: true
  
  # observer.*
  - set:
      field: observer.vendor
      tag: set_observer_vendor
      value: Sysdig
  - set:
      field: observer.product
      tag: set_observer_product
      value: Sysdig Secure

  # host.*
  - set:
      field: host.architecture
      tag: set_host_architecture_from_vulnerability_metadata_architecture
      copy_from: sysdig.vulnerability.metadata.architecture
      ignore_empty_value: true
  - set:
      field: host.os.full
      tag: set_host_os_full_from_vulnerability_metadata_base_os
      copy_from: sysdig.vulnerability.metadata.base_os
      ignore_empty_value: true
  - set:
      field: host.id
      tag: set_host_id_from_vulnerability_metadata_host_id
      copy_from: sysdig.vulnerability.metadata.host_id
      ignore_empty_value: true
  - set:
      field: host.hostname
      tag: set_host_hostname_from_metadata_host_name
      copy_from: sysdig.vulnerability.metadata.host_name
      ignore_empty_value: true
  - set:
      field: host.name
      tag: set_host_name_from_metadata_host_name
      copy_from: sysdig.vulnerability.metadata.host_name
      ignore_empty_value: true
  - set:
      field: host.os.name
      tag: set_host_os_name_from_sysdig_vulnerability_metadata_os
      copy_from: sysdig.vulnerability.metadata.os
      ignore_empty_value: true
  - set:
      field: host.os.type
      tag: set_host_os_type_to_linux
      value: linux
      if: >-
        ctx.sysdig?.vulnerability?.metadata?.os != null
        && (ctx.sysdig.vulnerability.metadata.os.toLowerCase().contains('linux')
        || ctx.sysdig.vulnerability.metadata.os.toLowerCase().contains('bottlerocket')
        || ctx.sysdig.vulnerability.metadata.os.toLowerCase().contains('ubuntu')
        || ctx.sysdig.vulnerability.metadata.os.toLowerCase().contains('centos'))
  - set:
      field: host.os.type
      tag: set_host_os_type_to_windows
      value: windows
      if: ctx.sysdig?.vulnerability?.metadata?.os != null && ctx.sysdig.vulnerability.metadata.os.toLowerCase().contains('windows')
  - set:
      field: host.os.type
      tag: set_host_os_type_to_macos
      value: macos
      if: ctx.sysdig?.vulnerability?.metadata?.os != null && ctx.sysdig.vulnerability.metadata.os.toLowerCase().contains('macos')
  - dissect:
      field: host.os.full
      tag: dissect_host_os_full
      pattern: '%{host.os.family} %{host.os.version}'
      ignore_failure: true
  - dissect:
      field: host.os.name
      tag: dissect_host_os_name
      pattern: '%{host.os.family} %{host.os.version}'
      ignore_failure: true
      if: ctx.host?.os?.full == null

  # container.*
  - append:
      field: container.image.hash.all
      tag: append_sysdig_vulnerability_metadata_digest_into_container_image_hash_all
      value: '{{{sysdig.vulnerability.metadata.digest}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.digest != null

  # cloud.*

  # Remove cloud.* fields populated by beat.
  # These fields correspond to EA rather than Sysdig hosts and could be misleading.
  - remove:
      field: cloud
      ignore_missing: true
      description: Remove ECS cloud fields that are populated from EA metadata.
  - set:
      field: cloud.provider
      tag: set_cloud_provider_from_scope_cloud_provider
      copy_from: sysdig.vulnerability.scope.cloud_provider.name
      ignore_empty_value: true
  - set:
      field: cloud.account.id
      tag: set_cloud_account_id_from_scope_cloud_provider_account_id
      copy_from: sysdig.vulnerability.scope.cloud_provider.account.id
      ignore_empty_value: true
  - set:
      field: cloud.account.id
      tag: set_cloud_account_id_from_aws_account_id
      copy_from: sysdig.vulnerability.scope.aws.account.id
      if: ctx.cloud?.account?.id == null
      ignore_empty_value: true
  - set:
      field: cloud.region
      tag: set_cloud_region_from_scope_cloud_provider_region
      copy_from: sysdig.vulnerability.scope.cloud_provider.region
      ignore_empty_value: true
  - set:
      field: cloud.region
      tag: set_cloud_region_from_aws_region
      copy_from: sysdig.vulnerability.scope.aws.region
      if: ctx.cloud?.region == null
      ignore_empty_value: true
  - set:
      field: cloud.instance.id
      tag: set_cloud_instance_id_from_scope_azure_instance_id
      copy_from: sysdig.vulnerability.scope.azure.instance.id
      ignore_empty_value: true
  - set:
      field: cloud.instance.name
      tag: set_cloud_instance_name_from_scope_azure_instance_name
      copy_from: sysdig.vulnerability.scope.azure.instance.name
      ignore_empty_value: true
  - set:
      field: cloud.instance.id
      tag: set_cloud_instance_id_from_scope_gcp_instance_id
      copy_from: sysdig.vulnerability.scope.gcp.instance.id
      ignore_empty_value: true
      if: ctx.cloud?.instance?.id == null

  # package.*
  - set:
      field: package.name
      tag: set_package_name_from_vulnerability_package_name
      copy_from: sysdig.vulnerability.package.name
      ignore_empty_value: true
  - set:
      field: package.path
      tag: set_package_path_from_vulnerability_package_path
      copy_from: sysdig.vulnerability.package.path
      ignore_empty_value: true
  - set:
      field: package.license
      tag: set_package_license_from_vulnerability_package_license
      copy_from: sysdig.vulnerability.package.license
      ignore_empty_value: true
  - set:
      field: package.fixed_version
      tag: set_package_fixed_version_from_package_suggested_fix
      copy_from: sysdig.vulnerability.package.suggested_fix
      ignore_empty_value: true
  - set:
      field: package.type
      tag: set_package_type_from_vulnerability_package_type
      copy_from: sysdig.vulnerability.package.type
      ignore_empty_value: true
  - set:
      field: package.version
      tag: set_package_version_from_vulnerability_package_version
      copy_from: sysdig.vulnerability.package.version
      ignore_empty_value: true

  # vulnerability.*
  - set:
      field: vulnerability.classification
      tag: set_vulnerability_classification
      value: CVSS
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.cvss_score?.score != null
  - set:
      field: vulnerability.enumeration
      tag: set_vulnerability_enumeration
      value: CVE
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.name?.startsWith('CVE') == true
  - set:
      field: vulnerability.scanner.vendor
      tag: set_vulnerability_scanner_vendor
      value: Sysdig Secure
  - set:
      field: vulnerability.score.base
      tag: set_vulnerability_score_base_from_vulnerability_package_vulnerability_cvss_score_score
      copy_from: sysdig.vulnerability.package.vulnerability.cvss_score.score
      ignore_empty_value: true
  - set:
      field: vulnerability.score.version
      tag: set_vulnerability_score_version_from_vulnerability_package_vulnerability_cvss_score_version
      copy_from: sysdig.vulnerability.package.vulnerability.cvss_score.version
      ignore_empty_value: true
  - set:
      field: vulnerability.id
      tag: set_vulnerability_id_from_vulnerability_package_vulnerability_name
      copy_from: sysdig.vulnerability.package.vulnerability.name
      ignore_empty_value: true
  - set:
      field: vulnerability.cve
      tag: set_vulnerability_cve_from_vulnerability_package_vulnerability_name
      copy_from: sysdig.vulnerability.package.vulnerability.name
      ignore_empty_value: true
  - set:
      field: vulnerability.title
      tag: set_vulnerability_title_from_vulnerability_package_vulnerability_name
      copy_from: sysdig.vulnerability.package.vulnerability.name
      ignore_empty_value: true
  - set:
      field: vulnerability.reference
      tag: set_vulnerability_reference_from_vulnerability_package_vulnerability_name
      value: 'https://www.cve.org/CVERecord?id={{{vulnerability.cve}}}'
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.name?.startsWith('CVE') == true
  - set:
      field: vulnerability.report_id
      tag: set_vulnerability_report_id_from_result_id
      copy_from: sysdig.vulnerability.result_id
      ignore_empty_value: true
  - set:
      field: vulnerability.published_date
      tag: set_vulnerability_published_date_from_package_vulnerability_disclosure_date
      copy_from: sysdig.vulnerability.package.vulnerability.disclosure_date
      ignore_empty_value: true
  - script:
      description: Map vulnerability.severity to CVSS standard.
      tag: script_to_map_severity_to_CVSS
      lang: painless
      if: ctx.sysdig?.vulnerability?.package?.vulnerability?.severity != null
      source: >
        String severity = ctx.sysdig.vulnerability.package.vulnerability.severity.toLowerCase();
        if (severity == 'negligible') {
          ctx.vulnerability.put('severity', 'None');
        } else if (severity == 'low') {
          ctx.vulnerability.put('severity', 'Low');
        } else if (severity == 'medium') {
          ctx.vulnerability.put('severity', 'Medium');
        } else if (severity == 'high') {
          ctx.vulnerability.put('severity', 'High');
        } else if (severity == 'critical') {
          ctx.vulnerability.put('severity', 'Critical');
        }
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

  # orchestrator.*
  - set:
      field: orchestrator.cluster.name
      tag: set_orchestrator_cluster_name_from_scope_kubernetes_cluster_name
      copy_from: sysdig.vulnerability.scope.kubernetes.cluster.name
      ignore_empty_value: true
  - set:
      field: orchestrator.namespace
      tag: set_orchestrator_namespace_from_scope_kubernetes_namespace_name
      copy_from: sysdig.vulnerability.scope.kubernetes.namespace.name
      ignore_empty_value: true
  - set:
      field: orchestrator.resource.name
      tag: set_orchestrator_resource_name_from_scope_kubernetes_pod_container_name
      copy_from: sysdig.vulnerability.scope.kubernetes.pod.container.name
      ignore_empty_value: true
  - set:
      field: orchestrator.resource.parent.type
      tag: set_orchestrator_resource_parent_type_from_scope_kubernetes_workload_type
      copy_from: sysdig.vulnerability.scope.kubernetes.workload.type
      ignore_empty_value: true

  # user.*
  - dissect:
      field: sysdig.vulnerability.metadata.labels.maintainer
      tag: dissect_metadata_labels_maintainer
      pattern: '%{user.name} <%{user.domain}>'
      ignore_failure: true

  # resource.*
  - set:
      field: resource.id
      tag: set_resource_id_from_resource_id
      copy_from: sysdig.vulnerability.resource_id
      ignore_empty_value: true
  - set:
      field: resource.name
      tag: set_resource_name_from_main_asset_name
      copy_from: sysdig.vulnerability.main_asset_name
      ignore_empty_value: true

  # related.*
  - append:
      field: related.hash
      tag: append_sysdig_vulnerability_metadata_digest_hash_into_related_hash
      value: '{{{_tmp.metadata.digest_hash}}}'
      allow_duplicates: false
      if: ctx._tmp?.metadata?.digest_hash != null
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_host_name_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.host_name}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.host_name != null
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_metadata_host_id_into_related_hosts
      value: '{{{sysdig.vulnerability.metadata.host_id}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.metadata?.host_id != null
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_scope_aws_host_name_into_related_hosts
      value: '{{{sysdig.vulnerability.scope.aws.host.name}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.scope?.aws?.host_name != null
  - append:
      field: related.hosts
      tag: append_sysdig_vulnerability_scope_host_host_name_into_related_hosts
      value: '{{{sysdig.vulnerability.scope.host.host_name}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.scope?.host?.host_name != null
  - append:
      field: related.hash
      tag: append_sysdig_vulnerability_package_layers_digest_hash_into_related_hash
      value: '{{{sysdig.vulnerability.package.layers.digest_hash}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.package?.layers?.digest_hash != null
  - append:
      field: related.hash
      tag: append_sysdig_vulnerability_image_id_hash_into_related_hash
      value: '{{{sysdig.vulnerability.image_id_hash}}}'
      allow_duplicates: false
      if: ctx.sysdig?.vulnerability?.image_id_hash != null

  - remove:
      field:
        - sysdig.vulnerability.metadata.architecture
        - sysdig.vulnerability.metadata.base_os
        - sysdig.vulnerability.metadata.host_id
        - sysdig.vulnerability.metadata.os
        - sysdig.vulnerability.metadata.digest
        - sysdig.vulnerability.package.license
        - sysdig.vulnerability.package.name
        - sysdig.vulnerability.package.path
        - sysdig.vulnerability.package.type
        - sysdig.vulnerability.package.version
        - sysdig.vulnerability.package.suggested_fix
        - sysdig.vulnerability.package.vulnerability.cvss_score.score
        - sysdig.vulnerability.package.vulnerability.cvss_score.version
        - sysdig.vulnerability.package.vulnerability.name
        - sysdig.vulnerability.package.vulnerability.disclosure_date
        - sysdig.vulnerability.producer.produced_at
        - sysdig.vulnerability.resource_id
        - sysdig.vulnerability.main_asset_name
        - sysdig.vulnerability.result_id
        - sysdig.vulnerability.scope.azure.instance.id
        - sysdig.vulnerability.scope.azure.instance.name
        - sysdig.vulnerability.scope.cloud_provider.account.id
        - sysdig.vulnerability.scope.cloud_provider.name
        - sysdig.vulnerability.scope.cloud_provider.region
        - sysdig.vulnerability.scope.kubernetes.cluster.name
        - sysdig.vulnerability.scope.kubernetes.namespace.name
        - sysdig.vulnerability.scope.kubernetes.pod.container.name
        - sysdig.vulnerability.scope.kubernetes.workload.type
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field:
        - json
        - _tmp
      tag: remove_json
      ignore_missing: true

  # Cleanup
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || v == '<NA>' || v == '-1' ||(v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || v == '<NA>' || v == '-1' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
