---
description: Pipeline for processing offense logs.
processors:
  - drop:
      if: ctx.message == 'empty_events_placeholder'
      tag: drop_empty_events_placeholder
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.

  # remove agentless metadata
  - remove:
      field:
        - organization
        - division
        - team
      ignore_missing: true
      if: ctx.organization instanceof String && ctx.division instanceof String && ctx.team instanceof String
      tag: remove_agentless_tags
      description: >-
        Removes the fields added by Agentless as metadata,
        as they can collide with ECS fields.

  # parse the event JSON
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: ibm_qradar.offense

  # Add fingerprint
  - fingerprint:
      fields:
        - ibm_qradar.offense.id
        - ibm_qradar.offense.last_persisted_time
      tag: fingerprint_offense
      target_field: _id
      ignore_missing: true

  # Set event.* fields
  - set:
      field: event.kind
      tag: set_event_kind
      value: alert
  - append:
      field: event.type
      tag: append_indicator_into_event_type
      value: indicator
  - append:
      field: event.category
      tag: append_threat_into_event_category
      value: threat

  # Convert values into appropriate type and do ECS mapping
  - set:
      field: user.name
      tag: set_user_name_from_offense_assigned_to
      copy_from: ibm_qradar.offense.assigned_to
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_offense_assigned_to_into_related_user
      value: '{{{ibm_qradar.offense.assigned_to}}}'
      allow_duplicates: false
      if: ctx.ibm_qradar?.offense?.assigned_to != null
  - append:
      field: related.user
      tag: append_offense_closing_user_into_related_user
      value: '{{{ibm_qradar.offense.closing_user}}}'
      allow_duplicates: false
      if: ctx.ibm_qradar?.offense?.closing_user != null
  - convert:
      field: ibm_qradar.offense.category_count
      tag: convert_category_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.category_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      description: Script to set the event duration.
      tag: script_to_set_event_duration
      lang: painless
      if: ctx.ibm_qradar?.offense?.start_time != null && ctx.ibm_qradar?.offense?.close_time != null
      source: >-
        ctx.event.duration = (ctx.ibm_qradar.offense.close_time - ctx.ibm_qradar.offense.start_time) * 1000000;
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ibm_qradar.offense.start_time
      tag: date_start_time
      target_field: ibm_qradar.offense.start_time
      formats:
        - UNIX_MS
      if: ctx.ibm_qradar?.offense?.start_time != null
      on_failure:
        - remove:
            field: ibm_qradar.offense.start_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: threat.indicator.first_seen
      tag: set_threat_indicator_first_seen_from_offense_start_time
      copy_from: ibm_qradar.offense.start_time
      ignore_empty_value: true
  - set:
      field: event.start
      tag: set_event_start_from_offense_start_time
      copy_from: ibm_qradar.offense.start_time
      ignore_empty_value: true
  - date:
      field: ibm_qradar.offense.close_time
      tag: date_close_time
      target_field: ibm_qradar.offense.close_time
      formats:
        - UNIX_MS
      if: ctx.ibm_qradar?.offense?.close_time != null
      on_failure:
        - remove:
            field: ibm_qradar.offense.close_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: threat.indicator.last_seen
      tag: set_threat_indicator_last_seen_from_offense_close_time
      copy_from: ibm_qradar.offense.close_time
      ignore_empty_value: true
  - set:
      field: event.end
      tag: set_event_end_from_offense_close_time
      copy_from: ibm_qradar.offense.close_time
      ignore_empty_value: true
  - convert:
      field: ibm_qradar.offense.closing_reason_id
      tag: convert_closing_reason_id_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ibm_qradar.offense.credibility
      tag: convert_credibility_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.credibility
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: threat.indicator.description
      tag: set_threat_indicator_description_from_offense_description
      copy_from: ibm_qradar.offense.description
      ignore_empty_value: true
  - set:
      field: message
      tag: set_message_from_offense_description
      copy_from: ibm_qradar.offense.description
      ignore_empty_value: true
  - convert:
      field: ibm_qradar.offense.device_count
      tag: convert_device_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.device_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.domain_id
      tag: convert_domain_id_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ibm_qradar.offense.event_count
      tag: convert_event_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.event_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ibm_qradar.offense.first_persisted_time
      tag: date_first_persisted_time
      target_field: ibm_qradar.offense.first_persisted_time
      formats:
        - UNIX_MS
      if: ctx.ibm_qradar?.offense?.first_persisted_time != null
      on_failure:
        - remove:
            field: ibm_qradar.offense.first_persisted_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      tag: set_event_created_from_offense_first_persisted_time
      copy_from: ibm_qradar.offense.first_persisted_time
      ignore_empty_value: true
  - convert:
      field: ibm_qradar.offense.flow_count
      tag: convert_flow_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.flow_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.follow_up
      tag: convert_follow_up_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.follow_up
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.id
      tag: convert_id_to_string
      type: string
      ignore_missing: true
  - append:
      field: threat.indicator.id
      tag: append_ibm_qradar_offense_id_into_threat_indicator_id
      value: '{{{ibm_qradar.offense.id}}}'
      allow_duplicates: false
      if: ctx.ibm_qradar?.offense?.id != null
  - set:
      field: event.id
      tag: set_event_id_from_offense_id
      copy_from: ibm_qradar.offense.id
      ignore_empty_value: true
  - convert:
      field: ibm_qradar.offense.inactive
      tag: convert_inactive_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.inactive
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ibm_qradar.offense.last_persisted_time
      tag: date_last_persisted_time
      target_field: ibm_qradar.offense.last_persisted_time
      formats:
        - UNIX_MS
      if: ctx.ibm_qradar?.offense?.last_persisted_time != null
      on_failure:
        - remove:
            field: ibm_qradar.offense.last_persisted_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_offense_last_persisted_time
      copy_from: ibm_qradar.offense.last_persisted_time
      ignore_empty_value: true
  - set:
      field: threat.indicator.modified_at
      tag: set_threat_indicator_modified_at_from_offense_last_persisted_time
      copy_from: ibm_qradar.offense.last_persisted_time
      ignore_empty_value: true
  - date:
      field: ibm_qradar.offense.last_updated_time
      tag: date_last_updated_time
      target_field: ibm_qradar.offense.last_updated_time
      formats:
        - UNIX_MS
      if: ctx.ibm_qradar?.offense?.last_updated_time != null
      on_failure:
        - remove:
            field: ibm_qradar.offense.last_updated_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.local_destination_address_ids
      tag: convert_local_destination_address_ids_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ibm_qradar.offense.local_destination_count
      tag: convert_local_destination_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.local_destination_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ibm_qradar.offense.log_sources
      tag: foreach_log_source
      if: ctx.ibm_qradar?.offense?.log_sources instanceof List
      processor:
        convert:
          field: _ingest._value.id
          tag: convert_log_source_id_to_string
          type: string
          ignore_missing: true
  - foreach:
      field: ibm_qradar.offense.log_sources
      tag: foreach_log_source
      if: ctx.ibm_qradar?.offense?.log_sources instanceof List
      processor:
        convert:
          field: _ingest._value.type_id
          tag: convert_log_source_type_id_to_string
          type: string
          ignore_missing: true
  - convert:
      field: ibm_qradar.offense.magnitude
      tag: convert_magnitude_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.magnitude
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.offense_type
      tag: convert_offense_type_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ibm_qradar.offense.policy_category_count
      tag: convert_policy_category_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.policy_category_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.protected
      tag: convert_protected_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.protected
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.relevance
      tag: convert_relevance_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.relevance
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.remote_destination_count
      tag: convert_remote_destination_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.remote_destination_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ibm_qradar.offense.rules
      tag: foreach_rules_id
      if: ctx.ibm_qradar?.offense?.rules instanceof List
      processor:
        convert:
          field: _ingest._value.id
          tag: convert_rules_id_to_string
          type: string
          ignore_missing: true
  - foreach:
      field: ibm_qradar.offense.rules
      tag: foreach_rules_id
      if: ctx.ibm_qradar?.offense?.rules instanceof List
      processor:
        append:
          field: rule.id
          tag: append_rules_id_into_rule_id
          value: '{{{_ingest._value.id}}}'
          allow_duplicates: false
  - foreach:
      field: ibm_qradar.offense.rules
      tag: foreach_rules_type
      if: ctx.ibm_qradar?.offense?.rules instanceof List
      processor:
        append:
          field: rule.category
          tag: append_rules_type_into_rule_category
          value: '{{{_ingest._value.type}}}'
          allow_duplicates: false
  - convert:
      field: ibm_qradar.offense.security_category_count
      tag: convert_security_category_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.security_category_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.severity
      tag: convert_severity_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.severity
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.severity
      tag: set_event_severity_from_offense_severity
      copy_from: ibm_qradar.offense.severity
      ignore_empty_value: true
  - convert:
      field: ibm_qradar.offense.source_address_ids
      tag: convert_source_address_ids_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ibm_qradar.offense.source_count
      tag: convert_source_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.source_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ibm_qradar.offense.username_count
      tag: convert_username_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ibm_qradar.offense.username_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

  # Remove Duplicate Custom Field if preserve_duplicate_custom_fields are not enabled
  - remove:
      field:
        - ibm_qradar.offense.assigned_to
        - ibm_qradar.offense.close_time
        - ibm_qradar.offense.description
        - ibm_qradar.offense.first_persisted_time
        - ibm_qradar.offense.id
        - ibm_qradar.offense.last_persisted_time
        - ibm_qradar.offense.severity
        - ibm_qradar.offense.start_time
        - ibm_qradar.offense.rules
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')

  # Cleanup
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
