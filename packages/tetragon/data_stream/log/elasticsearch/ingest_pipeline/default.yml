---
description: Pipeline to process cilium_tetragon log logs
processors:
  - set:
      tag: set_ecs_version
      field: ecs.version
      value: 8.11.0
  - set:
      tag: copy_original_message
      field: originalMessage
      copy_from: message
  - rename:
      ignore_missing: true
      if: ctx.event?.original == null
      tag: rename_message
      field: originalMessage
      target_field: event.original
  #  - remove:
  #      ignore_missing: true
  #      if: ctx.event?.original != null
  #      tag: remove_copied_message
  #      field: originalMessage
  #  - remove:
  #      ignore_missing: true
  #      tag: remove_message
  #      field: message
  - json:
      tag: json_original
      field: event.original
      target_field: cilium_tetragon.log
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.pid
      target_field: process.pid
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.cwd
      target_field: process.working_directory
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.binary
      target_field: process.executable
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.arguments
      target_field: process.command_line
  - script:
      tag: script_convert_array_to_string
      description: Ensures the date processor does not receive an array value.
      lang: painless
      source: >
        if (ctx.cilium_tetragon?.log?.process_exec?.process?.start_time != null
        &&
            ctx.cilium_tetragon.log.process_exec.process.start_time instanceof ArrayList){
            ctx.cilium_tetragon.log.process_exec.process.start_time = ctx.cilium_tetragon.log.process_exec.process.start_time[0];
        }
  - date:
      if: ctx.cilium_tetragon?.log?.process_exec?.process?.start_time != null
      tag: date_processor_cilium_tetragon.log.process_exec.process.start_time
      field: cilium_tetragon.log.process_exec.process.start_time
      target_field: process.start
      formats:
        - 'yyyy-MM-dd''T''HH:mm:ss.SSSSSSSSS''Z'''
        - ISO8601
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.pod.container.id
      target_field: container.id
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.pod.container.name
      target_field: container.name
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.pod.container.image.name
      target_field: container.image.name
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.process.tid
      target_field: process.thread.id
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.parent.pid
      target_field: process.parent.pid
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.parent.uid
      target_field: process.parent.user.id
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.parent.cwd
      target_field: process.parent.working_directory
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.parent.binary
      target_field: process.parent.executable
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exec.parent.arguments
      target_field: process.parent.command_line
  - script:
      tag: script_convert_array_to_string
      description: Ensures the date processor does not receive an array value.
      lang: painless
      source: >
        if (ctx.cilium_tetragon?.log?.process_exec?.parent?.start_time != null
        &&
            ctx.cilium_tetragon.log.process_exec.parent.start_time instanceof ArrayList){
            ctx.cilium_tetragon.log.process_exec.parent.start_time = ctx.cilium_tetragon.log.process_exec.parent.start_time[0];
        }
  - date:
      if: ctx.cilium_tetragon?.log?.process_exec?.parent?.start_time != null
      tag: date_processor_cilium_tetragon.log.process_exec.parent.start_time
      field: cilium_tetragon.log.process_exec.parent.start_time
      target_field: process.parent.start
      formats:
        - 'yyyy-MM-dd''T''HH:mm:ss.SSSSSSSSS''Z'''
        - ISO8601
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.node_name
      target_field: host.name
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.pid
      target_field: process.pid
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.cwd
      target_field: process.working_directory
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.binary
      target_field: process.executable
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.arguments
      target_field: process.args
  - script:
      tag: script_convert_array_to_string
      description: Ensures the date processor does not receive an array value.
      lang: painless
      source: >
        if (ctx.cilium_tetragon?.log?.process_exit?.process?.start_time != null
        &&
            ctx.cilium_tetragon.log.process_exit.process.start_time instanceof ArrayList){
            ctx.cilium_tetragon.log.process_exit.process.start_time = ctx.cilium_tetragon.log.process_exit.process.start_time[0];
        }
  - date:
      if: ctx.cilium_tetragon?.log?.process_exit?.process?.start_time != null
      tag: date_processor_cilium_tetragon.log.process_exit.process.start_time
      field: cilium_tetragon.log.process_exit.process.start_time
      target_field: process.start
      formats:
        - 'yyyy-MM-dd''T''HH:mm:ss.SSSSSSSSS''Z'''
        - ISO8601
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.pod.container.id
      target_field: container.id
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.pod.container.name
      target_field: container.name
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.pod.container.image.name
      target_field: container.image.name
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.process.tid
      target_field: process.thread.id
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.parent.pid
      target_field: process.parent.pid
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.parent.uid
      target_field: user.id
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.parent.cwd
      target_field: process.parent.working_directory
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.parent.binary
      target_field: process.parent.executable
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.parent.arguments
      target_field: process.parent.command_line
  - script:
      tag: script_convert_array_to_string
      description: Ensures the date processor does not receive an array value.
      lang: painless
      source: >
        if (ctx.cilium_tetragon?.log?.process_exit?.parent?.start_time != null
        &&
            ctx.cilium_tetragon.log.process_exit.parent.start_time instanceof ArrayList){
            ctx.cilium_tetragon.log.process_exit.parent.start_time = ctx.cilium_tetragon.log.process_exit.parent.start_time[0];
        }
  - date:
      if: ctx.cilium_tetragon?.log?.process_exit?.parent?.start_time != null
      tag: date_processor_cilium_tetragon.log.process_exit.parent.start_time
      field: cilium_tetragon.log.process_exit.parent.start_time
      target_field: process.parent.start
      formats:
        - 'yyyy-MM-dd''T''HH:mm:ss.SSSSSSSSS''Z'''
        - ISO8601
  - rename:
      ignore_missing: true
      field: cilium_tetragon.log.process_exit.status
      target_field: process.exit_code
  - script:
      tag: script_drop_null_empty_values
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
  - geoip:
      ignore_missing: true
      tag: geoip_source_ip
      field: source.ip
      target_field: source.geo
  - geoip:
      ignore_missing: true
      tag: geoip_source_asn
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
  - rename:
      ignore_missing: true
      tag: rename_source_as_asn
      field: source.as.asn
      target_field: source.as.number
  - rename:
      ignore_missing: true
      tag: rename_source_as_organization_name
      field: source.as.organization_name
      target_field: source.as.organization.name
  - geoip:
      ignore_missing: true
      tag: geoip_destination_ip
      field: destination.ip
      target_field: destination.geo
  - geoip:
      ignore_missing: true
      tag: geoip_destination_asn
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
  - rename:
      ignore_missing: true
      tag: rename_destination_as_asn
      field: destination.as.asn
      target_field: destination.as.number
  - append:
      field: event.category
      value:
        - process
      allow_duplicates: false
  - append:
      if: ctx.cilium_tetragon?.log?.process_exec != null
      field: event.type
      value:
        - start
      allow_duplicates: false
  - append:
      if: ctx.cilium_tetragon?.log?.process_exit != null
      field: event.type
      value:
        - end
      allow_duplicates: false
  - append:
      if: >-
        ctx.process?.executable == '/usr/bin/mount' || ctx.process?.executable
        == '/usr/bin/cp'
      field: event.category
      value:
        - file
      allow_duplicates: false
  - append:
      if: >-
        ctx.process?.executable == '/usr/bin/mount' || ctx.process?.executable
        == '/usr/bin/cp'
      field: event.type
      value:
        - change
      allow_duplicates: false
  - append:
      if: >-
        ctx.process?.executable == '/usr/local/bin/json-server' ||
        ctx.process?.executable == '/starwars-docker'
      field: event.category
      value:
        - network
      allow_duplicates: false
  - append:
      if: >-
        ctx.process?.executable == '/usr/local/bin/json-server' ||
        ctx.process?.executable == '/starwars-docker'
      field: event.type
      value:
        - start
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/bin/nsenter'
      field: event.category
      value:
        - process
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/bin/nsenter'
      field: event.type
      value:
        - access
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/local/bin/node'
      field: event.category
      value:
        - process
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/local/bin/node'
      field: event.type
      value:
        - start
      allow_duplicates: false
  - append:
      if: >-
        ctx.process?.executable == '/usr/bin/bash' || ctx.process?.executable ==
        '/usr/bin/sh' || ctx.process?.executable == '/usr/bin/tini'
      field: event.category
      value:
        - process
      allow_duplicates: false
  - append:
      if: >-
        ctx.process?.executable == '/usr/bin/bash' || ctx.process?.executable ==
        '/usr/bin/sh' || ctx.process?.executable == '/usr/bin/tini'
      field: event.type
      value:
        - start
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/bin/jq'
      field: event.category
      value:
        - process
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/bin/jq'
      field: event.type
      value:
        - end
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/local/bin/local-path-provisioner'
      field: event.category
      value:
        - process
      allow_duplicates: false
  - append:
      if: ctx.process?.executable == '/usr/local/bin/local-path-provisioner'
      field: event.type
      value:
        - start
      allow_duplicates: false
  - append:
      if: ctx.host?.name != null
      field: related.hosts
      value: '{{{host.name}}}'
      allow_duplicates: false
  - append:
      if: ctx.user?.id != null
      field: related.user
      value: '{{{user.id}}}'
      allow_duplicates: false
  - append:
      if: ctx.container?.image?.id != null
      field: related.hash
      value: '{{{container.image.id}}}'
      allow_duplicates: false
  - rename:
      ignore_missing: true
      tag: rename_destination_as_organization_name
      field: destination.as.organization_name
      target_field: destination.as.organization.name
  #  - remove:
  #      ignore_failure: true
  #      ignore_missing: true
  #      if: ctx?.tags == null || !(ctx.tags.contains("preserve_original_event"))
  #      tag: remove_original_event
  #      field: event.original
on_failure:
  - append:
      field: error.message
      value: >-
        Processor {{{_ingest.on_failure_processor_type}}} with tag
        {{{_ingest.on_failure_processor_tag}}} in pipeline
        {{{_ingest.on_failure_pipeline}}} failed with message:
        {{{_ingest.on_failure_message}}}
  - set:
      field: event.kind
      value: pipeline_error
