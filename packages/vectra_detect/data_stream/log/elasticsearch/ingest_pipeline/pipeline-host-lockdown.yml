---
description: Pipeline for processing Vectra Detect Host Lockdown logs.
processors:
  - set:
      field: event.kind
      value: event
  - set:
      field: event.category
      value: [host]
  - set:
      field: event.type
      value: [info]
  - rename:
      field: json.action
      target_field: vectra_detect.log.action
      ignore_missing: true
  - set:
      field: event.action
      copy_from: vectra_detect.log.action
      ignore_empty_value: true
  - convert:
      field: json.success
      tag: 'convert_success_to_boolean'
      target_field: vectra_detect.log.success
      type: boolean
      ignore_missing: true
      if: ctx.json?.success != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.outcome
      value: success
      if: ctx.vectra_detect?.log?.success != null && ctx.vectra_detect.log.success
  - set:
      field: event.outcome
      value: failure
      if: ctx.vectra_detect?.log?.success != null && !ctx.vectra_detect.log.success
  - rename:
      field: json.host_name
      target_field: vectra_detect.log.host.name
      ignore_missing: true
  - set:
      field: host.hostname
      copy_from: vectra_detect.log.host.name
      ignore_empty_value: true
  - rename:
      field: json.user
      target_field: vectra_detect.log.user.name
      ignore_missing: true
  - set:
      field: user.name
      copy_from: vectra_detect.log.user.name
      ignore_empty_value: true
  - rename:
      field: json.category
      target_field: vectra_detect.log.category
      ignore_missing: true
  - convert:
      field: json.will_retry
      tag: 'convert_will_retry_to_boolean'
      target_field: vectra_detect.log.will_retry
      type: boolean
      ignore_missing: true
      if: ctx.json?.will_retry != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.href
      target_field: vectra_detect.log.href
      ignore_missing: true
  - set:
      field: event.reference
      copy_from: vectra_detect.log.href
      ignore_empty_value: true
  - uri_parts:
      field: event.reference
      tag: 'uri_parts_to_split_reference'
      if: ctx.event?.reference != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.host_id
      tag: 'convert_host_id_to_string'
      target_field: vectra_detect.log.host.id
      ignore_missing: true
      type: string
      if: ctx.json?.host_id != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: host.id
      copy_from: vectra_detect.log.host.id
      ignore_empty_value: true
  - rename:
      field: json.edr_type
      target_field: vectra_detect.log.edr_type
      ignore_missing: true
  - append:
      field: related.user
      value: '{{{user.name}}}'
      allow_duplicates: false
      if: ctx.user?.name != null
  - append:
      field: related.hosts
      value: '{{{host.hostname}}}'
      allow_duplicates: false
      if: ctx.host?.hostname != null
on_failure:
  - append:
      field: error.message
      value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
