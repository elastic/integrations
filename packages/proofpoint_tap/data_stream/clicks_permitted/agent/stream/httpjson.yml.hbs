config_version: 2
interval: {{interval}}
{{#if enable_request_tracer}}
request.tracer.filename: "../../logs/httpjson/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
{{#if proxy_url }}
request.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
request.ssl: {{ssl}}
{{/if}}
request.method: GET
request.url: {{url}}/v2/siem/clicks/permitted
auth.basic.user: {{principal}}
auth.basic.password: {{secret}}
request.transforms:
  - set:
      target: url.params.format
      value: json
  - set:
      target: url.params.interval
      value: |-
        [[- $last := (parseDate .cursor.last_received_time "RFC3339") -]]
        [[- $hour := (parseDuration "1h") -]]
        [[- $week_ago := (now (parseDuration "-167h55m")) -]]
        [[- with $last -]]
          [[- if .Before $week_ago -]]
            [[- $last = $week_ago -]]
          [[- end -]]
        [[- end -]]
        [[- $end := 0 -]][[- /* Predeclare $end. */ -]]
        [[- with $last -]]
          [[- $end = .Add $hour -]]
        [[- end -]]
        [[- with $end -]]
          [[- if .After now -]]
            [[- $end = now -]]
          [[- end -]]
        [[- end -]]
        [[- formatDate $last ]]/[[ formatDate $end -]]
      default: |-
        [[- $start := (now (parseDuration "-{{initial_interval}}")) -]]
        [[- $hour := (parseDuration "1h") -]]
        [[- $week_ago := (now (parseDuration "-167h55m")) -]]
        [[- with $start -]]
          [[- if .Before $week_ago -]]
            [[- $start = $week_ago -]]
          [[- end -]]
        [[- end -]]
        [[- $end := 0 -]][[- /* Predeclare $end. */ -]]
        [[- with $start -]]
          [[- $end = .Add $hour -]]
        [[- end -]]
        [[- with $end -]]
          [[- if .After now -]]
            [[- $end = now -]]
          [[- end -]]
        [[- end -]]
        [[- formatDate $start ]]/[[ formatDate $end -]]
response.pagination:
  - set:
      target: url.params.interval
      value: |-
        [[- if ne (len .last_response.body.clicksPermitted) 0 -]]
          [[- $last := (parseDate .last_response.body.queryEndTime "RFC3339") -]]
          [[- $hour := (parseDuration "1h") -]]
          [[- $week_ago := (now (parseDuration "-167h55m")) -]]
          [[- with $last -]][[- /* We should never be in this situation, but done defensively */ -]]
            [[- if .Before $week_ago -]]
              [[- $last = $week_ago -]]
            [[- end -]]
          [[- end -]]
          [[- $end := 0 -]][[- /* Predeclare $end. */ -]]
          [[- with $last -]]
            [[- $end = .Add $hour -]]
          [[- end -]]
          [[- with $end -]]
            [[- if .After now -]]
              [[- $end = now -]]
            [[- end -]]
          [[- end -]]
          [[- with $end -]]
            [[- if ge (.Sub $last) (parseDuration "30s") ]]
              [[- formatDate $last ]]/[[ formatDate $end -]]
            [[- end -]]
          [[- end -]]
        [[- end -]]
      fail_on_template_error: true
cursor:
  last_received_time:
    value: '[[.last_response.body.queryEndTime]]'
response.split:
  target: body.clicksPermitted
  ignore_empty_value: false
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
