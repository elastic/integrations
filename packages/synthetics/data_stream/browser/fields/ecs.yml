- name: labels
  type: object
  object_type: keyword
  description: "Custom key/value pairs.\nCan be used to add meta information to events. Should not contain nested objects. All values are stored as keyword.\nExample: `docker` and `k8s` labels."
- name: tags
  type: keyword
  ignore_above: 1024
  description: List of keywords used to tag each event.
- name: agent
  description: "The agent fields contain the data about the software entity, if any, that collects, detects, or observes events on a host, or takes measurements on a host.\nExamples include Beats. Agents may also run on observers. ECS agent.* fields shall be populated with details of the agent running on the host or observer where the event happened or the measurement was taken."
  type: group
  fields:
    - name: build.original
      type: wildcard
      description: "Extended build information for the agent.\nThis field is intended to contain any build information that a data source may provide, no specific formatting is required."
    - name: ephemeral_id
      type: keyword
      ignore_above: 1024
      description: "Ephemeral identifier of this agent (if one exists).\nThis id normally changes across restarts, but `agent.id` does not."
    - name: id
      type: keyword
      ignore_above: 1024
      description: "Unique identifier of this agent (if one exists).\nExample: For Beats this would be beat.id."
    - name: name
      type: keyword
      ignore_above: 1024
      description: "Custom name of the agent.\nThis is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from.\nIf no name is given, the name is often left empty."
    - name: type
      type: keyword
      ignore_above: 1024
      description: "Type of the agent.\nThe agent type always stays the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine."
    - name: version
      type: keyword
      ignore_above: 1024
      description: Version of the agent.
- name: cloud
  description: Fields related to the cloud or infrastructure the events are coming from.
  type: group
  fields:
    - name: account.id
      type: keyword
      ignore_above: 1024
      description: "The cloud account or organization id used to identify different entities in a multi-tenant environment.\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier."
    - name: account.name
      type: keyword
      ignore_above: 1024
      description: "The cloud account name or alias used to identify different entities in a multi-tenant environment.\nExamples: AWS account name, Google Cloud ORG display name."
    - name: availability_zone
      type: keyword
      ignore_above: 1024
      description: Availability zone in which this host is running.
    - name: instance.id
      type: keyword
      ignore_above: 1024
      description: Instance ID of the host machine.
    - name: instance.name
      type: keyword
      ignore_above: 1024
      description: Instance name of the host machine.
    - name: machine.type
      type: keyword
      ignore_above: 1024
      description: Machine type of the host machine.
    - name: project.id
      type: keyword
      ignore_above: 1024
      description: "The cloud project identifier.\nExamples: Google Cloud Project id, Azure Project id."
    - name: project.name
      type: keyword
      ignore_above: 1024
      description: "The cloud project name.\nExamples: Google Cloud Project name, Azure Project name."
    - name: provider
      type: keyword
      ignore_above: 1024
      description: Name of the cloud provider. Example values are aws, azure, gcp, or digitalocean.
    - name: region
      type: keyword
      ignore_above: 1024
      description: Region in which this host is running.
- name: container
  description: "Container fields are used for meta information about the specific container that is the source of information.\nThese fields help correlate data based containers from any runtime."
  type: group
  fields:
    - name: id
      type: keyword
      ignore_above: 1024
      description: Unique container id.
    - name: image.name
      type: keyword
      ignore_above: 1024
      description: Name of the image the container was built on.
    - name: image.tag
      type: keyword
      ignore_above: 1024
      description: Container image tags.
    - name: labels
      type: object
      object_type: keyword
      description: Image labels.
    - name: name
      type: keyword
      ignore_above: 1024
      description: Container name.
    - name: runtime
      type: keyword
      ignore_above: 1024
      description: Runtime managing this container.
- name: dns
  description: "Fields describing DNS queries and answers.\nDNS events should either represent a single DNS query prior to getting answers (`dns.type:query`) or they should represent a full exchange and contain the query details as well as all of the answers that were provided for this query (`dns.type:answer`)."
  type: group
  fields:
    - name: answers
      type: object
      description: "An array containing an object for each answer section returned by the server.\nThe main keys that should be present in these objects are defined by ECS. Records that have more information may contain more keys than what ECS defines.\nNot all DNS data sources give all details about DNS answers. At minimum, answer objects must contain the `data` key. If more information is available, map as much of it to ECS as possible, and add any additional fields to the answer objects as custom fields."
    - name: answers.class
      type: keyword
      ignore_above: 1024
      description: The class of DNS data contained in this resource record.
    - name: answers.data
      type: wildcard
      description: "The data describing the resource.\nThe meaning of this data depends on the type and class of the resource record."
    - name: answers.name
      type: keyword
      ignore_above: 1024
      description: "The domain name to which this resource record pertains.\nIf a chain of CNAME is being resolved, each answer's `name` should be the one that corresponds with the answer's `data`. It should not simply be the original `question.name` repeated."
    - name: answers.ttl
      type: long
      description: The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.
    - name: answers.type
      type: keyword
      ignore_above: 1024
      description: The type of data contained in this resource record.
    - name: header_flags
      type: keyword
      ignore_above: 1024
      description: "Array of 2 letter DNS header flags.\nExpected values are: AA, TC, RD, RA, AD, CD, DO."
    - name: id
      type: keyword
      ignore_above: 1024
      description: The DNS packet identifier assigned by the program that generated the query. The identifier is copied to the response.
    - name: op_code
      type: keyword
      ignore_above: 1024
      description: The DNS operation code that specifies the kind of query in the message. This value is set by the originator of a query and copied into the response.
    - name: question.class
      type: keyword
      ignore_above: 1024
      description: The class of records being queried.
    - name: question.name
      type: wildcard
      description: 'The name being queried.

        If the name field contains non-printable characters (below 32 or above 126), those characters should be represented as escaped base 10 integers (\DDD). Back slashes and quotes should be escaped. Tabs, carriage returns, and line feeds should be converted to \t, \r, and \n respectively.'
    - name: question.registered_domain
      type: keyword
      ignore_above: 1024
      description: 'The highest registered domain, stripped of the subdomain.

        For example, the registered domain for "foo.example.com" is "example.com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".'
    - name: question.subdomain
      type: keyword
      ignore_above: 1024
      description: 'The subdomain is all of the labels under the registered_domain.

        If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.'
    - name: question.top_level_domain
      type: keyword
      ignore_above: 1024
      description: 'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".'
    - name: question.type
      type: keyword
      ignore_above: 1024
      description: The type of record being queried.
    - name: resolved_ip
      type: ip
      description: "Array containing all IPs seen in `answers.data`.\nThe `answers` array can be difficult to use, because of the variety of data formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip` makes it possible to index them as IP addresses, and makes them easier to visualize and query for."
    - name: response_code
      type: keyword
      ignore_above: 1024
      description: The DNS response code.
    - name: type
      type: keyword
      ignore_above: 1024
      description: "The type of DNS event captured, query or answer.\nIf your source of DNS events only gives you DNS queries, you should only create dns events of type `dns.type:query`.\nIf your source of DNS events gives you answers as well, you should create one event per query (optionally as soon as the query is seen). And a second event containing all query details as well as an array of answers."
- name: ecs
  description: Meta-information specific to ECS.
  type: group
  fields:
    - name: version
      type: keyword
      ignore_above: 1024
      description: "ECS version this event conforms to. `ecs.version` is a required field and must exist in all events.\nWhen querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events."
- name: error
  description: "These fields can represent errors of any kind.\nUse them for errors that happen while fetching events or in cases where the event itself contains an error."
  type: group
  fields:
    - name: code
      type: keyword
      ignore_above: 1024
      description: Error code describing the error.
    - name: id
      type: keyword
      ignore_above: 1024
      description: Unique identifier for the error.
    - name: message
      type: text
      description: Error message.
    - name: stack_trace
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
      description: The stack trace of this error in plain text.
    - name: type
      type: wildcard
      description: The type of the error, for example the class name of the exception.
- name: http
  description: Fields related to HTTP activity. Use the `url` field set to store the url of the request.
  type: group
  fields:
    - name: request.body.bytes
      type: long
      format: bytes
      description: Size in bytes of the request body.
    - name: request.body.content
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
      description: The full HTTP request body.
    - name: request.bytes
      type: long
      format: bytes
      description: Total size in bytes of the request (body and headers).
    - name: request.method
      type: keyword
      ignore_above: 1024
      description: 'HTTP request method.

        Prior to ECS 1.6.0 the following guidance was provided:

        "The field value must be normalized to lowercase for querying."

        As of ECS 1.6.0, the guidance is deprecated because the original case of the method may be useful in anomaly detection.  Original case will be mandated in ECS 2.0.0'
    - name: request.mime_type
      type: keyword
      ignore_above: 1024
      description: "Mime type of the body of the request.\nThis value must only be populated based on the content of the request body, not on the `Content-Type` header. Comparing the mime type of a request with the request's Content-Type header can be helpful in detecting threats or misconfigured clients."
    - name: request.referrer
      type: wildcard
      description: Referrer for this HTTP request.
    - name: response.body.bytes
      type: long
      format: bytes
      description: Size in bytes of the response body.
    - name: response.body.content
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
      description: The full HTTP response body.
    - name: response.bytes
      type: long
      format: bytes
      description: Total size in bytes of the response (body and headers).
    - name: response.mime_type
      type: keyword
      ignore_above: 1024
      description: "Mime type of the body of the response.\nThis value must only be populated based on the content of the response body, not on the `Content-Type` header. Comparing the mime type of a response with the response's Content-Type header can be helpful in detecting misconfigured servers."
    - name: response.status_code
      type: long
      format: string
      description: HTTP response status code.
    - name: version
      type: keyword
      ignore_above: 1024
      description: HTTP version.
- name: observer
  description: "An observer is defined as a special network, security, or application device used to detect, observe, or create network, security, or application-related events and metrics.\nThis could be a custom hardware appliance or a server that has been configured to run special network, security, or application software. Examples include firewalls, web proxies, intrusion detection/prevention systems, network monitoring sensors, web application firewalls, data loss prevention systems, and APM servers. The observer.* fields shall be populated with details of the system, if any, that detects, observes and/or creates a network, security, or application event or metric. Message queues and ETL components used in processing events or metrics are not considered observers in ECS."
  type: group
  fields:
    - name: geo.city_name
      type: keyword
      ignore_above: 1024
      description: City name.
    - name: geo.continent_name
      type: keyword
      ignore_above: 1024
      description: Name of the continent.
    - name: geo.country_iso_code
      type: keyword
      ignore_above: 1024
      description: Country ISO code.
    - name: geo.country_name
      type: keyword
      ignore_above: 1024
      description: Country name.
    - name: geo.location
      type: geo_point
      description: Longitude and latitude.
    - name: geo.name
      type: wildcard
      description: "User-defined description of a location, at the level of granularity they care about.\nCould be the name of their data centers, the floor number, if this describes a local physical entity, city names.\nNot typically used in automated geolocation."
    - name: geo.region_iso_code
      type: keyword
      ignore_above: 1024
      description: Region ISO code.
    - name: geo.region_name
      type: keyword
      ignore_above: 1024
      description: Region name.
    - name: hostname
      type: keyword
      ignore_above: 1024
      description: Hostname of the observer.
    - name: ip
      type: ip
      description: IP addresses of the observer.
    - name: mac
      type: keyword
      ignore_above: 1024
      description: MAC addresses of the observer
    - name: name
      type: keyword
      ignore_above: 1024
      description: "Custom name of the observer.\nThis is a name that can be given to an observer. This can be helpful for example if multiple firewalls of the same model are used in an organization.\nIf no custom name is needed, the field can be left empty."
    - name: os.family
      type: keyword
      ignore_above: 1024
      description: OS family (such as redhat, debian, freebsd, windows).
    - name: os.full
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Operating system name, including the version or code name.
    - name: os.kernel
      type: keyword
      ignore_above: 1024
      description: Operating system kernel version as a raw string.
    - name: os.name
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
      description: Operating system name, without the version.
    - name: os.platform
      type: keyword
      ignore_above: 1024
      description: Operating system platform (such centos, ubuntu, windows).
    - name: os.version
      type: keyword
      ignore_above: 1024
      description: Operating system version as a raw string.
    - name: product
      type: keyword
      ignore_above: 1024
      description: The product name of the observer.
    - name: serial_number
      type: keyword
      ignore_above: 1024
      description: Observer serial number.
    - name: type
      type: keyword
      ignore_above: 1024
      description: "The type of the observer the data is coming from.\nThere is no predefined list of observer types. Some examples are `forwarder`, `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`."
    - name: vendor
      type: keyword
      ignore_above: 1024
      description: Vendor name of the observer.
    - name: version
      type: keyword
      ignore_above: 1024
      description: Observer version.
- name: tls
  description: Fields related to a TLS connection. These fields focus on the TLS protocol itself and intentionally avoids in-depth analysis of the related x.509 certificate files.
  type: group
  fields:
    - name: cipher
      type: keyword
      ignore_above: 1024
      description: String indicating the cipher used during the current connection.
    - name: client.certificate
      type: keyword
      ignore_above: 1024
      description: PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
    - name: client.certificate_chain
      type: keyword
      ignore_above: 1024
      description: Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
    - name: client.hash.md5
      type: keyword
      ignore_above: 1024
      description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
    - name: client.hash.sha1
      type: keyword
      ignore_above: 1024
      description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
    - name: client.hash.sha256
      type: keyword
      ignore_above: 1024
      description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
    - name: client.issuer
      type: wildcard
      description: Distinguished name of subject of the issuer of the x.509 certificate presented by the client.
    - name: client.ja3
      type: keyword
      ignore_above: 1024
      description: A hash that identifies clients based on how they perform an SSL/TLS handshake.
    - name: client.not_after
      type: date
      description: Date/Time indicating when client certificate is no longer considered valid.
    - name: client.not_before
      type: date
      description: Date/Time indicating when client certificate is first considered valid.
    - name: client.server_name
      type: keyword
      ignore_above: 1024
      description: Also called an SNI, this tells the server which hostname to which the client is attempting to connect to. When this value is available, it should get copied to `destination.domain`.
    - name: client.subject
      type: wildcard
      description: Distinguished name of subject of the x.509 certificate presented by the client.
    - name: client.supported_ciphers
      type: keyword
      ignore_above: 1024
      description: Array of ciphers offered by the client during the client hello.
    - name: client.x509.alternative_names
      type: keyword
      ignore_above: 1024
      description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
    - name: client.x509.issuer.common_name
      type: keyword
      ignore_above: 1024
      description: List of common name (CN) of issuing certificate authority.
    - name: client.x509.issuer.country
      type: keyword
      ignore_above: 1024
      description: List of country (C) codes
    - name: client.x509.issuer.distinguished_name
      type: wildcard
      description: Distinguished name (DN) of issuing certificate authority.
    - name: client.x509.issuer.locality
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
    - name: client.x509.issuer.organization
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of issuing certificate authority.
    - name: client.x509.issuer.organizational_unit
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of issuing certificate authority.
    - name: client.x509.issuer.state_or_province
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
    - name: client.x509.not_after
      type: date
      description: Time at which the certificate is no longer considered valid.
    - name: client.x509.not_before
      type: date
      description: Time at which the certificate is first considered valid.
    - name: client.x509.public_key_algorithm
      type: keyword
      ignore_above: 1024
      description: Algorithm used to generate the public key.
    - name: client.x509.public_key_curve
      type: keyword
      ignore_above: 1024
      description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
    - name: client.x509.public_key_exponent
      type: long
      description: Exponent used to derive the public key. This is algorithm specific.
      index: false
    - name: client.x509.public_key_size
      type: long
      description: The size of the public key space in bits.
    - name: client.x509.serial_number
      type: keyword
      ignore_above: 1024
      description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
    - name: client.x509.signature_algorithm
      type: keyword
      ignore_above: 1024
      description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
    - name: client.x509.subject.common_name
      type: keyword
      ignore_above: 1024
      description: List of common names (CN) of subject.
    - name: client.x509.subject.country
      type: keyword
      ignore_above: 1024
      description: List of country (C) code
    - name: client.x509.subject.distinguished_name
      type: wildcard
      description: Distinguished name (DN) of the certificate subject entity.
    - name: client.x509.subject.locality
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
    - name: client.x509.subject.organization
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of subject.
    - name: client.x509.subject.organizational_unit
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of subject.
    - name: client.x509.subject.state_or_province
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
    - name: client.x509.version_number
      type: keyword
      ignore_above: 1024
      description: Version of x509 format.
    - name: curve
      type: keyword
      ignore_above: 1024
      description: String indicating the curve used for the given cipher, when applicable.
    - name: established
      type: boolean
      description: Boolean flag indicating if the TLS negotiation was successful and transitioned to an encrypted tunnel.
    - name: next_protocol
      type: keyword
      ignore_above: 1024
      description: String indicating the protocol being tunneled. Per the values in the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.
    - name: resumed
      type: boolean
      description: Boolean flag indicating if this TLS connection was resumed from an existing TLS negotiation.
    - name: server.certificate
      type: keyword
      ignore_above: 1024
      description: PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
    - name: server.certificate_chain
      type: keyword
      ignore_above: 1024
      description: Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
    - name: server.hash.md5
      type: keyword
      ignore_above: 1024
      description: Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
    - name: server.hash.sha1
      type: keyword
      ignore_above: 1024
      description: Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
    - name: server.hash.sha256
      type: keyword
      ignore_above: 1024
      description: Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
    - name: server.issuer
      type: wildcard
      description: Subject of the issuer of the x.509 certificate presented by the server.
    - name: server.ja3s
      type: keyword
      ignore_above: 1024
      description: A hash that identifies servers based on how they perform an SSL/TLS handshake.
    - name: server.not_after
      type: date
      description: Timestamp indicating when server certificate is no longer considered valid.
    - name: server.not_before
      type: date
      description: Timestamp indicating when server certificate is first considered valid.
    - name: server.subject
      type: wildcard
      description: Subject of the x.509 certificate presented by the server.
    - name: server.x509.alternative_names
      type: keyword
      ignore_above: 1024
      description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
    - name: server.x509.issuer.common_name
      type: keyword
      ignore_above: 1024
      description: List of common name (CN) of issuing certificate authority.
    - name: server.x509.issuer.country
      type: keyword
      ignore_above: 1024
      description: List of country (C) codes
    - name: server.x509.issuer.distinguished_name
      type: wildcard
      description: Distinguished name (DN) of issuing certificate authority.
    - name: server.x509.issuer.locality
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
    - name: server.x509.issuer.organization
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of issuing certificate authority.
    - name: server.x509.issuer.organizational_unit
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of issuing certificate authority.
    - name: server.x509.issuer.state_or_province
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
    - name: server.x509.not_after
      type: date
      description: Time at which the certificate is no longer considered valid.
    - name: server.x509.not_before
      type: date
      description: Time at which the certificate is first considered valid.
    - name: server.x509.public_key_algorithm
      type: keyword
      ignore_above: 1024
      description: Algorithm used to generate the public key.
    - name: server.x509.public_key_curve
      type: keyword
      ignore_above: 1024
      description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
    - name: server.x509.public_key_exponent
      type: long
      description: Exponent used to derive the public key. This is algorithm specific.
      index: false
    - name: server.x509.public_key_size
      type: long
      description: The size of the public key space in bits.
    - name: server.x509.serial_number
      type: keyword
      ignore_above: 1024
      description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
    - name: server.x509.signature_algorithm
      type: keyword
      ignore_above: 1024
      description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
    - name: server.x509.subject.common_name
      type: keyword
      ignore_above: 1024
      description: List of common names (CN) of subject.
    - name: server.x509.subject.country
      type: keyword
      ignore_above: 1024
      description: List of country (C) code
    - name: server.x509.subject.distinguished_name
      type: wildcard
      description: Distinguished name (DN) of the certificate subject entity.
    - name: server.x509.subject.locality
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
    - name: server.x509.subject.organization
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of subject.
    - name: server.x509.subject.organizational_unit
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of subject.
    - name: server.x509.subject.state_or_province
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
    - name: server.x509.version_number
      type: keyword
      ignore_above: 1024
      description: Version of x509 format.
    - name: version
      type: keyword
      ignore_above: 1024
      description: Numeric part of the version parsed from the original string.
    - name: version_protocol
      type: keyword
      ignore_above: 1024
      description: Normalized lowercase protocol name parsed from original string.
- name: url
  description: URL fields provide support for complete or partial URLs, and supports the breaking down into scheme, domain, path, and so on.
  type: group
  fields:
    - name: domain
      type: wildcard
      description: 'Domain of the url, such as "www.elastic.co".

        In some cases a URL may refer to an IP and/or port directly, without a domain name. In this case, the IP address would go to the `domain` field.'
    - name: extension
      type: keyword
      ignore_above: 1024
      description: 'The field contains the file extension from the original request url, excluding the leading dot.

        The file extension is only set if it exists, as not every url has a file extension.

        The leading period must not be included. For example, the value must be "png", not ".png".

        Note that when the file name has multiple extensions (example.tar.gz), only the last one should be captured ("gz", not "tar.gz").'
    - name: fragment
      type: keyword
      ignore_above: 1024
      description: 'Portion of the url after the `#`, such as "top".

        The `#` is not part of the fragment.'
    - name: full
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
        - name: keyword
          type: keyword
      description: If full URLs are important to your use case, they should be stored in `url.full`, whether this field is reconstructed or present in the event source.
    - name: original
      type: wildcard
      multi_fields:
        - name: text
          type: text
          norms: false
      description: "Unmodified original url as seen in the event source.\nNote that in network monitoring, the observed URL may be a full URL, whereas in access logs, the URL is often just represented as a path.\nThis field is meant to represent the URL as it was observed, complete or not."
    - name: password
      type: keyword
      ignore_above: 1024
      description: Password of the request.
    - name: path
      type: wildcard
      description: Path of the request, such as "/search".
    - name: port
      type: long
      format: string
      description: Port of the request, such as 443.
    - name: query
      type: keyword
      ignore_above: 1024
      description: 'The query field describes the query string of the request, such as "q=elasticsearch".

        The `?` is excluded from the query string. If a URL contains no `?`, there is no query field. If there is a `?` but no query, the query field exists with an empty string. The `exists` query can be used to differentiate between the two cases.'
    - name: registered_domain
      type: wildcard
      description: 'The highest registered url domain, stripped of the subdomain.

        For example, the registered domain for "foo.example.com" is "example.com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last two labels will not work well for TLDs such as "co.uk".'
    - name: scheme
      type: keyword
      ignore_above: 1024
      description: 'Scheme of the request, such as "https".

        Note: The `:` is not part of the scheme.'
    - name: subdomain
      type: keyword
      ignore_above: 1024
      description: 'The subdomain portion of a fully qualified domain name includes all of the names except the host name under the registered_domain.  In a partially qualified domain, or if the the qualification level of the full name cannot be determined, subdomain contains all of the names below the registered domain.

        For example the subdomain portion of "www.east.mydomain.co.uk" is "east". If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com", the subdomain field should contain "sub2.sub1", with no trailing period.'
    - name: top_level_domain
      type: keyword
      ignore_above: 1024
      description: 'The effective top level domain (eTLD), also known as the domain suffix, is the last part of the domain name. For example, the top level domain for example.com is "com".

        This value can be determined precisely with a list like the public suffix list (http://publicsuffix.org). Trying to approximate this by simply taking the last label will not work well for effective TLDs such as "co.uk".'
    - name: username
      type: keyword
      ignore_above: 1024
      description: Username of the request.
- name: x509
  description: "This implements the common core fields for x509 certificates. This information is likely logged with TLS sessions, digital signatures found in executable binaries, S/MIME information in email bodies, or analysis of files on disk.\nWhen the certificate relates to a file, use the fields at `file.x509`. When hashes of the DER-encoded certificate are available, the `hash` data set should be populated as well (e.g. `file.hash.sha256`).\nEvents that contain certificate information about network connections, should use the x509 fields under the relevant TLS fields: `tls.server.x509` and/or `tls.client.x509`."
  type: group
  fields:
    - name: alternative_names
      type: keyword
      ignore_above: 1024
      description: List of subject alternative names (SAN). Name types vary by certificate authority and certificate type but commonly contain IP addresses, DNS names (and wildcards), and email addresses.
    - name: issuer.common_name
      type: keyword
      ignore_above: 1024
      description: List of common name (CN) of issuing certificate authority.
    - name: issuer.country
      type: keyword
      ignore_above: 1024
      description: List of country (C) codes
    - name: issuer.distinguished_name
      type: wildcard
      description: Distinguished name (DN) of issuing certificate authority.
    - name: issuer.locality
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
    - name: issuer.organization
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of issuing certificate authority.
    - name: issuer.organizational_unit
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of issuing certificate authority.
    - name: issuer.state_or_province
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
    - name: not_after
      type: date
      description: Time at which the certificate is no longer considered valid.
    - name: not_before
      type: date
      description: Time at which the certificate is first considered valid.
    - name: public_key_algorithm
      type: keyword
      ignore_above: 1024
      description: Algorithm used to generate the public key.
    - name: public_key_curve
      type: keyword
      ignore_above: 1024
      description: The curve used by the elliptic curve public key algorithm. This is algorithm specific.
    - name: public_key_exponent
      type: long
      description: Exponent used to derive the public key. This is algorithm specific.
      index: false
    - name: public_key_size
      type: long
      description: The size of the public key space in bits.
    - name: serial_number
      type: keyword
      ignore_above: 1024
      description: Unique serial number issued by the certificate authority. For consistency, if this value is alphanumeric, it should be formatted without colons and uppercase characters.
    - name: signature_algorithm
      type: keyword
      ignore_above: 1024
      description: Identifier for certificate signature algorithm. We recommend using names found in Go Lang Crypto library. See https://github.com/golang/go/blob/go1.14/src/crypto/x509/x509.go#L337-L353.
    - name: subject.common_name
      type: keyword
      ignore_above: 1024
      description: List of common names (CN) of subject.
    - name: subject.country
      type: keyword
      ignore_above: 1024
      description: List of country (C) code
    - name: subject.distinguished_name
      type: wildcard
      description: Distinguished name (DN) of the certificate subject entity.
    - name: subject.locality
      type: keyword
      ignore_above: 1024
      description: List of locality names (L)
    - name: subject.organization
      type: keyword
      ignore_above: 1024
      description: List of organizations (O) of subject.
    - name: subject.organizational_unit
      type: keyword
      ignore_above: 1024
      description: List of organizational units (OU) of subject.
    - name: subject.state_or_province
      type: keyword
      ignore_above: 1024
      description: List of state or province names (ST, S, or P)
    - name: version_number
      type: keyword
      ignore_above: 1024
      description: Version of x509 format.
