---
description: Pipeline for parsing Session Manager metrics
processors:
  - set:
      field: ecs.version
      value: '8.2.0'
  - set:
      field: event.category
      value: web
      ignore_empty_value: true
      ignore_failure: true
  - set:
      field: event.kind
      value: metric
      ignore_empty_value: true
      ignore_failure: true
  - set:
      field: event.module
      value: websphere_application_server
      ignore_empty_value: true
      ignore_failure: true
  - set:
      field: event.type
      value: info
      ignore_empty_value: true
      ignore_failure: true
  - rename:
      field: prometheus.labels.appname
      target_field: websphere_application_server.session_manager.app_name
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.labels.instance
      target_field: server.address
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.was_session_activateNonExistSession_total
      target_field: websphere_application_server.session_manager.activated_non_existent_sessions
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_active_sessions
      target_field: websphere_application_server.session_manager.sessions.active
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_affinityBreak_total
      target_field: websphere_application_server.session_manager.affinity_breaks
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_cacheDiscard_total
      target_field: websphere_application_server.session_manager.cache_discarded
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_create_total
      target_field: websphere_application_server.session_manager.sessions.created
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_live_sessions
      target_field: websphere_application_server.session_manager.sessions.current
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_externalRead_bytes_total
      target_field: websphere_application_server.session_manager.external.bytes.read
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_externalRead_seconds_total
      target_field: websphere_application_server.session_manager.external.time_seconds.read
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_externalWrite_bytes_total
      target_field: websphere_application_server.session_manager.external.bytes.written
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_externalWrite_seconds_total
      target_field: websphere_application_server.session_manager.external.time_seconds.written
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_invalidated_total
      target_field: websphere_application_server.session_manager.sessions.invalidated.total
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_session_invalidatedByTimeout_total
      target_field: websphere_application_server.session_manager.sessions.invalidated.by_timeouts
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.was_session_noRoomForNewSession_total
      target_field: websphere_application_server.session_manager.no_room_for_new_sessions
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.was_session_externalRead_total
      target_field: websphere_application_server.session_manager.persistent_stores.data_read
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.was_session_externalWrite_total
      target_field: websphere_application_server.session_manager.persistent_stores.data_written
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.was_session_life_time_seconds_total
      target_field: websphere_application_server.session_manager.sessions.life_time
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.metrics.was_session_timeSinceLastActivated_seconds_total
      target_field: websphere_application_server.session_manager.time_since_session_last_activated
      ignore_missing: true
      ignore_failure: true                                               
  - script:
      description: Add job to tag list.
      lang: painless
      ignore_failure: true
      source: |
        if (ctx.tags == null) {
          ctx.tags = new ArrayList();
        }
        ctx.tags.add(ctx.prometheus.labels.job)
  - remove:
      field: prometheus
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively
      lang: painless
      ignore_failure: true
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
