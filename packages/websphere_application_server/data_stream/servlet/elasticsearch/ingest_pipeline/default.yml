---
description: Pipeline for parsing Servlet metrics
processors:
  - set:
      field: ecs.version
      value: '8.2.0'
  - rename: 
      field: prometheus.metrics.was_servlet_requests_total
      target_field: websphere_application_server.servlet.requests.processed
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_response_time_seconds_total
      target_field: websphere_application_server.servlet.response_time_seconds
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_responses_total
      target_field: websphere_application_server.servlet.responses.processed
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_loaded_total
      target_field: websphere_application_server.servlet.loaded
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_reload_total
      target_field: websphere_application_server.servlet.reloaded
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_errors_total
      target_field: websphere_application_server.servlet.errors
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_concurrent_requests
      target_field: websphere_application_server.servlet.requests.concurrent
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_asyncContext_response_time_seconds_total
      target_field: websphere_application_server.servlet.async_context.response_time_seconds
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_asyncContext_responses_total
      target_field: websphere_application_server.servlet.async_context.responses.total
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_uri_requests_total
      target_field: websphere_application_server.servlet.uri.requests.total
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_uri_concurrent_requests
      target_field: websphere_application_server.servlet.uri.requests.concurrent
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_uri_response_time_seconds_total
      target_field: websphere_application_server.servlet.uri.response_time_seconds
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_uri_responses_total
      target_field: websphere_application_server.servlet.uri.responses.total
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_uri_asyncContext_response_time_seconds_total
      target_field: websphere_application_server.servlet.uri.async_context.response_time_seconds
      ignore_missing: true
      ignore_failure: true
  - rename: 
      field: prometheus.metrics.was_servlet_uri_asyncContext_responses_total
      target_field: websphere_application_server.servlet.uri.async_context.responses.total
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.labels.appname
      target_field: websphere_application_server.servlet.app_name
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.labels.uri
      target_field: url.path
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: prometheus.labels.instance
      target_field: server.address
      ignore_missing: true
      ignore_failure: true
  - set:
      field: event.category
      value: web
      ignore_empty_value: true
      ignore_failure: true
  - set:
      field: event.kind
      value: metric
      ignore_empty_value: true
      ignore_failure: true
  - set:
      field: event.module
      value: websphere_application_server
      ignore_empty_value: true
      ignore_failure: true
  - set:
      field: event.type
      value: info
      ignore_empty_value: true
      ignore_failure: true
  - script:
      description: Add job to tag list.
      lang: painless
      ignore_failure: true
      source: |
        if (ctx.tags == null) {
            ctx.tags = new ArrayList();
        }
        ctx.tags.add(ctx.prometheus.labels.job)
  - remove:
      field: prometheus
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively
      lang: painless
      ignore_failure: true
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
