---
description: Pipeline to process gitlab_ce production logs
processors:
- set:
    field: ecs.version
    tag: set_ecs_version
    value: 8.11.0
- rename:
    field: message
    target_field: event.original
    tag: rename_message
    ignore_missing: true
    if: ctx.event?.original == null
- remove:
    field: message
    ignore_missing: true
    tag: remove_message
    if: ctx.event?.original != null
- json:
    field: event.original
    tag: json_original
    target_field: gitlab_ce.production
- rename:
    field: gitlab_ce.production.method
    target_field: http.request.method
    ignore_missing: true
- rename:
    field: gitlab_ce.production.path
    target_field: url.path
    ignore_missing: true
- rename:
    field: gitlab_ce.production.action
    target_field: event.action
    ignore_missing: true
- rename:
    field: gitlab_ce.production.status
    target_field: http.response.status_code
    ignore_missing: true
- date:
    field: gitlab_ce.production.time
    target_field: "@timestamp"
    formats:
    - yyyy-MM-dd'T'HH:mm:ss.SSSX
    if: ctx.gitlab_ce.production.time != null
- rename:
    field: gitlab_ce.production.pid
    target_field: process.pid
    ignore_missing: true
- rename:
    field: gitlab_ce.production.worker_id
    target_field: process.name
    ignore_missing: true
- rename:
    field: gitlab_ce.production.correlation_id
    target_field: event.id
    ignore_missing: true
- rename:
    field: gitlab_ce.production.duration_s
    target_field: event.duration
    ignore_missing: true
- script:
    description: Convert event.duration from seconds to nanoseconds.
    if: ctx.event?.duration != null
    lang: painless
    source:
      ctx.event['duration'] = ctx.event.duration * 1e9;
- rename:
    field: gitlab_ce.production.meta.remote_ip
    target_field: source.ip
    ignore_missing: true
- rename:
    field: gitlab_ce.production.user_id
    target_field: source.user.id
    ignore_missing: true
- convert:
    field: source.user.id
    type: string
    ignore_missing: true
- rename:
    field: gitlab_ce.production.username
    target_field: source.user.name
    ignore_missing: true
- rename:
    field: gitlab_ce.production.ua
    target_field: user_agent.original
    ignore_missing: true
- script:
    lang: painless
    description: Move the object `params.value` to subfield `params.value.json` to avoid conflicts with the string `params.value`.
    source: |
        List paramList = new ArrayList();
        for (param in ctx.gitlab_ce.production.params) {
            if (param.value instanceof String) {
                paramList.add(param);
            } else {
                Map objParam = new HashMap();
                objParam.put("key",param.key);
                objParam.put("value_json",param.value);
                paramList.add(objParam);
            }
        }
        ctx.gitlab_ce.production.params = paramList;
- geoip:
    field: source.ip
    tag: geoip_source_ip
    target_field: source.geo
    ignore_missing: true
- geoip:
    ignore_missing: true
    database_file: GeoLite2-ASN.mmdb
    field: source.ip
    tag: geoip_source_asn
    target_field: source.as
    properties:
    - asn
    - organization_name
- rename:
    field: source.as.asn
    tag: rename_source_as_asn
    target_field: source.as.number
    ignore_missing: true
- rename:
    field: source.as.organization_name
    tag: rename_source_as_organization_name
    target_field: source.as.organization.name
    ignore_missing: true
- geoip:
    field: destination.ip
    tag: geoip_destination_ip
    target_field: destination.geo
    ignore_missing: true
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: destination.ip
    tag: geoip_destination_asn
    target_field: destination.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- rename:
    field: destination.as.asn
    tag: rename_destination_as_asn
    target_field: destination.as.number
    ignore_missing: true
- rename:
    field: destination.as.organization_name
    tag: rename_destination_as_organization_name
    target_field: destination.as.organization.name
    ignore_missing: true
- append:
    field: event.type
    value:
    - info
    allow_duplicates: false
- append:
    field: event.category
    value:
    - database
    allow_duplicates: false
    if: ctx.url?.path == '/-/metrics'
- append:
    field: event.category
    value:
    - database
    allow_duplicates: false
    if: ctx.url?.path == '/dashboard/activity'
- append:
    field: event.category
    value:
    - database
    allow_duplicates: false
    if: ctx.url?.path == '/api/graphql'
- append:
    field: event.category
    value:
    - web
    allow_duplicates: false
    if: ctx.url?.path == '/-/manifest.json'
- append:
    field: event.category
    value:
    - authentication
    allow_duplicates: false
    if: ctx.url?.path == '/users/sign_in'
- append:
    field: event.category
    value:
    - web
    allow_duplicates: false
    if: ctx.url?.path == '/search/opensearch.xml'
- append:
    field: event.category
    value:
    - database
    allow_duplicates: false
    if: ctx.url?.path == '/dashboard/groups'
- remove:
    field: event.original
    tag: remove_original_event
    if: ctx?.tags == null || !(ctx.tags.contains("preserve_original_event"))
    ignore_failure: true
    ignore_missing: true
- script:
    description: Drops null/empty values recursively.
    tag: script_drop_null_empty_values
    lang: painless
    source: "boolean dropEmptyFields(Object object) {\n  if (object == null || object\
      \ == \"\") {\n    return true;\n  } else if (object instanceof Map) {\n    ((Map)\
      \ object).values().removeIf(value -> dropEmptyFields(value));\n    return (((Map)\
      \ object).size() == 0);\n  } else if (object instanceof List) {\n    ((List)\
      \ object).removeIf(value -> dropEmptyFields(value));\n    return (((List) object).length\
      \ == 0);\n  }\n  return false;\n}\ndropEmptyFields(ctx);\n"
on_failure:
- append:
    field: error.message
    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}}
      in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
- set:
    field: event.kind
    value: pipeline_error
