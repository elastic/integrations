---
description: Pipeline to process gitlab_ce api logs
processors:
- set:
    field: ecs.version
    tag: set_ecs_version
    value: 8.11.0
- rename:
    field: message
    target_field: event.original
    tag: rename_message
    ignore_missing: true
    if: ctx.event?.original == null
- remove:
    field: message
    ignore_missing: true
    tag: remove_message
    if: ctx.event?.original != null
- json:
    field: event.original
    tag: json_original
    target_field: gitlab_ce.api
- date:
    field: gitlab_ce.api.time
    target_field: '@timestamp'
    formats:
    - ISO8601
    ignore_failure: true
- rename:
    field: gitlab_ce.api.severity
    target_field: log.level
    ignore_missing: true
- script:
    lang: painless
    source: if (ctx.gitlab_ce.api.duration_s != null) { ctx.event.duration = ctx.gitlab_ce.api.duration_s
      * 1000000; }
    ignore_failure: true
- rename:
    field: gitlab_ce.api.status
    target_field: http.response.status_code
    ignore_missing: true
- rename:
    field: gitlab_ce.api.method
    target_field: http.request.method
    ignore_missing: true
- rename:
    field: gitlab_ce.api.path
    target_field: url.path
    ignore_missing: true
- rename:
    field: gitlab_ce.api.host
    target_field: url.domain
    ignore_missing: true
- rename:
    field: gitlab_ce.api.remote_ip
    target_field: client.address
    ignore_missing: true
- rename:
    field: gitlab_ce.api.ua
    target_field: user_agent.original
    ignore_missing: true
- rename:
    field: gitlab_ce.api.pid
    target_field: process.pid
    ignore_missing: true
- rename:
    field: gitlab_ce.api.user_id
    target_field: user.id
    ignore_missing: true
- rename:
    field: gitlab_ce.api.username
    target_field: user.name
    ignore_missing: true
- geoip:
    field: client.address
    tag: geoip_client_address
    target_field: client.geo
    ignore_missing: true
- geoip:
    ignore_missing: true
    database_file: GeoLite2-ASN.mmdb
    field: client.address
    tag: geoip_client_asn
    target_field: client.as
    properties:
    - asn
    - organization_name
- rename:
    field: client.as.asn
    tag: rename_client_as_asn
    target_field: client.as.number
    ignore_missing: true
- rename:
    field: client.as.organization_name
    tag: rename_client_as_organization_name
    target_field: client.as.organization.name
    ignore_missing: true
- script:
    description: Drops null/empty values recursively.
    tag: script_drop_null_empty_values
    lang: painless
    source: "boolean dropEmptyFields(Object object) {\n  if (object == null || object\
      \ == \"\") {\n    return true;\n  } else if (object instanceof Map) {\n    ((Map)\
      \ object).values().removeIf(value -> dropEmptyFields(value));\n    return (((Map)\
      \ object).size() == 0);\n  } else if (object instanceof List) {\n    ((List)\
      \ object).removeIf(value -> dropEmptyFields(value));\n    return (((List) object).length\
      \ == 0);\n  }\n  return false;\n}\ndropEmptyFields(ctx);\n"
- append:
    field: event.category
    value:
    - api
    allow_duplicates: false
- append:
    field: event.type
    value:
    - info
    allow_duplicates: false
- append:
    field: event.category
    value:
    - database
    allow_duplicates: false
    if: ctx.gitlab_ce?.api?.db_count != null && ctx.gitlab_ce?.api?.db_count > 0
- append:
    field: event.category
    value:
    - web
    allow_duplicates: false
    if: ctx.http?.response?.status_code != null
- append:
    field: event.type
    value:
    - access
    allow_duplicates: false
    if: ctx.http?.response?.status_code != null && ctx.http.response.status_code >=
      200 && ctx.http.response.status_code <= 299
- append:
    field: event.type
    value:
    - error
    allow_duplicates: false
    if: ctx.http?.response?.status_code != null && (ctx.http.response.status_code
      < 200 || ctx.http.response.status_code >= 400)
- append:
    field: event.category
    value:
    - iam
    allow_duplicates: false
    if: ctx.user?.name != null
- append:
    field: event.type
    value:
    - user
    allow_duplicates: false
    if: ctx.user?.name != null
- append:
    field: event.category
    value:
    - configuration
    allow_duplicates: false
    if: ctx.gitlab_ce?.api?.meta?.feature_category != null
- append:
    field: event.kind
    value:
    - pipeline_error
    allow_duplicates: false
    if: ctx.error?.message != null
- remove:
    field: event.original
    tag: remove_original_event
    if: ctx?.tags == null || !(ctx.tags.contains("preserve_original_event"))
    ignore_failure: true
    ignore_missing: true
on_failure:
- append:
    field: error.message
    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}}
      in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
- set:
    field: event.kind
    value: pipeline_error
