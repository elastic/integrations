---
description: Pipeline for Cisco Meraki security_event type
processors:
- dissect:
    description: Determine the security event type
    field: event.original
    pattern: "%{} security_event %{type} %{}"
- rename:
    field: type
    target_field: cisco_meraki.event_subtype

# scan event based on event type
- grok:
    field: event.original
    patterns:
      - ^%{DATA} (security_event|ids-alerts) (%{WORD}\s)?%{DATA:_temp.kvs}(\smessage:\s?%{DATA:message})?$
- kv:
    field: _temp.kvs
    field_split: " "
    value_split: "="
    trim_value: " '\""

# handle fields of ids_alerted type
- rename:
    field: priority
    target_field: cisco_meraki.security.priority
    ignore_missing: true
- rename:
    field: signature
    target_field: cisco_meraki.security.signature
    ignore_missing: true
- date:
    field: timestamp
    target_field: threat.indicator.last_seen
    formats: ['UNIX']
    if: ctx.timestamp != null
- gsub:
    field: dhost
    target_field: cisco_meraki.security.dhost
    pattern: '[-:.]'
    replacement: '-'
    ignore_missing: true
- rename:
    field: direction
    target_field: network.direction
    ignore_missing: true
- lowercase:
    field: protocol
    target_field: network.protocol
    ignore_missing: true
- rename:
    field: message
    target_field: threat.indicator.description
    ignore_missing: true
    if: ctx?.cisco_meraki?.event_subtype == 'ids_alerted'
- rename:
    field: decision
    target_field: cisco_meraki.security.decision
    ignore_missing: true

# handle fields of security_filtering_file_scanned or security_filtering_disposition_change type
- rename:
    field: url
    target_field: threat.indicator.reference
    ignore_missing: true
- gsub:
    field: mac
    target_field: cisco_meraki.security.mac
    pattern: '[-:.]'
    replacement: '-'
    ignore_missing: true
- rename:
    field: name
    target_field: threat.indicator.file.name
    ignore_missing: true
- rename:
    field: sha256
    target_field: threat.indicator.file.hash.sha256
    ignore_missing: true
- rename:
    field: disposition
    target_field: cisco_meraki.disposition
    ignore_missing: true
- rename:
    field: action
    target_field: cisco_meraki.security.action
    ignore_missing: true
# fields common to more than one event type
# src processing
- grok:
    field: src
    patterns:
      - "^%{IPV4:_temp.src_ip}:%{PORT:sport}$"
      - "^\\[%{IPV6:_temp.src_ip}\\]:%{PORT:sport}$"
      - "^%{IPV6NOCOMPRESS:_temp.src_ip}:%{PORT:sport}$"
      - "^%{IPV6:_temp.src_ip}%{IPV6PORTSEP}%{PORT:sport}$"
    pattern_definitions:
      IPV6NOCOMPRESS: '([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}'
      IPV6PORTSEP: '(?: port |[p#.])'
      PORT: '[0-9]+'
    if: ctx?.cisco_meraki?.event_subtype != 'security_filtering_disposition_change' && ctx?.src != null
- convert:
    type: ip
    field: _temp.src_ip
    target_field: source.ip
    ignore_missing: true
- convert:
    field: sport
    target_field: source.port
    type: long
    ignore_missing: true
    ignore_failure: true
    if: ctx?.sport != "0"
# dst processing
- grok:
    field: dst
    patterns:
      - "^%{IPV4:_temp.dst_ip}:%{PORT:dport}$"
      - "^\\[%{IPV6:_temp.dst_ip}\\]:%{PORT:dport}$"
      - "^%{IPV6NOCOMPRESS:_temp.dst_ip}:%{PORT:dport}$"
      - "^%{IPV6:_temp.dst_ip}%{IPV6PORTSEP}%{PORT:dport}$"
    pattern_definitions:
      IPV6NOCOMPRESS: '([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}'
      IPV6PORTSEP: '(?: port |[p#.])'
      PORT: '[0-9]+'
    if: ctx?.cisco_meraki?.event_subtype != 'security_filtering_disposition_change' && ctx?.dst != null
- convert:
    type: ip
    field: _temp.dst_ip
    target_field: destination.ip
    ignore_failure: true
    ignore_missing: true
- convert:
    field: dport
    target_field: destination.port
    type: long
    if: ctx?.dport != "0" && ctx?.cisco_meraki?.event_subtype != 'security_filtering_disposition_change'
    ignore_failure: true
    ignore_missing: true
on_failure:
- set:
    field: event.kind
    value: pipeline_error
- append:
    field: error.message
    value: '{{{ _ingest.on_failure_message }}}'
