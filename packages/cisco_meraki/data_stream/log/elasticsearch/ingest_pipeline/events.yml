---
description: Pipeline for Cisco Meraki events type
processors:
- dissect:
    description: Check if this is Site-to-Site VPN events
    field: event.original
    pattern: "%{} events %{sts} %{}"
- set:
    field: cisco_meraki.event_subtype
    value: 'Site-to-Site VPN'
    if: ctx?.sts.toLowerCase() == "site-to-site"
- dissect:
    description: Get the event subtype
    field: event.original
    pattern: "%{} events type=%{type} %{}"
    if: ctx?.sts.startsWith("type=")
- rename:
    field: type
    target_field: cisco_meraki.event_subtype
    if: ctx?.type != null
- grok:
    description: Process Site-to-Site VPN messages
    field: event.original
    patterns:
      - '%{SYSLOGHDR}%{SPACE}%{NUMBER}%{SPACE}%{WORD}%{SPACE}events%{SPACE}(?i)Site-to-Site VPN:%{GREEDYDATA:cisco_meraki.site_to_site_vpn.raw}'
    pattern_definitions:
      SYSLOGPRI: '<%{NONNEGINT:log.syslog.priority:long}>'
      SYSLOGVER: '\b(?:\d{1,2})\b'
      SYSLOGHDR: '%{SYSLOGPRI}%{SYSLOGVER}'
    if: ctx.event.original.startsWith('<') && ctx?.cisco_meraki?.event_subtype == "Site-to-Site VPN"
- set:
    field: cisco_meraki.device_type
    value: MX
    if: ctx?.cisco_meraki?.event_subtype == "Site-to-Site VPN" || ctx?.cisco_meraki?.event_subtype == "vpn_connectivity_change"
- set:
    field: cisco_meraki.device_type
    value: MR
    if: ctx?.cisco_meraki?.event_subtype == 'dfs_event' || ctx?.cisco_meraki?.event_subtype == 'association' || ctx?.cisco_meraki?.event_subtype == 'disassociation' || ctx?.cisco_meraki?.event_subtype == 'wpa_deauth' || ctx?.cisco_meraki?.event_subtype == 'wpa_auth'

# Process dfs_event, wpa_auth, wpa_deauth, association or disassociation
- grok:
    field: event.original
    patterns: 
      - '%{SYSLOGHDR}%{SPACE}%{NUMBER}%{SPACE}%{WORD}%{SPACE}events%{SPACE}%{GREEDYDATA:_temp.rest}'
    pattern_definitions:
      SYSLOGPRI: '<%{NONNEGINT:log.syslog.priority:long}>'
      SYSLOGVER: '\b(?:\d{1,2})\b'
      SYSLOGHDR: '%{SYSLOGPRI}%{SYSLOGVER}'
    if: ctx.event.original.startsWith('<') && (ctx?.cisco_meraki?.event_subtype == 'dfs_event' || ctx?.cisco_meraki?.event_subtype == 'association' || ctx?.cisco_meraki?.event_subtype == 'disassociation' || ctx?.cisco_meraki?.event_subtype == 'wpa_deauth' || ctx?.cisco_meraki?.event_subtype == 'wpa_auth' || ctx?.cisco_meraki?.event_subtype == 'vpn_connectivity_change')
- kv:
    field: _temp.rest
    field_split: " "
    value_split: "="
    target_field: cisco_meraki.association
    strip_brackets: true
    if: ctx?.cisco_meraki?.event_subtype == 'association'
- kv:
    field: _temp.rest
    field_split: " "
    value_split: "="
    target_field: cisco_meraki.disassociation
    strip_brackets: true
    if: ctx?.cisco_meraki?.event_subtype == 'disassociation'
- kv:
    field: _temp.rest
    field_split: " "
    value_split: "="
    target_field: cisco_meraki.dfs_event
    strip_brackets: true
    if: ctx?.cisco_meraki?.event_subtype == 'dfs_event'
- kv:
    field: _temp.rest
    field_split: " "
    value_split: "="
    target_field: cisco_meraki.wpa_auth
    strip_brackets: true
    if: ctx?.cisco_meraki?.event_subtype == 'wpa_auth'
- kv:
    field: _temp.rest
    field_split: " "
    value_split: "="
    target_field: cisco_meraki.wpa_deauth
    strip_brackets: true
    if: ctx?.cisco_meraki?.event_subtype == 'wpa_deauth'
- kv:
    field: _temp.rest
    field_split: " "
    value_split: "="
    target_field: cisco_meraki.site_to_site_vpn.connectivity_change
    strip_brackets: true
    if: ctx?.cisco_meraki?.event_subtype == 'vpn_connectivity_change'
