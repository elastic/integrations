---
description: Pipeline for Cisco Meraki ip_flow_start and ip_flow_end message type
processors:
- dissect:
    description: Determine if the token is src= or operation
    field: event.original
    pattern: "%{} %{} %{} %{_temp.event_type} %{_temp.event}"
- kv:
    field: _temp.event
    field_split: ' '
    value_split: '='
    if: ctx._temp?.event != null
    tag: kv_ip_flow_fields
# source field IP:port handling
- convert:
    type: ip
    field: translated_src_ip
    target_field: source.ip
    if: ctx?.translated_src_ip != null
- convert:
    type: ip
    field: src
    target_field: source.ip
    if: ctx?.translated_src_ip == null && ctx?.src != null
- convert:
    field: translated_port
    target_field: source.port
    type: long
    if: ctx?.translated_src_ip != null && ctx?.translated_port != null
- convert:
    field: sport
    target_field: source.port
    type: long
    if: ctx?.translated_src_ip == null && ctx?.sport != null
# destination field IP:port handling
- convert:
    type: ip
    field: translated_dst_ip
    target_field: destination.ip
    if: ctx?.translated_dst_ip != null
- convert:
    type: ip
    field: dst
    target_field: destination.ip
    if: ctx?.translated_dst_ip == null && ctx?.dst != null
- convert:
    field: translated_port
    target_field: destination.port
    type: long
    if: ctx?.translated_dst_ip != null && ctx?.translated_port != null
- convert:
    field: dport
    target_field: destination.port
    type: long
    if: ctx?.translated_dst_ip == null && ctx?.dport != null
- rename:
    field: protocol
    target_field: network.protocol
on_failure:
- set:
    field: event.kind
    value: pipeline_error
- append:
    field: error.message
    value: '{{{ _ingest.on_failure_message }}}'
