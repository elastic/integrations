---
description: Pipeline for processing event category logs.
processors:
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_firewall_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['3000-0004','3000-0005','3000-002F','3000-00C9','3000-00CB','3000-012C','3000-0174','3001-1001','3001-1002'].contains(ctx.watchguard_firebox.log.msg_id)
      patterns:
        - '^No valid %{DATA:watchguard_firebox.log.feature_name} feature$'
        - '^Feature key does not support the feature %{GREEDYDATA:watchguard_firebox.log.feature_name}.$'
        - '^%{DATA:watchguard_firebox.log.probe_method} %{DATA:watchguard_firebox.log.reason}, Load Balance Server %{IP:watchguard_firebox.log.ip_address} port %{NUMBER:watchguard_firebox.log.port:long} is %{WORD:watchguard_firebox.log.status}.$'
        - '^%{DATA:watchguard_firebox.log.probe_method} %{DATA:watchguard_firebox.log.reason}, Load Balance Server %{IP:watchguard_firebox.log.ip_address} is %{WORD:watchguard_firebox.log.status}.$'
        - '^ARP spoofing attack detected, ip=%{IP:watchguard_firebox.log.ip_address}, mac=%{MAC:watchguard_firebox.log.mac_address}, interface=%{DATA:watchguard_firebox.log.interface_id}$'
        - '^SD-WAN action %{WORD:watchguard_firebox.log.action_name} %{DATA:watchguard_firebox.log.update} from interface %{DATA:watchguard_firebox.log.previous_interface} to %{DATA:watchguard_firebox.log.new_interface}.$'
        - '^Temporarily blocking host %{IP:watchguard_firebox.log.ip_address} \(reason = %{DATA:watchguard_firebox.log.reason}\)$'
        - '^The Temporary Blocked Sites list is full \(capacity=%{NUMBER:watchguard_firebox.log.blocked_site_limit:long}\). The oldest entry %{IP:watchguard_firebox.log.ip_address} was removed.$'
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_proxy_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['0F00-0001', '0F01-0015', '0F01-0016', '1B04-00CE', '1C02-00CD', '1F00-0001', '1F01-0015', '2300-0001', '2300-0002', '2E00-0005', '2E00-0006', '2E01-0017', '2E01-0018', '2E01-0019', '2E01-001A', '2E01-001B', '2E02-0065', '2E02-0066', '2E02-0067', '2E02-0069'].contains(ctx.watchguard_firebox.log.msg_id)
      patterns:
        - "^APT threat notified. Details='Policy Name: %{DATA:watchguard_firebox.log.policy_name} Reason: %{DATA:watchguard_firebox.log.reason} Task_UUID: %{DATA:watchguard_firebox.log.task_uuid} Source IP: %{IP:watchguard_firebox.log.source_ip} Source Port: %{NUMBER:watchguard_firebox.log.source_port:long} Destination IP: %{IP:watchguard_firebox.log.destination_ip} Destination Port: %{NUMBER:watchguard_firebox.log.destination_port:long} Proxy Type: %{WORD:watchguard_firebox.log.proxy_type} Proxy Host: %{DATA:watchguard_firebox.log.proxy_host} Path: %{DATA:watchguard_firebox.log.path}'$"
        - "^APT safe result from file submission. Details='Policy Name: %{NOTSPACE:watchguard_firebox.log.policy_name} Reason: %{DATA:watchguard_firebox.log.reason} Message: %{DATA:watchguard_firebox.log.message} Task_UUID: %{DATA:watchguard_firebox.log.task_uuid} MD5: %{DATA:watchguard_firebox.log.md5} Source IP: %{IP:watchguard_firebox.log.source_ip} Source Port: %{NUMBER:watchguard_firebox.log.source_port:long} Destination IP: %{IP:watchguard_firebox.log.destination_ip} Destination Port: %{NUMBER:watchguard_firebox.log.destination_port:long} Proxy Type: %{WORD:watchguard_firebox.log.proxy_type} Proxy Host: %{DATA:watchguard_firebox.log.proxy_host} Path: %{DATA:watchguard_firebox.log.path}'$"
        - "^Ruleset '%{DATA:watchguard_firebox.log.ruleset_name}' lookup failed$"
        - "^Cannot get the rule from ruleset '%{DATA:watchguard_firebox.log.ruleset_name}'$"
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_network_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['0900-0004', '0900-0005', '0900-0008', '0900-0009', '0900-000A', '1600-0001', '1600-0002', '1600-0003', '1600-0004', '3100-0009', '3100-000A', '3100-000B', '3100-000D', '3100-0010', '3100-0029', '3100-002B', '3100-002C', '3100-0039', '3100-003A', '3100-003B', '3100-003E', '3100-003F', '3100-0046', '3100-0047', '3100-0052', '3100-0054', '3100-0055', '3100-0056', '3100-0069', '3100-006A', '3100-006C', '3100-006D', '3100-0071', '3100-0072', '3100-0073', '3100-0074', '4500-0003', '4500-0004', '4900-0001', '4900-0002', '4900-0003', '4900-0004', '6800-0001', '6800-0002', '6800-0003'].contains(ctx.watchguard_firebox.log.msg_id)
      pattern_definitions:
        interface_name: '\[%{DATA:watchguard_firebox.log.dev_name} \(%{DATA:watchguard_firebox.log.interface_name}\)\]'
      patterns:
        - '^%{interface_name} Enforced PPPoE static IP address: %{IP:watchguard_firebox.log.negotiation_ip} is replaced with %{IP:watchguard_firebox.log.static_ip}$'
        - '^%{interface_name} PPPoE IP address changed during cluster failover, from %{IP:watchguard_firebox.log.previous_ip} to %{IP:watchguard_firebox.log.new_ip}$'
        - '^%{interface_name} PPPoE IP address %{IP:watchguard_firebox.log.ip_address} did not change during cluster failover$'
        - '^%{interface_name} DHCP IP address changed during cluster failover, from %{IP:watchguard_firebox.log.previous_ip} to %{IP:watchguard_firebox.log.new_ip}$'
        - '^%{interface_name} DHCP IP address %{IP:watchguard_firebox.log.ip_address} did not change during cluster failover$'
        - '^\[%{DATA:watchguard_firebox.log.physical_name} \(%{DATA:watchguard_firebox.log.interface_name}\)\] PPPoE session\[%{NUMBER:watchguard_firebox.log.session_id}\] is established, acquired IP address %{IP:watchguard_firebox.log.ip_address}, peer %{IP:watchguard_firebox.log.peer_address}$'
        - '^\[Link Monitor\] No response received on %{DATA:watchguard_firebox.log.interface_name} from %{DATA:watchguard_firebox.log.target}$'
        - '^%{DATA:watchguard_firebox.log.scan_type} scan completed$'
        - '^%{DATA:watchguard_firebox.log.scan_type} scan - %{GREEDYDATA:watchguard_firebox.log.scan_stage} started$'
        - '^\[%{DATA:watchguard_firebox.log.physical_name} \(%{DATA:watchguard_firebox.log.interface_name}\)\] PPPoE session\[%{NUMBER:watchguard_firebox.log.session_id}\] is established, acquired IP address %{IP:watchguard_firebox.log.ip_address}, peer %{IP:watchguard_firebox.log.peer_address}$'
        - '^\[Cluster\] Management interface setting is changed: interface from %{DATA:watchguard_firebox.log.previous_interface} to %{DATA:watchguard_firebox.log.new_interface}, IPv4 address from %{IP:watchguard_firebox.log.previous_ip} to %{IP:watchguard_firebox.log.new_ip}, IPv4 mask from %{NUMBER:watchguard_firebox.log.previous_mask:long} to %{NUMBER:watchguard_firebox.log.new_mask:long}, IPv6 CIDR from %{DATA:watchguard_firebox.log.previous_ipv6} to %{GREEDYDATA:watchguard_firebox.log.new_ipv6}$'
        - '^Failed to add bridge %{GREEDYDATA} VLAN ID %{NUMBER:watchguard_firebox.log.vlan_id:long}$'
        - '^%{interface_name} %{GREEDYDATA}$'
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_firecluster_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['3A00-000E', '3A00-000F', '3800-0278', '3800-0279', '3800-0280', '3800-0282', '3800-025A', '3800-025B', '3800-027A', '3800-027E', '3900-0003', '3900-0005', '3900-0007', '3900-0010', '3900-0011', '3900-0012', '3900-0015', '3900-0016', '3900-0019', '3900-0058', '3900-000C', '3900-000D', '3900-000E', '3900-000F'].contains(ctx.watchguard_firebox.log.msg_id)
      patterns:
        - '^Virtual Router with cluster ID %{WORD:watchguard_firebox.log.cluster_id} %{GREEDYDATA}$'
        - '^Cluster disabled. Nonmaster member %{DATA:watchguard_firebox.log.member_id} will be reset to factory-default settings.$'
        - '^Non-master member %{DATA:watchguard_firebox.log.member_id} will be reset to factory-default settings due to a critical cluster configuration change.$'
        - '^Cluster master %{DATA:watchguard_firebox.log.master_id} was unable to issue a device discovery message.$'
        - '^Member %{DATA:watchguard_firebox.log.member_id} is ready to join the cluster.$'
        - '^Cluster enabled on member %{DATA:watchguard_firebox.log.member_id}.$'
        - '^Cluster disabled on cluster master %{WORD:watchguard_firebox.log.master_id}.$'
        - '^Non-master cluster member %{DATA:watchguard_firebox.log.member_id} was removed from cluster, and will be reset to factory-default settings.$'
        - '^Failed to reset cluster member %{DATA:watchguard_firebox.log.member_id} to factory-default settings.$'
        - '^Master %{DATA:watchguard_firebox.log.master_id} detected loss of heartbeat from member %{DATA:watchguard_firebox.log.member_id}, cluster channel is up.$'
        - '^Member %{DATA:watchguard_firebox.log.member_id} is now master.$'
        - '^Master %{DATA:watchguard_firebox.log.master_id} failed over to member %{WORD:watchguard_firebox.log.member_id}, which has a greater Weighted Average Index.$'
        - '^Member %{DATA:watchguard_firebox.log.member_id} changed role to %{DATA:watchguard_firebox.log.role}$'
        - '^Monitored interface %{DATA:watchguard_firebox.log.interface_name} link is %{WORD:watchguard_firebox.log.link_state}.$'
        - '^Member %{DATA:watchguard_firebox.log.member_id} took over as master from member %{DATA:watchguard_firebox.log.member_id}.$'
        - '^Master %{DATA:watchguard_firebox.log.master_id} initiated failover by administrator request.$'
        - '^Cannot initiate failover from master %{DATA:watchguard_firebox.log.master_id} to member %{DATA:watchguard_firebox.log.member_id} due to higher Weighted Average Index on current master or backup master is unreachable.$'
        - '^Cluster failover due to interface %{DATA:watchguard_firebox.log.interface_name} link %{WORD:watchguard_firebox.log.link_state} event.$'
        - '^Cluster member %{DATA:watchguard_firebox.log.member_id} changed role from %{DATA:watchguard_firebox.log.role} to %{DATA:watchguard_firebox.log.updated_role}$'
        - '^Full state synchronization from master %{DATA:watchguard_firebox.log.master_id} to backup master %{DATA:watchguard_firebox.log.member_id} failed.$'
        - '^Full state synchronization from master %{DATA:watchguard_firebox.log.master_id} to backup master %{DATA:watchguard_firebox.log.member_id} timed out.$'
        - '^Full state synchronization from master %{DATA:watchguard_firebox.log.master_id} to backup master %{DATA:watchguard_firebox.log.member_id} completed successfully.$'
        - '^Master %{DATA:watchguard_firebox.log.master_id} failed-over to member %{DATA:watchguard_firebox.log.member_id} due to a link-down event on interface %{DATA:watchguard_firebox.log.interface_name}.$'
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_management_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['0101-0001', '0101-0002', '0102-0001', '0102-0002', '0102-0003', '0102-0005', '0104-0001', '0105-0001', '1100-0003', '1100-0004', '1100-0005', '1100-0006', '1100-0007', '1100-0008', '1100-000C', '1100-000D', '1100-000E', '1100-000F', '1100-0010', '1100-0011', '1100-0012', '1100-0013', '1100-0014', '1100-0015', '1500-0000', '1500-0001', '1501-0000', '1501-0001', '3D04-0001', '3D04-0002', '3D04-0003', '3E00-0002', '3E00-0003', '3E00-0004', '3E00-0005', '4001-0001', '4001-0002', '4001-0003', '4001-0004', '4001-0005', '4001-0006', '4100-0001', '4100-0002', '4100-0003', '4100-0004', '4100-0005', '4100-0006', '4100-0007', '4100-0008', '4101-0001', '4101-0002', '5000-0001', '5501-0000', '5501-0002', '5501-0003', '5501-0004', '5501-0005', '5501-0006', '5501-0007', '5501-0008', '5501-000B', '5501-0013', '5501-0016', '5501-0019', '5501-001A', '5501-001D', '5501-0020', '5501-0021', '5501-0022', '5501-0023', '5501-0024', '5501-0025', '5501-0026'].contains(ctx.watchguard_firebox.log.msg_id)
      patterns:
        - "^%{DATA:watchguard_firebox.log.user_name} added feature key '%{DATA:watchguard_firebox.log.feature_key}'$"
        - "^%{DATA:watchguard_firebox.log.user_name} removed feature key '%{DATA:watchguard_firebox.log.feature_key}'$"
        - '^Moved %{DATA:watchguard_firebox.log.policy_name} from position %{NUMBER:watchguard_firebox.log.old_policy_position:long} to %{NUMBER:watchguard_firebox.log.new_policy_position}$'
        - '^Authentication of %{DATA:watchguard_firebox.log.user_type} user \[%{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})?\] from %{IP:watchguard_firebox.log.ip_address} was accepted$'
        - '^Authentication of %{DATA:watchguard_firebox.log.user_type} user \[%{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})?\] from %{IP:watchguard_firebox.log.ip_address} was rejected, %{GREEDYDATA:watchguard_firebox.log.reason}$'
        - '^User %{DATA:watchguard_firebox.log.user_name} is unlocked %{GREEDYDATA:watchguard_firebox.log.unlocked_by}$'
        - '^User %{DATA:watchguard_firebox.log.user_name} is locked out %{DATA:watchguard_firebox.log.lockout_type} after %{NUMBER:watchguard_firebox.log.failure_count:long} login failures$'
        - '^Authentication of BOVPN TLS client \[%{DATA:watchguard_firebox.log.client_name}\] from %{IP:watchguard_firebox.log.ip_address} was rejected, %{GREEDYDATA:watchguard_firebox.log.reason}$'
        - '^Authentication error. %{GREEDYDATA:watchguard_firebox.log.error} for %{DATA:watchguard_firebox.log.user_name}.$'
        - '^Authentication of user \[%{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})?\] failed. Both primary and secondary servers are unavailable.$'
        - '^Authentication of firewall user \[%{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})?\] failed. RADIUS authentication method MSCHAP_V1 is not supported.$'
        - '^Firebox connected to the SSO agent at %{IP:watchguard_firebox.log.ip_address} successfully.$'
        - '^Firebox failed to connect to the SSO agent at %{IP:watchguard_firebox.log.ip_address}. Reason: %{GREEDYDATA:watchguard_firebox.log.reason}.$'
        - '^Connected to the primary Log Server at %{IP:watchguard_firebox.log.ip_address}$'
        - '^Connected to the backup Log Server at %{IP:watchguard_firebox.log.ip_address}$'
        - '^%{DATA:watchguard_firebox.log.user_type} %{WORD:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})? from %{IP:watchguard_firebox.log.ip_address} logged in(?: %{IP:watchguard_firebox.log.virtual_ip} %{GREEDYDATA:watchguard_firebox.log.message})?$'
        - '^%{DATA:watchguard_firebox.log.user_type} %{WORD:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})? from %{IP:watchguard_firebox.log.ip_address} log in attempt was rejected(?: %{IP:watchguard_firebox.log.virtual_ip} %{GREEDYDATA:watchguard_firebox.log.message})?.$'
        - '^%{DATA:watchguard_firebox.log.user_type} %{WORD:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})? from %{IP:watchguard_firebox.log.ip_address} logged out(?: %{IP:watchguard_firebox.log.virtual_ip} %{GREEDYDATA:watchguard_firebox.log.message})?$'
        - '^Updated the value of %{DATA:watchguard_firebox.log.property_name} from %{NUMBER:watchguard_firebox.log.previous_system_time} %{DATA:watchguard_firebox.log.unit} to %{NUMBER:watchguard_firebox.log.new_system_time} %{DATA:watchguard_firebox.log.unit}$'
        - '^CA certificate updated successfully to version %{DATA:watchguard_firebox.log.new_ca_certificate_version}.$'
        - '^CA certificate update failed. Current CA certificate version: %{DATA:watchguard_firebox.log.current_ca_certificate_version}.$'
        - '^Certificate \(subject=%{DATA:watchguard_firebox.log.certificate_subject}\) %{GREEDYDATA}$'
        - '^RapidDeploy configuration from a USB drive was not applied: %{GREEDYDATA:watchguard_firebox.log.message}$'
        - '^RapidDeploy package was not applied: %{GREEDYDATA:watchguard_firebox.log.reason}$'
        - '^%{DATA:watchguard_firebox.log.ui_type} User status from %{IP:watchguard_firebox.log.ip_address} log in attempt was rejected - %{GREEDYDATA:watchguard_firebox.log.message}.$'
        - '^System boot up at %{GREEDYDATA:watchguard_firebox.log.bootup_time}$'
        - "^LIVESECURITY' feature expired \\(%{GREEDYDATA:watchguard_firebox.log.feature_expiration_date}\\) prior to package release date (%{GREEDYDATA:watchguard_firebox.log.package_release_time})$"
        - '^System upgrade to %{DATA:watchguard_firebox.log.software_version} successful, %{GREEDYDATA:watchguard_firebox.log.reboot_status}$'
        - '^System is automatically rebooting at %{NUMBER:watchguard_firebox.log.reboot_hour:long}:%{NUMBER:watchguard_firebox.log.reboot_second:long}$'
        - '^System time changed from %{GREEDYDATA:watchguard_firebox.log.previous_system_time} to %{GREEDYDATA:watchguard_firebox.log.new_system_time}$'
        - '^Device %{DATA:watchguard_firebox.log.restore_type} restore from %{DATA:watchguard_firebox.log.image_source} image initiated, %{GREEDYDATA:watchguard_firebox.log.reboot_option}$'
        - '^Device %{DATA:watchguard_firebox.log.restore_type} restore from %{DATA:watchguard_firebox.log.image_source} succeeded$'
        - "^LIVESECURITY' feature will expire on %{GREEDYDATA:watchguard_firebox.log.feature_expiration_date}$"
        - '^System upgrade failed: %{GREEDYDATA:watchguard_firebox.log.reason}$'
        - '^System integrity check failed. %{GREEDYDATA:watchguard_firebox.log.reason}$'
        - '^System integrity check could not complete because of an error. %{GREEDYDATA:watchguard_firebox.log.reason}$'
        - '^Management user %{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})? from %{IP:watchguard_firebox.log.ip_address} %{WORD:watchguard_firebox.log.operation} %{GREEDYDATA:watchguard_firebox.log.subsystem}$'
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_vpn_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['0201-0001', '0201-0002', '0201-0003', '0201-0004', '0207-0001', '0209-0001', '0209-0002', '5B01-0001', '5B01-0002', '5B01-0003', '7800-0000', '7800-0001'].contains(ctx.watchguard_firebox.log.msg_id)
      patterns:
        - "^'%{DATA:watchguard_firebox.log.gateway}' %{DATA:watchguard_firebox.log.tunnel_type} IPSec tunnel is %{WORD:watchguard_firebox.log.action}. local:%{DATA:watchguard_firebox.log.local_mask_ip} remote:%{DATA:watchguard_firebox.log.remote_mask_ip} inSA:%{DATA:watchguard_firebox.log.in_spi} outSA:%{DATA:watchguard_firebox.log.out_spi} role:%{WORD:watchguard_firebox.log.negotiation_role}$"
        - '^VPN \(%{DATA:watchguard_firebox.log.vpn_connection_type}\) connection by user %{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})? failed to meet TDR Host Sensor Enforcement requirement: %{GREEDYDATA:watchguard_firebox.log.reason}\.$'
        - '^VPN \(%{DATA:watchguard_firebox.log.vpn_connection_type}\) connection by user %{DATA:watchguard_firebox.log.user_name}(?:@%{DATA:watchguard_firebox.log.user_domain})? met all TDR Host Sensor Enforcement requirements.$'
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_mobile_log_messages
      if: ctx.watchguard_firebox.log.msg_id != null && ['7000-0001', '7000-0002', '7001-0000', '7001-0001', '7001-0002', '7001-0003', '7001-0004', '7001-0005', '7001-0006', '7001-0007', '7001-0008', '7001-0009', '7002-0000'].contains(ctx.watchguard_firebox.log.msg_id)
      patterns:
        - '^Mobile device %{DATA:watchguard_firebox.log.device_id}: user %{USERNAME:watchguard_firebox.log.user_name} %{GREEDYDATA}\.$'
        - '^Mobile device %{DATA:watchguard_firebox.log.device_id}: session for user %{USERNAME:watchguard_firebox.log.user_name} is recreated\.$'
        - '^Mobile device %{DATA:watchguard_firebox.log.device_id}: device authorization agreement \(version %{NUMBER:watchguard_firebox.log.version_number}\) is %{WORD:watchguard_firebox.log.action} by user %{DATA:watchguard_firebox.log.user_name} on %{DATA:watchguard_firebox.log.user_response_time}.$'
        - '^Mobile device %{DATA:watchguard_firebox.log.device_id} %{GREEDYDATA}$'
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - set:
      field: message
      tag: set_message_from_log_body
      copy_from: watchguard_firebox.log.body
      ignore_empty_value: true
  - set:
      field: event.action
      tag: set_event_action_from_log_action
      copy_from: watchguard_firebox.log.action
      ignore_empty_value: true
  - set:
      field: event.action
      tag: set_event_action_from_message
      copy_from: watchguard_firebox.log.message
      ignore_empty_value: true
  - set:
      field: event.action
      tag: set_event_action_from_operation
      copy_from: watchguard_firebox.log.operation
      ignore_empty_value: true
  - set:
      field: event.action
      tag: set_event_action_from_update
      copy_from: watchguard_firebox.log.update
      ignore_empty_value: true
  - lowercase:
      field: event.action
      tag: lowercase_event_action
      ignore_missing: true
  - set:
      field: user.domain
      tag: set_user_domain_from_log_authentication_server
      copy_from: watchguard_firebox.log.authentication_server
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_log_authentication_server_into_related_hosts
      value: '{{{watchguard_firebox.log.authentication_server}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.authentication_server != null
  - set:
      field: user.domain
      tag: set_user_domain_from_log_domain
      copy_from: watchguard_firebox.log.domain
      ignore_empty_value: true
  - set:
      field: tls.server.x509.subject.distinguished_name
      tag: set_tls_server_x509_subject_distinguished_name_from_log_certificate_subject
      copy_from: watchguard_firebox.log.certificate_subject
      ignore_empty_value: true
  - set:
      field: user.name
      tag: set_user_name_from_log_client_name
      copy_from: watchguard_firebox.log.client_name
      ignore_empty_value: true
  - set:
      field: user.name
      tag: set_user_name_from_log_user_name
      copy_from: watchguard_firebox.log.user_name
      ignore_empty_value: true
  - set:
      field: user.domain
      tag: set_user_domain_from_log_user_domain
      copy_from: watchguard_firebox.log.user_domain
      ignore_empty_value: true
  - set:
      field: tls.server.x509.version_number
      tag: set_tls_server_x509_version_number_from_log_current_ca_certificate_version
      copy_from: watchguard_firebox.log.current_ca_certificate_version
      ignore_empty_value: true
  - set:
      field: tls.server.x509.version_number
      tag: set_tls_server_x509_version_number_from_log_new_ca_certificate_version
      copy_from: watchguard_firebox.log.new_ca_certificate_version
      ignore_empty_value: true
  - set:
      field: destination.ip
      tag: set_destination_ip_from_log_destination_ip
      copy_from: watchguard_firebox.log.destination_ip
      ignore_empty_value: true
  - set:
      field: destination.ip
      tag: set_destination_ip_from_log_peer_address
      copy_from: watchguard_firebox.log.peer_address
      ignore_empty_value: true
  - set:
      field: destination.ip
      tag: set_destination_ip_from_log_remote_ip
      copy_from: watchguard_firebox.log.remote_ip
      ignore_empty_value: true
  - set:
      field: destination.ip
      tag: set_destination_ip_from_log_virtual_ip_address
      copy_from: watchguard_firebox.log.virtual_ip_address
      ignore_empty_value: true
  - set:
      field: destination.port
      tag: set_destination_port_from_log_destination_port
      copy_from: watchguard_firebox.log.destination_port
      ignore_empty_value: true
  - set:
      field: source.port
      tag: set_source_port_from_log_source_port
      copy_from: watchguard_firebox.log.source_port
      ignore_empty_value: true
  - set:
      field: observer.ingress.interface.name
      tag: set_observer_ingress_interface_name_from_log_dev_name
      copy_from: watchguard_firebox.log.dev_name
      ignore_empty_value: true
  - set:
      field: device.id
      tag: set_device_id_from_log_device_id
      copy_from: watchguard_firebox.log.device_id
      ignore_empty_value: true
  - set:
      field: observer.ingress.interface.id
      tag: set_observer_ingress_interface_id_from_log_interface_id
      copy_from: watchguard_firebox.log.interface_id
      ignore_empty_value: true
  - set:
      field: observer.ingress.interface.alias
      tag: set_observer_ingress_interface_alias_from_log_interface_name
      copy_from: watchguard_firebox.log.interface_name
      ignore_empty_value: true
  - set:
      field: source.ip
      tag: set_source_ip_from_log_ip_address
      copy_from: watchguard_firebox.log.ip_address
      ignore_empty_value: true
  - set:
      field: source.ip
      tag: set_source_ip_from_log_ip_address
      copy_from: watchguard_firebox.log.source_ip
      ignore_empty_value: true
  - gsub:
      field: watchguard_firebox.log.mac_address
      tag: gsub_watchguard_firebox_log_mac_address
      pattern: ':'
      replacement: '-'
      ignore_missing: true
  - uppercase:
      field: watchguard_firebox.log.mac_address
      ignore_missing: true
  - set:
      field: source.mac
      tag: set_source_mac_from_log_mac_address
      copy_from: watchguard_firebox.log.mac_address
      ignore_empty_value: true
  - set:
      field: file.hash.md5
      tag: set_file_hash_md5_from_log_md5
      copy_from: watchguard_firebox.log.md5
      ignore_empty_value: true
  - set:
      field: file.path
      tag: set_file_path_from_log_path
      copy_from: watchguard_firebox.log.path
      ignore_empty_value: true
  - set:
      field: rule.name
      tag: set_rule_name_from_log_policy_name
      copy_from: watchguard_firebox.log.policy_name
      ignore_empty_value: true
  - set:
      field: source.port
      tag: set_source_port_from_log_port
      copy_from: watchguard_firebox.log.port
      ignore_empty_value: true
  - set:
      field: event.reason
      tag: set_event_reason_from_log_reason
      copy_from: watchguard_firebox.log.reason
      ignore_empty_value: true
  - append:
      field: related.ip
      tag: append_log_peer_address_into_related_ip
      value: '{{{watchguard_firebox.log.peer_address}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.peer_address != null
  - append:
      field: related.ip
      tag: append_log_previous_ip_into_related_ip
      value: '{{{watchguard_firebox.log.previous_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.previous_ip != null
  - append:
      field: related.ip
      tag: append_log_virtual_ip_address_into_related_ip
      value: '{{{watchguard_firebox.log.virtual_ip_address}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.virtual_ip_address != null
  - append:
      field: related.ip
      tag: append_log_ip_address_into_related_ip
      value: '{{{watchguard_firebox.log.ip_address}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.ip_address != null
  - append:
      field: related.ip
      tag: append_log_destination_ip_into_related_ip
      value: '{{{watchguard_firebox.log.destination_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.destination_ip != null
  - append:
      field: related.ip
      tag: append_log_source_ip_into_related_ip
      value: '{{{watchguard_firebox.log.source_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.source_ip != null
  - append:
      field: related.ip
      tag: append_log_remote_ip_into_related_ip
      value: '{{{watchguard_firebox.log.remote_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.remote_ip != null
  - append:
      field: related.hosts
      tag: append_log_domain_into_related_hosts
      value: '{{{watchguard_firebox.log.domain}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.domain != null
  - append:
      field: related.hosts
      tag: append_log_user_domain_into_related_hosts
      value: '{{{watchguard_firebox.log.user_domain}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.user_domain != null
  - append:
      field: related.user
      tag: append_log_user_name_into_related_user
      value: '{{{watchguard_firebox.log.user_name}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.user_name != null
  - append:
      field: related.user
      tag: append_log_client_name_into_related_user
      value: '{{{watchguard_firebox.log.client_name}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.client_name != null
  - append:
      field: related.ip
      tag: append_log_local_into_related_ip
      value: '{{{watchguard_firebox.log.local}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.local != null
  - append:
      field: related.ip
      tag: append_log_negotiation_ip_into_related_ip
      value: '{{{watchguard_firebox.log.negotiation_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.negotiation_ip != null
  - append:
      field: related.ip
      tag: append_log_new_ip_into_related_ip
      value: '{{{watchguard_firebox.log.new_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.new_ip != null
  - append:
      field: related.ip
      tag: append_log_static_ip_into_related_ip
      value: '{{{watchguard_firebox.log.static_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.static_ip != null
  - append:
      field: related.hosts
      tag: append_log_proxy_host_into_related_hosts
      value: '{{{watchguard_firebox.log.proxy_host}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.proxy_host != null
  - append:
      field: related.hash
      tag: append_log_md5_into_related_hash
      value: '{{{watchguard_firebox.log.md5}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.md5 != null
  - date:
      field: watchguard_firebox.log.package_release_time
      target_field: watchguard_firebox.log.package_release_time
      tag: date_set_package_release_time
      if: ctx.watchguard_firebox?.log?.package_release_time != null && ctx.watchguard_firebox.log.package_release_time != ''
      formats:
        - (EEE MMM dd HH:mm:ss yyyy)
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
        - MMM d HH:mm:ss
        - MMM  d HH:mm:ss.SSS
        - MMM dd HH:mm:ss.SSS
        - MMM d HH:mm:ss.SSS
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: watchguard_firebox.log.feature_expiration_date
      target_field: watchguard_firebox.log.feature_expiration_date
      tag: date_set_feature_expiration_date
      if: ctx.watchguard_firebox?.log?.feature_expiration_date != null && ctx.watchguard_firebox.log.feature_expiration_date != ''
      formats:
        - EEE MMM dd HH:mm:ss yyyy
        - EEE., MMM d, HH:mm:ss z yyyy.
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
        - MMM d HH:mm:ss
        - MMM  d HH:mm:ss.SSS
        - MMM dd HH:mm:ss.SSS
        - MMM d HH:mm:ss.SSS
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: watchguard_firebox.log.user_response_time
      target_field: watchguard_firebox.log.user_response_time
      tag: 'date_set_user_response_time'
      if: ctx.watchguard_firebox?.log?.user_response_time != null && ctx.watchguard_firebox.log.user_response_time != ''
      formats:
        - yyyy-MM-dd HH:mm:ss Z
        - yyyy-MM-dd HH:mm:ss
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
        - MMM d HH:mm:ss
        - MMM  d HH:mm:ss.SSS
        - MMM dd HH:mm:ss.SSS
        - MMM d HH:mm:ss.SSS
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: watchguard_firebox.log.bootup_time
      target_field: watchguard_firebox.log.bootup_time
      tag: date_set_bootup_time
      if: ctx.watchguard_firebox?.log?.bootup_time != null && ctx.watchguard_firebox.log.bootup_time != ''
      formats:
        - yyyy-MM-dd HH:mm:ss Z
        - yyyy-MM-dd HH:mm:ss
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
        - MMM d HH:mm:ss
        - MMM  d HH:mm:ss.SSS
        - MMM dd HH:mm:ss.SSS
        - MMM d HH:mm:ss.SSS
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - remove:
      field:
        - watchguard_firebox.log.action
        - watchguard_firebox.log.authentication_server
        - watchguard_firebox.log.certificate_subject
        - watchguard_firebox.log.client_name
        - watchguard_firebox.log.current_ca_certificate_version
        - watchguard_firebox.log.destination_ip
        - watchguard_firebox.log.destination_port
        - watchguard_firebox.log.dev_name
        - watchguard_firebox.log.device_id
        - watchguard_firebox.log.domain
        - watchguard_firebox.log.interface_id
        - watchguard_firebox.log.interface_name
        - watchguard_firebox.log.ip_address
        - watchguard_firebox.log.mac_address
        - watchguard_firebox.log.md5
        - watchguard_firebox.log.message
        - watchguard_firebox.log.new_ca_certificate_version
        - watchguard_firebox.log.operation
        - watchguard_firebox.log.path
        - watchguard_firebox.log.peer_address
        - watchguard_firebox.log.policy_name
        - watchguard_firebox.log.port
        - watchguard_firebox.log.reason
        - watchguard_firebox.log.remote_ip
        - watchguard_firebox.log.source_ip
        - watchguard_firebox.log.source_port
        - watchguard_firebox.log.update
        - watchguard_firebox.log.user_name
        - watchguard_firebox.log.virtual_ip_address
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
