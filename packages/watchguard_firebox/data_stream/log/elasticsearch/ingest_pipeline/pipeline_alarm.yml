---
description: Pipeline for processing alarm category logs.
processors:
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_policy_name
      patterns:
        - '^%{GREEDYDATA:watchguard_firebox.log.body} %{SPACE}\(%{DATA:watchguard_firebox.log.policy_name}\)$'
  - grok:
      field: watchguard_firebox.log.body
      tag: grok_for_firewall_log_messages
      if: ctx.watchguard_firebox?.log?.msg_id != null && ['3000-0152','3000-0153','3000-0154','3000-0155','3000-0156','3000-0157','3000-0158','3000-0159','3000-0160','3000-0161','3000-0162','3000-0163','3000-0164','3000-0165','3000-0166','3000-0167','3000-0168','3000-0169','3000-0170','3000-0171','3000-0172','020B-0001'].contains(ctx.watchguard_firebox?.log?.msg_id)
      patterns:
        - '^IPv4 source route attack from %{IP:watchguard_firebox.log.source_ip} detected.$'
        - '^SYN flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} SYN packets dropped since last alarm.$'
        - '^ICMP flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} ICMP flood packets dropped since last alarm.$'
        - '^UDP flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} UDP flood packets dropped since last alarm.$'
        - '^IPSEC flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} IPSEC flood packets dropped since last alarm.$'
        - '^IKE flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} IKE flood packets dropped since last alarm.$'
        - '^IP scan attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected.$'
        - '^IP scan attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected.$'
        - '^PORT scan attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected.$'
        - '^DDOS against server %{IP:watchguard_firebox.log.destination_ip} detected.$'
        - '^DDOS from client %{IP:watchguard_firebox.log.source_ip} detected.$'
        - '^SYN flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} SYN packets dropped since last alarm.$'
        - '^ICMP flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} ICMP packets dropped since last alarm.$'
        - '^UDP flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} UDP packets dropped since last alarm.$'
        - '^IPSEC flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} IPSEC packets dropped since last alarm.$'
        - '^IKE flood attack against %{IP:watchguard_firebox.log.destination_ip} from %{IP:watchguard_firebox.log.source_ip} detected. %{NUMBER:watchguard_firebox.log.packets_count:long} IKE packets dropped since last alarm.$'
        - '^Policy Name: %{DATA:watchguard_firebox.log.pcy_name} Source IP Address: %{IP:watchguard_firebox.log.source_ip} Source Port: %{NUMBER:watchguard_firebox.log.source_port:long} Destination IP Address: %{IP:watchguard_firebox.log.destination_ip} Destination Port: %{NUMBER:watchguard_firebox.log.destination_port:long}$'
        - '^Blocked site: Traffic detected from %{IP:watchguard_firebox.log.source_ip} to %{IP:watchguard_firebox.log.destination_ip}.$'
        - '^IP spoofing: Traffic detected from %{IP:watchguard_firebox.log.source_ip} to %{IP:watchguard_firebox.log.destination_ip}.$'
        - '^The total number of current sessions \(%{NUMBER:watchguard_firebox.log.current_session:long}\) has reached the high water mark \(%{NUMBER:watchguard_firebox.log.limit:long}\).$'
        - '^The number of connections \(%{NUMBER:watchguard_firebox.log.current_connection:long}\) has reached the configured limit \(%{NUMBER:watchguard_firebox.log.limit:long}\).$'
        - '^Blocked port: Traffic detected from %{IP:watchguard_firebox.log.source_ip} to %{IP:watchguard_firebox.log.destination_ip} on port %{NUMBER:watchguard_firebox.log.port:long}.$'
        - "%{DATA:watchguard_firebox.log.tunnel_type} tunnel '%{DATA:watchguard_firebox.log.tunnel_name}' local %{DATA:watchguard_firebox.log.local} remote %{DATA:watchguard_firebox.log.remote} under gateway '%{DATA:watchguard_firebox.log.gateway}' is %{WORD:watchguard_firebox.log.status}."
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - grok:
      field: 'watchguard_firebox.log.body'
      tag: grok_for_vpn_log_messages
      if: ctx.watchguard_firebox.log?.msg_id == '020B-0001'
      patterns:
        - "^%{DATA:watchguard_firebox.log.tunnel_type} tunnel '%{DATA:watchguard_firebox.log.tunnel_name}' local %{DATA:watchguard_firebox.log.local} remote %{DATA:watchguard_firebox.log.remote} under gateway '%{DATA:watchguard_firebox.log.gateway}' is %{WORD:watchguard_firebox.log.status}$"
        - '^%{GREEDYDATA:watchguard_firebox.log.body}$'
      ignore_failure: true
  - set:
      field: message
      tag: set_message_from_log_body
      copy_from: watchguard_firebox.log.body
      ignore_empty_value: true
  - set:
      field: destination.ip
      tag: set_destination_ip_from_log_destination_ip
      copy_from: watchguard_firebox.log.destination_ip
      ignore_empty_value: true
  - set:
      field: destination.port
      tag: set_destination_port_from_log_destination_port
      copy_from: watchguard_firebox.log.destination_port
      ignore_empty_value: true
  - set:
      field: source.ip
      tag: set_source_ip_from_log_source_ip
      copy_from: watchguard_firebox.log.source_ip
      ignore_empty_value: true
  - set:
      field: source.port
      tag: set_source_port_from_log_source_port
      copy_from: watchguard_firebox.log.source_port
      ignore_empty_value: true
  - append:
      field: rule.name
      tag: append_log_pcy_name_into_rule_name
      value: '{{{watchguard_firebox.log.pcy_name}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.pcy_name != null
  - append:
      field: rule.name
      tag: append_log_policy_name_into_rule_name
      value: '{{{watchguard_firebox.log.policy_name}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.policy_name != null
  - append:
      field: related.ip
      tag: append_log_destination_ip_into_related_ip
      value: '{{{watchguard_firebox.log.destination_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.destination_ip != null
  - append:
      field: related.ip
      tag: append_log_source_ip_into_related_ip
      value: '{{{watchguard_firebox.log.source_ip}}}'
      allow_duplicates: false
      if: ctx.watchguard_firebox?.log?.source_ip != null
  - remove:
      field:
        - watchguard_firebox.log.destination_ip
        - watchguard_firebox.log.destination_port
        - watchguard_firebox.log.policy_name
        - watchguard_firebox.log.pcy_name
        - watchguard_firebox.log.source_ip
        - watchguard_firebox.log.source_port
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
