config_version: "2"
interval: {{interval}}
request.method: "POST"
{{#if enable_request_tracer}}
request.tracer.filename: "../../logs/httpjson/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
{{#if url}}
request.url: {{url}}/attributes/restSearch
{{/if}}
{{#if ssl}}
request.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
request.timeout: {{http_client_timeout}}
{{/if}}
{{#if proxy_url}}
request.proxy_url: {{proxy_url}}
{{/if}}
request.body:
{{#if filters}}
  {{filters}}
{{/if}}
request.transforms:
{{#if api_token}}
- set:
    target: header.Authorization
    value: {{api_token}}
{{/if}}
- set:
    target: body.page
    value: 1
- set:
    target: body.limit
    value: 10
{{#if enforce_warning_list}}
- set:
    target: body.enforceWarninglist
    value: 1
{{/if}}
- set:
    target: body.returnFormat
    value: json
- set:
    target: body.timestamp
    value: '[[.cursor.timestamp.Unix]]'
    default: '[[ (now (parseDuration "-{{initial_interval}}")).Unix ]]'
- set:
    # Ignored by MISP, set as a workaround to make it available in response.pagination.
    target: url.params.timestamp
    value: '[[.body.timestamp]]'

response.split:
  target: body.response.Attribute
  ignore_empty_value: true
  keep_parent: false
response.request_body_on_pagination: true
response.pagination:
- set:
    target: body.page
    # Add 2 because the httpjson page counter is zero-based while the MISP page parameter starts at 1.
    value: '[[if (ne (len .last_response.body.response.Attribute) 0)]][[add .last_response.page 2]][[end]]'
    fail_on_template_error: true
- set:
    target: body.timestamp
    value: '[[.last_response.url.params.Get "timestamp"]]'
- set:
    target: url.params.timestamp
    value: '[[.last_response.url.params.Get "timestamp"]]'
cursor:
  timestamp:
    value: '[[.last_event.Attribute.timestamp]]'
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag i|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
