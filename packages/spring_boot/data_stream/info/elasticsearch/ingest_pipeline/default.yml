---
description: Pipeline for processing info logs
processors:
  - set:
      field: ecs.version
      value: "8.0.0"
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - set:
      field: event.type
      value: info
  - set:
      field: event.kind
      value: metric
  - set:
      field: event.category
      value: database
  - set:
      field: event.dataset
      value: spring_boot.info
  - set:
      field: event.module
      value: spring_boot      
  - rename:
      field: json.app
      target_field: spring_boot.info
      ignore_missing: true
      ignore_failure: true
  - remove:
      field: 
       - json
       - input.type
      ignore_missing: true
      ignore_failure: true     
  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
