---
description: Pipeline for mapping falco fields to ECS / falco-namespaced fields
processors:
- set:
    field: data_stream.type
    value: 'logs'
- set:
    field: observer.product
    value: 'falco'
- set:
    field: observer.type
    value: 'sensor'
- set:
    field: observer.vendor
    value: 'sysdig'
- set:
    field: event.kind
    value: 'alert'
- script:
    lang: painless
    tag: 'painless_map_event_category'
    source: |
        def allowedValues = [
            'api',
            'authentication',
            'configuration',
            'database',
            'driver',
            'email',
            'file',
            'host',
            'iam',
            'intrusion_detection',
            'library',
            'malware',
            'network',
            'package',
            'process',
            'registry',
            'session',
            'threat',
            'vulnerability',
            'web'
        ];

        if (ctx['evt'] != null && ctx['evt.category'] != null) {
            def inputCategory = ctx['evt.category'];
            def lowercaseCategory = inputCategory.toLowerCase();
            if (allowedValues.contains(lowercaseCategory)) {
                ctx['event.category'] = [inputCategory];
            } else if (inputCategory == 'time' || inputCategory == 'scheduler') {
                ctx['event.category'] = ['configuration'];
            } else if (inputCategory == 'system' || inputCategory == 'memory' || inputCategory == 'sleep' || inputCategory == 'wait' || inputCategory == 'internal') {
                ctx['event.category'] = ['host'];
            } else if (inputCategory == 'ipc' || inputCategory == 'net' || inputCategory == 'signal') {
                ctx['event.category'] = ['network'];
            } else if (inputCategory == 'processing' || inputCategory == 'process' || inputCategory == 'io_read' || inputCategory == 'io_write' || inputCategory == 'io_other') {
                ctx['event.category'] = ['process'];
            } else if (inputCategory == 'user') {
                ctx['event.category'] = ['session'];
            } else {
                ctx['event.category'] = ['process'];
            }
        } else {
            ctx['event.category'] = ['process'];
        }
- script:
    lang: painless
    tag: 'painless_map_event_tag'
    source: |
        def allowedValues = [
            'access',
            'admin', 
            'allowed',
            'change',
            'connection',
            'creation',
            'deletion',
            'denied',
            'end',
            'error',
            'group',
            'indicator',
            'info',
            'installation',
            'protocol',
            'start',
            'user'
        ];

        if (ctx['evt'] != null && ctx['evt.type'] != null) {
            def inputType = ctx['evt.type'];
            def lowercaseType = inputType.toLowerCase();
            if (allowedValues.contains(lowercaseType)) {
                ctx['event.type'] = [inputType];
            } else if (inputType == 'faccessat' || inputType == 'faccessat2' || inputType == 'fsopen' || inputType == 'name_to_handle_at' || inputType == 'nfsservctl' || inputType == 'open' || inputType == 'open_by_handle_at' || inputType == 'open_tree' || inputType == 'openat' || inputType == 'openat2' || inputType == 'pciconfig_read' || inputType == 'pidfd_open' || inputType == 'read' || inputType == 'readahead' || inputType == 'readdir' || inputType == 'readlink' || inputType == 'readlinkat' || inputType == 'readv' || inputType == 's390_pci_mmio_read' || inputType == 'uselib' || inputType == 'vm86old' || inputType == 'vm86') {
                ctx['event.type'] = ['access'];
            } else if (inputType == 'bdflush' || inputType == 'membarrier' || inputType == 'ptrace' || inputType == 'reboot' || inputType == 'restart_syscall') {
                ctx['event.type'] = ['admin'];
            } else if (inputType == 'fallocate' || inputType == 'finit_module') {
                ctx['event.type'] = ['allowed'];
            } else if (inputType == 'llseek' || inputType == 'sysctl' || inputType == 'acct' || inputType == 'adjtimex' || inputType == 'alarm' || inputType == 'arch_prctl' || inputType == 'bind' || inputType == 'bpf' || inputType == 'brk' || inputType == 'capset' || inputType == 'chdir' || inputType == 'chmod' || inputType == 'chown' || inputType == 'chown32' || inputType == 'chroot' || inputType == 'clock_adjtime' || inputType == 'clock_nanosleep' || inputType == 'clock_settime' || inputType == 'close' || inputType == 'close_range' || inputType == 'epoll_ctl' || inputType == 'fchdir' || inputType == 'fchmod' || inputType == 'fchmodat' || inputType == 'fchown' || inputType == 'fchown32' || inputType == 'fchownat' || inputType == 'fcntl' || inputType == 'fcntl64' || inputType == 'flock' || inputType == 'free_hugepages' || inputType == 'fsetxattr' || inputType == 'fsconfig' || inputType == 'ftruncate' || inputType == 'ftruncate64' || inputType == 'futimesat' || inputType == 'io_setup' || inputType == 'io_uring_setup' || inputType == 'ioctl' || inputType == 'ioperm' || inputType == 'iopl' || inputType == 'ioprio_set' || inputType == 'keyctl' || inputType == 'landlock_restrict_self' || inputType == 'lchown' || inputType == 'lchown32' || inputType == 'madvise' || inputType == 'mbind' || inputType == 'memory_ordering' || inputType == 'migrate_pages' || inputType == 'mlock' || inputType == 'mlock2' || inputType == 'mlockall' || inputType == 'mmap' || inputType == 'mmap2' || inputType == 'modify_ldt' || inputType == 'move_mount' || inputType == 'move_pages' || inputType == 'mprotect' || inputType == 'mq_getsetattr' || inputType == 'mremap' || inputType == 'msgctl' || inputType == 'munlock' || inputType == 'munlockall' || inputType == 'munmap' || inputType == 'nanosleep' || inputType == 'nice' || inputType == 'old_adjtimex' || inputType == 'pause' || inputType == 'pciconfig_write' || inputType == 'personality' || inputType == 'perfctr' || inputType == 'perfmonctl' || inputType == 'pivot_root' || inputType == 'pkey_alloc' || inputType == 'pkey_free' || inputType == 'pkey_mprotect' || inputType == 'prctl' || inputType == 'prlimit64' || inputType == 'process_madvise' || inputType == 'process_vm_writev' || inputType == 'pwrite64' || inputType == 'pwritev' || inputType == 'pwritev2' || inputType == 'quotactl' || inputType == 'quotactl_fd' || inputType == 'rename' || inputType == 'renameat' || inputType == 'renameat2' || inputType == 'rseq' || inputType == 'rt_sigaction' || inputType == 'rt_sigpending' || inputType == 'rt_sigprocmask' || inputType == 'rt_sigqueueinfo' || inputType == 'rt_sigreturn' || inputType == 'rtas' || inputType == 's390_pci_mmio_write' || inputType == 's390_guarded_storage' || inputType == 'sched_setaffinity' || inputType == 'sched_setattr' || inputType == 'sched_setparam' || inputType == 'sched_setscheduler' || inputType == 'seccomp' || inputType == 'semctl' || inputType == 'semop' || inputType == 'semtimedop' || inputType == 'set_mempolicy' || inputType == 'set_robust_list' || inputType == 'set_thread_area' || inputType == 'set_tid_address' || inputType == 'set_tls' || inputType == 'set_domainname' || inputType == 'set_fsgid' || inputType == 'setfsgid32' || inputType == 'setfsuid' || inputType == 'setfsuid32' || inputType == 'setgid' || inputType == 'setgid32' || inputType == 'sethae' || inputType == 'sethostimer' || inputType == 'setitimer' || inputType == 'setns' || inputType == 'setpgid' || inputType == 'setpgrp' || inputType == 'setpriority' || inputType == 'setregid' || inputType == 'setregid32' || inputType == 'setresgid' || inputType == 'setresgid32' || inputType == 'setresuid' || inputType == 'setresuid32' || inputType == 'setreuid' || inputType == 'setreuid32' || inputType == 'setrlimit' || inputType == 'setsid' || inputType == 'setsockopt' || inputType == 'settimeofday' || inputType == 'setuid' || inputType == 'setuid32' || inputType == 'setup' || inputType == 'setxattr' || inputType == 'shmat'  || inputType == 'shmctl' || inputType == 'shmdt' || inputType == 'sigaction' || inputType == 'sigaltstack' || inputType == 'subpage_prot' || inputType == 'swapcontext' || inputType == 'switch_endian' || inputType == 'sys_debug_setcontext' || inputType == 'timer_settime' || inputType == 'timerfd_settime' || inputType == 'truncate' || inputType == 'truncate64' || inputType == 'umask' || inputType == 'utime' || inputType == 'utimesat' || inputType == 'utimes' || inputType == 'write' || inputType == 'writev' || inputType == 'xtensa') {
                ctx['event.type'] = ['change'];
            } else if (inputType == 'accept' || inputType == 'accept4' || inputType == 'connect' || inputType == 'mq_timedreceive' || inputType == 'mq_timedsend' || inputType == 'msgrcv' || inputType == 'msgsnd' || inputType == 'pidfd_send_signal' || inputType == 'recv' || inputType == 'recvfrom' || inputType == 'recvmsg' || inputType == 'recvmmsg' || inputType == 'rt_sigqueueinfo' || inputType == 'rt_tgsigqueueinfo' || inputType == 'send' || inputType == 'sendfile' || inputType == 'sendfile64' || inputType == 'sendmmsg' || inputType == 'sendmsg' || inputType == 'sendto' || inputType == 'signal' || inputType == 'signalfd' || inputType == 'signalfd4' || inputType == 'socket' || inputType == 'socketcall' || inputType == 'socketpair' || inputType == 'syscall') {
                ctx['event.type'] = ['connection'];
            } else if (inputType == 'add_key' || inputType == 'clone' || inputType == 'clone2' || inputType == 'clone3' || inputType == 'copy_file_range' || inputType == 'creat' || inputType == 'create_module' || inputType == 'dup' || inputType == 'dup2' || inputType == 'dup3' || inputType == 'epoll_create' || inputType == 'epoll_create1' || inputType == 'eventfd' || inputType == 'eventfd2' || inputType == 'fdatasync' || inputType == 'fork' || inputType == 'fsmount' || inputType == 'fsync' || inputType == 'init_module' || inputType == 'inotify_add_watch' || inputType == 'inotify_init' || inputType == 'inotify_init1' || inputType == 'kexec_file_load' || inputType == 'kexec_load' || inputType == 'landlock_add_rule' || inputType == 'landlock_create_ruleset' || inputType == 'link' || inputType == 'linkat' || inputType == 'memfd_create' || inputType == 'memfd_secret' || inputType == 'mkdir' || inputType == 'mkdirat' || inputType == 'mknod' || inputType == 'mknodat' || inputType == 'mount' || inputType == 'mq_notify' || inputType == 'mq_open' || inputType == 'msync' || inputType == 'pidfd_getfd' || inputType == 'pipe' || inputType == 'pipe2' || inputType == 'remap_file_pages' || inputType == 'splice' || inputType == 'spu_create' || inputType == 'symlink' || inputType == 'symlinkat' || inputType == 'sync' || inputType == 'sync_file_range' || inputType == 'sync_file_range2' || inputType == 'syncfs' || inputType == 'tee' || inputType == 'timer_create' || inputType == 'timerfd_create' || inputType == 'vfork' || inputType == 'vmsplice') {
                ctx['event.type'] = ['creation'];
            } else if (inputType == 'cacheflush' || inputType == 'delete_module' || inputType == 'fremovexattr' || inputType == 'inotify_rm_watch' || inputType == 'io_destroy' || inputType == 'lremovexattr' || inputType == 'mq_unlink' || inputType == 'oldumount' || inputType == 'removexattr' || inputType == 'riscv_flush_icache' || inputType == 'rmdir' || inputType == 'spill' || inputType == 'timer_delete' || inputType == 'umount' || inputType == 'unlink' || inputType == 'unlinkat' || inputType == 'unshare') {
                ctx['event.type'] = ['deletion'];
            } else if (inputType == 'exit' || inputType == 'exit_group' || inputType == 'io_cancel' || inputType == 'kill' || inputType == 'shutdown'  || inputType == 'swapoff' || inputType == 'tgkill' || inputType == 'tkill' || inputType == 'vhangup') {
                ctx['event.type'] = ['end'];
            } else if (inputType == 'fanotify_init' || inputType == 'fanotify_mark' || inputType == 'setgroups' || inputType == 'setgroups32') {
                ctx['event.type'] = ['group'];
            } else if (inputType == 'alloc_hugepages' || inputType == 'capget' || inputType == 'clock_getres' || inputType == 'clock_gettime' || inputType == 'epoll_pwait' || inputType == 'epoll_pwait2' || inputType == 'epoll_wait' || inputType == 'fadvise64' || inputType == 'fadvise64_64' || inputType == 'fgetxattr' || inputType == 'flistxattr' || inputType == 'fspick' || inputType == 'fstat' || inputType == 'fstat64' || inputType == 'fstatat64' || inputType == 'fstatfs' || inputType == 'fstatfs64' || inputType == 'futex' || inputType == 'get_kernel_syms' || inputType == 'get_mempolicy' || inputType == 'get_robust_list' || inputType == 'get_thread_area' || inputType == 'get_tls' || inputType == 'getcpu' || inputType == 'getcwd' || inputType == 'getdents' || inputType == 'getdents64' || inputType == 'getdomainname' || inputType == 'getdtablesize' || inputType == 'getegid' || inputType == 'getegid32' || inputType == 'geteuid' || inputType == 'geteuid32' || inputType == 'getgid' || inputType == 'getgid32' || inputType == 'getgroups' || inputType == 'getgroups32' || inputType == 'gethostname' || inputType == 'getitimer' || inputType == 'getpeername' || inputType == 'getpagesize' || inputType == 'getpgid' || inputType == 'getpgrp' || inputType == 'getpid' || inputType == 'getppid' || inputType == 'getpriority' || inputType == 'getrandom' || inputType == 'getresgid' || inputType == 'getresgid32' || inputType == 'getresuid' || inputType == 'getresuid32' || inputType == 'getrlimit' || inputType == 'getrusage' || inputType == 'getsid' || inputType == 'getsockname' || inputType == 'getsockopt' || inputType == 'gettid' || inputType == 'gettimeofday' || inputType == 'getuid' || inputType == 'getuid32' || inputType == 'getunwind' || inputType == 'getxattr' || inputType == 'getxgid' || inputType == 'getxpid' || inputType == 'getxuid' || inputType == 'io_getevents' || inputType == 'io_pgetevents' || inputType == 'io_submit' || inputType == 'io_uring_register' || inputType == 'ioprio_get' || inputType == 'kcmp' || inputType == 'kern_features' || inputType == 'lgetxattr' || inputType == 'listen' || inputType == 'listxattr' || inputType == 'llistxattr' || inputType == 'lookup_dcookie' || inputType == 'lstat' || inputType == 'lstat64' || inputType == 'mincore' || inputType == 'msgget' || inputType == 'newfstatat' || inputType == 'old_getrlimit' || inputType == 'old_fstat' || inputType == 'oldlstat' || inputType == 'oldolduname' || inputType == 'oldstat' || inputType == 'olduname' || inputType == 'or1k_atomic' || inputType == 'pciconfig_iobase' || inputType == 'poll' || inputType == 'ppoll' || inputType == 'pread64' || inputType == 'preadv' || inputType == 'preadv2' || inputType == 'process_vm_readv' || inputType == 'pselect6' || inputType == 'query_module' || inputType == 'request_key' || inputType == 'rt_sigsuspend' || inputType == 'rt_sigtimedwait' || inputType == 's390_runtime_instr' || inputType == 's390_sthyi' || inputType == 'sched_get_affinity' || inputType == 'sched_get_priority_max' || inputType == 'sched_get_priority_min' || inputType == 'sched_getaffinity' || inputType == 'sched_getattr' || inputType == 'sched_getparam' || inputType == 'sched_getscheduler' || inputType == 'sched_rr_get_interval' || inputType == 'sched_yield' || inputType == 'select' || inputType == 'semget' || inputType == 'sgetmask' || inputType == 'shmget' || inputType == 'sigpending' || inputType == 'sigprocmask' || inputType == 'sigreturn' || inputType == 'sigsuspend' || inputType == 'ssetmask' || inputType == 'stat' || inputType == 'stat64' || inputType == 'statfs' || inputType == 'statfs64' || inputType == 'statx' || inputType == 'stime' || inputType == 'sysfs' || inputType == 'sysinfo' || inputType == 'syslog' || inputType == 'sysmips' || inputType == 'time' || inputType == 'timer_getoverrun' || inputType == 'timer_gettime' || inputType == 'timerfd_gettime' || inputType == 'times' || inputType == 'ugetrlimit' || inputType == 'uname' || inputType == 'ustat' || inputType == 'wait' || inputType == 'wait4' || inputType == 'waitid' || inputType == 'waitpid') {
                ctx['event.type'] = ['info'];
            } else if (inputType == 'utrap_install') {
                ctx['event.type'] = ['installation'];
            } else if (inputType == 'ipc') {
                ctx['event.type'] = ['protocol'];
            } else if (inputType == 'execve' || inputType == 'execveat' || inputType == 'execv' || inputType == 'io_uring_enter' || inputType == 'perf_event_open' || inputType == 'spu_run' || inputType == 'swapon') {
                ctx['event.type'] = ['start'];
            } else if (inputType == 'userfaultfd' || inputType == 'usr26' || inputType == 'usr32') {
                ctx['event.type'] = ['user'];
            } else {
                ctx['event.type'] = ['info'];
            }
        } else {
            ctx['event.type'] = ['info'];
        }
- set:
    field: event.outcome
    value: success
    if: ctx.evt?.res != null && ctx.evt.res == 'SUCCESS'
    tag: set_event_outcome_success
- set:
    field: event.outcome
    value: failure
    if: ctx.evt?.res != null && ctx.evt.res != 'SUCCESS' && ctx.evt.failed != null && ctx.evt.failed == true
    tag: set_event_outcome_failure
- set:
    field: event.ingested
    value: "{{{_ingest.timestamp}}}"
    ignore_empty_value: true
    ignore_failure: true
- script:
    lang: painless
    tag: 'painless_set_threat_technique_id'
    source: |
        def mitreRegex = /T\d{4}/;
        if (ctx['tags'] != null) {
            for (int i = 0; i < ctx['tags'].length; i++) {
                def tag = ctx.tags[i];
                def matcher = mitreRegex.matcher(tag);
                if (matcher.find()) {
                    ctx['threat.technique.id'] = matcher.group();
                    break;
                }
            }
        } else {
            ctx['threat.technique.id'] = ['null'];
        }
- set:
    field: event.original
    copy_from: output
    ignore_empty_value: true
    if: ctx['tags'] == null || !(ctx['tags'].contains('preserve_original_event'))
- set:
    field: event.severity
    copy_from: priority
    ignore_empty_value: true
- set:
    field: rule.name
    copy_from: rule
    ignore_empty_value: true
- set:
    field: event.sequence
    copy_from: evt.num
    ignore_empty_value: true
- set:
    field: '@timestamp'
    copy_from: evt.time
    ignore_empty_value: true
- set:
    field: event.start
    copy_from: evt.time
    ignore_empty_value: true
- set:
    field: event.provider
    copy_from: evt.source
    ignore_empty_value: true
- set:
    field: observer.hostname
    copy_from: evt.hostname
    ignore_empty_value: true
- set:
    field: related.hosts
    copy_from: evt.hostname
    ignore_empty_value: true
- set:
    field: process.executable
    copy_from: proc.exepath
    ignore_empty_value: true
- set:
    field: file.path
    value: '{{fd.name}}'
    if: ctx.fd?.type != null && (ctx.fd.type == 'file' || ctx.fd.type == 'directory')
    tag: 'painless_set_file_path'
- set:
    field: file.type
    value: '{{fd.type}}'
    if: ctx.fd?.type != null && (ctx.fd.type == 'file' || ctx.fd.type == 'directory')
    tag: 'painless_set_file_path'
- set:
    field: process.parent.executable
    copy_from: proc.pexepath
    ignore_empty_value: true
- set:
    field: process.name
    copy_from: proc.name
    ignore_empty_value: true
- set:
    field: process.parent.name
    copy_from: proc.pname
    ignore_empty_value: true
- set:
    field: process.args
    value: ['{{proc.exepath}}{{proc.args}}']
- set:
    field: process.command_line
    copy_from: proc.cmdline
    ignore_empty_value: true
- set:
    field: process.parent.command_line
    copy_from: proc.pcmdline
    ignore_empty_value: true
- set:
    field: process.args_count
    copy_from: proc.cmdnargs
    ignore_empty_value: true
- set:
    field: process.env_vars
    value: ['{{proc.env}}']
    ignore_empty_value: true
- set:
    field: process.working_directory
    copy_from: proc.cwd
    ignore_empty_value: true
- set:
    field: process.pid
    copy_from: proc.pid
    ignore_empty_value: true
- set:
    field: process.parent.pid
    copy_from: proc.ppid
    ignore_empty_value: true
- set:
    field: process.vpid
    copy_from: proc.vpid
    ignore_empty_value: true
- set:
    field: process.parent.vpid
    copy_from: proc.pvpid
    ignore_empty_value: true
- set:
    field: process.session_leader.pid
    copy_from: proc.sid
    ignore_empty_value: true
- set:
    field: process.session_leader.name
    copy_from: proc.sname
    ignore_empty_value: true
- set:
    field: process.session_leader.executable
    copy_from: proc.sid.exepath
    ignore_empty_value: true
- set:
    field: process.group_leader.vpid
    copy_from: proc.vpgid
    ignore_empty_value: true
- set:
    field: process.group_leader.name
    copy_from: proc.vpgid.name
    ignore_empty_value: true
- set:
    field: process.group_leader.name
    copy_from: proc.vpgid.name
    ignore_empty_value: true
- set:
    field: process.group_leader.executable
    copy_from: proc.vpgid.exepath
    ignore_empty_value: true
- set:
    field: process.uptime
    copy_from: proc.duration
    ignore_empty_value: true
- set:
    field: process.parent.uptime
    copy_from: proc.ppid.duration
    ignore_empty_value: true
- set:
    field: process.start
    copy_from: proc.pid.ts
    ignore_empty_value: true
- set:
    field: process.parent.start
    copy_from: proc.ppid.ts
    ignore_empty_value: true
- set:
    field: process.session_leader.same_as_process
    copy_from: proc.is_sid_leader
    ignore_empty_value: true
- set:
    field: process.group_leader.same_as_process
    copy_from: proc.is_vpgid_leader
    ignore_empty_value: true
- set:
    field: process.thread.capabilities.permitted
    copy_from: thread.cap_permitted
    ignore_empty_value: true
- set:
    field: process.thread.capabilities.effective
    copy_from: thread.cap_effective
    ignore_empty_value: true
- set:
    field: process.thread.id
    copy_from: thread.tid
    ignore_empty_value: true
- set:
    field: process.user.id
    copy_from: user.uid
    ignore_empty_value: true
- set:
    field: process.user.name
    copy_from: user.name
    ignore_empty_value: true
- set:
    field: process.group.id
    copy_from: group.gid
    ignore_empty_value: true
- set:
    field: process.group.name
    copy_from: group.name
    ignore_empty_value: true
- set:
    field: container.id
    copy_from: container.id
    ignore_empty_value: true
- set:
    field: container.name
    copy_from: container.name
    ignore_empty_value: true
- set:
    field: container.image.name
    copy_from: container.image
    ignore_empty_value: true
- set:
    field: container.runtime
    copy_from: container.type
    ignore_empty_value: true
- set:
    field: container.security_context.privileged
    copy_from: container.privileged
    ignore_empty_value: true
- set:
    field: container.image.hash.all
    copy_from: container.image.digest
    ignore_empty_value: true
- set:
    field: host.ip
    value: ['{{container.ip}}']
    ignore_empty_value: true
- set:
    field: file.directory
    copy_from: fd.directory
    ignore_empty_value: true
- set:
    field: file.name
    copy_from: fd.filename
    ignore_empty_value: true
- convert:
    field: fd.cip
    target_field: client.ip
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.cip
    target_field: client.address
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.sip
    target_field: server.ip
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.sip
    target_field: server.address
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.lip
    target_field: source.ip
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.lip
    target_field: source.address
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.rip
    target_field: destination.ip
    type: ip
    ignore_missing: true
    ignore_failure: true
- convert:
    field: fd.rip
    target_field: destination.address
    type: ip
    ignore_missing: true
    ignore_failure: true
- set:
    field: client.port
    copy_from: fd.cport
    ignore_empty_value: true
- set:
    field: server.port
    copy_from: fd.sport
    ignore_empty_value: true
- set:
    field: source.port
    copy_from: fd.lport
    ignore_empty_value: true
- set:
    field: destination.port
    copy_from: fd.rport
    ignore_empty_value: true
- set:
    field: client.domain
    copy_from: fd.cip.name
    ignore_empty_value: true
- set:
    field: server.domain
    copy_from: fd.sip.name
    ignore_empty_value: true
- set:
    field: source.domain
    copy_from: fd.lip.name
    ignore_empty_value: true
- set:
    field: destination.domain
    copy_from: fd.rip.name
    ignore_empty_value: true
- set:
    field: file.inode
    copy_from: fd.ino
    ignore_empty_value: true
- set:
    field: log.syslog.facility.name
    copy_from: syslog.facility.str
    ignore_empty_value: true
- set:
    field: log.syslog.facility.code
    copy_from: syslog.facility
    ignore_empty_value: true
- set:
    field: log.syslog.severity.name
    copy_from: syslog.severity.str
    ignore_empty_value: true
- set:
    field: log.syslog.severity.code
    copy_from: syslog.severity
    ignore_empty_value: true
- set:
    field: orchestrator.namespace
    copy_from: k8s.ns.name
    ignore_empty_value: true
- set:
    field: orchestrator.resource.name
    copy_from: k8s.pod.name
    ignore_empty_value: true
- set:
    field: orchestrator.resource.id
    copy_from: k8s.pod.uid
    ignore_empty_value: true
- set:
    field: orchestrator.resource.label
    copy_from: k8s.pod.labels
    ignore_empty_value: true
- convert:
    field: k8s.pod.ip
    target_field: orchestrator.resource.ip
    type: ip
    ignore_missing: true
    ignore_failure: true
- set:
    field: orchestrator.resource.type
    value: 'pod'
    if: ctx.containsKey('k8s.pod.name')
- set:
    field: orchestrator.type
    value: 'kubernetes'
    if: ctx.containsKey('k8s.pod.name')
- set:
    target_field: falco.output
    field: output
    ignore_empty_value: true
- set:
    target_field: falco.priority
    field: priority
    ignore_empty_value: true
- set:
    target_field: falco.rule
    field: rule
    ignore_empty_value: true
- set:
    target_field: falco.evt.num
    field: evt.num
    ignore_empty_value: true
- set:
    target_field: falco.evt.time
    field: evt.time
    ignore_empty_value: true
- set:
    target_field: falco.evt.source
    field: evt.source
    ignore_empty_value: true
- set:
    target_field: falco.evt.hostname
    field: evt.hostname
    ignore_empty_value: true
- set:
    target_field: falco.proc.exepath
    field: proc.exepath
    ignore_empty_value: true
- set:
    target_field: falco.proc.pexepath
    field: proc.pexepath
    ignore_empty_value: true
- set:
    target_field: falco.proc.name
    field: proc.name
    ignore_empty_value: true
- set:
    target_field: falco.proc.pname
    field: proc.pname
    ignore_empty_value: true
- set:
    target_field: falco.proc.cmdline
    field: proc.cmdline
    ignore_empty_value: true
- set:
    target_field: falco.proc.pcmdline
    field: proc.pcmdline
    ignore_empty_value: true
- set:
    target_field: falco.proc.cmdnargs
    field: proc.cmdnargs
    ignore_empty_value: true
- set:
    target_field: falco.proc.env
    field: proc.env
    ignore_empty_value: true
- set:
    target_field: falco.proc.cwd
    field: proc.cwd
    ignore_empty_value: true
- set:
    target_field: falco.proc.pid
    field: proc.pid
    ignore_empty_value: true
- set:
    target_field: falco.proc.ppid
    field: proc.ppid
    ignore_empty_value: true
- set:
    target_field: falco.proc.vpid
    field: proc.vpid
    ignore_empty_value: true
- set:
    target_field: falco.proc.pvpid
    field: proc.pvpid
    ignore_empty_value: true
- rename:
    target_field: falco.proc.sid
    field: proc.sid
    ignore_empty_value: true
- rename:
    target_field: falco.proc.sname
    field: proc.sname
    ignore_empty_value: true
- rename:
    target_field: falco.proc.sid.exepath
    field: proc.sid.exepath
    ignore_empty_value: true
- rename:
    target_field: falco.proc.vpgid
    field: proc.vpgid
    ignore_empty_value: true
- rename:
    target_field: falco.proc.vpgid.name
    field: proc.vpgid.name
    ignore_empty_value: true
- rename:
    target_field: falco.proc.duration
    field: proc.duration
    ignore_empty_value: true
- rename:
    target_field: falco.proc.ppid.duration
    field: proc.ppid.duration
    ignore_empty_value: true
- rename:
    target_field: falco.proc.pid.ts
    field: proc.pid.ts
    ignore_empty_value: true
- rename:
    target_field: falco.proc.pid.ts
    field: proc.pid.ts
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_sid_leader
    field: proc.is_sid_leader
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_vpgid_leader
    field: proc.is_vpgid_leader
    ignore_empty_value: true
- rename:
    target_field: falco.thread.cap_permitted
    field: thread.cap_permitted
    ignore_empty_value: true
- rename:
    target_field: falco.thread.cap_effective
    field: thread.cap_effective
    ignore_empty_value: true
- rename:
    target_field: falco.thread.tid
    field: thread.tid
    ignore_empty_value: true
- rename:
    target_field: falco.user.uid
    field: user.uid
    ignore_empty_value: true
- rename:
    target_field: falco.user.name
    field: user.name
    ignore_empty_value: true
- rename:
    target_field: falco.group.id
    field: group.id
    ignore_empty_value: true
- rename:
    target_field: falco.group.name
    field: group.name
    ignore_empty_value: true
- rename:
    target_field: falco.container.image
    field: container.image
    ignore_empty_value: true
- rename:
    target_field: falco.container.type
    field: container.type
    ignore_empty_value: true
- rename:
    target_field: falco.container.privileged
    field: container.privileged
    ignore_empty_value: true
- rename:
    target_field: falco.container.image.digest
    field: container.image.digest
    ignore_empty_value: true
- rename:
    target_field: falco.container.ip
    field: container.ip
    ignore_empty_value: true
- rename:
    target_field: falco.fd.directory
    field: fd.directory
    ignore_empty_value: true
- rename:
    target_field: falco.fd.filename
    field: fd.filename
    ignore_empty_value: true
- rename:
    target_field: falco.fd.cip
    field: fd.cip
    ignore_empty_value: true
- rename:
    target_field: falco.fd.sip
    field: fd.sip
    ignore_empty_value: true
- rename:
    target_field: falco.fd.lip
    field: fd.lip
    ignore_empty_value: true
- rename:
    target_field: falco.fd.rip
    field: fd.rip
    ignore_empty_value: true
- rename:
    target_field: falco.fd.cport
    field: fd.cport
    ignore_empty_value: true
- rename:
    target_field: falco.fd.sport
    field: fd.sport
    ignore_empty_value: true
- rename:
    target_field: falco.fd.lport
    field: fd.lport
    ignore_empty_value: true
- rename:
    target_field: falco.fd.rport
    field: fd.rport
    ignore_empty_value: true
- rename:
    target_field: falco.fd.cip.name
    field: fd.cip.name
    ignore_empty_value: true
- rename:
    target_field: falco.fd.sip.name
    field: fd.sip.name
    ignore_empty_value: true
- rename:
    target_field: falco.fd.lip.name
    field: fd.lip.name
    ignore_empty_value: true
- rename:
    target_field: falco.fd.rip.name
    field: fd.rip.name
    ignore_empty_value: true
- rename:
    target_field: falco.fd.ino
    field: fd.ino
    ignore_empty_value: true
- rename:
    target_field: falco.syslog.facility.str
    field: syslog.facility.str
    ignore_empty_value: true
- rename:
    target_field: falco.syslog.facility
    field: syslog.facility
    ignore_empty_value: true
- rename:
    target_field: falco.syslog.severity.str
    field: syslog.severity.str
    ignore_empty_value: true
- rename:
    target_field: falco.syslog.severity
    field: syslog.severity
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.ns.name
    field: k8s.ns.name
    ignore_empty_value: true
- rename:
    target_field: k8s.pod.name
    field: k8s.pod.name
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.pod.uid
    field: k8s.pod.uid
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.pod.labels
    field: k8s.pod.labels
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.pod.ip
    field: k8s.pod.ip
    ignore_empty_value: true
- rename:
    target_field: falco.evt.pluginname
    field: evt.pluginname
    ignore_empty_value: true
- rename:
    target_field: falco.evt.plugininfo
    field: evt.plugininfo
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_async
    field: evt.is_async
    ignore_empty_value: true
- rename:
    target_field: falco.evt.asynctype
    field: evt.asynctype
    ignore_empty_value: true
- rename:
    target_field: falco.evt.latency
    field: evt.latency
    ignore_empty_value: true
- rename:
    target_field: falco.evt.deltatime
    field: evt.deltatime
    ignore_empty_value: true
- rename:
    target_field: falco.evt.dir
    field: evt.dir
    ignore_empty_value: true
- rename:
    target_field: falco.evt.args
    field: evt.args
    ignore_empty_value: true
- rename:
    target_field: falco.evt.info
    field: evt.info
    ignore_empty_value: true
- rename:
    target_field: falco.evt.buffer
    field: evt.buffer
    ignore_empty_value: true
- rename:
    target_field: falco.evt.buflen
    field: evt.buflen
    ignore_empty_value: true
- rename:
    target_field: falco.evt.res
    field: evt.res
    ignore_empty_value: true
- rename:
    target_field: falco.evt.rawres
    field: evt.rawres
    ignore_empty_value: true
- rename:
    target_field: falco.evt.failed
    field: evt.failed
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_io
    field: evt.is_io
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_io_read
    field: evt.is_io_read
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_io_write
    field: evt.is_io_write
    ignore_empty_value: true
- rename:
    target_field: falco.evt.io_dir
    field: evt.io_dir
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_wait
    field: evt.is_wait
    ignore_empty_value: true
- rename:
    target_field: falco.evt.wait_latency
    field: evt.wait_latency
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_syslog
    field: evt.is_syslog
    ignore_empty_value: true
- rename:
    target_field: falco.evt.count.error
    field: evt.count.error
    ignore_empty_value: true
- rename:
    target_field: falco.evt.count.error_file
    field: evt.count.error.file
    ignore_empty_value: true
- rename:
    target_field: falco.evt.count.error_net
    field: evt.count.error.net
    ignore_empty_value: true
- rename:
    target_field: falco.evt.count.error_memory
    field: evt.count.error.memory
    ignore_empty_value: true
- rename:
    target_field: falco.evt.count.error_other
    field: evt.count.error.other
    ignore_empty_value: true
- rename:
    target_field: falco.evt.count.exit
    field: evt.count.exit
    ignore_empty_value: true
- rename:
    target_field: falco.evt.abspath
    field: evt.abspath
    ignore_empty_value: true
- rename:
    target_field: falco.evt.abspath_src
    field: evt.abspath_src
    ignore_empty_value: true
- rename:
    target_field: falco.evt.abspath_dst
    field: evt.abspath_dst
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_open_read
    field: evt.is_open_read
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_open_write
    field: evt.is_open_write
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_open_exec
    field: evt.is_open_exec
    ignore_empty_value: true
- rename:
    target_field: falco.evt.is_open_create
    field: evt.is_open_create
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exe
    field: proc.exe
    ignore_empty_value: true
- rename:
    target_field: falco.proc.pexe
    field: proc.pexe
    ignore_empty_value: true
- rename:
    target_field: falco.proc.cmdlenargs
    field: proc.cmdlenargs
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exeline
    field: proc.exeline
    ignore_empty_value: true
- rename:
    target_field: falco.proc.loginshellid
    field: proc.loginshellid
    ignore_empty_value: true
- rename:
    target_field: falco.proc.tty
    field: proc.tty
    ignore_empty_value: true
- rename:
    target_field: falco.proc.sid.exe
    field: proc.sid.exe
    ignore_empty_value: true
- rename:
    target_field: falco.proc.vpgid.exe
    field: proc.vpgid.exe
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_exe_writable
    field: proc.is_exe_writable
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_exe_upper_layer
    field: proc.is_exe_upper_layer
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_exe_from_memfd
    field: proc.is_exe_from_memfd
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exe_ino
    field: proc.exe_ino
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exe_ino_ctime
    field: proc.exe_ino.ctime
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exe_ino_mtime
    field: proc.exe_ino.mtime
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exe_ino_ctime_duration_proc_start
    field: proc.exe_ino.ctime_duration_proc_start
    ignore_empty_value: true
- rename:
    target_field: falco.proc.exe_ino_ctime_duration_pidns_start
    field: proc.exe_ino.ctime_duration_pidns_start
    ignore_empty_value: true
- rename:
    target_field: falco.proc.pidns_init_start_ts
    field: proc.pidns_init_start_ts
    ignore_empty_value: true
- rename:
    target_field: falco.proc.thread.cap_inheritable
    field: thread.cap_inheritable
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_container_healthcheck
    field: proc.is_container_healthcheck
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_container_liveness_probe
    field: proc.is_container_liveness_probe
    ignore_empty_value: true
- rename:
    target_field: falco.proc.is_container_readiness_probe
    field: proc.is_container_readiness_probe
    ignore_empty_value: true
- rename:
    target_field: falco.proc.fdopencount
    field: proc.fdopencount
    ignore_empty_value: true
- rename:
    target_field: falco.proc.fdopenlimit
    field: proc.fdopenlimit
    ignore_empty_value: true
- rename:
    target_field: falco.proc.fdusage
    field: proc.fdusage
    ignore_empty_value: true
- rename:
    target_field: falco.proc.vmsize
    field: proc.vmsize
    ignore_empty_value: true
- rename:
    target_field: falco.proc.vmrss
    field: proc.vmrss
    ignore_empty_value: true
- rename:
    target_field: falco.proc.vmswap
    field: proc.vmswap
    ignore_empty_value: true
- rename:
    target_field: falco.thread.pfmajor
    field: thread.pfmajor
    ignore_empty_value: true
- rename:
    target_field: falco.thread.pfminor
    field: thread.pfminor
    ignore_empty_value: true
- rename:
    target_field: falco.thread.ismain
    field: thread.ismain
    ignore_empty_value: true
- rename:
    target_field: falco.thread.vtid
    field: thread.vtid
    ignore_empty_value: true
- rename:
    target_field: falco.thread.exectime
    field: thread.exectime
    ignore_empty_value: true
- rename:
    target_field: falco.thread.totalexectime
    field: thread.totalexectime
    ignore_empty_value: true
- rename:
    target_field: falco.thread.cgroups
    field: thread.cgroups
    ignore_empty_value: true
- rename:
    target_field: falco.proc.nthreads
    field: proc.nthreads
    ignore_empty_value: true
- rename:
    target_field: falco.proc.nchilds
    field: proc.nchilds
    ignore_empty_value: true
- rename:
    target_field: falco.thread.cpu
    field: thread.cpu
    ignore_empty_value: true
- rename:
    target_field: falco.thread.cpu_user
    field: thread.cpu.user
    ignore_empty_value: true
- rename:
    target_field: falco.thread.cpu_system
    field: thread.cpu.system
    ignore_empty_value: true
- rename:
    target_field: falco.thread.vmsize
    field: thread.vmsize
    ignore_empty_value: true
- rename:
    target_field: falco.thread.vmrss
    field: thread.vmrss
    ignore_empty_value: true
- rename:
    target_field: falco.user.homedir
    field: user.homedir
    ignore_empty_value: true
- rename:
    target_field: falco.user.shell
    field: user.shell
    ignore_empty_value: true
- rename:
    target_field: falco.user.loginuid
    field: user.loginuid
    ignore_empty_value: true
- rename:
    target_field: falco.user.loginname
    field: user.loginname
    ignore_empty_value: true
- rename:
    target_field: falco.container.image.full_id
    field: container.full_id
    ignore_empty_value: true
- rename:
    target_field: falco.container.image.id
    field: container.image.id
    ignore_empty_value: true
- script:
    lang: painless
    tag: 'container.mounts'
    source: |
        if (ctx['container'] != null && ctx['container.mounts'] != null) {
            def mountsString = ctx['container.mounts'];
            def mountItems = mountsString.split(' ');
            
            def mountsList = [];
            for (int i = 0; i < mountItems.length; i++) {
                def mountItem = mountItems[i];
                def parts = mountItem.split(':');
                def mountRecord = [:];
                mountRecord.source = parts && parts.length > 0 ? parts[0] : null;
                mountRecord.dest = parts && parts.length > 1 ? parts[1] : null;
                mountRecord.mode = parts && parts.length > 2 ? parts[2] : null;
                mountRecord.rdrw = parts && parts.length > 3 ? parts[3] : null;
                mountRecord.propagation = parts && parts.length > 4 ? parts[4] : null;
                mountsList.add(mountRecord);
            }
            ctx['falco.container.mounts'] = mountsList;
        } else {
            ctx['falco.container.mounts'] = null;
        }
- rename:
    target_field: falco.container.image.repository
    field: container.image.repository
    ignore_empty_value: true
- rename:
    target_field: falco.container.healthcheck
    field: container.healthcheck
    ignore_empty_value: true
- rename:
    target_field: falco.container.liveness_probe
    field: container.liveness_probe
    ignore_empty_value: true
- rename:
    target_field: falco.container.readiness_probe
    field: container.readiness_probe
    ignore_empty_value: true
- rename:
    target_field: falco.container.start_ts
    field: container.start_ts
    ignore_empty_value: true
- rename:
    target_field: falco.container.duration
    field: container.duration
    ignore_empty_value: true
- rename:
    target_field: falco.container.cni_json
    field: container.cni_json
    ignore_empty_value: true
- rename:
    target_field: falco.fd.num
    field: fd.num
    ignore_empty_value: true
- rename:
    target_field: falco.fd.type
    field: fd.type
    ignore_empty_value: true
- rename:
    target_field: falco.fd.typechar
    field: fd.typechar
    ignore_empty_value: true
- rename:
    target_field: falco.fd.name
    field: fd.name
    ignore_empty_value: true
- rename:
    target_field: falco.fd.I4proto
    field: fd.I4proto
    ignore_empty_value: true
- rename:
    target_field: falco.fd.sockfamily
    field: fd.sockfamily
    ignore_empty_value: true
- rename:
    target_field: falco.fd.is_server
    field: fd.is_server
    ignore_empty_value: true
- rename:
    target_field: falco.fd.uid
    field: fd.uid
    ignore_empty_value: true
- rename:
    target_field: falco.fd.containername
    field: fd.containername
    ignore_empty_value: true
- rename:
    target_field: falco.fd.containerdirectory
    field: fd.containerdirectory
    ignore_empty_value: true
- rename:
    target_field: falco.fd.cproto
    field: fd.cproto
    ignore_empty_value: true
- rename:
    target_field: falco.fd.sproto
    field: fd.sproto
    ignore_empty_value: true
- rename:
    target_field: falco.fd.lproto
    field: fd.lproto
    ignore_empty_value: true
- rename:
    target_field: falco.fd.rproto
    field: fd.rproto
    ignore_empty_value: true
- rename:
    target_field: falco.fd.connected
    field: fd.connected
    ignore_empty_value: true
- rename:
    target_field: falco.fd.name_changed
    field: fd.name_changed
    ignore_empty_value: true
- rename:
    target_field: falco.fd.dev
    field: fd.dev
    ignore_empty_value: true
- rename:
    target_field: falco.fd.dev_major
    field: fd.dev_major
    ignore_empty_value: true
- rename:
    target_field: falco.fd.dev_minor
    field: fd.dev_minor
    ignore_empty_value: true
- rename:
    target_field: falco.fs.path.name
    field: fs.path.name
    ignore_empty_value: true
- rename:
    target_field: falco.fs.path.source
    field: fs.path.source
    ignore_empty_value: true
- rename:
    target_field: falco.fs.path.target
    field: fs.path.target
    ignore_empty_value: true
- rename:
    target_field: falco.fdlist.names
    field: fdlist.names
    ignore_empty_value: true
- rename:
    target_field: falco.fdlist.cips
    field: fdlist.cips
    ignore_empty_value: true
- rename:
    target_field: falco.fdlist.sips
    field: fdlist.sips
    ignore_empty_value: true
- rename:
    target_field: falco.fdlist.cports
    field: fdlist.cports
    ignore_empty_value: true
- rename:
    target_field: falco.fdlist.sports
    field: fdlist.sports
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.pod.sandbox_id
    field: k8s.pod.sandbox_id
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.pod.full_sandbox_id
    field: k8s.pod.full_sandbox_id
    ignore_empty_value: true
- rename:
    target_field: falco.k8s.pod.cni_json
    field: k8s.pod.cni_json
    ignore_empty_value: true
- rename:
    target_field: hostname
    field: hostname
    ignore_empty_value: true
- rename:
    target_field: input.type
    field: input.type
    ignore_empty_value: true
- rename:
    target_field: log.source.address
    field: log.source.address
    ignore_empty_value: true
- rename:
    target_field: message
    field: message
    ignore_empty_value: true
- rename:
    target_field: process.program
    field: process.program
    ignore_empty_value: true
- rename:
    target_field: syslog.priority
    field: syslog.priority
    ignore_empty_value: true
- rename:
    target_field: syslog.severity_label
    field: syslog.severity_label
    ignore_empty_value: true
- remove:
    field: ['falco.output','falco.priority','falco.rule','falco.evt.num','falco.evt.time','falco.evt.source','falco.evt.hostname','falco.proc.exepath','falco.proc.pexepath','falco.proc.name','falco.proc.pname','falco.proc.cmdline','falco.proc.pcmdline','falco.proc.cmdnargs','falco.proc.env','falco.proc.cwd','falco.proc.pid','falco.proc.ppid','falco.proc.vpid','falco.proc.pvpid','falco.proc.sid','falco.proc.sname','falco.proc.sid.exepath','falco.proc.vpgid','falco.proc.vpgid.name','falco.proc.vpgid.exepath','falco.proc.duration','falco.proct.ppid.duration','falco.proc.pid.ts','falco.proc.ppid.ts','falco.proc.is_sid_leader','falco.proc.is_vpgid_leader','falco.thread.cap_permitted','falco.thread.cap_effective','falco.thread.tid','falco.user.uid','falco.user.name','falco.group.gid','falco.group.name','falco.container.id','falco.container.name','falco.container.image','falco.container.type','falco.container.privileged','falco.container.image.digest','falco.container.ip','falco.fd.directory','falco.fd.filename','falco.fd.cip','falco.fd.sip','falco.fd.lip','falco.fd.rip','falco.fd.cport','falco.fd.sport','falco.fd.lport','falco.fd.rport','falco.fd.cip.name','falco.fd.sip.name','falco.fd.lip.name','falco.fd.rip.name','falco.fd.ino','falco.syslog.facility.str','falco.syslog.facility','falco.syslog.severity.str','falco.syslog.severity','falco.k8s.ns.name','falco.k8s.pod.name','falco.k8s.pod.uid','falco.k8s.pod.labels','falco.k8s.pod.ip']
    if: ctx['tags'] == null || !(ctx['tags'].contains('preserve_falco_fields'))
    ignore_missing: true
on_failure:
- append:
    field: error.message
    value: Processor "{{ _ingest.on_failure_processor_type }}" with tag "{{ _ingest.on_failure_processor_tag }}" in pipeline "{{ _ingest.on_failure_pipeline }}" failed with message "{{ _ingest.on_failure_message }}"
- set:
    field: event.kind
    value: pipeline_error
