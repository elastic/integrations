---
processors:
  - set:
      field: event.kind
      value: event
  - append:
      field: event.type
      value: [info]
  - grok:
      field: message
      if: ctx?.cisco_ise?.log?.segment?.number == 0
      patterns: 
        - "^%{TIMESTAMP_ISO8601:_tmp.timestamp} %{ISO8601_TIMEZONE:event.timezone} %{DATA:event.sequence:long} %{DATA:cisco_ise.log.message.code} %{DATA:log.syslog.severity.name} %{DATA:cisco_ise.log.message.description}, %{GREEDYDATA:cisco_ise.log.log_details_raw},"
  - grok:
      field: message
      if: ctx?.cisco_ise?.log?.segment?.number > 0
      patterns: 
        - "^%{GREEDYDATA:cisco_ise.log.log_details_raw},"
  - date:
      field: _tmp.timestamp
      target_field: '@timestamp'
      formats: 
        - yyyy-MM-dd HH:mm:ss.SSS
        - yyyy-MM-dd HH:mm:ss.SSSSSS
      timezone: '{{{event.timezone}}}'
      ignore_failure: true
  - script:
      lang: painless
      if: ctx?.cisco_ise?.log?.message?.description != null
      source:
        ctx.event.action = ctx?.cisco_ise?.log?.message?.description?.splitOnToken(":")[0]?.toLowerCase();
  - script:
      lang: painless
      if: ctx?.cisco_ise?.log?.message?.code != null
      source: |
        def eventCategory = new ArrayList();
        def categoryReferenceTable = [
          ["messageCodeArray": ["34120"], "name": "authentication"],
          ["messageCodeArray": ["32025","34126","34127"], "name": "configuration"]
        ];
        for (entry in categoryReferenceTable) {
          if (entry.messageCodeArray.contains(ctx.cisco_ise.log.message.code)) {
            eventCategory.add(entry.name);
          }
        }
        ctx.event.action = ctx?.cisco_ise?.log?.message?.description?.splitOnToken(":")[0]?.toLowerCase();
        ctx.event.category = eventCategory;
  - kv:
      field: cisco_ise.log.log_details_raw
      target_field: cisco_ise.log.log_details
      field_split: ', '
      value_split: =
      ignore_failure: true
  - convert:
      field: cisco_ise.log.log_details.DestinationPort
      target_field: destination.port
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - remove:
      field: cisco_ise.log.log_details.DestinationPort
      ignore_missing: true
  - rename:
      field: cisco_ise.log.log_details.LoggerName
      target_field: cisco_ise.log.logger.name
      ignore_failure: true
      ignore_missing: true
  - rename:
      field: cisco_ise.log.log_details.LogFileName
      target_field: cisco_ise.log.file.name
      ignore_failure: true
      ignore_missing: true
  - rename:
      field: cisco_ise.log.log_details.LogErrorMessage
      target_field: cisco_ise.log.error.message
      ignore_failure: true
      ignore_missing: true
