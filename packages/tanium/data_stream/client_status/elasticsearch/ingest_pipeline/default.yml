---
description: Pipeline for processing Client Status logs.
processors:
  - set:
      tag: set_ecs_version
      field: ecs.version
      value: '8.11.0'
  - append:
      tag: append_event_kind
      field: event.kind
      value: state
      allow_duplicates: false
  - set:
      tag: set_event_type
      field: event.type
      value: [info]
  - rename:
      tag: rename_message
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      tag: json_event_original
      field: event.original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - rename:
      tag: rename_json_status
      field: json.Status
      target_field: tanium.client_status.value
      ignore_missing: true
  - date:
      tag: date_json_lastregistration
      field: json.LastRegistration
      target_field: tanium.client_status.last_registration
      if: ctx.json?.LastRegistration!= null && ctx.json.LastRegistration!= ''
      formats:
        - ISO8601
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - convert:
      tag: convert_json_protocolversion
      field: json.ProtocolVersion
      target_field: tanium.client_status.protocol_version
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - convert:
      tag: convert_json_validkey
      field: json.ValidKey
      target_field: tanium.client_status.valid_key
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - convert:
      tag: convert_json_registeredwithtls
      field: json.RegisteredWithTLS
      target_field: tanium.client_status.registered_with_tLS
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - rename:
      tag: rename_json_sendstate
      field: json.SendState
      target_field: tanium.client_status.send_state
      ignore_missing: true
  - rename:
      tag: rename_json_receivestate
      field: json.ReceiveState
      target_field: tanium.client_status.receive_state
      ignore_missing: true
  - rename:
      tag: rename_json_fullversion
      field: json.FullVersion
      target_field: tanium.client_status.full_version
      ignore_missing: true
  - rename:
      tag: rename_json_hostname
      field: json.HostName
      target_field: tanium.client_status.host_name
      ignore_missing: true
  - set:
      tag: set_host_hostname
      field: host.hostname
      copy_from: tanium.client_status.host_name
      ignore_empty_value: true
  - append:
      tag: append_related_hosts
      field: related.hosts
      value: '{{{host.hostname}}}'
      if: ctx.host?.hostname != null
      allow_duplicates: false
  - rename:
      tag: rename_json_computerid
      field: json.ComputerId
      target_field: tanium.client_status.computer_id
      ignore_missing: true
  - set:
      tag: set_host_id
      field: host.id
      copy_from: tanium.client_status.computer_id
      ignore_empty_value: true
  - append:
      tag: append_related_hosts_2
      field: related.hosts
      value: '{{{host.id}}}'
      if: ctx.host?.id != null
      allow_duplicates: false
  - convert:
      tag: convert_json_clientnetworklocation
      field: json.ClientNetworkLocation
      target_field: tanium.client_status.client_network_location
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - set:
      tag: set_client_ip
      field: client.ip
      copy_from: tanium.client_status.client_network_location
      ignore_empty_value: true
  - append:
      tag: append_related_ip
      field: related.ip
      value: '{{{client.ip}}}'
      if: ctx.client?.ip != null
      allow_duplicates: false
  - convert:
      tag: convert_json_servernetworklocation
      field: json.ServerNetworkLocation
      target_field: tanium.client_status.server_network_location
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
            allow_duplicates: false
  - set:
      tag: set_server_ip
      field: server.ip
      copy_from: tanium.client_status.server_network_location
      ignore_empty_value: true
  - append:
      tag: append_related_ip_2
      field: related.ip
      value: '{{{server.ip}}}'
      if: ctx.server?.ip != null
      allow_duplicates: false
  - append:
      tag: append_event_kind_2
      field: event.kind
      value: pipeline_error
      if: ctx.error?.message != null && ctx.error.message != ''
      allow_duplicates: false
  - remove:
      tag: remove_json
      field: json
      ignore_missing: true
  - remove:
      tag: remove_duplicate_custom_fields
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      field:
        - tanium.client_status.host_name
        - tanium.client_status.computer_id
        - tanium.client_status.client_network_location
        - tanium.client_status.server_network_location
      ignore_missing: true
  - remove:
      tag: remove_event_original
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_missing: true
  - script:
      tag: script_drops_null_empty_values_recursively
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: >
        Processor "{{{ _ingest.on_failure_processor_type }}}"
        with tag "{{{ _ingest.on_failure_processor_tag }}}"
        in pipeline "{{{ _ingest.on_failure_pipeline }}}"
        failed with message "{{{ _ingest.on_failure_message }}}"
