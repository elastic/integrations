---
description: Pipeline for processing web firewall logs
processors:
    - dissect:
          field: _temp.remMessage
          pattern: "%{barracuda.waf.severity_level} %{barracuda.waf.protocol} %{_temp.clientIp} %{_temp.clientPort} %{_temp.destIp} %{_temp.destPort} %{barracuda.waf.policy} %{rule.name} %{_temp.remMessage}"
          ignore_missing: true
          ignore_failure: true
    - convert:
          field: _temp.clientIp
          target_field: client.ip
          type: ip
          ignore_missing: true
    - convert:
          field: _temp.clientPort
          target_field: client.port
          type: long
          ignore_missing: true
    - convert:
          field: _temp.destIp
          target_field: destination.ip
          type: ip
          ignore_missing: true
    - convert:
          field: _temp.destPort
          target_field: destination.port
          type: long
          ignore_missing: true
    - geoip:
          field: destination.ip
          target_field: destination.geo
          ignore_missing: true
    - geoip:
          field: client.ip
          target_field: client.geo
          ignore_missing: true
    - set:
          field: source
          copy_from: client
    - set:
          field: server
          copy_from: destination
    - set:
          field: event.category
          value: [network]
    - set:
          field: event.type
          value: [connection]
    - set:
          field: event.action
          copy_from: barracuda.waf.policy
    ################################################################
    # Event kind for ALERT , CRITICAL , EMERGENCY type severity level
    ################################################################
    - set:
          field: event.kind
          value: alert
          if: ctx.barracuda.waf?.severity_level != null && ["ALER", "EMER", "CRIT", "ALERT", "CRITICAL","EMERGENCY"].contains(ctx.barracuda.waf.severity_level)
    - set:
          field: event.kind
          value: event
          if: ctx.event?.kind == null
    - set:
          field: rule.category
          value: Network ACL
    - set:
          field: rule.description
          value: Network traffic passing through the interfaces (WAN, LAN, and MGMT) that matches the configured Network ACL rule

on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
