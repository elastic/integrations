---
description: Pipeline for processing Mimecast dlp_logs.
processors:
  # Generic event/ecs fields we always want to populate.
  - set:
      field: ecs.version
      value: '8.5.0'
  - rename:
      field: message
      target_field: event.original
  - json:
      description: Parse 'message' JSON contents into a 'mimecast' object.
      field: event.original
      target_field: mimecast
  - drop:
      if: ctx?.mimecast?.eventTime == null
  - date:
      description: Use 'mimecast.eventTime' as the '@timestamp'
      field: mimecast.eventTime
      timezone: UTC
      formats:
        - yyyy-MM-dd'T'HH:mm:ssZ

  ###
  - append:
      field: email.from.address
      value: "{{{mimecast.senderAddress}}}"
      if: "ctx?.mimecast?.senderAddress != null"
  - append:
      field: email.to.address
      value: "{{{mimecast.recipientAddress}}}"
      if: "ctx?.mimecast?.recipientAddress != null"
  - dissect:
       field: email.from.address
       pattern: "<%{email.from.address}>"
       ignore_missing: true
       ignore_failure: true
  - dissect:
       field: email.to.address
       pattern: "<%{email.to.address}>"
       ignore_missing: true
       ignore_failure: true  
  - rename:
      field: mimecast.action
      target_field: event.action
      ignore_missing: true
      if: 'ctx?.mimecast?.action !=null'
  - rename:
      field: mimecast.subject
      target_field: email.subject
      ignore_missing: true
      if: 'ctx?.mimecast?.subject !=null'
  - rename:
      field: mimecast.messageId
      target_field: email.message_id
      ignore_missing: true
      if: 'ctx?.mimecast?.messageId !=null'
  - rename:
      field: mimecast.route
      target_field: email.direction
      ignore_missing: true
      if: 'ctx?.mimecast?.route !=null'
  - rename:
      field: mimecast.policy
      target_field: rule.name
      ignore_missing: true
      if: 'ctx?.mimecast?.policy !=null'
  - set:
      field: event.created
      value: "{{mimecast.eventTime}}"
      if: 'ctx?.mimecast?.eventTime != null'
  - lowercase:
      field: email.direction
      ignore_missing: true
  # Cleanup
  - remove:
      description: Cleanup of repeated/unwanted/temporary fields.
      field: 
        - mimecast
      ignore_missing: true
  - remove:
      description: Remove 'event.original' if 'preserve_original_event' is not set.
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      
# Error handling
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'