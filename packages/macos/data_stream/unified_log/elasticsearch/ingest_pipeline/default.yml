---
description: Pipeline for processing unified_log logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - append:
      field: event.category
      tag: append_authentication_into_event_category
      value: authentication
  - append:
      field: event.category
      tag: append_configuration_into_event_category
      value: configuration
  - append:
      field: event.category
      tag: append_file_into_event_category
      value: file
  - append:
      field: event.category
      tag: append_host_into_event_category
      value: host
  - append:
      field: event.category
      tag: append_iam_into_event_category
      value: iam
  - append:
      field: event.category
      tag: append_network_into_event_category
      value: network
  - append:
      field: event.category
      tag: append_process_into_event_category
      value: process
  - append:
      field: event.type
      tag: append_info_into_event_type
      value: info  
  - convert:
      field: json.activityIdentifier
      tag: convert_activityIdentifier_to_string
      target_field: macos.unified_log.activity_identifier
      type: string
      ignore_missing: true
  - foreach:
      field: json.backtrace.frames
      tag: foreach_backtrace_frames_imageOffset
      if: ctx.json?.backtrace?.frames instanceof List
      processor:
        convert:
          field: _ingest._value.imageOffset
          type: string
          tag: rename_backtrace_frames_imageOffset
          target_field: _ingest._value.image.offset
          ignore_missing: true
  - foreach:
      field: json.backtrace.frames
      tag: foreach_backtrace_frames_imageOffset
      if: ctx.json?.backtrace?.frames instanceof List
      processor:
        remove:
          field: _ingest._value.imageOffset
          tag: remove_imageOffset
          ignore_missing: true
  - foreach:
      field: json.backtrace.frames
      tag: foreach_backtrace_frames_imageUUID
      if: ctx.json?.backtrace?.frames instanceof List
      processor:
        rename:
          field: _ingest._value.imageUUID
          tag: rename_backtrace_frames_imageUUID
          target_field: _ingest._value.image.uuid
          ignore_missing: true
  - rename:
      field: json.backtrace.frames
      tag: rename_backtrace_frames
      target_field: macos.unified_log.backtrace.frames
      ignore_missing: true
  - rename:
      field: json.bootUUID
      tag: rename_bootUUID
      target_field: macos.unified_log.boot_uuid
      ignore_missing: true
  - rename:
      field: json.category
      tag: rename_category
      target_field: macos.unified_log.category
      ignore_missing: true
  - rename:
      field: json.eventMessage
      tag: rename_eventMessage
      target_field: macos.unified_log.event.message.description
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_unified_log_event_message_description
      copy_from: macos.unified_log.event.message.description
      ignore_empty_value: true
  - grok:
      description: Grok the eventMessage.
      tag: grok-event-message
      field: macos.unified_log.event.message.description
      ignore_missing: true
      pattern_definitions:
        GREEDYMULTILINE: '(.|\n)*'
      patterns:
        - '^-\[%{WORD} %{WORD}\] \|%{SPACE}final sessionDictionary:\{(?:%{SPACE}DirectLogoutType = %{NUMBER:macos.unified_log.event.message.direct_logout_type:int};)?(?:%{SPACE}GroupID = %{NUMBER:macos.unified_log.event.message.group_id};)?(?:%{SPACE}GuestAccount = %{NUMBER:macos.unified_log.event.message.guest_account:int};)?(?:%{SPACE}HomeDirectoryPath = %{DATA:macos.unified_log.event.message.home_directory_path};)?(?:%{SPACE}SessionAgentPID = %{NUMBER:macos.unified_log.event.message.session_agent_pid};)?(?:%{SPACE}UserGUID = %{DATA:macos.unified_log.event.message.user.guid};)?(?:%{SPACE}UserID = %{NUMBER:macos.unified_log.event.message.user.id};)?(?:%{SPACE}UserLongName = %{DATA:macos.unified_log.event.message.user.long_name};)?(?:%{SPACE}UserName = %{DATA:macos.unified_log.event.message.user.name};)?\n\}'
        - '^-\[%{WORD} %{WORD}\] \|(?:%{SPACE}shortUsername = %{WORD:macos.unified_log.event.message.user.name},)?(?:%{SPACE}userID = %{NUMBER:macos.unified_log.event.message.user.id},)?(?:%{SPACE}groupID = %{NUMBER:macos.unified_log.event.message.group_id})'
        - '%{GREEDYDATA:macos.unified_log.event.message.original}'
  - set:
      field: group.id
      tag: set_group_id_from_unified_log_message_group_id
      copy_from: macos.unified_log.event.message.group_id
      ignore_empty_value: true
  - set:
      field: user.full_name
      tag: set_user_full_name_from_unified_log_message_userlongname
      copy_from: macos.unified_log.event.message.user.long_name
      ignore_empty_value: true
  - set:
      field: user.name
      tag: set_user_name_from_unified_log_message_username
      copy_from: macos.unified_log.event.message.user.name
      ignore_empty_value: true
  - set:
      field: user.group.id
      tag: set_user_group_id_from_unified_log_message_user_guid
      copy_from: macos.unified_log.event.message.user.guid
      ignore_empty_value: true
  - append:
      field: user.id
      tag: append_unified_log_event_message_user_id_into_user_id
      value: '{{{macos.unified_log.event.message.user.id}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.event?.message?.user?.id != null
  - append:
      field: related.user
      tag: append_unified_log_event_message_user_id_into_related_user
      value: '{{{macos.unified_log.event.message.user.id}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.event?.message?.user?.id != null
  - append:
      field: related.user
      tag: append_unified_log_event_message_user_long_name_into_related_user
      value: '{{{macos.unified_log.event.message.user.long_name}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.event?.message?.user?.long_name != null
  - append:
      field: related.user
      tag: append_unified_log_event_message_user_name_into_related_user
      value: '{{{macos.unified_log.event.message.user.name}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.event?.message?.user?.name != null
  - append:
      field: related.user
      tag: append_unified_log_event_message_user_guid_into_related_user
      value: '{{{macos.unified_log.event.message.user.guid}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.event?.message?.user?.guid != null
  - rename:
      field: json.eventType
      tag: rename_eventType
      target_field: macos.unified_log.event.type
      ignore_missing: true
  - rename:
      field: json.formatString
      tag: rename_formatString
      target_field: macos.unified_log.format_string
      ignore_missing: true
  - convert:
      field: json.machTimestamp
      type: double
      tag: convert_machTimestamp_to_string
      target_field: macos.unified_log.mach_timestamp
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.messageType
      tag: rename_messageType
      target_field: macos.unified_log.message_type
      ignore_missing: true
  - set:
      field: log.level
      tag: set_log_level_from_unified_log_message_type
      copy_from: macos.unified_log.message_type
      ignore_empty_value: true
  - convert:
      field: json.parentActivityIdentifier
      tag: convert_parentActivityIdentifier_to_string
      target_field: macos.unified_log.parent_activity_identifier
      type: string
      ignore_missing: true
  - convert:
      field: json.processID
      tag: convert_processID_to_string
      target_field: macos.unified_log.process.id
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: process.pid
      tag: set_process_pid_from_unified_log_process_id
      copy_from: macos.unified_log.process.id
      ignore_empty_value: true
  - rename:
      field: json.processImagePath
      tag: rename_processImagePath
      target_field: macos.unified_log.process.image_path
      ignore_missing: true
  - rename:
      field: json.processImageUUID
      tag: rename_processImageUUID
      target_field: macos.unified_log.process.image_uuid
      ignore_missing: true
  - rename:
      field: json.senderImagePath
      tag: rename_senderImagePath
      target_field: macos.unified_log.sender.image_path
      ignore_missing: true
  - rename:
      field: json.senderImageUUID
      tag: rename_senderImageUUID
      target_field: macos.unified_log.sender.image_uuid
      ignore_missing: true
  - convert:
      field: json.senderProgramCounter
      tag: convert_senderProgramCounter_to_long
      target_field: macos.unified_log.sender.program_counter
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.source
      tag: rename_source
      target_field: macos.unified_log.source
      ignore_missing: true
  - rename:
      field: json.subsystem
      tag: rename_subsystem
      target_field: macos.unified_log.subsystem
      ignore_missing: true
  - convert:
      field: json.threadID
      tag: convert_threadID_to_long
      target_field: macos.unified_log.thread_id
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: process.thread.id
      tag: set_process_thread_id_from_unified_log_thread_id
      copy_from: macos.unified_log.thread_id
      ignore_empty_value: true
  - date:
      field: json.timestamp
      tag: date_timestamp
      target_field: macos.unified_log.timestamp
      formats:
        - yyyy-MM-dd HH:mm:ss.SSSSSSZ
        - yyyy-MM-dd HH:mm:ss.SSSZ
        - strict_date_optional_time
      if: ctx.json?.timestamp != null && ctx.json.timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_unified_log_timestamp
      copy_from: macos.unified_log.timestamp
      ignore_empty_value: true
  - rename:
      field: json.timezoneName
      tag: rename_timezoneName
      target_field: macos.unified_log.timezone_name
      ignore_missing: true
  - convert:
      field: json.traceID
      tag: convert_traceID_to_string
      target_field: macos.unified_log.trace_id
      type: string
      ignore_missing: true
  - convert:
      field: json.userID
      tag: convert_userID_to_string
      target_field: macos.unified_log.user_id
      type: string
      ignore_missing: true
  - append:
      field: user.id
      tag: append_into_user_id_from_unified_log_user_id
      value: '{{{macos.unified_log.user_id}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.user_id != null
  - append:
      field: related.user
      tag: append_unified_log_user_id_into_related_user
      value: '{{{macos.unified_log.user_id}}}'
      allow_duplicates: false
      if: ctx.macos?.unified_log?.user_id != null
  - pipeline:
      name: '{{ IngestPipeline "pipeline-network" }}'
      if: ctx.macos?.unified_log?.subsystem != null && (ctx.macos.unified_log.subsystem.toLowerCase().contains('network') || ctx.macos.unified_log.subsystem.toLowerCase().contains('xpc'))
  - remove:
      field:
        - macos.unified_log.event.message.description
        - macos.unified_log.event.message.group_id
        - macos.unified_log.event.message.user.long_name
        - macos.unified_log.event.message.user.name
        - macos.unified_log.event.message.user.guid
        - macos.unified_log.event.message.user.id
        - macos.unified_log.message_type
        - macos.unified_log.process.id
        - macos.unified_log.thread_id
        - macos.unified_log.timestamp
        - macos.unified_log.user_id
        - macos.unified_log.event.message.signature_alg
        - macos.unified_log.event.message.request_bytes
        - macos.unified_log.event.message.response_bytes
        - macos.unified_log.event.message.response_status
        - macos.unified_log.event.message.dest_port
        - macos.unified_log.event.message.src_port
        - macos.unified_log.event.message.hostname
        - macos.unified_log.event.message.pid
        - macos.unified_log.event.message.url
        - macos.unified_log.event.message.client_ip
        - macos.unified_log.event.message.client_port
        - macos.unified_log.event.message.server_port
        - macos.unified_log.event.message.bytes_in
        - macos.unified_log.event.message.bytes_out
        - macos.unified_log.event.message.packets_in
        - macos.unified_log.event.message.packets_out
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field:
        - json
        - macos.unified_log.event.message.original
        - macos.unified_log.event.message.ecn_in_out_miss
        - macos.unified_log.event.message.rd_t_in_out
        - macos.unified_log.event.message.tfo_in_out_miss
        - macos.unified_log.event.message.wr_t_in_out
        - macos.unified_log.event.message.accurate_ecn
      tag: remove_non_required_fields
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
