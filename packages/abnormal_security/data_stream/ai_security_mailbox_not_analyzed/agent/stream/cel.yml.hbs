config_version: 2
interval: {{interval}}
resource.tracer:
  enabled: {{enable_request_tracer}}
  filename: "../../logs/cel/http-request-trace-*.ndjson"
  maxbackups: 5
{{#if proxy_url}}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
resource.url: {{url}}
state:
  initial_interval: {{initial_interval}}
  access_token: {{access_token}}
  want_more: false
redact:
  fields:
    - access_token
program: |
  (
    state.with({
      "start_time": state.?cursor.last_timestamp.orValue((now - duration(state.initial_interval)).format(time_layout.RFC3339)),
      "end_time": now.format(time_layout.RFC3339),
    })
  ).as(state, state.with(
    request(
      "GET",
      state.url.trim_right("/") + "/v1/abuse_mailbox/not_analyzed?" + {
        "start": [state.start_time],
        "end": [state.end_time],
      }.format_query()
    ).with({
      "Header":{
        "Authorization": ["Bearer " + string(state.access_token)],
      }
    }).do_request().as(resp, resp.StatusCode == 200 ?
        resp.Body.decode_json().as(body, has(body.results) && size(body.results) > 0 ?
          {
            "events": body.results.map(result,
              {
                "message": result.encode_json(),
              }
            ),
            "cursor": {
              ?"last_timestamp": has(body.results) && body.results.size() > 0 ?
                optional.of(body.results.map(r, timestamp(r.reported_datetime)).max().format(time_layout.RFC3339))
              :
                state.?cursor.last_timestamp
            },
          }
        :
          {
            // Empty response, do nothing
            "events":[],
          }

        )
      :
        {
          "events": {
            "error": {
              "code": string(resp.StatusCode),
              "id": string(resp.Status),
              "message": "GET "+state.url.trim_right("/") + "/v1/abuse_mailbox/not_analyzed:"+(
                size(resp.Body) != 0 ?
                  string(resp.Body)
                :
                  string(resp.Status) + ' (' + string(resp.StatusCode) + ')'
              ),
            },
          },
        }
    )
  ))
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#if preserve_duplicate_custom_fields}}
  - preserve_duplicate_custom_fields
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
