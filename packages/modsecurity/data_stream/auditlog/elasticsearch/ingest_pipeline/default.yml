---
description: Pipeline for modsecurity audit log.
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
      allow_duplicate_keys: true
      # according to check apache modesec log or nginx modsec log
  - set:
      field: modsec.audit.server
      copy_from: json.audit_data.server
      ignore_empty_value: true
  - set:
      field: modsec.audit.server
      copy_from: json.transaction.response.headers.Server
      ignore_empty_value: true
  - set:
      field: modsec.audit.connector
      copy_from: json.transaction.producer.connector
      ignore_empty_value: true
  - pipeline:
      name: '{{ IngestPipeline "nginx-modsec" }}'
      if: (ctx.modsec?.audit?.server != null && ctx.modsec.audit.server.toLowerCase().contains('nginx')) || (ctx.modsec?.audit?.connector != null && ctx.modsec.audit.connector.toLowerCase().contains('nginx'))
  - pipeline:
      name: '{{ IngestPipeline "apache-modsec" }}'
      if: (ctx.modsec?.audit?.server != null && ctx.modsec.audit.server.toLowerCase().contains('apache')) || (ctx.modsec?.audit?.connector != null && ctx.modsec.audit.connector.toLowerCase().contains('apache'))
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
