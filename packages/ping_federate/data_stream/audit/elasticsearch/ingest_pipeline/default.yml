---
description: Pipeline for processing Audit logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.16.0
  - set:
      field: event.kind
      value: event
      tag: set_event_kind
  - rename:
      field: _conf.tz_offset
      target_field: event.timezone
      if: ctx._conf?.tz_offset != null
      tag: rename_tz_offset
      ignore_missing: true
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - remove:
      field:
        - observer.hostname
        - '@timestamp'
      tag: remove_observer_hostname_and_timestamp_to_add_later_on_cond
      ignore_missing: true
  - rename:
      field: cef.name
      tag: rename_cef_name
      target_field: ping_federate.audit.event
      ignore_missing: true
  - set:
      field: event.action
      tag: set_event_action
      copy_from: ping_federate.audit.event
      ignore_empty_value: true
  - lowercase:
      field: event.action
      tag: lowercase_event_action
      ignore_missing: true
  - append:
      field: event.category
      value: authentication
      tag: append_event_category_authentication
      if: >-
        ctx.ping_federate?.audit?.event != null && (
          ctx.ping_federate.audit.event == 'SLO' ||
          ctx.ping_federate.audit.event == 'SSO' ||
          ctx.ping_federate.audit.event == 'OAuth' ||
          ctx.ping_federate.audit.event == 'AUTHN_ATTEMPT' ||
          ctx.ping_federate.audit.event == 'AUTHN_REQUEST'
        )
  - append:
      field: event.category
      value: session
      tag: append_event_category_session
      if: >-
        ctx.ping_federate?.audit?.event != null && (
          ctx.ping_federate.audit.event == 'AUTHN_SESSION_CREATED' ||
          ctx.ping_federate.audit.event == 'AUTHN_SESSION_USED' ||
          ctx.ping_federate.audit.event == 'AUTHN_SESSION_DELETED' ||
          ctx.ping_federate.audit.event == 'SRI_REVOKED'
        )
  - append:
      field: event.type
      value: info
      tag: append_event_type_info
      if: >-
        ctx.ping_federate?.audit?.event != null && (
          ctx.ping_federate.audit.event == 'OAuth' ||
          ctx.ping_federate.audit.event == 'AUTHN_SESSION_USED'
        )
  - append:
      field: event.type
      value: start
      tag: append_event_type_start
      if: >-
        ctx.ping_federate?.audit?.event != null && (
          ctx.ping_federate.audit.event == 'SSO' ||
          ctx.ping_federate.audit.event == 'AUTHN_ATTEMPT' ||
          ctx.ping_federate.audit.event == 'AUTHN_REQUEST' ||
          ctx.ping_federate.audit.event == 'AUTHN_SESSION_CREATED'
        )
  - append:
      field: event.type
      value: end
      tag: append_event_type_end
      if: >-
        ctx.ping_federate?.audit?.event != null && (
          ctx.ping_federate.audit.event == 'SLO' ||
          ctx.ping_federate.audit.event == 'SRI_REVOKED' ||
          ctx.ping_federate.audit.event == 'AUTHN_SESSION_DELETED'
        )
  - convert:
      field: cef.severity
      tag: convert_severity_to_long
      target_field: ping_federate.audit.severity
      type: long
      ignore_missing: true
      if: ctx.ping_federate?.audit?.severity != ''
      on_failure:
        - remove:
            field: ping_federate.audit.severity
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: cef.extensions.deviceHostName
      tag: convert_deviceHostName_to_ip
      target_field: ping_federate.audit.host.ip
      type: ip
      ignore_missing: true
      if: ctx.ping_federate?.audit?.host?.ip != ''
      on_failure:
        - rename:
            field: cef.extensions.deviceHostName
            tag: set_device_host_name
            target_field: ping_federate.audit.host.name
  - append:
      field: observer.ip
      value: '{{{ping_federate.audit.host.ip}}}'
      allow_duplicates: false
      tag: append_observer_ip
      if: ctx.ping_federate?.audit?.host?.ip != null
  - append:
      field: related.ip
      value: '{{{ping_federate.audit.host.ip}}}'
      allow_duplicates: false
      tag: append_related_ip
      if: ctx.ping_federate?.audit?.host?.ip != null
  - set:
      field: observer.hostname
      copy_from: ping_federate.audit.host.name
      tag: set_observer_name
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{ping_federate.audit.host.name}}}'
      allow_duplicates: false
      tag: append_related_hosts
      if: ctx.ping_federate?.audit?.host?.name != null
  - date:
      field: cef.extensions.deviceReceiptTime
      tag: date_ping_federate_audit_response_time
      target_field: ping_federate.audit.response_time
      formats:
        - ISO8601
      if: ctx.cef?.extensions?.deviceReceiptTime != null && ctx.cef.extensions.deviceReceiptTime != '' && ctx.event?.timezone == null
      on_failure:
        - remove:
            field: ping_federate.audit.response_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: cef.extensions.deviceReceiptTime
      tag: date_ping_federate_audit_response_time_timezone
      target_field: ping_federate.audit.response_time
      timezone: '{{{event.timezone}}}'
      formats:
        - ISO8601
      if: ctx.cef?.extensions?.deviceReceiptTime != null && ctx.cef.extensions.deviceReceiptTime != '' && ctx.event?.timezone != null
      on_failure:
        - remove:
            field: ping_federate.audit.response_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      copy_from: ping_federate.audit.response_time
      ignore_empty_value: true
  - set:
      field: ping_federate.audit.app
      tag: set_app_value_from_deviceCustomString1
      copy_from: cef.extensions.deviceCustomString1
      ignore_empty_value: true
  - uri_parts:
      field: ping_federate.audit.app
      tag: uri_parts
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: url.full
      tag: set_url_full
      copy_from: ping_federate.audit.app
      ignore_empty_value: true
  - set:
      field: ping_federate.audit.connection_id
      tag: set_connection_id_from_deviceCustomString2
      copy_from: cef.extensions.deviceCustomString2
      ignore_empty_value: true
  - set:
      field: ping_federate.audit.protocol
      tag: set_protocol_from_deviceCustomString3
      copy_from: cef.extensions.deviceCustomString3
      ignore_empty_value: true
  - set:
      field: ping_federate.audit.local_user_id
      tag: set_local_user_id_from_deviceCustomString5
      copy_from: cef.extensions.deviceCustomString5
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_local_user_id_to_related_user
      value: '{{{ping_federate.audit.local_user_id}}}'
      allow_duplicates: false
      if: ctx.ping_federate?.audit?.local_user_id != null
  - set:
      field: ping_federate.audit.subject
      tag: set_subject_from_destinationUserId
      copy_from: cef.extensions.destinationUserId
      ignore_empty_value: true
  - set:
      field: user.name
      tag: set_user_name_from_subject
      copy_from: ping_federate.audit.subject
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_local_user_id_to_related_user
      value: '{{{ping_federate.audit.subject}}}'
      allow_duplicates: false
      if: ctx.ping_federate?.audit?.subject != null
  - set:
      field: ping_federate.audit.attributes
      tag: set_attributes_from_deviceCustomString6
      copy_from: cef.extensions.deviceCustomString6
      ignore_empty_value: true
  - rename:
      field: cef.extensions.externalId
      tag: rename_externalId_to_tracking_id
      target_field: ping_federate.audit.tracking_id
      ignore_missing: true
  - rename:
      field: cef.extensions.message
      tag: rename_message_to_status
      target_field: ping_federate.audit.status
      ignore_missing: true
  - set:
      field: event.outcome
      tag: set_event_outcome_unknown
      value: unknown
      ignore_empty_value: true
  - set:
      field: event.outcome
      tag: set_event_outcome_success
      value: success
      if: ctx.ping_federate?.audit?.status?.toLowerCase().contains("success")
  - set:
      field: event.outcome
      tag: set_event_outcome_failure
      value: failure
      if: ctx.ping_federate?.audit?.status?.toLowerCase().contains("fail")
  - set:
      field: ping_federate.audit.role
      tag: set_role_from_deviceCustomString4
      copy_from: cef.extensions.deviceCustomString4
      ignore_empty_value: true
  - split:
      field: ping_federate.audit.role
      if: ctx.ping_federate?.audit?.role != null && ctx.ping_federate.audit.role.contains(',')
      tag: split_audit_role
      separator: ','
      on_failure:
        - remove:
            field: ping_federate.audit.role
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ping_federate.audit.role
      if: ctx.ping_federate?.audit?.role instanceof List
      ignore_failure: true
      processor:
        append:
          field: user.roles
          tag: append_list_to_user_roles
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
          if: ctx.ping_federate?.audit?.role != null
  - append:
      field: user.roles
      tag: append_to_user_roles
      value: '{{{ping_federate.audit.role}}}'
      allow_duplicates: false
      if: ctx.ping_federate?.audit?.role != null && ctx.user?.roles == null
  - convert:
      field: cef.extensions.sourceAddress
      tag: convert_sourceAddress_to_ip
      target_field: ping_federate.audit.ip
      type: ip
      ignore_missing: true
      if: ctx.ping_federate?.audit?.ip != ''
      on_failure:
        - remove:
            field: ping_federate.audit.ip
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.ip
      tag: set_source_ip
      copy_from: ping_federate.audit.ip
      ignore_empty_value: true
  - geoip:
      field: source.ip
      target_field: source.geo
      tag: geoip_proc
      ignore_missing: true
  - append:
      field: related.ip
      tag: append_ping_federate_audit_ip_to_related_ip
      value: '{{{ping_federate.audit.ip}}}'
      allow_duplicates: false
      if: ctx.ping_federate?.audit?.ip != null
  - remove:
      field:
        - ping_federate.audit.event
        - ping_federate.audit.subject
        - ping_federate.audit.ip
        - ping_federate.audit.app
        - ping_federate.audit.host.ip
        - ping_federate.audit.host.name
        - ping_federate.audit.role
        - ping_federate.audit.status
        - ping_federate.audit.response_time
        - ping_federate.audit.severity
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field:
        - cef
        - destination.user.id
      tag: remove_cef_and_destination_user_id
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: Drops null/empty values recursively.
      source: |-
        boolean drop(Object object) {
          if (object == null || object == '') {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(v -> drop(v));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(v -> drop(v));
            return (((List) object).length == 0);
          }
          return false;
        }
        drop(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
