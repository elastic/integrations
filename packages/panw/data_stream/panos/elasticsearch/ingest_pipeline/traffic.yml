---
description: Pipeline for PanOS Traffic Logs
processors:
  - csv:
      field: message
      target_fields:
        - source.ip
        - destination.ip
        - source.nat.ip
        - destination.nat.ip
        - panw.panos.ruleset
        - source.user.name
        - destination.user.name
        - network.application
        - panw.panos.virtual_sys
        - observer.ingress.zone
        - observer.egress.zone
        - observer.ingress.interface.name
        - observer.egress.interface.name
        - panw.panos.log_profile
        - _temp_.future_use1
        - panw.panos.flow_id
        - panw.panos.repeat_count
        - source.port
        - destination.port
        - source.nat.port
        - destination.nat.port
        - _temp_.labels
        - network.transport
        - panw.panos.action
        - network.bytes
        - source.bytes
        - destination.bytes
        - network.packets
        - event.start
        - event.duration
        - panw.panos.url.category
        - _temp_.future_use2
        - panw.panos.sequence_number
        - panw.panos.action_flags
        - _temp_.srcloc
        - _temp_.dstloc
        - _temp_.future_use3
        - source.packets
        - destination.packets
        - panw.panos.endreason
        - panw.panos.device_group_hierarchy1
        - panw.panos.device_group_hierarchy2
        - panw.panos.device_group_hierarchy3
        - panw.panos.device_group_hierarchy4
        - panw.panos.vsys_name
        - observer.hostname
        - panw.panos.action_source
        - panw.panos.source_vm_uuid
        - panw.panos.destination_vm_uuid
        - panw.panos.imsi
        - panw.panos.imei
        - panw.panos.parent_session.id
        - panw.panos.parent_session.start_time
        - panw.panos.tunnel_type
        - panw.panos.sctp.assoc_id
        - panw.panos.sctp.chunks
        - panw.panos.sctp.chunks_sent
        - panw.panos.sctp.chunks_received
        - rule.uuid
        - panw.panos.http2_connection
        - panw.panos.link.change_count
        - panw.panos.policy.id
        - panw.panos.link.switches
        - panw.panos.sdwan.cluster.name
        - panw.panos.sdwan.device_type
        - panw.panos.sdwan.cluster.type
        - panw.panos.sdwan.site
        - panw.panos.dynamic_user.group.name
        - panw.panos.xff.ip
        - panw.panos.src.category
        - panw.panos.src.profile
        - panw.panos.src.model
        - panw.panos.src.vendor
        - panw.panos.src.os.family
        - panw.panos.src.os.version
        - panw.panos.src.host
        - panw.panos.src.mac
        - panw.panos.dst.category
        - panw.panos.dst.profile
        - panw.panos.dst.model
        - panw.panos.dst.vendor
        - panw.panos.dst.os.family
        - panw.panos.dst.os.version
        - panw.panos.dst.host
        - panw.panos.dst.mac
        - panw.panos.container.id
        - panw.panos.pod.namespace
        - panw.panos.pod.name
        - panw.panos.src.external_dynamic_list
        - panw.panos.dst.external_dynamic_list
        - panw.panos.host.id
        - panw.panos.serial_number
        - panw.panos.src.dynamic_address_group
        - panw.panos.dst.dynamic_address_group
        - panw.panos.session.owner
        - _temp_.high_res_timestamp
        - panw.panos.nsdsai_sst
        - panw.panos.nsdsai_sd
        - panw.panos.application.sub_category
        - panw.panos.application.category
        - panw.panos.application.technology
        - panw.panos.application.risk_level
        - panw.panos.application.characteristics
        - panw.panos.application.container
        - panw.panos.application.tunneled
        - panw.panos.application.is_saas
        - panw.panos.application.is_sanctioned
        - panw.panos.is_offloaded

  - set:
      field: http.version
      value: '2'
      if: ctx.panw?.panos?.http2_connection != null && ctx.panw?.panos?.http2_connection != 0 && ctx.panw?.panos?.http2_connection != "0"

# Set network.direction using src/dst zone (traffic logs).
  - set:
      field: network.direction
      value: inbound
      if: >
        ctx?._temp_?.external_zones != null &&
        ctx?._temp_?.internal_zones != null &&
        ctx?.observer?.ingress?.zone != null &&
        ctx?.observer?.egress?.zone != null &&
        ctx._temp_.external_zones.contains(ctx.observer.ingress.zone) &&
        ctx._temp_.internal_zones.contains(ctx.observer.egress.zone)
  - set:
      field: network.direction
      value: outbound
      if: >
        ctx?._temp_?.external_zones != null &&
        ctx?._temp_?.internal_zones != null &&
        ctx?.observer?.ingress?.zone != null &&
        ctx?.observer?.egress?.zone != null &&
        ctx._temp_.external_zones.contains(ctx.observer.egress.zone) &&
        ctx._temp_.internal_zones.contains(ctx.observer.ingress.zone)
  - set:
      field: network.direction
      value: internal
      if: >
        ctx?._temp_?.internal_zones != null &&
        ctx?.observer?.ingress?.zone != null &&
        ctx?.observer?.egress?.zone != null &&
        ctx._temp_.internal_zones.contains(ctx.observer.egress.zone) &&
        ctx._temp_.internal_zones.contains(ctx.observer.ingress.zone)
  - set:
      field: network.direction
      value: external
      if: >
        ctx?._temp_?.external_zones != null &&
        ctx?.observer?.ingress?.zone != null &&
        ctx?.observer?.egress?.zone != null &&
        ctx._temp_.external_zones.contains(ctx.observer.egress.zone) &&
        ctx._temp_.external_zones.contains(ctx.observer.ingress.zone)
  - set:
      field: network.direction
      value: unknown
      if: >
        ctx?._temp_?.external_zones != null &&
        ctx?._temp_?.internal_zones != null &&
        (
          (
            !ctx._temp_.external_zones.contains(ctx?.observer?.egress?.zone) &&
            !ctx._temp_.internal_zones.contains(ctx?.observer?.egress?.zone)
          ) ||
          (
            !ctx._temp_.external_zones.contains(ctx?.observer?.ingress?.zone) &&
            !ctx._temp_.internal_zones.contains(ctx?.observer?.ingress?.zone)
          )
        )

# Set event.category.
  - set:
      field: event.kind
      value: event
  - append:
      field: event.category
      value:
        - network

# Time the parent_session of the tunnel started.
  - date:
      if: "ctx?.event?.timezone == null && ctx?.panw?.panos?.parent_session?.start_time != null"
      field: "panw.panos.parent_session.start_time"
      target_field: "panw.panos.parent_session.start_time"
      formats:
        - "yyyy/MM/dd HH:mm:ss"
        - "strict_date_optional_time_nanos"
      on_failure: [{"append": {"field": "error.message", "value": "{{ _ingest.on_failure_message }}"}}]
  - date:
      if: "ctx?.event?.timezone != null && ctx?.panw?.panos?.parent_session?.start_time != null"
      field: "panw.panos.parent_session.start_time"
      target_field: "panw.panos.parent_session.start_time"
      timezone: "{{{ event.timezone }}}"
      formats:
        - "yyyy/MM/dd HH:mm:ss"
        - "strict_date_optional_time_nanos"
      on_failure: [{"append": {"field": "error.message", "value": "{{ _ingest.on_failure_message }}"}}]

# Set custom fields to ECS fields
  - set:
      field: panw.panos.bytes_received
      copy_from: destination.bytes
      ignore_failure: true
  - set:
      field: panw.panos.destination.location
      copy_from: _temp_.dstloc
      ignore_failure: true
  - set:
      field: panw.panos.destination.ip
      copy_from: destination.ip
      ignore_failure: true
  - set:
      field: panw.panos.destination.nat.ip
      copy_from: destination.nat.ip
      ignore_failure: true
  - set:
      field: panw.panos.destination.nat.port
      copy_from: destination.nat.port
      ignore_failure: true
  - set:
      field: panw.panos.packets_received
      copy_from: destination.packets
      ignore_failure: true
  - set:
      field: panw.panos.destination.port
      copy_from: destination.port
      ignore_failure: true
  - set:
      field: panw.panos.destination.user
      copy_from: destination.user.name
      ignore_failure: true
  - set:
      field: panw.panos.elapsed_time
      copy_from: event.duration
      ignore_failure: true
  - set:
      field: panw.panos.start_time
      copy_from: event.start
      ignore_failure: true
  - set:
      field: panw.panos.network.application
      copy_from: network.application
      ignore_failure: true
  - set:
      field: panw.panos.network.bytes
      copy_from: network.bytes
      ignore_failure: true
  - set:
      field: panw.panos.network.packets
      copy_from: network.packets
      ignore_failure: true
  - set:
      field: panw.panos.protocol
      copy_from: network.transport
      ignore_failure: true
  - set:
      field: panw.panos.outbound_interface
      copy_from: observer.egress.interface.name
      ignore_failure: true
  - set:
      field: panw.panos.destination.zone
      copy_from: observer.egress.zone
      ignore_failure: true
  - set:
      field: panw.panos.device_name
      copy_from: observer.hostname
      ignore_failure: true
  - set:
      field: panw.panos.inbound_interface
      copy_from: observer.ingress.interface.name
      ignore_failure: true
  - set:
      field: panw.panos.source.zone
      copy_from: observer.ingress.zone
      ignore_failure: true
  - set:
      field: panw.panos.rule_uuid
      copy_from: rule.uuid
      ignore_failure: true
  - set:
      field: panw.panos.bytes_sent
      copy_from: source.bytes
      ignore_failure: true
  - set:
      field: panw.panos.source.location
      copy_from: _temp_.srcloc
      ignore_failure: true
  - set:
      field: panw.panos.source.ip
      copy_from: source.ip
      ignore_failure: true
  - set:
      field: panw.panos.source.nat.ip
      copy_from: source.nat.ip
      ignore_failure: true
  - set:
      field: panw.panos.packets_sent
      copy_from: source.packets
      ignore_failure: true
  - set:
      field: panw.panos.source.port
      copy_from: source.port
      ignore_failure: true
  - set:
      field: panw.panos.source.nat.port
      copy_from: source.nat.port
      ignore_failure: true
  - set:
      field: panw.panos.source.user
      copy_from: source.user.name
      ignore_failure: true

on_failure:
  - append:
      field: error.message
      value: >-
        error in Traffic pipeline:
        error in [{{_ingest.on_failure_processor_type}}] processor{{#_ingest.on_failure_processor_tag}}
        with tag [{{_ingest.on_failure_processor_tag }}]{{/_ingest.on_failure_processor_tag}}
        {{ _ingest.on_failure_message }}
