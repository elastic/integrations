---
description: Pipeline for processing Cisco Aironet Logs
processors:
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      ignore_failure: true
  - set:
      field: ecs.version
      value: '8.3.1'
  - grok:
      field: event.original
      patterns:
        - "%{SYSLOG_HEADER}:\\s%%{GREEDYDATA:_temp_.full_message}"
        - "%{SYSLOGFACILITY}%{INT}: AP:%{MAC:host.mac}: \\*%{AIRONET_DATE:_temp_.raw_date}: %%{GREEDYDATA:_temp_.full_message}"
      pattern_definitions:
        SYSLOG_HEADER: "%{SYSLOGFACILITY}%{DATA:host.name}:\\s\\*%{DATA:process.name}:\\s%{AIRONET_DATE:_temp_.raw_date}"
        SYSLOGFACILITY: "<%{NONNEGINT:log.syslog.priority:int}>"
        AIRONET_DATE: "%{MONTH} %{MONTHDAY} %{TIME}"
  - script:
      lang: painless
      source: |
        if (ctx.log?.syslog?.priority != null) {
          def severity = new HashMap();
          severity['code'] = ctx.log.syslog.priority&0x7;
          ctx.log.syslog['severity'] = severity;
          def facility = new HashMap();
          facility['code'] = ctx.log.syslog.priority>>3;
          ctx.log.syslog['facility'] = facility;
        }
  - grok:
      field: _temp_.full_message
      patterns:
        - "%{DATA:event.provider}-%{INT:event.severity}-%{DATA:event.action}: %{DATA}:%{INT} %{GREEDYDATA:message}"
  - grok:
      field: _temp_.full_message
      patterns:
        - "%{DATA:_temp_.reason}:"

  #
  # Set log.level
  #
  - set:
      field: "log.level"
      value: unknown
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 1"
      value: alert
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 2"
      value: critical
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 3"
      value: error
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 4"
      value: warning
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 5"
      value: notification
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 6"
      value: informational
  - set:
      field: "log.level"
      if: "ctx.log.syslog.severity.code == 7"
      value: debug
  #
  # Parse the date included in logs
  #
  - set:
      field: _conf.tz_offset
      value: UTC
      override: false
  - date:
      if: "ctx._temp_?.raw_date != null"
      field: "_temp_.raw_date"
      target_field: "@timestamp"
      formats:
        - "MMM d HH:mm:ss.SSS"
      timezone: '{{{_conf.tz_offset}}}'

  # Parse out IP addresses from Logs
  - grok:
      field: message
      if: "ctx.event?.action == 'ENTRY_CREATED' || ctx.event?.action == 'ENTRY_DELETED'"
      patterns:
        - "((Entry created)|(Entry deleted)) A=%{IP:client.ip}"
  # Parse out User addresses from Logs
  - grok:
      field: message
      if: "ctx.event?.action == 'AAA_AUTH_ADMIN_USER'"
      patterns:
        - "Authentication succeeded for admin user '%{DATA:user.name}' on %{IP:client.ip}"

  # Client MAC
  - grok:
      field: message
      ignore_missing: true
      ignore_failure: true
      patterns:
        - "client %{MAC:client.mac}"
  # Mac address cleanup
  - uppercase:
      field: client.mac
      ignore_missing: true
  - gsub:
      field: client.mac
      pattern: '[-:.]'
      replacement: '-'
      ignore_missing: true
  - uppercase:
      field: host.mac
      ignore_missing: true
  - gsub:
      field: host.mac
      pattern: '[-:.]'
      replacement: ''
      ignore_missing: true
  - gsub:
      field: host.mac
      pattern: '(..)(?!$)'
      replacement: '$1-'
      ignore_missing: true

  # IP Geolocation Lookup
  - geoip:
      field: client.ip
      target_field: client.geo
      ignore_missing: true

  # IP Autonomous System (AS) Lookup
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: client.ip
      target_field: client.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: client.as.asn
      target_field: client.as.number
      ignore_missing: true
  - rename:
      field: client.as.organization_name
      target_field: client.as.organization.name
      ignore_missing: true


  # Adding information to event types
  - set:
      description: SISF-6-ENTRY_CREATED
      field: event.reason
      if: ctx._temp_?.reason == 'SISF-6-ENTRY_CREATED'
      ignore_failure: true
      value: IPv6 Neighbor Discovery,A low rate of vetoed resolutions is not serious.
        If there is a high rate of vetos this might suggest that the link is under attack.
        Investigate the source of the packets driving these resolution requests"
  - set:
      description: SISF-6-ENTRY_DELETED
      field: event.reason
      if: ctx._temp_?.reason == 'SISF-6-ENTRY_DELETED'
      ignore_failure: true
      value: Device Smart-Licensing status is out of compliance.
  - set:
      description: BCAST-4-MLD_INVALID_IPV6_PKT
      field: event.reason
      if: ctx._temp_?.reason == 'BCAST-4-MLD_INVALID_IPV6_PKT'
      ignore_failure: true
      value: IPv6 MLD packets are must have nexthdr as zero and hop limit of 1 in the
        IPv6 header.
  - set:
      description: NIM-3-ADMIN_MODE_DISABLE
      field: event.reason
      if: ctx._temp_?.reason == 'NIM-3-ADMIN_MODE_DISABLE'
      ignore_failure: true
      value: Checksum Error on the config file
  - set:
      description: WPS-4-SIG_ALARM_OFF
      field: event.reason
      if: ctx._temp_?.reason == 'WPS-4-SIG_ALARM_OFF'
      ignore_failure: true
      value: Signature Alarm Off"
  - set:
      description: AAA-5-AAA_AUTH_ADMIN_USER
      field: event.reason
      if: ctx._temp_?.reason == 'AAA-5-AAA_AUTH_ADMIN_USER'
      ignore_failure: true
      value: Authentication for an admin user.
  - set:
      description: LWAPP-4-SIG_INFO1
      field: event.reason
      if: ctx._temp_?.reason == 'LWAPP-4-SIG_INFO1'
      ignore_failure: true
      value: An internal error caused while freeing AID. This AID is used by some other
        client.
  - set:
      description: SISF-6-ENTRY_CHANGED
      field: event.reason
      if: ctx._temp_?.reason == 'SISF-6-ENTRY_CHANGED'
      ignore_failure: true
      value: An entry was created in the binding table
  - set:
      description: APF-4-MOBILESTATION_NOT_FOUND
      field: event.reason
      if: ctx._temp_?.reason == 'APF-4-MOBILESTATION_NOT_FOUND'
      ignore_failure: true
      value: Could not find a particular mobile station in internal database
  - set:
      description: DOT1X-4-MAX_EAPOL_KEY_RETRANS
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-4-MAX_EAPOL_KEY_RETRANS'
      ignore_failure: true
      value: An unknown attribute-value pair was received during EAP processing. The
        AVP was ignored.
  - set:
      description: RRM-3-RRM_LOGMSG
      field: event.reason
      if: ctx._temp_?.reason == 'RRM-3-RRM_LOGMSG'
      ignore_failure: true
      value: Load profile recovery
  - set:
      description: AAA-3-INVALID_REQUEST
      field: event.reason
      if: ctx._temp_?.reason == 'AAA-3-INVALID_REQUEST'
      ignore_failure: true
      value: The system has received an AAA request with a null or invalid payload.
  - set:
      description: DOT1X-3-AAA_AUTH_SEND_FAIL
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-3-AAA_AUTH_SEND_FAIL'
      ignore_failure: true
      value: Client authentication failed because an internal error occurred during
        authentication state transition.
  - set:
      description: DOT1X-3-ABORT_AUTH
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-3-ABORT_AUTH'
      ignore_failure: true
      value: A message on an internal queue could not be processed because the client
        indicated in the message was not found in the internal database.
  - set:
      description: DOT1X-3-INVALID_WPA_KEY_STATE
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-3-INVALID_WPA_KEY_STATE'
      ignore_failure: true
      value: Not able to verify PMKR1Name for the client. Try client association again.
  - set:
      description: DOT1X-3-WPA_SEND_STATE_ERR
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-3-WPA_SEND_STATE_ERR'
      ignore_failure: true
      value: A pre-authentication request message from a client was ignored
  - set:
      description: DOT1X-3-INVALID_REPLAY_CTR
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-3-INVALID_REPLAY_CTR'
      ignore_failure: true
      value: Error while calcualting PTK using KDF algo. for11r or 11w capable clients
        as Input Key Len is wrong.
  - set:
      description: LWAPP-3-REPLAY_ERR
      field: event.reason
      if: ctx._temp_?.reason == 'LWAPP-3-REPLAY_ERR'
      ignore_failure: true
      value: The controller has received a replay error on the specified AP and WLAN.
  - set:
      description: DOT1X-3-CLIENT_NOT_FOUND
      field: event.reason
      if: ctx._temp_?.reason == 'DOT1X-3-CLIENT_NOT_FOUND'
      ignore_failure: true
      value: AP's 802.1X interface was not allocated by WLC which is required for client
        association on dot1x WLAN. Hence Client association on dot1xWLAN with this AP
        will fail.



  # Cleanup fields
  - remove:
      field: _temp_
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: _conf
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: event.original
      if: "ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true




on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'