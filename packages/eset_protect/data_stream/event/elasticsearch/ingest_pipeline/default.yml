---
description: Pipeline for processing event logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: event.kind
      tag: set_event_kind_alert
      value: alert
      if: ctx.json?.event_type != "Audit_Event"
  - set:
      field: event.kind
      tag: set_event_kind_event
      value: event
      if: ctx.json?.event_type == "Audit_Event"
  - append:
      field: event.category
      tag: append_intrusion_detection_into_event_category
      value: intrusion_detection
      if: ctx.json?.event_type != null && ['HipsAggregated_Event','FirewallAggregated_Event'].contains(ctx.json.event_type)
  - append:
      field: event.category
      tag: append_threat_into_event_category
      value: threat
      if: ctx.json?.event_type != null && ['Threat_Event'].contains(ctx.json.event_type)
  - append:
      field: event.category
      tag: append_web_into_event_category
      value: web
      if: ctx.json?.event_type != null && ['FilteredWebsites_Event'].contains(ctx.json.event_type)
  - append:
      field: event.category
      tag: append_file_into_event_category
      value: file
      if: ctx.json?.event_type != null && ['BlockedFiles_Event'].contains(ctx.json.event_type)
  - append:
      field: event.type
      tag: append_info_into_event_type
      value: info
      if: ctx.json?.event_type != null && !['Threat_Event'].contains(ctx.json.event_type)
  - append:
      field: event.type
      tag: append_indicator_into_event_type
      value: indicator
      if: ctx.json?.event_type != null && ['Threat_Event'].contains(ctx.json.event_type)
  - rename:
      field: json.group_description
      tag: rename_group_description
      target_field: eset_protect.event.group_description
      ignore_missing: true
  - rename:
      field: json.group_name
      tag: rename_group_name
      target_field: eset_protect.event.group_name
      ignore_missing: true
  - set:
      field: group.name
      tag: set_group_name_from_event_group_name
      copy_from: eset_protect.event.group_name
      ignore_empty_value: true
  - rename:
      field: json.hostname
      tag: rename_hostname
      target_field: eset_protect.event.hostname
      ignore_missing: true
  - set:
      field: host.name
      tag: set_host_name_from_event_hostname
      copy_from: eset_protect.event.hostname
      if: ctx.eset_protect?.event?.hostname?.contains('.') == true
  - grok:
      field: eset_protect.event.hostname
      tag: grok_host_hostname_and_domain_from_event_hostname
      patterns:
        - '(%{DATA:host.hostname}\.%{GREEDYDATA:host.domain}|%{GREEDYDATA:host.hostname})'
      if: ctx.eset_protect?.event?.hostname != null 
  - set:
      field: host.name
      tag: set_host_name_from_host_hostname
      copy_from: host.hostname
      if: ctx.host?.hostname != null && ctx.host.name == null
  - lowercase:
      field: host.name
      tag: lowercase_host_name
      ignore_missing: true
  - append:
      field: related.hosts
      tag: append_host_name_into_related_hosts
      value: "{{{host.name}}}"
      allow_duplicates: false
      if: ctx.host?.name != null
  - append:
      field: related.hosts
      tag: append_hostname_into_related_hosts
      value: "{{{host.hostname}}}"
      allow_duplicates: false
      if: ctx.host?.hostname != null
  - convert:
      field: json.ipv4
      tag: convert_ipv4_to_ip
      target_field: eset_protect.event.ipv4
      type: ip
      ignore_missing: true
      if: ctx.json?.ipv4 != null && ctx.json.ipv4 != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - append:
      field: host.ip
      tag: append_eset_protect_event_ipv4_into_host_ip
      value: "{{{eset_protect.event.ipv4}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.ipv4 != null
  - append:
      field: related.ip
      tag: append_ipv4_into_related_ip
      value: "{{{eset_protect.event.ipv4}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.ipv4 != null
  - convert:
      field: json.ipv6
      tag: convert_ipv6_to_ip
      target_field: eset_protect.event.ipv6
      type: ip
      ignore_missing: true
      if: ctx.json?.ipv6 != null && ctx.json.ipv6 != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - append:
      field: host.ip
      tag: append_eset_protect_event_ipv6_into_host_ip
      value: "{{{eset_protect.event.ipv6}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.ipv6 != null
  - append:
      field: related.ip
      tag: append_ipv6_into_related_ip
      value: "{{{eset_protect.event.ipv6}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.ipv6 != null
  - date:
      field: json.occured
      tag: date_occured
      target_field: eset_protect.event.occured
      formats:
        - dd-MMM-yyyy HH:mm:ss
      if: ctx.json?.occured != null && ctx.json.occured != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: "@timestamp"
      tag: set_@timestamp_from_event_occured
      copy_from: eset_protect.event.occured
      ignore_empty_value: true
  - rename:
      field: json.os_name
      tag: rename_os_name
      target_field: eset_protect.event.os_name
      ignore_missing: true
  - set:
      field: host.os.name
      tag: set_host_os_name_from_event_os_name
      copy_from: eset_protect.event.os_name
      ignore_empty_value: true
  - rename:
      field: json.severity
      tag: rename_severity
      target_field: eset_protect.event.severity
      ignore_missing: true
  - rename:
      field: json.source_uuid
      tag: rename_source_uuid
      target_field: eset_protect.event.source_uuid
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_event_source_uuid
      copy_from: eset_protect.event.source_uuid
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_source_uuid_into_related_hosts
      value: "{{{eset_protect.event.source_uuid}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.source_uuid != null
  - rename:
      field: json.event_type
      tag: rename_event_type
      target_field: eset_protect.event.type
      ignore_missing: true
  - set:
      field: threat.indicator.provider
      tag: set_threat_indicator_provider
      value: ESET PROTECT
      if: ctx.eset_protect?.event?.type != null && ['Threat_Event','HipsAggregated_Event','FirewallAggregated_Event','FilteredWebsites_Event','BlockedFiles_Event'].contains(ctx.eset_protect.event.type)
  - set:
      field: threat.indicator.file.hash.sha1
      tag: set_threat_indicator_file_hash_sha1
      copy_from: json.hash
      ignore_empty_value: true
      if: ctx.eset_protect?.event?.type == 'BlockedFiles_Event' || ctx.json?.object_type?.toLowerCase() == 'file'
  - set:
      field: threat.indicator.type
      tag: set_threat_indicator_type
      value: file
      if: ctx.eset_protect?.event?.type == 'BlockedFiles_Event' || ctx.json?.object_type?.toLowerCase() == 'file'
  - rename:
      field: json.account
      tag: rename_account
      target_field: eset_protect.event.account
      ignore_missing: true
  - append:
      field: related.user
      tag: append_account_into_related_user
      value: "{{{eset_protect.event.account}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.account != null
  - rename:
      field: json.action
      tag: rename_action
      target_field: eset_protect.event.action
      ignore_missing: true
  - set:
      field: event.action
      tag: set_event_action_from_event_action
      copy_from: eset_protect.event.action
      ignore_empty_value: true
      if: ctx.eset_protect?.event?.action != ''
  - rename:
      field: json.action_taken
      tag: rename_action_taken
      target_field: eset_protect.event.action_taken
      ignore_missing: true
  - set:
      field: event.action
      tag: set_event_action_from_event_action_taken
      copy_from: eset_protect.event.action_taken
      ignore_empty_value: true
      if: ctx.event?.action == null
  - lowercase:
      field: event.action
      tag: lowercase_event_action
      ignore_missing: true
  - split:
      field: event.action
      tag: split_event_action
      separator: \s+
      ignore_missing: true
      if: ctx.event?.action != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - join:
      field: event.action
      tag: join_event_action
      separator: "-"
      if: ctx.event?.action instanceof List
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - rename:
      field: json.action_error
      tag: rename_action_error
      target_field: eset_protect.event.action_error
      ignore_missing: true
  - convert:
      field: json.aggregate_count
      tag: convert_aggregate_count_to_long
      target_field: eset_protect.event.aggregate_count
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: threat.indicator.sightings
      tag: set_threat_indicator_sightings_from_event_aggregate_count
      copy_from: eset_protect.event.aggregate_count
      ignore_empty_value: true
  - rename:
      field: json.application
      tag: rename_application
      target_field: eset_protect.event.application
      ignore_missing: true
  - rename:
      field: json.cause
      tag: rename_cause
      target_field: eset_protect.event.cause
      ignore_missing: true
  - set:
      field: event.reason
      tag: set_event_reason_from_event_cause
      copy_from: eset_protect.event.cause
      ignore_empty_value: true
  - rename:
      field: json.circumstances
      tag: rename_circumstances
      target_field: eset_protect.event.circumstances
      ignore_missing: true
  - set:
      field: event.reason
      tag: set_event_reason_from_event_circumstances
      copy_from: eset_protect.event.circumstances
      ignore_empty_value: true
  - convert:
      field: json.computer_severity_score
      tag: convert_computer_severity_score_to_long
      target_field: eset_protect.event.computer_severity_score
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - convert:
      field: json.count
      tag: convert_count_to_long
      target_field: eset_protect.event.count
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - rename:
      field: json.description
      tag: rename_description
      target_field: eset_protect.event.description
      ignore_missing: true
  - rename:
      field: json.detail
      tag: rename_detail
      target_field: eset_protect.event.detail
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_event_detail
      copy_from: eset_protect.event.detail
      ignore_empty_value: true
  - rename:
      field: json.domain
      tag: rename_domain
      target_field: eset_protect.event.domain
      ignore_missing: true
  - rename:
      field: json.eialarmid
      tag: rename_eialarmid
      target_field: eset_protect.event.eialarmid
      ignore_missing: true
  - rename:
      field: json.eiconsolelink
      tag: rename_eiconsolelink
      target_field: eset_protect.event.eiconsolelink
      ignore_missing: true
  - set:
      field: event.reference
      tag: set_event_reference_from_event_eiconsolelink
      copy_from: eset_protect.event.eiconsolelink
      ignore_empty_value: true
  - rename:
      field: json.engine_version
      tag: rename_engine_version
      target_field: eset_protect.event.engine_version
      ignore_missing: true
  - rename:
      field: json.event
      tag: rename_event
      target_field: eset_protect.event.name
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_event_name
      copy_from: eset_protect.event.name
      ignore_empty_value: true
  - date:
      field: json.firstseen
      tag: date_firstseen
      target_field: eset_protect.event.firstseen
      formats:
        - yyyyMMdd'T'HHmmss
        - dd-MMM-yyyy HH:mm:ss
      if: ctx.json?.firstseen != null && ctx.json.firstseen != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: threat.indicator.first_seen
      tag: set_threat_indicator_first_seen_from_event_firstseen
      copy_from: eset_protect.event.firstseen
      ignore_empty_value: true
  - convert:
      field: json.handled
      tag: convert_handled_to_string
      target_field: eset_protect.event.handled
      type: string
      ignore_missing: true
  - set:
      field: eset_protect.event.is_handled
      tag: set_is_handled_to_true
      value: true
      if: ctx.eset_protect?.event?.handled != "1"
  - set:
      field: eset_protect.event.is_handled
      tag: set_is_handled_to_false
      value: false
      if: ctx.eset_protect?.event?.handled != "0"
  - rename:
      field: json.hash
      tag: rename_hash
      target_field: eset_protect.event.hash
      ignore_missing: true
  - append:
      field: related.hash
      tag: append_hash_into_related_hash
      value: "{{{eset_protect.event.hash}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.hash != null
  - convert:
      field: json.inbound
      tag: convert_inbound_to_boolean
      target_field: eset_protect.event.inbound
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: network.direction
      tag: set_network_direction_to_inbound
      value: inbound
      if: ctx.eset_protect?.event?.inbound == true
  - convert:
      field: json.need_restart
      tag: convert_need_restart_to_boolean
      target_field: eset_protect.event.need_restart
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - rename:
      field: json.object_type
      tag: rename_object_type
      target_field: eset_protect.event.object_type
      ignore_missing: true
  - set: 
      field: file.type
      value: file
      tag: set_file_type_file
      if: ctx.eset_protect?.event?.object_type?.toLowerCase() == 'file'
  - rename:
      field: json.object_uri
      tag: rename_object_uri
      target_field: eset_protect.event.object_uri
      ignore_missing: true
  - set:
      field: file.path
      if: "ctx.eset_protect?.event?.object_uri != null && ctx.eset_protect?.event?.object_type?.toLowerCase() == 'file'"
      copy_from: eset_protect.event.object_uri
  - grok: 
      field: file.path
      patterns: 
        - '^(file:///)?%{FILEPATH:file.path}$'
        - '.*/(?<file.name>.+\.(?<file.extension>.+))$'
      pattern_definitions:
        FILEPATH: '(?<file.drive_letter>\w):(?<file.directory>/.*/|/)?(?<file.name>.+(\.(?<file.extension>.+))?)?'
      if: ctx.file?.path != null
  - rename:
      field: json.operation
      tag: rename_operation
      target_field: eset_protect.event.operation
      ignore_missing: true
  - rename:
      field: json.process_name
      tag: rename_process_name
      target_field: eset_protect.event.processname
      ignore_missing: true
  - rename:
      field: json.processname
      tag: rename_processname
      target_field: eset_protect.event.processname
      ignore_missing: true
  - set:
      field: process.executable
      tag: set_process_executable_from_event_processname
      copy_from: eset_protect.event.processname
      ignore_empty_value: true
  - grok:
      field: eset_protect.event.processname
      tag: grok_processname
      ignore_missing: true
      patterns:
        - '^%{GREEDYDATA:json._temp}\\%{DATA:process.name}$'
        - '^%{GREEDYDATA:json._temp}/%{DATA:process.name}$'
        - '^%{DATA:process.name}$'
      if: ctx.eset_protect?.event?.processname != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - rename:
      field: json.protocol
      tag: rename_protocol
      target_field: eset_protect.event.protocol
      ignore_missing: true
  - set:
      field: network.protocol
      tag: set_network_protocol_from_event_protocol
      copy_from: eset_protect.event.protocol
      ignore_empty_value: true
  - lowercase:
      field: network.protocol
      tag: lowercase_network_protocol
      ignore_missing: true
  - rename:
      field: json.result
      tag: rename_result
      target_field: eset_protect.event.result
      ignore_missing: true
  - set:
      field: event.outcome
      tag: set_event_outcome_to_success
      value: success
      if: ctx.eset_protect?.event?.result == "Success"
  - set:
      field: event.outcome
      tag: set_event_outcome_to_failure
      value: failure
      if: ctx.eset_protect?.event?.result == "Failed"
  - rename:
      field: json.rule_id
      tag: rename_rule_id
      target_field: eset_protect.event.rule_id
      ignore_missing: true
  - rename:
      field: json.rule_name
      tag: rename_rule_name
      target_field: eset_protect.event.rulename
      ignore_missing: true
  - rename:
      field: json.rulename
      tag: rename_rulename
      target_field: eset_protect.event.rulename
      ignore_missing: true
  - set:
      field: rule.name
      tag: set_rule_name_from_event_rulename
      copy_from: eset_protect.event.rulename
      ignore_empty_value: true
      if: ctx.eset_protect?.event?.rulename != ''
  - set:
      field: rule.name
      tag: set_rule_name_from_event_rule_id
      copy_from: eset_protect.event.rule_id
      ignore_empty_value: true
      if: ctx.rule?.name == null
  - rename:
      field: json.scan_id
      tag: rename_scan_id
      target_field: eset_protect.event.scan_id
      ignore_missing: true
  - rename:
      field: json.scanner_id
      tag: rename_scanner_id
      target_field: eset_protect.event.scanner_id
      ignore_missing: true
  - convert:
      field: json.severity_score
      tag: convert_severity_score_to_long
      target_field: eset_protect.event.severity_score
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: event.severity
      tag: set_event_severity_from_event_severity_score
      copy_from: eset_protect.event.severity_score
      ignore_empty_value: true
  - convert:
      field: json.source_address
      tag: convert_source_address_to_ip
      target_field: eset_protect.event.source_address
      type: ip
      ignore_missing: true
      if: ctx.json?.source_address != null && ctx.json.source_address != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: source.ip
      tag: set_source_ip_from_event_source_address
      copy_from: eset_protect.event.source_address
      ignore_empty_value: true
  - geoip:
      field: source.ip
      tag: geoip_source_ip_to_source_geo
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      tag: geoip_source_ip_to_source_as
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      tag: rename_source_as_asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      tag: rename_source_as_organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - append:
      field: related.ip
      tag: append_source_address_into_related_ip
      value: "{{{eset_protect.event.source_address}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.source_address != null
  - rename:
      field: json.source_address_type
      tag: rename_source_address_type
      target_field: eset_protect.event.source_address_type
      ignore_missing: true
  - convert:
      field: json.source_port
      tag: convert_source_port_to_long
      target_field: eset_protect.event.source_port
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: source.port
      tag: set_source_port_from_event_source_port
      copy_from: eset_protect.event.source_port
      ignore_empty_value: true
  - rename:
      field: json.target
      tag: rename_target
      target_field: eset_protect.event.target
      ignore_missing: true
  - convert:
      field: json.target_address
      tag: convert_target_address_to_ip
      target_field: eset_protect.event.target_address
      type: ip
      ignore_missing: true
      if: ctx.json?.target_address != null && ctx.json.target_address != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: destination.ip
      tag: set_destination_ip_from_event_target_address
      copy_from: eset_protect.event.target_address
      ignore_empty_value: true
  - geoip:
      field: destination.ip
      tag: geoip_destination_ip_to_destination_geo
      target_field: destination.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      tag: geoip_destination_ip_to_destination_as
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      tag: rename_destination_as_asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      tag: rename_destination_as_organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      field: related.ip
      tag: append_target_address_into_related_ip
      value: "{{{eset_protect.event.target_address}}}"
      allow_duplicates: false
      if: ctx.eset_protect?.event?.target_address != null
  - rename:
      field: json.target_address_type
      tag: rename_target_address_type
      target_field: eset_protect.event.target_address_type
      ignore_missing: true
  - convert:
      field: json.target_port
      tag: convert_target_port_to_long
      target_field: eset_protect.event.target_port
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: destination.port
      tag: set_destination_port_from_event_target_port
      copy_from: eset_protect.event.target_port
      ignore_empty_value: true
  - rename:
      field: json.threat_flags
      tag: rename_threat_flags
      target_field: eset_protect.event.threat_flags
      ignore_missing: true
  - convert:
      field: json.threat_handled
      tag: convert_threat_handled_to_boolean
      target_field: eset_protect.event.threat_handled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - rename:
      field: json.threat_name
      tag: rename_threat_name
      target_field: eset_protect.event.threat_name
      ignore_missing: true
  - set:
      field: threat.indicator.name
      tag: set_threat_indicator_name_from_event_threat_name
      copy_from: eset_protect.event.threat_name
      ignore_empty_value: true
  - rename:
      field: json.threat_type
      tag: rename_threat_type
      target_field: eset_protect.event.threat_type
      ignore_missing: true
  - rename:
      field: json.user
      tag: rename_user
      target_field: eset_protect.event.username
      ignore_missing: true
  - rename:
      field: json.username
      tag: rename_username
      target_field: eset_protect.event.username
      ignore_missing: true
  - grok:
      field: eset_protect.event.username
      tag: grok_user_name
      ignore_missing: true
      patterns:
        - '^%{HOSTNAME:user.domain}\\%{USERNAME:user.name}$'
        - '^%{HOSTNAME:user.domain}\\\\%{USERNAME:user.name}$'
        - '^%{USERNAME:user.name}@%{HOSTNAME:user.domain}$'
        - '^%{GREEDYDATA:user.name}$'
      if: ctx.eset_protect?.event?.username != ''
      on_failure:
        - append:
            field: error.message
            value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - append:
      field: related.user
      tag: append_user_name_into_related_user
      value: "{{{user.name}}}"
      allow_duplicates: false
      if: ctx.user?.name != null
  - remove:
      field:
        - eset_protect.event.group_name
        - eset_protect.event.hostname
        - eset_protect.event.ipv4
        - eset_protect.event.ipv6
        - eset_protect.event.occured
        - eset_protect.event.os_name
        - eset_protect.event.source_uuid
        - eset_protect.event.aggregate_count
        - eset_protect.event.cause
        - eset_protect.event.circumstances
        - eset_protect.event.detail
        - eset_protect.event.eiconsolelink
        - eset_protect.event.name
        - eset_protect.event.firstseen
        - eset_protect.event.processname
        - eset_protect.event.protocol
        - eset_protect.event.severity_score
        - eset_protect.event.source_port
        - eset_protect.event.target_port
        - eset_protect.event.threat_name
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: Drops null/empty values recursively.
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: "Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}"
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
