---
description: Pipeline for processing HPE Aruba logs.

processors:
    - set:
        field: event.original
        copy_from: message
    - remove:
        field: message
        ignore_missing: true
    - set:
        field: ecs.version
        value: '8.11.0'
    - set:
        field: event.category
        value: [ network ]
  #
  # Parse the syslog message
  # This grok pattern is based on the syslog message format used by HPE Aruba CX switches.
  #
    - grok:
        field: event.original
        tag: grok_event_original
        if: ctx.event?.original != null
        patterns:
            - "%{SYSLOG_HEADER}%{GREEDYDATA:message}"
        pattern_definitions:
            SYSLOG_HEADER: "%{TIMESTAMP_ISO8601:@timestamp}\\s+%{USER:aruba.hardware.device}\\s+%{DATA:log.syslog.appname}\\[%{POSINT:log.syslog.procid}\\]:\\s+%{WORD:aruba.event_type}\\|(?:%{OPTIONAL_HEADER})?"
            OPTIONAL_HEADER: "%{POSINT:event.code}\\|%{USER:log.level}\\|(?:%{USER:aruba.component.category})?\\|(?:%{DATA:aruba.sequence})?\\|"
    - grok:
        field: aruba.sequence
        if: ctx.aruba?.sequence != null && ctx.aruba.sequence.contains("/")
        tag: parse_sequence
        patterns:
            - "%{POSINT:event.sequence:long}\\/%{POSINT}"
    - lowercase:
        field: event.kind
        tag: lowercase_event_kind
        ignore_missing: true
    
    # DCBX Events
    - grok:
        field: message
        tag: dcbx_event_9203_9204
        if: "['9203', '9204'].contains(ctx.event?.code)"
        patterns:
            - "DCBX is (dis|en)abled on interface %{DATA:aruba.dcbx.intf_name}$"
    - grok:
        field: message
        tag: dcbx_event_9205_9206
        if: "['9205', '9206'].contains(ctx.event?.code)"
        patterns:
            - "DCBX status (in)?active on interface %{DATA:aruba.dcbx.intf_name}$"
    - grok:
        field: message
        tag: dcbx_event_9207_9208
        if: "['9207', '9208'].contains(ctx.event?.code)"
        patterns:
            - "PFC TLV status (in)?active on interface %{DATA:aruba.dcbx.intf_name}$"
    - grok:
        field: message
        tag: dcbx_event
        if: "['9209'].contains(ctx.event?.code)"
        patterns:
            - "PFC TLV status priority mismatch on interface %{DATA:aruba.dcbx.intf_name}$"

    # DPSE Events
    - dissect:
        field: message
        tag: dpse_event_10901
        description: "A line card hit a backplane sequence error that triggered a recovery operation"
        if: "ctx.event?.code == '10901'"
        pattern: "Line card module %{aruba.dpse.linecard_name} triggered backplane sequence recovery"
    - dissect:
        field: message
        tag: dpse_event_10904
        description: "The system completed backplane sequence recovery triggered by line card error"
        if: "ctx.event?.code == '10904'"
        pattern: "Line card module %{aruba.dpse.linecard_name} completed backplane sequence recovery"
    
    # CFM Events
    - dissect:
        field: message
        tag: cfm_event_11601
        if: "ctx.event?.code == '11601'"
        pattern: "Connection lost for Maintenance Endpoint %{aruba.cfm.id} on %{aruba.cfm.interface}."
    - dissect:
        field: message
        tag: cfm_event_11602
        if: "ctx.event?.code == '11602'"
        pattern: "Connection restored for Maintenance Endpoint %{aruba.cfm.id} on %{aruba.cfm.interface}."
    
    # DNS Client Events
    - grok:
        field: message
        tag: dns_client_event_11901
        description: "Event reported when DNS event triggered"
        if: "['11901'].contains(ctx.event?.code)"
        patterns:
            - "%{DATA:aruba.dns.type} event for VRF %{DATA:aruba.dns.vrf_name}$"

on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
