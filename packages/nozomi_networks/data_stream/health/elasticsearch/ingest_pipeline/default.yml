---
description: Pipeline for processing health logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.
  - remove:
      field:
        - organization
        - division
        - team
      ignore_missing: true
      if: ctx.organization instanceof String && ctx.division instanceof String && ctx.team instanceof String
      tag: remove_agentless_tags
      description: >-
        Removes the fields added by Agentless as metadata,
        as they can collide with ECS fields.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - append:
      field: event.category
      tag: set_event_category
      value: host
      allow_duplicates: false
  - append:
      field: event.type
      tag: set_event_type
      value: info
      allow_duplicates: false
  - fingerprint:
      fields:
        - json.id
        - json.record_created_at
        - json.time
      tag: fingerprint_nozomi_networks_health
      target_field: _id
      ignore_missing: true
  - rename:
      field: json.appliance_host
      tag: rename_appliance_host
      target_field: nozomi_networks.health.appliance_host
      ignore_missing: true
  - set:
      field: host.hostname
      tag: set_host_hostname_from_health_appliance_host
      copy_from: nozomi_networks.health.appliance_host
      ignore_empty_value: true
  - set:
      field: host.name
      tag: set_host_hostname_from_health_appliance_host
      copy_from: nozomi_networks.health.appliance_host
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_health_appliance_host_into_related_hosts
      value: '{{{nozomi_networks.health.appliance_host}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.health?.appliance_host != null
  - rename:
      field: json.appliance_id
      tag: rename_appliance_id
      target_field: nozomi_networks.health.appliance_id
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_health_appliance_id
      copy_from: nozomi_networks.health.appliance_id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_health_appliance_id_into_related_hosts
      value: '{{{nozomi_networks.health.appliance_id}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.health?.appliance_id != null
  - convert:
      field: json.appliance_ip
      tag: convert_appliance_ip_to_ip
      target_field: nozomi_networks.health.appliance_ip
      type: ip
      ignore_missing: true
      if: ctx.json?.appliance_ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: host.ip
      tag: append_nozomi_networks_health_appliance_ip_into_host_ip
      value: '{{{nozomi_networks.health.appliance_ip}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.health?.appliance_ip != null
  - append:
      field: related.ip
      tag: append_health_appliance_ip_into_related_ip
      value: '{{{nozomi_networks.health.appliance_ip}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.health?.appliance_ip != null
  - rename:
      field: json.id
      tag: rename_id
      target_field: nozomi_networks.health.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_health_id
      copy_from: nozomi_networks.health.id
      ignore_empty_value: true
  - rename:
      field: json.info
      tag: rename_info
      target_field: nozomi_networks.health.info
      ignore_missing: true
  - date:
      field: json.record_created_at
      tag: date_record_created_at
      target_field: nozomi_networks.health.record_created_at
      formats:
        - UNIX_MS
      if: ctx.json?.record_created_at != null && ctx.json.record_created_at != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_health_record_created_at
      copy_from: nozomi_networks.health.record_created_at
      ignore_empty_value: true
  - set:
      field: event.created
      tag: set_event_created_from_health_record_created_at
      copy_from: nozomi_networks.health.record_created_at
      ignore_empty_value: true
  - convert:
      field: json.replicated
      tag: convert_replicated_to_boolean
      target_field: nozomi_networks.health.replicated
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.sensor_appliance_type
      tag: rename_sensor_appliance_type
      target_field: nozomi_networks.health.sensor_appliance_type
      ignore_missing: true
  - rename:
      field: json.sensor_host
      tag: rename_sensor_host
      target_field: nozomi_networks.health.sensor_host
      ignore_missing: true
  - set:
      field: host.hostname
      tag: set_host_hostname_from_health_sensor_host
      copy_from: nozomi_networks.health.sensor_host
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_health_sensor_host_into_related_hosts
      value: '{{{nozomi_networks.health.sensor_host}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.health?.sensor_host != null
  - rename:
      field: json.sensor_id
      tag: rename_sensor_id
      target_field: nozomi_networks.health.sensor_id
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_health_sensor_host
      copy_from: nozomi_networks.health.sensor_id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_health_sensor_id_into_related_hosts
      value: '{{{nozomi_networks.health.sensor_id}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.health?.sensor_id != null
  - convert:
      field: json.synchronized
      tag: convert_synchronized_to_boolean
      target_field: nozomi_networks.health.synchronized
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.time
      tag: date_time
      target_field: nozomi_networks.health.time
      formats:
        - UNIX_MS
      if: ctx.json?.time != null && ctx.json.time != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - remove:
      field:
        - nozomi_networks.health.appliance_host
        - nozomi_networks.health.appliance_id
        - nozomi_networks.health.appliance_ip
        - nozomi_networks.health.id
        - nozomi_networks.health.record_created_at
        - nozomi_networks.health.sensor_host
        - nozomi_networks.health.sensor_id
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
