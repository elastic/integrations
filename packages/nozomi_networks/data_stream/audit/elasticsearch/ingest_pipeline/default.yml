---
description: Pipeline for processing audit logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.
  - remove:
      field:
        - organization
        - division
        - team
      ignore_missing: true
      if: ctx.organization instanceof String && ctx.division instanceof String && ctx.team instanceof String
      tag: remove_agentless_tags
      description: >-
        Removes the fields added by Agentless as metadata,
        as they can collide with ECS fields.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - fingerprint:
      fields:
        - json.id
        - json.record_created_at
        - json.time
      tag: fingerprint_nozomi_networks_audit
      target_field: _id
      ignore_missing: true
  - rename:
      field: json.action
      tag: rename_action
      target_field: nozomi_networks.audit.action
      ignore_missing: true
  - set:
      field: event.action
      tag: set_event_action_from_audit_action
      copy_from: nozomi_networks.audit.action
      ignore_empty_value: true
  - lowercase:
      field: event.action
      tag: lowercase_event_action
      ignore_missing: true
  - gsub:
      field: event.action
      tag: gsub_event_action
      target_field: event.action
      pattern: '[/:-]'
      replacement: ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.browser
      tag: rename_browser
      target_field: nozomi_networks.audit.browser
      ignore_missing: true
  - user_agent:
      field: nozomi_networks.audit.browser
      ignore_missing: true
  - set:
      field: user_agent.original
      tag: set_user_agent_original
      copy_from: nozomi_networks.audit.browser
      if: ctx.user_agent?.original == null
      ignore_empty_value: true
  - rename:
      field: json.controller
      tag: rename_controller
      target_field: nozomi_networks.audit.controller
      ignore_missing: true
  - rename:
      field: json.details
      tag: rename_details
      target_field: nozomi_networks.audit.details
      ignore_missing: true
  - rename:
      field: json.event
      tag: rename_event
      target_field: nozomi_networks.audit.event
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_audit_event
      copy_from: nozomi_networks.audit.event
      ignore_empty_value: true
  - rename:
      field: json.id
      tag: rename_id
      target_field: nozomi_networks.audit.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_audit_id
      copy_from: nozomi_networks.audit.id
      ignore_empty_value: true
  - convert:
      field: json.ip_address
      tag: convert_ip_address_to_ip
      target_field: nozomi_networks.audit.ip_address
      type: ip
      ignore_missing: true
      if: ctx.json?.ip_address != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.ip
      tag: set_source_ip_from_audit_ip_address
      copy_from: nozomi_networks.audit.ip_address
      ignore_empty_value: true
  - geoip:
      field: source.ip
      tag: geoip_source_ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      tag: geoip_source_as
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      tag: rename_source_as_asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      tag: rename_source_as_organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - append:
      field: related.ip
      tag: append_audit_ip_address_into_related_ip
      value: '{{{nozomi_networks.audit.ip_address}}}'
      allow_duplicates: false
      if: ctx.nozomi_networks?.audit?.ip_address != null
  - rename:
      field: json.name
      tag: rename_name
      target_field: nozomi_networks.audit.name
      ignore_missing: true
  - date:
      field: json.record_created_at
      tag: date_record_created_at
      target_field: nozomi_networks.audit.record_created_at
      formats:
        - UNIX_MS
      if: ctx.json?.record_created_at != null && ctx.json.record_created_at != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_audit_record_created_at
      copy_from: nozomi_networks.audit.record_created_at
      ignore_empty_value: true
  - date:
      field: json.time
      tag: date_time
      target_field: nozomi_networks.audit.time
      formats:
        - UNIX_MS
      if: ctx.json?.time != null && ctx.json.time != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.username
      tag: rename_username
      target_field: nozomi_networks.audit.username
      ignore_missing: true
  - grok:
      field: nozomi_networks.audit.username
      tag: grok_nozomi_networks_audit_username
      patterns:
        - '^%{EMAILADDRESS:user.email} %{DATA}$'
      ignore_failure: true
  - dissect:
      if: ctx.user?.email != null && ctx.user.email.contains('@')
      tag: dissect_user_email
      field: user.email
      pattern: '%{user.name}@%{user.domain}'
  - append:
      field: related.user
      tag: append_audit_username_into_related_user
      value: '{{{user.name}}}'
      allow_duplicates: false
      if: ctx.user?.name != null
  - append:
      field: related.user
      tag: append_audit_username_into_related_user
      value: '{{{user.email}}}'
      allow_duplicates: false
      if: ctx.user?.email != null
  - remove:
      field:
        - nozomi_networks.audit.browser
        - nozomi_networks.audit.event
        - nozomi_networks.audit.id
        - nozomi_networks.audit.ip_address
        - nozomi_networks.audit.record_created_at
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
