---
description: Pipeline for processing Teleport audit logs
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - rename:
      field: message
      target_field: event.original
      tag: rename_message
      ignore_missing: true
      if: ctx.event?.original == null
  - remove:
      field: message
      ignore_missing: true
      tag: remove_message
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_original
      target_field: teleport.audit
  - rename:
      field: teleport.audit.ei
      target_field: event.sequence
  - grok:
      field: teleport.audit.size
      patterns:
        - "%{NUMBER:process.tty.columns}:%{NUMBER:process.tty.rows}"
      ignore_missing: true
      ignore_failure: true
  - dot_expander:
      path: teleport.audit
      field: addr.remote
  - dot_expander:
      path: teleport.audit
      field: addr.local
  - rename:
      field: teleport.audit.event
      target_field: event.action
      ignore_missing: true
  - rename:
      field: teleport.audit.uid
      target_field: event.id
      ignore_missing: true
  - rename:
      field: teleport.audit.code
      target_field: event.code
      ignore_missing: true
  - date:
      field: teleport.audit.time
      target_field: '@timestamp'
      formats:
        - ISO8601
      if: ctx.teleport?.audit?.time != null
  - rename:
      field: teleport.audit.user
      target_field: user.name
      ignore_missing: true
  - rename:
      field: teleport.audit.user_agent
      target_field: user_agent.original
      ignore_missing: true
  - script:
      lang: painless
      description: Adds the URI identifier to make uri_parts processor work
      if: ctx?.teleport?.audit?.addr?.remote != null
      source: |
        ctx.teleport.audit.addr.remote = "//" + ctx.teleport.audit.addr.remote;
  - uri_parts:
      field: teleport.audit.addr.remote
      tag: split_teleport_audit_remote_address
      target_field: teleport.audit.remote
      remove_if_successful: true
      keep_original: true
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: teleport.audit.remote.domain
      target_field: client.ip
      ignore_missing: true
  - rename:
      field: teleport.audit.client_ip
      target_field: client.ip
      ignore_missing: true
  - rename:
      field: teleport.audit.remote.port
      target_field: client.port
      ignore_missing: true
  - rename:
      field: teleport.audit.identity.roles
      target_field: user.roles
      ignore_missing: true
  - rename:
      field: teleport.audit.identity.route_to_database.protocol
      target_field: network.protocol
      ignore_missing: true
  - rename:
      field: teleport.audit.tx
      target_field: source.bytes
      ignore_missing: true
  - rename:
      field: teleport.audit.rx
      target_field: destination.bytes
      ignore_missing: true
  - date:
      field: teleport.audit.session_start
      target_field: event.start
      formats:
        - ISO8601
      if: ctx.teleport?.audit?.session_start != null
  - date:
      field: teleport.audit.session_stop
      target_field: event.end
      formats:
        - ISO8601
      if: ctx.teleport?.audit?.session_stop != null
  - script:
      lang: painless
      description: Adds the URI identifier to make uri_parts processor work
      if: ctx?.teleport?.audit?.addr?.local != null
      source: |
        ctx.teleport.audit.addr.local = "//" + ctx.teleport.audit.addr.local;
  - uri_parts:
      field: teleport.audit.addr.local
      tag: split_teleport_audit_local_address
      target_field: teleport.audit.local
      remove_if_successful: true
      keep_original: true
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: teleport.audit.local.domain
      target_field: server.ip
      ignore_missing: true
  - rename:
      field: teleport.audit.local.port
      target_field: server.port
      ignore_missing: true
  - rename:
      field: teleport.audit.url
      target_field: url.full
      ignore_missing: true
  - rename:
      field: teleport.audit.server_hostname
      target_field: server.domain
      ignore_missing: true
  - rename:
      field: teleport.audit.proto
      target_field: network.protocol
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      tag: script_drop_null_empty_values
      lang: painless
      source: "boolean dropEmptyFields(Object object) {\n  if (object == null || object\
      \ == \"\") {\n    return true;\n  } else if (object instanceof Map) {\n    ((Map)\
      \ object).values().removeIf(value -> dropEmptyFields(value));\n    return (((Map)\
      \ object).size() == 0);\n  } else if (object instanceof List) {\n    ((List)\
      \ object).removeIf(value -> dropEmptyFields(value));\n    return (((List) object).length\
      \ == 0);\n  }\n  return false;\n}\ndropEmptyFields(ctx);\n"
  - geoip:
      field: client.ip
      tag: geoip_client_ip
      target_field: client.geo
      ignore_missing: true
  - geoip:
      ignore_missing: true
      database_file: GeoLite2-ASN.mmdb
      field: client.ip
      tag: geoip_client_asn
      target_field: client.as
      properties:
        - asn
        - organization_name
  - rename:
      field: client.as.asn
      tag: rename_client_as_asn
      target_field: client.as.number
      ignore_missing: true
  - rename:
      field: client.as.organization_name
      tag: rename_client_as_organization_name
      target_field: client.as.organization.name
      ignore_missing: true
  - geoip:
      field: destination.ip
      tag: geoip_destination_ip
      target_field: destination.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      tag: geoip_destination_asn
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      tag: rename_destination_as_asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      tag: rename_destination_as_organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      field: event.type
      value:
        - start
      allow_duplicates: false
      if: ctx.event?.action == 'user.login' && ctx.teleport?.audit?.success == true
  - append:
      field: event.category
      value:
        - authentication
      allow_duplicates: false
      if: ctx.event?.action == 'user.login'
  - append:
      field: event.type
      value:
        - creation
      allow_duplicates: false
      if: ctx.event?.action == 'cert.create'
  - append:
      field: event.category
      value:
        - iam
      allow_duplicates: false
      if: ctx.event?.action == 'cert.create'
  - append:
      field: event.type
      value:
        - start
      allow_duplicates: false
      if: ctx.event?.action == 'session.start'
  - append:
      field: event.category
      value:
        - session
      allow_duplicates: false
      if: ctx.event?.action == 'session.start'
  - append:
      field: event.type
      value:
        - info
      allow_duplicates: false
      if: ctx.event?.action == 'session.leave'
  - append:
      field: event.category
      value:
        - session
      allow_duplicates: false
      if: ctx.event?.action == 'session.leave'
  - append:
      field: event.type
      value:
        - info
      allow_duplicates: false
      if: ctx.event?.action == 'session.data'
  - append:
      field: event.category
      value:
        - session
      allow_duplicates: false
      if: ctx.event?.action == 'session.data'
  - append:
      field: event.type
      value:
        - end
      allow_duplicates: false
      if: ctx.event?.action == 'session.end'
  - append:
      field: event.category
      value:
        - session
      allow_duplicates: false
      if: ctx.event?.action == 'session.end'
  - append:
      field: event.type
      value:
        - info
      allow_duplicates: false
      if: ctx.event?.action == 'session.upload'
  - append:
      field: event.category
      value:
        - session
      allow_duplicates: false
      if: ctx.event?.action == 'session.upload'
  - append:
      field: event.type
      value:
        - creation
      allow_duplicates: false
      if: ctx.event?.action == 'role.created'
  - append:
      field: event.category
      value:
        - iam
      allow_duplicates: false
      if: ctx.event?.action == 'role.created'
  - append:
      field: event.type
      value:
        - creation
      allow_duplicates: false
      if: ctx.event?.action == 'user.create'
  - append:
      field: event.category
      value:
        - iam
      allow_duplicates: false
      if: ctx.event?.action == 'user.create'
  - append:
      field: event.type
      value:
        - end
      allow_duplicates: false
      if: ctx.event?.action == 'user.login' && ctx.teleport?.audit?.success == false
  - append:
      field: event.type
      value:
        - end
      allow_duplicates: false
      if: ctx.event?.action == 'user.login' && ctx.teleport?.audit?.success == false
  - append:
      field: event.outcome
      value:
        - success
      allow_duplicates: false
      if: ctx.teleport?.audit?.event?.success == true
  - append:
      field: event.outcome
      value:
        - failure
      allow_duplicates: false
      if: ctx.teleport?.audit?.event?.success == false
  - append:
      field: related.ip
      value:
        - '{{{teleport.audit.addr.remote}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.addr?.remote != null
  - append:
      field: related.ip
      value:
        - '{{{teleport.audit.addr.local}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.addr?.local != null
  - append:
      field: related.ip
      value:
        - '{{{teleport.audit.identity.client_ip}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.identity?.client_ip != null
  - append:
      field: related.user
      value:
        - '{{{user.name}}}'
      allow_duplicates: false
      if: ctx?.user?.name != null
  - append:
      field: related.user
      value:
        - '{{{teleport.audit.identity.user}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.identity?.user != null
  - append:
      field: related.user
      value:
        - '{{{teleport.audit.identity.logins}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.identity?.logins != null
  - append:
      field: related.user
      value:
        - '{{{teleport.audit.participants}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.participants != null
  - append:
      field: related.hosts
      value:
        - '{{{teleport.audit.server_hostname}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.server_hostname != null
  - append:
      field: related.hosts
      value:
        - '{{{teleport.audit.server_labels.hostname}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.server_labels?.hostname != null
  - append:
      field: related.hosts
      value:
        - '{{{teleport.audit.server_addr}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.server_addr != null
  - remove:
      field: event.original
      tag: remove_original_event
      if: ctx?.tags == null || !(ctx.tags.contains("preserve_original_event"))
      ignore_failure: true
      ignore_missing: true
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}}
      in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
