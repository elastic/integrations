---
description: Pipeline for processing Teleport audit logs
processors:
  # Process the message field.
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.11.0
  - rename:
      field: message
      target_field: event.original
      tag: rename_message
      ignore_missing: true
      if: ctx.event?.original == null
  - remove:
      field: message
      ignore_missing: true
      tag: remove_message
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_original
      target_field: teleport.audit

  # Metadata is a common event metadata.
  # All of these fields are mapped to ECS fields.
  - rename:
      field: teleport.audit.ei
      target_field: event.sequence
      ignore_missing: true
  - rename:
      field: teleport.audit.event
      target_field: event.action
      ignore_missing: true
  - rename:
      field: teleport.audit.uid
      target_field: event.id
      ignore_missing: true
  - rename:
      field: teleport.audit.code
      target_field: event.code
      ignore_missing: true
  - date:
      field: teleport.audit.time
      target_field: '@timestamp'
      formats:
        - ISO8601
      if: ctx.teleport?.audit?.time != null
  - remove:
      field: teleport.audit.time
      ignore_missing: true
  - rename:
      field: teleport.audit.cluster_name
      target_field: orchestrator.cluster.name
      ignore_missing: true

  # Add the event categorization.
  - pipeline:
      name: '{{ IngestPipeline "event-categories" }}'
      ignore_failure: true

  # Process most of the field groups.
  - pipeline:
      name: '{{ IngestPipeline "event-groups" }}'
      ignore_failure: true

  # App session request related metadata
  # The HTTP-related fields are used for other events as well. They work as catch-all
  # fields and should be at the end of the group processing.
  -  rename:
       field: teleport.audit.status_code
       target_field: http.response.status_code
       ignore_missing: true
  -  rename:
       field: teleport.audit.path
       target_field: url.path
       ignore_missing: true
  -  rename:
       field: teleport.audit.raw_query
       target_field: url.query
       ignore_missing: true
  -  rename:
       field: teleport.audit.method
       target_field: http.request.method
       ignore_missing: true

  # Enrich address fields.
  - grok:
      field: client.address
      ignore_missing: true
      ignore_failure: true
      patterns:
        - ^(%{IP:client.ip}|%{HOSTNAME:client.domain})$
  - geoip:
      field: client.ip
      tag: geoip_client_ip
      target_field: client.geo
      ignore_missing: true
      ignore_failure: true
  - geoip:
      ignore_missing: true
      database_file: GeoLite2-ASN.mmdb
      field: client.ip
      tag: geoip_client_asn
      target_field: client.as
      ignore_failure: true
      properties:
        - asn
        - organization_name
  - rename:
      field: client.as.asn
      tag: rename_client_as_asn
      target_field: client.as.number
      ignore_missing: true
  - rename:
      field: client.as.organization_name
      tag: rename_client_as_organization_name
      target_field: client.as.organization.name
      ignore_missing: true
  - grok:
      field: server.address
      ignore_missing: true
      ignore_failure: true
      patterns:
        - ^(%{IP:server.ip}|%{HOSTNAME:server.domain})$
  - geoip:
      field: server.ip
      tag: geoip_server_ip
      target_field: server.geo
      ignore_missing: true
      ignore_failure: true
  - geoip:
      ignore_missing: true
      database_file: GeoLite2-ASN.mmdb
      field: server.ip
      tag: geoip_server_asn
      target_field: server.as
      ignore_failure: true
      properties:
        - asn
        - organization_name
  - rename:
      field: server.as.asn
      tag: rename_server_as_asn
      target_field: server.as.number
      ignore_missing: true
  - rename:
      field: server.as.organization_name
      tag: rename_server_as_organization_name
      target_field: server.as.organization.name
      ignore_missing: true
  - grok:
      field: destination.address
      ignore_missing: true
      ignore_failure: true
      patterns:
        - ^(%{IP:destination.ip}|%{HOSTNAME:destination.domain})$
  - geoip:
      field: destination.ip
      tag: geoip_destination_ip
      target_field: destination.geo
      ignore_missing: true
      ignore_failure: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      tag: geoip_destination_asn
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: destination.as.asn
      tag: rename_destination_as_asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      tag: rename_destination_as_organization_name
      target_field: destination.as.organization.name
      ignore_missing: true

  # Add related fields.
  - append:
      field: related.ip
      value:
        - '{{{teleport.audit.addr.remote}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.addr?.remote != null
  - append:
      field: related.ip
      value:
        - '{{{teleport.audit.addr.local}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.addr?.local != null
  - append:
      field: related.ip
      value:
        - '{{{teleport.audit.identity.client_ip}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.identity?.client_ip != null
  - append:
      field: related.user
      value:
        - '{{{user.name}}}'
      allow_duplicates: false
      if: ctx?.user?.name != null
  - append:
      field: related.user
      value:
        - '{{{teleport.audit.identity.user}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.identity?.user != null
  - append:
      field: related.user
      value:
        - '{{{teleport.audit.identity.logins}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.identity?.logins != null
  - append:
      field: related.user
      value:
        - '{{{teleport.audit.participants}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.participants != null
  - append:
      field: related.hosts
      value:
        - '{{{teleport.audit.server.hostname}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.server?.hostname != null
  - append:
      field: related.hosts
      value:
        - '{{{teleport.audit.server.labels.hostname}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.server?.labels?.hostname != null
  - append:
      field: related.hosts
      value:
        - '{{{teleport.audit.server_addr}}}'
      allow_duplicates: false
      if: ctx?.teleport?.audit?.server_addr != null

  # Final steps.
  - remove:
      field: event.original
      tag: remove_original_event
      if: ctx?.tags == null || !(ctx.tags.contains("preserve_original_event"))
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      tag: script_drop_null_empty_values
      lang: painless
      source: "boolean dropEmptyFields(Object object) {\n  if (object == null || object\
      \ == \"\") {\n    return true;\n  } else if (object instanceof Map) {\n    ((Map)\
      \ object).values().removeIf(value -> dropEmptyFields(value));\n    return (((Map)\
      \ object).size() == 0);\n  } else if (object instanceof List) {\n    ((List)\
      \ object).removeIf(value -> dropEmptyFields(value));\n    return (((List) object).length\
      \ == 0);\n  }\n  return false;\n}\ndropEmptyFields(ctx);\n"

on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}}
      in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
