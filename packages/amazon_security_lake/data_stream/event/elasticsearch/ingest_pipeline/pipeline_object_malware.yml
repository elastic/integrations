---
description: Pipeline for processing Malware object.
# Malware object docs: https://schema.ocsf.io/1.0.0/objects/malware?extensions=
processors:
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            date:
              field: _ingest._value.created_time_dt
              tag: date_malware_cves_created_time_dt
              target_field: _ingest._value.created_time_dt
              formats:
                - ISO8601
              on_failure:
                - remove:
                    field: _ingest._value.created_time_dt
                    ignore_missing: true
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            date:
              field: _ingest._value.created_time
              tag: date_malware_cves_created_time
              target_field: _ingest._value.created_time
              formats:
                - UNIX_MS
              on_failure:
                - remove:
                    field: _ingest._value.created_time
                    ignore_missing: true
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            convert:
              field: _ingest._value.cvss.base_score
              tag: convert_malware_cves_base_score_to_double
              type: double
              ignore_missing: true
              on_failure:
                - remove:
                    field: _ingest._value.cvss.base_score
                    ignore_missing: true
                - append:
                    field: error.message
                    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.classification_ids
          ignore_failure: true
          processor:
            convert:
              field: _ingest._value
              tag: convert_malware_classification_ids_to_string
              type: string
              ignore_missing: true
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List && ctx.ocsf.class_uid != '2001'
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            append:
              field: vulnerability.score.base
              tag: append_malware_cves_cvss_base_score_into_vulnerability_score_base
              value: '{{{_ingest._value.cvss.base_score}}}'
              allow_duplicates: false
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            convert:
              field: _ingest._value.cvss.overall_score
              tag: convert_malware_cves_cvss_overall_score_to_double
              type: double
              ignore_missing: true
              on_failure:
                - remove:
                    field: _ingest._value.cvss.overall_score
                    ignore_missing: true
                - append:
                    field: error.message
                    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List && ctx.ocsf.class_uid != '2001'
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            append:
              field: vulnerability.score.version
              tag: append_malware_cves_cvss_version_into_vulnerability_score_version
              value: '{{{_ingest._value.cvss.version}}}'
              allow_duplicates: false
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            date:
              field: _ingest._value.modified_time_dt
              tag: date_malware_cves_modified_time_dt
              target_field: _ingest._value.modified_time_dt
              formats:
                - ISO8601
              on_failure:
                - remove:
                    field: _ingest._value.modified_time_dt
                    ignore_missing: true
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            date:
              field: _ingest._value.modified_time
              tag: date_malware_cves_modified_time
              target_field: _ingest._value.modified_time
              formats:
                - UNIX_MS
              on_failure:
                - remove:
                    field: _ingest._value.modified_time
                    ignore_missing: true
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List && ctx.ocsf.class_uid != '2001'
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            append:
              field: vulnerability.id
              tag: append_malware_cves_uid_into_vulnerability_id
              value: '{{{_ingest._value.uid}}}'
              allow_duplicates: false
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
