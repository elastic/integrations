---
description: Pipeline for processing Amazon Security Lake Events.
# Base Event docs: https://schema.ocsf.io/1.0.0-rc.3/base_event
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.10.0
  - rename:
      field: message
      target_field: event.original
      tag: rename_message
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      field: event.original
      tag: json_decoding
      target_field: ocsf
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ocsf.class_uid
      tag: convert_class_uid_to_string
      type: string
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_event_kind
      if: ctx.ocsf?.class_uid != null && ['3001','3002','4001','4003','6003'].contains(ctx.ocsf.class_uid)
      value: event
  - set:
      field: event.kind
      tag: set_event_kind
      if: ctx.ocsf?.class_uid != null && ['2001'].contains(ctx.ocsf.class_uid)
      value: alert
  - append:
      field: event.category
      tag: append_malware_into_event_category
      value: malware
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['2001'].contains(ctx.ocsf.class_uid) && ctx.ocsf.malware != null
  - append:
      field: event.category
      tag: append_vulnerability_into_event_category
      value: vulnerability
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['2001'].contains(ctx.ocsf.class_uid) && ctx.ocsf.vulnerabilities != null
  - append:
      field: event.category
      tag: append_iam_into_event_category
      value: iam
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3001'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.category
      tag: append_authentication_into_event_category
      value: authentication
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3002'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.category
      tag: append_network_into_event_category
      value: network
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['4001','4003'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.category
      tag: append_web_into_event_category
      value: web
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['6003'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.type
      tag: append_info_into_event_type
      value: info
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['2001','3001','3002','4001','4003','6003'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.type
      tag: append_user_into_event_type
      value: user
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3001'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.type
      tag: append_protocol_into_event_type
      value: protocol
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['4003'].contains(ctx.ocsf.class_uid)
  - append:
      field: event.type
      tag: append_creation_into_event_type
      value: creation
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3001'].contains(ctx.ocsf.class_uid) && ctx.ocsf.activity_name == 'Create'
  - append:
      field: event.type
      tag: append_deletion_into_event_type
      value: deletion
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3001'].contains(ctx.ocsf.class_uid) && ctx.ocsf.activity_name == 'Delete'
  - append:
      field: event.type
      tag: append_start_into_event_type
      value: start
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3002','4001'].contains(ctx.ocsf.class_uid) && ['Logon','Open'].contains(ctx.ocsf.activity_name)
  - append:
      field: event.type
      tag: append_end_into_event_type
      value: end
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['3002','4001'].contains(ctx.ocsf.class_uid) && ['Logoff','Close'].contains(ctx.ocsf.activity_name)
  - append:
      field: event.type
      tag: append_denied_into_event_type
      value: denied
      allow_duplicates: false
      if: ctx.ocsf?.class_uid != null && ['4001','4003'].contains(ctx.ocsf.class_uid) && ['Refuse'].contains(ctx.ocsf.activity_name)
  - set:
      field: cloud.account.id
      tag: set_cloud_account_uid
      copy_from: ocsf.cloud.account.uid
      ignore_empty_value: true
  - set:
      field: cloud.account.name
      tag: set_cloud_account_name
      copy_from: ocsf.cloud.account.name
      ignore_empty_value: true
  - set:
      field: cloud.availability_zone
      tag: set_cloud_availability_zone
      copy_from: ocsf.cloud.zone
      ignore_empty_value: true
  - set:
      field: cloud.project.id
      tag: set_cloud_project_id
      copy_from: ocsf.cloud.project_uid
      ignore_empty_value: true
  - set:
      field: cloud.provider
      tag: set_cloud_provider
      copy_from: ocsf.cloud.provider
      ignore_empty_value: true
  - set:
      field: cloud.region
      tag: set_cloud_region
      copy_from: ocsf.cloud.region
      ignore_empty_value: true
  - lowercase:
      field: ocsf.activity_name
      tag: lowercase_event_action
      target_field: event.action
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.activity_name
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - gsub:
      field: event.action
      pattern: '[: ]'
      replacement: '-'
      tag: gsub_event_action
      ignore_missing: true
      on_failure:
        - remove:
            field: event.action
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.code
      tag: set_event_code
      copy_from: ocsf.metadata.event_code
      ignore_empty_value: true
  - convert:
      field: ocsf.duration
      tag: convert_duration_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.duration
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      description: Convert duration from milliseconds to nanoseconds.
      tag: script_duration_ms_to_ns
      lang: painless
      if: ctx.ocsf?.duration != null
      source: >-
        ctx.event.duration = ctx.ocsf.duration * 1000000;
  - set:
      field: event.id
      tag: set_event_id
      copy_from: ocsf.metadata.uid
      ignore_empty_value: true
  - set:
      field: event.provider
      tag: set_event_provider_from_metadata_log_provider
      copy_from: ocsf.metadata.log_provider
      ignore_empty_value: true
  - set:
      field: event.provider
      tag: set_event_provider_from_metadata_product_vendor_name
      copy_from: ocsf.metadata.product.vendor_name
      ignore_empty_value: true
      if: ctx.ocsf?.metadata?.log_provider == null
  - convert:
      field: ocsf.metadata.sequence
      tag: convert_metadata_sequence_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.metadata.sequence
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.sequence
      tag: set_event_sequence
      copy_from: ocsf.metadata.sequence
      ignore_empty_value: true
  - set:
      field: message
      tag: set_message
      copy_from: ocsf.message
      ignore_empty_value: true
  - foreach:
      field: ocsf.metadata.labels
      if: ctx.ocsf?.metadata?.labels instanceof List
      ignore_failure: true
      processor:
        append:
          field: tags
          tag: append_metadata_labels_to_tags
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - convert:
      field: ocsf.api.response.code
      tag: convert_api_response_code_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.api.response.code
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ocsf.activity_id
      tag: convert_activity_id_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ocsf.category_uid
      tag: convert_category_uid_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ocsf.cloud.account.type_id
      tag: convert_cloud_account_type_id_to_string
      type: string
      ignore_missing: true
  - convert:
      field: ocsf.count
      tag: convert_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.count
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.end_time_dt
      tag: date_end_time_dt
      target_field: ocsf.end_time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.end_time_dt != null && ctx.ocsf.end_time_dt != ''
      on_failure:
        - remove:
            field: ocsf.end_time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.end
      tag: set_event_end_from_end_time_dt
      copy_from: ocsf.end_time_dt
      ignore_empty_value: true
  - date:
      field: ocsf.end_time
      tag: date_end_time
      target_field: ocsf.end_time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.end_time != null && ctx.ocsf.end_time != ''
      on_failure:
        - remove:
            field: ocsf.end_time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.end
      tag: set_event_end_from_end_time
      copy_from: ocsf.end_time
      ignore_empty_value: true
  - date:
      field: ocsf.time_dt
      tag: date_timestamp_from_time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.time_dt != null && ctx.ocsf.time_dt != ''
      on_failure:
        - remove:
            field: ocsf.time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.time
      tag: date_timestamp_from_time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.time != null && ctx.ocsf.time != ''
      on_failure:
        - remove:
            field: ocsf.time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.time_dt
      tag: date_time_dt
      target_field: ocsf.time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.time_dt != null && ctx.ocsf.time_dt != ''
      on_failure:
        - remove:
            field: ocsf.time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.time
      tag: date_time
      target_field: ocsf.time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.time != null && ctx.ocsf.time != ''
      on_failure:
        - remove:
            field: ocsf.time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.metadata.logged_time_dt
      tag: date_metadata_logged_time_dt
      target_field: ocsf.metadata.logged_time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.metadata?.logged_time_dt != null && ctx.ocsf.metadata.logged_time_dt != ''
      on_failure:
        - remove:
            field: ocsf.metadata.logged_time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.metadata.logged_time
      tag: date_metadata_logged_time
      target_field: ocsf.metadata.logged_time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.metadata?.logged_time != null && ctx.ocsf.metadata.logged_time != ''
      on_failure:
        - remove:
            field: ocsf.metadata.logged_time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.metadata.modified_time_dt
      tag: date_metadata_modified_time_dt
      target_field: ocsf.metadata.modified_time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.metadata?.modified_time_dt != null && ctx.ocsf.metadata.modified_time_dt != ''
      on_failure:
        - remove:
            field: ocsf.metadata.modified_time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.metadata.modified_time
      tag: date_metadata_modified_time
      target_field: ocsf.metadata.modified_time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.metadata?.modified_time != null && ctx.ocsf.metadata.modified_time != ''
      on_failure:
        - remove:
            field: ocsf.metadata.modified_time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.metadata.processed_time_dt
      tag: date_metadata_processed_time_dt
      target_field: ocsf.metadata.processed_time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.metadata?.processed_time_dt != null && ctx.ocsf.metadata.processed_time_dt != ''
      on_failure:
        - remove:
            field: ocsf.metadata.processed_time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: ocsf.metadata.processed_time
      tag: date_metadata_processed_time
      target_field: ocsf.metadata.processed_time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.metadata?.processed_time != null && ctx.ocsf.metadata.processed_time != ''
      on_failure:
        - remove:
            field: ocsf.metadata.processed_time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ocsf.observables
      if: ctx.ocsf?.observables instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.reputation.base_score
          tag: convert_reputation_base_score_to_double
          type: double
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.reputation.base_score
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: ocsf.observables
      if: ctx.ocsf?.observables instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.reputation.score_id
          tag: convert_reputation_score_id_to_string
          type: string
          ignore_missing: true
  - foreach:
      field: ocsf.observables
      if: ctx.ocsf?.observables instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.type_id
          tag: convert_type_id_to_string
          type: string
          ignore_missing: true
  - script:
      lang: painless
      tag: script_to_map_observables_into_key_value_pair
      description: Map observables into key value pair.
      if: ctx.ocsf?.observables != null && ctx.ocsf.observables instanceof List
      source: >
         for (int i = 0; i < ctx.ocsf.observables.length; ++i) {
           if (ctx['ocsf']['observables'][i]['value'] != null) {
             ctx.ocsf.observables[i][ctx['ocsf']['observables'][i]['name']] = ctx['ocsf']['observables'][i]['value'];
           }
         }
  - convert:
      field: ocsf.severity_id
      tag: convert_severity_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.severity_id
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.severity
      tag: set_event_severity
      copy_from: ocsf.severity_id
      ignore_empty_value: true
  - date:
      field: ocsf.start_time_dt
      tag: date_start_time_dt
      target_field: ocsf.start_time_dt
      formats:
        - ISO8601
      if: ctx.ocsf?.start_time_dt != null && ctx.ocsf.start_time_dt != ''
      on_failure:
        - remove:
            field: ocsf.start_time_dt
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.start
      tag: set_event_start_from_start_time_dt
      copy_from: ocsf.start_time_dt
      ignore_empty_value: true
  - date:
      field: ocsf.start_time
      tag: date_start_time
      target_field: ocsf.start_time
      formats:
        - UNIX_MS
      if: ctx.ocsf?.start_time != null && ctx.ocsf.start_time != ''
      on_failure:
        - remove:
            field: ocsf.start_time
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.start
      tag: set_event_start_from_start_time
      copy_from: ocsf.start_time
      ignore_empty_value: true
  - convert:
      field: ocsf.status_id
      tag: convert_status_id_to_string
      type: string
      ignore_missing: true
  - set:
      field: event.outcome
      value: unknown
      if: ctx.ocsf?.status_id == '0'
  - set:
      field: event.outcome
      value: success
      if: ctx.ocsf?.status_id == '1'
  - set:
      field: event.outcome
      value: failure
      if: ctx.ocsf?.status_id == '2'
  - convert:
      field: ocsf.timezone_offset
      tag: convert_timezone_offset_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: ocsf.timezone_offset
            ignore_missing: true
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: ocsf.type_uid
      tag: convert_type_uid_to_string
      type: string
      ignore_missing: true
  - json:
      field: ocsf.raw_data
      if: ctx.ocsf?.raw_data instanceof String
      tag: json_decoding_raw_data
      on_failure:
        - rename:
            field: ocsf.raw_data
            target_field: ocsf.raw_data_keyword
            ignore_missing: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_actor" }}'
      if: ctx.ocsf?.class_uid != null && ['3001','3002','4001','4003','6003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.actor != null
      tag: pipeline_object_actor
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_attack" }}'
      if: ctx.ocsf?.class_uid != null && ['2001','4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.attacks != null
      tag: pipeline_object_attack
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_network_connection_info" }}'
      if: ctx.ocsf?.class_uid != null && ['4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.connection_info != null
      tag: pipeline_object_network_connection_info
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_device" }}'
      if: ctx.ocsf?.class_uid != null && ['3001','3002','4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.device != null
      tag: pipeline_object_device
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_http_request" }}'
      if: ctx.ocsf?.class_uid != null && ['3001','3002','6003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.http_request != null
      tag: pipeline_object_http_request
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_malware" }}'
      if: ctx.ocsf?.class_uid != null && ['2001','4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.malware != null
      tag: pipeline_object_malware
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_network_endpoint" }}'
      if: ctx.ocsf?.class_uid != null && ['3001','3002','4001','4003','6003'].contains(ctx.ocsf.class_uid) && (ctx.ocsf.dst_endpoint != null || ctx.ocsf.src_endpoint != null)
      tag: pipeline_object_network_endpoint
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_process" }}'
      if: ctx.ocsf?.class_uid != null && ['2001'].contains(ctx.ocsf.class_uid) && ctx.ocsf.process != null
      tag: pipeline_object_process
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_proxy" }}'
      if: ctx.ocsf?.class_uid != null && ['4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.proxy != null
      tag: pipeline_object_proxy
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_tls" }}'
      if: ctx.ocsf?.class_uid != null && ['4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.tls != null
      tag: pipeline_object_tls
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_traffic" }}'
      if: ctx.ocsf?.class_uid != null && ['4001','4003'].contains(ctx.ocsf.class_uid) && ctx.ocsf.traffic != null
      tag: pipeline_object_traffic
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_object_user" }}'
      if: ctx.ocsf?.class_uid != null && ['3001','3002'].contains(ctx.ocsf.class_uid) && ctx.ocsf.user != null
      tag: pipeline_object_user
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_category_findings" }}'
      if: ctx.ocsf?.category_uid != null && ctx.ocsf.category_uid == '2'
      tag: pipeline_category_findings
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_category_identity_and_access_management" }}'
      if: ctx.ocsf?.category_uid != null && ctx.ocsf.category_uid == '3'
      tag: pipeline_category_identity_and_access_management
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_category_network_activity" }}'
      if: ctx.ocsf?.category_uid != null && ctx.ocsf.category_uid == '4'
      tag: pipeline_category_network_activity
      ignore_missing_pipeline: true
  - pipeline:
      name: '{{ IngestPipeline "pipeline_category_application_activity" }}'
      if: ctx.ocsf?.category_uid != null && ctx.ocsf.category_uid == '6'
      tag: pipeline_category_application_activity
      ignore_missing_pipeline: true
  - foreach:
      field: ocsf.process.user.groups
      if: ctx.ocsf?.process?.user?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_process_user_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.actor.process.user.groups
      if: ctx.ocsf?.actor?.process?.user?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_actor_process_user_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.process.parent_process.user.groups
      if: ctx.ocsf?.process?.parent_process?.user?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_process_parent_process_user_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.actor.process.parent_process.user.groups
      if: ctx.ocsf?.actor?.process?.parent_process?.user?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_actor_process_parent_process_user_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.actor.user.groups
      if: ctx.ocsf?.actor?.user?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_actor_user_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.user.groups
      if: ctx.ocsf?.user?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_user_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.user_result.groups
      if: ctx.ocsf?.user_result?.groups instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.uid
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_user_result_groups_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.tls.sans
      if: ctx.ocsf?.tls?.sans instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.name
          tag: remove_duplicate_custom_fields_from_tls_sans_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.attacks
      if: ctx.ocsf?.attacks instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.technique.uid
            - _ingest._value.technique.name
          tag: remove_duplicate_custom_fields_from_attacks_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.attacks
      if: ctx.ocsf?.attacks instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.tactics
          ignore_failure: true
          processor:
            remove:
              field:
                - _ingest._value.uid
                - _ingest._value.name
              tag: remove_duplicate_custom_fields_from_attacks_tactics_array
              ignore_missing: true
              if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.vulnerabilities
      if: ctx.ocsf?.vulnerabilities instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.desc
            - _ingest._value.cve.uid
            - _ingest._value.references
            - _ingest._value.vendor_name
            - _ingest._value.cve.cvss.base_score
            - _ingest._value.cve.cvss.version
            - _ingest._value.severity
          tag: remove_duplicate_custom_fields_from_vulnerabilities_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.answers
      if: ctx.ocsf?.answers instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.rdata
            - _ingest._value.packet_uid
            - _ingest._value.class
            - _ingest._value.type
            - _ingest._value.ttl
          tag: remove_duplicate_custom_fields_from_answers_array
          ignore_missing: true
          if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - foreach:
      field: ocsf.malware
      if: ctx.ocsf?.malware instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.cves
          ignore_failure: true
          processor:
            remove:
              field:
                - _ingest._value.cvss.base_score
                - _ingest._value.cvss.version
                - _ingest._value.uid
              tag: remove_duplicate_custom_fields_from_malware_cves_array
              ignore_missing: true
              if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field:
        - ocsf.time
        - ocsf.cloud.account.uid
        - ocsf.cloud.account.name
        - ocsf.cloud.zone
        - ocsf.cloud.project_uid
        - ocsf.cloud.provider
        - ocsf.cloud.region
        - ocsf.metadata.event_code
        - ocsf.end_time
        - ocsf.metadata.uid
        - ocsf.metadata.log_provider
        - ocsf.metadata.sequence
        - ocsf.severity_id
        - ocsf.message
        - ocsf.metadata.labels
        - ocsf.process.container.uid
        - ocsf.process.container.image.name
        - ocsf.process.container.image.tag
        - ocsf.process.container.image.labels
        - ocsf.process.container.name
        - ocsf.process.container.runtime
        - ocsf.finding.created_time
        - ocsf.finding.src_url
        - ocsf.risk_score
        - ocsf.process.file.accessed_time
        - ocsf.process.file.created_time
        - ocsf.process.file.parent_folder
        - ocsf.process.file.uid
        - ocsf.process.file.mime_type
        - ocsf.process.file.modified_time
        - ocsf.process.file.name
        - ocsf.process.file.owner.name
        - ocsf.process.file.path
        - ocsf.process.file.size
        - ocsf.process.file.type
        - ocsf.process.file.owner.uid
        - ocsf.process.file.signature.certificate.issuer
        - ocsf.process.file.signature.certificate.expiration_time
        - ocsf.process.file.signature.certificate.serial_number
        - ocsf.process.file.signature.certificate.subject
        - ocsf.process.file.signature.certificate.version
        - ocsf.process.container.orchestrator
        - ocsf.process.cmd_line
        - ocsf.process.terminated_time
        - ocsf.process.uid
        - ocsf.process.egid
        - ocsf.process.group.uid
        - ocsf.process.group.name
        - ocsf.process.name
        - ocsf.process.pid
        - ocsf.process.created_time
        - ocsf.process.tid
        - ocsf.process.user.domain
        - ocsf.process.user.email_addr
        - ocsf.process.user.full_name
        - ocsf.process.euid
        - ocsf.process.user.uid
        - ocsf.process.user.name
        - ocsf.process.parent_process.cmd_line
        - ocsf.process.parent_process.terminated_time
        - ocsf.process.parent_process.uid
        - ocsf.process.parent_process.egid
        - ocsf.process.parent_process.group.uid
        - ocsf.process.parent_process.group.name
        - ocsf.process.parent_process.name
        - ocsf.process.parent_process.pid
        - ocsf.process.parent_process.created_time
        - ocsf.process.parent_process.tid
        - ocsf.process.parent_process.user.domain
        - ocsf.process.parent_process.user.email_addr
        - ocsf.process.parent_process.user.full_name
        - ocsf.process.parent_process.euid
        - ocsf.process.parent_process.user.uid
        - ocsf.process.parent_process.user.name
        - ocsf.actor.process.cmd_line
        - ocsf.actor.process.container.image.labels
        - ocsf.actor.process.container.image.name
        - ocsf.actor.process.container.image.tag
        - ocsf.actor.process.container.name
        - ocsf.actor.process.container.orchestrator
        - ocsf.actor.process.container.runtime
        - ocsf.actor.process.container.uid
        - ocsf.actor.process.created_time
        - ocsf.actor.process.egid
        - ocsf.actor.process.euid
        - ocsf.actor.process.file.accessed_time
        - ocsf.actor.process.file.created_time
        - ocsf.actor.process.file.mime_type
        - ocsf.actor.process.file.modified_time
        - ocsf.actor.process.file.name
        - ocsf.actor.process.file.owner.name
        - ocsf.actor.process.file.owner.uid
        - ocsf.actor.process.file.parent_folder
        - ocsf.actor.process.file.path
        - ocsf.actor.process.file.signature.certificate.expiration_time
        - ocsf.actor.process.file.signature.certificate.issuer
        - ocsf.actor.process.file.signature.certificate.serial_number
        - ocsf.actor.process.file.signature.certificate.subject
        - ocsf.actor.process.file.signature.certificate.version
        - ocsf.actor.process.file.size
        - ocsf.actor.process.file.type
        - ocsf.actor.process.file.uid
        - ocsf.actor.process.group.name
        - ocsf.actor.process.group.uid
        - ocsf.actor.process.name
        - ocsf.actor.process.pid
        - ocsf.actor.process.terminated_time
        - ocsf.actor.process.tid
        - ocsf.actor.process.uid
        - ocsf.actor.process.user.domain
        - ocsf.actor.process.user.email_addr
        - ocsf.actor.process.user.full_name
        - ocsf.actor.process.user.name
        - ocsf.actor.process.user.uid
        - ocsf.actor.process.parent_process.cmd_line
        - ocsf.actor.process.parent_process.created_time
        - ocsf.actor.process.parent_process.egid
        - ocsf.actor.process.parent_process.euid
        - ocsf.actor.process.parent_process.group.name
        - ocsf.actor.process.parent_process.group.uid
        - ocsf.actor.process.parent_process.name
        - ocsf.actor.process.parent_process.pid
        - ocsf.actor.process.parent_process.terminated_time
        - ocsf.actor.process.parent_process.tid
        - ocsf.actor.process.parent_process.uid
        - ocsf.actor.process.parent_process.user.domain
        - ocsf.actor.process.parent_process.user.email_addr
        - ocsf.actor.process.parent_process.user.full_name
        - ocsf.actor.process.parent_process.user.name
        - ocsf.actor.process.parent_process.user.uid
        - ocsf.actor.user.domain
        - ocsf.actor.user.email_addr
        - ocsf.actor.user.full_name
        - ocsf.actor.user.name
        - ocsf.actor.user.uid
        - ocsf.user.domain
        - ocsf.user.email_addr
        - ocsf.user.full_name
        - ocsf.user.name
        - ocsf.user.uid
        - ocsf.user_result.domain
        - ocsf.user_result.email_addr
        - ocsf.user_result.full_name
        - ocsf.user_result.name
        - ocsf.user_result.uid
        - ocsf.traffic.bytes
        - ocsf.traffic.bytes_in
        - ocsf.traffic.bytes_out
        - ocsf.traffic.packets
        - ocsf.traffic.packets_in
        - ocsf.traffic.packets_out
        - ocsf.tls.certificate.expiration_time
        - ocsf.tls.certificate.issuer
        - ocsf.tls.certificate.serial_number
        - ocsf.tls.certificate.subject
        - ocsf.tls.certificate.version
        - ocsf.tls.cipher
        - ocsf.tls.client_ciphers
        - ocsf.tls.ja3_hash.value
        - ocsf.tls.ja3s_hash.value
        - ocsf.tls.sni
        - ocsf.tls.version
        - ocsf.start_time
        - ocsf.src_endpoint.domain
        - ocsf.src_endpoint.hostname
        - ocsf.src_endpoint.ip
        - ocsf.src_endpoint.location.city
        - ocsf.src_endpoint.location.continent
        - ocsf.src_endpoint.location.coordinates
        - ocsf.src_endpoint.location.country
        - ocsf.src_endpoint.location.desc
        - ocsf.src_endpoint.location.postal_code
        - ocsf.src_endpoint.location.region
        - ocsf.src_endpoint.mac
        - ocsf.src_endpoint.port
        - ocsf.src_endpoint.svc_name
        - ocsf.dst_endpoint.domain
        - ocsf.dst_endpoint.hostname
        - ocsf.dst_endpoint.ip
        - ocsf.dst_endpoint.location.city
        - ocsf.dst_endpoint.location.continent
        - ocsf.dst_endpoint.location.coordinates
        - ocsf.dst_endpoint.location.country
        - ocsf.dst_endpoint.location.desc
        - ocsf.dst_endpoint.location.postal_code
        - ocsf.dst_endpoint.location.region
        - ocsf.dst_endpoint.mac
        - ocsf.dst_endpoint.port
        - ocsf.dst_endpoint.svc_name
        - ocsf.connection_info.protocol_name
        - ocsf.connection_info.protocol_num
        - ocsf.connection_info.protocol_ver
        - ocsf.device.domain
        - ocsf.device.hostname
        - ocsf.device.ip
        - ocsf.device.location.city
        - ocsf.device.location.continent
        - ocsf.device.location.coordinates
        - ocsf.device.location.country
        - ocsf.device.location.desc
        - ocsf.device.location.postal_code
        - ocsf.device.location.region
        - ocsf.device.mac
        - ocsf.device.name
        - ocsf.device.os.build
        - ocsf.device.os.name
        - ocsf.device.risk_level
        - ocsf.device.risk_score
        - ocsf.device.type
        - ocsf.device.uid
        - ocsf.device.vlan_uid
        - ocsf.http_request.http_method
        - ocsf.http_request.referrer
        - ocsf.http_request.uid
        - ocsf.http_request.url.hostname
        - ocsf.http_request.url.path
        - ocsf.http_request.url.port
        - ocsf.http_request.url.query_string
        - ocsf.http_request.url.scheme
        - ocsf.http_request.url.subdomain
        - ocsf.http_request.url.url_string
        - ocsf.http_request.user_agent
        - ocsf.http_request.version
        - ocsf.query.hostname
        - ocsf.query.packet_uid
        - ocsf.query.class
        - ocsf.query.type
        - ocsf.rcode
        - ocsf.service.name
        - ocsf.service.uid
        - ocsf.service.version
      tag: remove_duplicate_custom_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      lang: painless
      description: Drops null/empty values recursively.
      tag: painless_remove_null
      source: |-
        boolean drop(Object object) {
          if (object == null || object == '') {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(v -> drop(v));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(v -> drop(v));
            return (((List) object).length == 0);
          }
          return false;
        }
        drop(ctx);
  - foreach:
      field: dns.answers.ttl
      if: ctx.dns?.answers?.ttl instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value
          tag: convert_dns_answers_ttl_to_long
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: vulnerability.score.base
      if: ctx.vulnerability?.score?.base instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value
          tag: convert_vulnerability_score_base_to_double
          type: double
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
      tag: set_pipeline_error_into_event_kind
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
