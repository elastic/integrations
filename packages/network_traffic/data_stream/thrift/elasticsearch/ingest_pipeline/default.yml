---
description: Pipeline for processing thrift traffic
processors:
- set:
    field: ecs.version
    value: '8.7.0'
##
# Set host.mac to dash separated upper case value
# as per ECS recommendation
##
- gsub:
    field: host.mac
    pattern: '[-:.]'
    replacement: ''
    ignore_missing: true
    tag: gsub_host_mac
- gsub:
    field: host.mac
    pattern: '(..)(?!$)'
    replacement: '$1-'
    ignore_missing: true
    tag: gsub_host_mac
- uppercase:
    field: host.mac
    ignore_missing: true
- append:
    field: related.hosts
    value: "{{{observer.hostname}}}"
    if: ctx.observer?.hostname != null && ctx.observer?.hostname != ''
    allow_duplicates: false
- foreach:
    if: ctx.observer?.ip != null && ctx.observer.ip instanceof List
    field: observer.ip
    tag: foreach_observer_ip
    processor:
      append:
        field: related.ip
        value: '{{{_ingest._value}}}'
        allow_duplicates: false
- remove:
    if: ctx.host != null && ctx.tags != null && ctx.tags.contains('forwarded')
    field: host

- pipeline:
    if: ctx._conf?.geoip_enrich != null && ctx._conf.geoip_enrich
    name: '{{ IngestPipeline "geoip" }}'
    tag: pipeline_processor
- remove:
    field: _conf
    ignore_missing: true

- script:
    description: Remove invalid "network_traffic" term added by packetbeat prior to v8.
    # This string-based comparison is valid while versions are below v10.x.
    tag: remove_invalid_term
    if: 'ctx.agent?.version == null || ctx.agent.version.compareTo("8.") < 0'
    lang: painless
    source: >
        if (ctx.event?.category != null) {
            for (int i=ctx.event.category.length-1; i>=0; i--) {
                if (ctx.event.category[i] == "network_traffic") {
                    ctx.event.category.remove(i);
                }
            }
        }

on_failure:
- set:
    field: error.message
    value: |-
        Processor "{{ _ingest.on_failure_processor_type }}" with tag "{{ _ingest.on_failure_processor_tag }}" in pipeline "{{ _ingest.on_failure_pipeline }}" failed with message "{{ _ingest.on_failure_message }}"
- set:
    field: event.kind
    value: pipeline_error
