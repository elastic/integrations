---
description: Pipeline for processing compromised_credential logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.
  - drop:
      if: ctx.message == 'retry'
      tag: drop_retry_events
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
  - rename:
      field: json.breachSource
      tag: rename_breachSource
      target_field: island_browser.compromised_credential.breach_source
      ignore_missing: true
  - date:
      field: json.compromisedDate
      tag: date_compromisedDate
      target_field: island_browser.compromised_credential.compromised_date
      formats:
        - ISO8601
      if: ctx.json?.compromisedDate != null && ctx.json.compromisedDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.createdDate
      tag: date_createdDate
      target_field: island_browser.compromised_credential.created_date
      formats:
        - ISO8601
      if: ctx.json?.createdDate != null && ctx.json.createdDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      tag: set_event_created_from_compromised_credential_created_date
      copy_from: island_browser.compromised_credential.created_date
      ignore_empty_value: true
  - rename:
      field: json.email
      tag: rename_email
      target_field: island_browser.compromised_credential.email
      ignore_missing: true
  - set:
      field: user.email
      tag: set_user_email_from_compromised_credential_email
      copy_from: island_browser.compromised_credential.email
      ignore_empty_value: true
  - dissect:
      if: ctx.user?.email != null && ctx.user.email.contains('@')
      tag: dissect_user_email
      field: user.email
      pattern: '%{_temp}@%{user.domain}'
  - append:
      field: related.user
      tag: append_compromised_credential_email_into_related_user
      value: '{{{island_browser.compromised_credential.email}}}'
      allow_duplicates: false
      if: ctx.island_browser?.compromised_credential?.email != null
  - rename:
      field: json.id
      tag: rename_id
      target_field: island_browser.compromised_credential.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_compromised_credential_id
      copy_from: island_browser.compromised_credential.id
      ignore_empty_value: true
  - rename:
      field: json.impactedDomain
      tag: rename_impactedDomain
      target_field: island_browser.compromised_credential.impacted_domain
      ignore_missing: true
  - set:
      field: source.registered_domain
      tag: set_source_registered_domain_from_compromised_credential_impacted_domain
      copy_from: island_browser.compromised_credential.impacted_domain
      ignore_empty_value: true
  - rename:
      field: json.status
      tag: rename_status
      target_field: island_browser.compromised_credential.status
      ignore_missing: true
  - rename:
      field: json.tenantId
      tag: rename_tenantId
      target_field: island_browser.compromised_credential.tenant_id
      ignore_missing: true
  - set:
      field: organization.id
      tag: set_organization_id_from_compromised_credential_tenant_id
      copy_from: island_browser.compromised_credential.tenant_id
      ignore_empty_value: true
  - date:
      field: json.updatedDate
      tag: date_updatedDate
      target_field: island_browser.compromised_credential.updated_date
      formats:
        - ISO8601
      if: ctx.json?.updatedDate != null && ctx.json.updatedDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.username
      tag: rename_username
      target_field: island_browser.compromised_credential.username
      ignore_missing: true
  - set:
      field: user.name
      tag: set_user_name_from_compromised_credential_username
      copy_from: island_browser.compromised_credential.username
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_compromised_credential_username_into_related_user
      value: '{{{island_browser.compromised_credential.username}}}'
      allow_duplicates: false
      if: ctx.island_browser?.compromised_credential?.username != null
  - remove:
      field:
        - island_browser.compromised_credential.created_date
        - island_browser.compromised_credential.email
        - island_browser.compromised_credential.id
        - island_browser.compromised_credential.impacted_domain
        - island_browser.compromised_credential.tenant_id
        - island_browser.compromised_credential.username
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field:
        - json
        - _temp
      tag: remove_json_and_temp
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
