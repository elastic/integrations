config_version: 2
interval: {{interval}}
resource.tracer:
  enabled: {{enable_request_tracer}}
  filename: "../../logs/cel/http-request-trace-*.ndjson"
  maxbackups: 5
{{#if proxy_url}}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
resource.url: {{url}}

state:
  batch_size: {{batch_size}}
  offset: 0
  api_key: {{api_key}}
redact:
  fields:
    - api_key
program: |
  state.url.trim_right("/").as(base_url, state.with(
    request("GET",
      base_url + "/api/external/v1/users?" + {
        "Offset": [string(state.offset)],
        "Limit": [string(state.batch_size)],
        "SortBy": ["CreatedDate"],
        "SortDirection": ["Asc"],
      }.format_query()
    ).with({
      "Header":{
        "api-key": [state.api_key],
      }
    }).do_request().as(resp, resp.StatusCode == 200 ?
      resp.Body.decode_json().as(body, {
        "events": body.users.map(e,{
          "message": e.encode_json(),
        }),
        "offset": body.?users[0].hasValue() ? int(state.offset) + body.users.size() : 0,
        "want_more": body.?users[0].hasValue(),
      })
    :
      {
        "events": {
          "error": {
            "code": string(resp.StatusCode),
            "id": string(resp.Status),
            "message": "GET " + base_url + "/api/external/v1/users" + (
              size(resp.Body) != 0 ?
                string(resp.Body)
              :
                string(resp.Status) + " (" + string(resp.StatusCode) + ")"
            ),
          },
        },
        "want_more": false,
        "offset": 0
      }
    )
  ))
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#if preserve_duplicate_custom_fields}}
  - preserve_duplicate_custom_fields
{{/if}}
{{#if hide_sensitive}}
  - hide_sensitive
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
