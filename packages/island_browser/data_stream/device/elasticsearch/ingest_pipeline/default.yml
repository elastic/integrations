---
description: Pipeline for processing device logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - set:
      field: event.kind
      tag: set_event_kind
      value: asset
  - append:
      field: event.category
      tag: append_host_into_event_category
      value: host
  - append:
      field: event.type
      tag: append_info_into_event_type
      value: info
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
  - rename:
      field: json.antiMalwareProducts
      tag: rename_antiMalwareProducts
      target_field: island_browser.device.anti_malware_products
      ignore_missing: true
  - rename:
      field: json.architecture
      tag: rename_architecture
      target_field: island_browser.device.architecture
      ignore_missing: true
  - set:
      field: host.architecture
      tag: set_host_architecture_from_device_architecture
      copy_from: island_browser.device.architecture
      ignore_empty_value: true
  - rename:
      field: json.authMethod
      tag: rename_authMethod
      target_field: island_browser.device.auth_method
      ignore_missing: true
  - rename:
      field: json.azureTenantId
      tag: rename_azureTenantId
      target_field: island_browser.device.azure_tenant_id
      ignore_missing: true
  - rename:
      field: json.browserName
      tag: rename_browserName
      target_field: island_browser.device.browser_name
      ignore_missing: true
  - set:
      field: user_agent.name
      tag: set_user_agent_name_from_device_browser_name
      copy_from: island_browser.device.browser_name
      ignore_empty_value: true
  - rename:
      field: json.browserUpdateStatus
      tag: rename_browserUpdateStatus
      target_field: island_browser.device.browser_update_status
      ignore_missing: true
  - rename:
      field: json.browserVersion
      tag: rename_browserVersion
      target_field: island_browser.device.browser_version
      ignore_missing: true
  - rename:
      field: json.chassisType
      tag: rename_chassisType
      target_field: island_browser.device.chassis_type
      ignore_missing: true
  - rename:
      field: json.chromiumVersion
      tag: rename_chromiumVersion
      target_field: island_browser.device.chromium_version
      ignore_missing: true
  - rename:
      field: json.country
      tag: rename_country
      target_field: island_browser.device.country
      ignore_missing: true
  - rename:
      field: json.countryCode
      tag: rename_countryCode
      target_field: island_browser.device.country_code
      ignore_missing: true
  - rename:
      field: json.cpuModel
      tag: rename_cpuModel
      target_field: island_browser.device.cpu_model
      ignore_missing: true
  - date:
      field: json.createdDate
      tag: date_createdDate
      target_field: island_browser.device.created_date
      formats:
        - ISO8601
      if: ctx.json?.createdDate != null && ctx.json.createdDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      tag: set_event_created_from_device_created_date
      copy_from: island_browser.device.created_date
      ignore_empty_value: true
  - rename:
      field: json.crowdstrikeAgentId
      tag: rename_crowdstrikeAgentId
      target_field: island_browser.device.crowdstrike_agent_id
      ignore_missing: true
  - rename:
      field: json.crowdstrikeCid
      tag: rename_crowdstrikeCid
      target_field: island_browser.device.crowdstrike_cid
      ignore_missing: true
  - convert:
      field: json.crowdstrikeZtaScore
      tag: convert_crowdstrikeZtaScore_to_long
      target_field: island_browser.device.crowdstrike_zta_score
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.deviceType
      tag: rename_deviceType
      target_field: island_browser.device.device_type
      ignore_missing: true
  - set:
      field: host.type
      tag: set_host_type_from_device_device_type
      copy_from: island_browser.device.device_type
      ignore_empty_value: true
  - convert:
      field: json.diskEncrypted
      tag: convert_diskEncrypted_to_boolean
      target_field: island_browser.device.disk_encrypted
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.email
      tag: rename_email
      target_field: island_browser.device.email
      ignore_missing: true
  - set:
      field: user.email
      tag: set_user_email_from_device_email
      copy_from: island_browser.device.email
      ignore_empty_value: true
  - dissect:
      if: ctx.user?.email != null && ctx.user.email.contains('@')
      tag: dissect_user_email
      field: user.email
      pattern: '%{_temp}@%{user.domain}'
  - append:
      field: related.user
      tag: append_device_email_into_related_user
      value: '{{{island_browser.device.email}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.email != null
  - rename:
      field: json.extensionUtilityVersion
      tag: rename_extensionUtilityVersion
      target_field: island_browser.device.extension_utility_version
      ignore_missing: true
  - rename:
      field: json.extensionVersion
      tag: rename_extensionVersion
      target_field: island_browser.device.extension_version
      ignore_missing: true
  - convert:
      field: json.externalIpAddress
      tag: convert_externalIpAddress_to_ip
      target_field: island_browser.device.external_ip_address
      type: ip
      ignore_missing: true
      if: ctx.json?.externalIpAddress != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - geoip:
      field: island_browser.device.external_ip_address
      target_field: host.geo
      ignore_missing: true
  - append:
      field: host.ip
      tag: append_island_browser_device_external_ip_address_into_host_ip
      value: '{{{island_browser.device.external_ip_address}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.external_ip_address != null
  - append:
      field: related.ip
      tag: append_device_external_ip_address_into_related_ip
      value: '{{{island_browser.device.external_ip_address}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.external_ip_address != null
  - rename:
      field: json.gatekeeperVersion
      tag: rename_gatekeeperVersion
      target_field: island_browser.device.gatekeeper_version
      ignore_missing: true
  - rename:
      field: json.id
      tag: rename_id
      target_field: island_browser.device.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_device_id
      copy_from: island_browser.device.id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_device_id_into_related_hosts
      value: '{{{island_browser.device.id}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.id != null
  - rename:
      field: json.installedExtensions
      tag: rename_installedExtensions
      target_field: island_browser.device.installed_extensions
      ignore_missing: true
  - convert:
      field: json.internalIpAddress
      tag: convert_internalIpAddress_to_ip
      target_field: island_browser.device.internal_ip_address
      type: ip
      ignore_missing: true
      if: ctx.json?.internalIpAddress != ''
      on_failure:
        - rename:
            field: json.internalIpAddress
            tag: rename_internalIpAddress
            target_field: island_browser.device.internal_ip
            ignore_missing: true
  - dissect:
      if: ctx.island_browser?.device?.internal_ip != null && ctx.island_browser.device.internal_ip.contains('/')
      field: island_browser.device.internal_ip
      tag: dissect_internalIpAddress
      pattern: '%{_temp1}/%{island_browser.device.internal_ip_address}'
      ignore_failure: true
  - convert:
      field: island_browser.device.internal_ip_address
      tag: convert_internal_ip_address_to_ip
      type: ip
      ignore_missing: true
      if: ctx.island_browser?.device?.internal_ip_address != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      tag: append_device_internal_ip_address_into_related_ip
      value: '{{{island_browser.device.internal_ip_address}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.internal_ip_address != null
  - convert:
      field: json.isArchived
      tag: convert_isArchived_to_boolean
      target_field: island_browser.device.is_archived
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isContainer
      tag: convert_isContainer_to_boolean
      target_field: island_browser.device.is_container
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isDefaultBrowser
      tag: convert_isDefaultBrowser_to_boolean
      target_field: island_browser.device.is_default_browser
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isDeviceAttested
      tag: convert_isDeviceAttested_to_boolean
      target_field: island_browser.device.is_device_attested
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isGatekeeperEnabled
      tag: convert_isGatekeeperEnabled_to_boolean
      target_field: island_browser.device.is_gatekeeper_enabled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isJailbroken
      tag: convert_isJailbroken_to_boolean
      target_field: island_browser.device.is_jailbroken
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isSystemLevelInstall
      tag: convert_isSystemLevelInstall_to_boolean
      target_field: island_browser.device.is_system_level_install
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.isVirtualMachine
      tag: convert_isVirtualMachine_to_boolean
      target_field: island_browser.device.is_virtual_machine
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.islandMdmCustomKey
      tag: rename_islandMdmCustomKey
      target_field: island_browser.device.island_mdm_custom_key
      ignore_missing: true
  - rename:
      field: json.windowsLicenseStatus
      tag: rename_windowsLicenseStatus
      target_field: island_browser.device.windows_license_status
      ignore_missing: true
  - rename:
      field: json.windowsActivationId
      tag: rename_windowsActivationId
      target_field: island_browser.device.windows_activation_id
      ignore_missing: true
  - rename:
      field: json.islandPlatform
      tag: rename_islandPlatform
      target_field: island_browser.device.island_platform
      ignore_missing: true
  - date:
      field: json.lastSeen
      tag: date_lastSeen
      target_field: island_browser.device.last_seen
      formats:
        - ISO8601
      if: ctx.json?.lastSeen != null && ctx.json.lastSeen != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.latestSecurityUpdateId
      tag: rename_latestSecurityUpdateId
      target_field: island_browser.device.latest_security_update_id
      ignore_missing: true
  - rename:
      field: json.macAddresses
      tag: rename_macAddresses
      target_field: island_browser.device.mac_addresses
      ignore_missing: true
  - script:
      tag: append_island_browser_device_mac_addresses_into_host_mac
      lang: painless
      if: ctx.island_browser?.device?.mac_addresses != null
      source: |
        String macAddresses = ctx.island_browser.device.mac_addresses;
        if (macAddresses != null) {
          String[] macArray = macAddresses.splitOnToken("|");
          String[] trimmedMacArray = new String[macArray.length];
          for (int i = 0; i < macArray.length; i++) {
            trimmedMacArray[i] = macArray[i].trim();
          }
          for (String mac: trimmedMacArray) {
            if (mac.length() > 0) {
              if (ctx.host.mac == null) {
                ctx.host.mac = [mac];
              } else if (!ctx.host.mac.contains(mac)) {
                ctx.host.mac.add(mac);
              }
            }
          }
        }
  - foreach:
      field: host.mac
      if: ctx.host?.mac instanceof List
      tag: foreach_host_mac_gsub
      processor:
        gsub:
          field: _ingest._value
          tag: gsub_host_mac_for_each_mac
          pattern: ':'
          replacement: '-'
          ignore_missing: true
          on_failure:
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: host.mac
      if: ctx.host?.mac instanceof List
      tag: foreach_host_mac_uppercase
      processor:
        uppercase:
          field: _ingest._value
          tag: uppercase_host_mac_for_each_mac
          ignore_missing: true
  - rename:
      field: json.machineId
      tag: rename_machineId
      target_field: island_browser.device.machine_id
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_device_machine_id
      copy_from: island_browser.device.machine_id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_device_machine_id_into_related_hosts
      value: '{{{island_browser.device.machine_id}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.machine_id != null
  - rename:
      field: json.machineModel
      tag: rename_machineModel
      target_field: island_browser.device.machine_model
      ignore_missing: true
  - set:
      field: device.model.name
      tag: set_device_model_name_from_device_machine_model
      copy_from: island_browser.device.machine_model
      ignore_empty_value: true
  - rename:
      field: json.machineName
      tag: rename_machineName
      target_field: island_browser.device.machine_name
      ignore_missing: true
  - set:
      field: host.name
      tag: set_host_name_from_device_machine_name
      copy_from: island_browser.device.machine_name
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_device_machine_name_into_related_hosts
      value: '{{{island_browser.device.machine_name}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.machine_name != null
  - rename:
      field: json.manufacturer
      tag: rename_manufacturer
      target_field: island_browser.device.manufacturer
      ignore_missing: true
  - set:
      field: device.manufacturer
      tag: set_device_manufacturer_from_device_manufacturer
      copy_from: island_browser.device.manufacturer
      ignore_empty_value: true
  - convert:
      field: json.mdmCompliant
      tag: convert_mdmCompliant_to_boolean
      target_field: island_browser.device.mdm_compliant
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mdmEnrolled
      tag: convert_mdmEnrolled_to_boolean
      target_field: island_browser.device.mdm_enrolled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.mdmProvider
      tag: rename_mdmProvider
      target_field: island_browser.device.mdm_provider
      ignore_missing: true
  - rename:
      field: json.mdmTenantName
      tag: rename_mdmTenantName
      target_field: island_browser.device.mdm_tenant_name
      ignore_missing: true
  - rename:
      field: json.mdmTopic
      tag: rename_mdmTopic
      target_field: island_browser.device.mdm_topic
      ignore_missing: true
  - rename:
      field: json.mobileEnrollmentType
      tag: rename_mobileEnrollmentType
      target_field: island_browser.device.mobile_enrollment_type
      ignore_missing: true
  - rename:
      field: json.osCodeName
      tag: rename_osCodeName
      target_field: island_browser.device.os_code_name
      ignore_missing: true
  - rename:
      field: json.osDomain
      tag: rename_osDomain
      target_field: island_browser.device.os_domain
      ignore_missing: true
  - convert:
      field: json.osFirewallEnabled
      tag: convert_osFirewallEnabled_to_boolean
      target_field: island_browser.device.os_firewall_enabled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.osPlatform
      tag: rename_osPlatform
      target_field: island_browser.device.os_platform
      ignore_missing: true
  - set:
      field: host.os.platform
      tag: set_host_os_platform_from_device_os_platform
      copy_from: island_browser.device.os_platform
      ignore_empty_value: true
  - convert:
      field: json.osScreenLockEnabled
      tag: convert_osScreenLockEnabled_to_boolean
      target_field: island_browser.device.os_screen_lock_enabled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.osUserName
      tag: rename_osUserName
      target_field: island_browser.device.os_user_name
      ignore_missing: true
  - set:
      field: host.os.name
      tag: set_host_os_name_from_device_os_user_name
      copy_from: island_browser.device.os_user_name
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_device_os_user_name_into_related_user
      value: '{{{island_browser.device.os_user_name}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.os_user_name != null
  - rename:
      field: json.osVersion
      tag: rename_osVersion
      target_field: island_browser.device.os_version
      ignore_missing: true
  - set:
      field: host.os.version
      tag: set_host_os_version_from_device_os_version
      copy_from: island_browser.device.os_version
      ignore_empty_value: true
  - date:
      field: json.policyUpdateTime
      tag: date_policyUpdateTime
      target_field: island_browser.device.policy_update_time
      formats:
        - ISO8601
      if: ctx.json?.policyUpdateTime != null && ctx.json.policyUpdateTime != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.ramSize
      tag: convert_ramSize_to_long
      target_field: island_browser.device.ram_size
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.secureBoot
      tag: convert_secureBoot_to_boolean
      target_field: island_browser.device.secure_boot
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.serialNumber
      tag: rename_serialNumber
      target_field: island_browser.device.serial_number
      ignore_missing: true
  - set:
      field: device.serial_number
      tag: set_device_serial_number_from_device_serial_number
      copy_from: island_browser.device.serial_number
      ignore_empty_value: true
  - convert:
      field: json.spmProtected
      tag: convert_spmProtected_to_boolean
      target_field: island_browser.device.spm_protected
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.status
      tag: rename_status
      target_field: island_browser.device.status
      ignore_missing: true
  - convert:
      field: json.storageCapacity
      tag: convert_storageCapacity_to_long
      target_field: island_browser.device.storage_capacity
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.syncEnabled
      tag: convert_syncEnabled_to_boolean
      target_field: island_browser.device.sync_enabled
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.systemIntegrityProtection
      tag: convert_systemIntegrityProtection_to_boolean
      target_field: island_browser.device.system_integrity_protection
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.tenantId
      tag: rename_tenantId
      target_field: island_browser.device.tenant_id
      ignore_missing: true
  - set:
      field: organization.id
      tag: set_organization_id_from_device_tenant_id
      copy_from: island_browser.device.tenant_id
      ignore_empty_value: true
  - date:
      field: json.updatedDate
      tag: date_updatedDate
      target_field: island_browser.device.updated_date
      formats:
        - ISO8601
      if: ctx.json?.updatedDate != null && ctx.json.updatedDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.updaterVersion
      tag: rename_updaterVersion
      target_field: island_browser.device.updater_version
      ignore_missing: true
  - rename:
      field: json.userId
      tag: rename_userId
      target_field: island_browser.device.user_id
      ignore_missing: true
  - set:
      field: user.id
      tag: set_user_id_from_device_user_id
      copy_from: island_browser.device.user_id
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_device_user_id_into_related_user
      value: '{{{island_browser.device.user_id}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.user_id != null
  - rename:
      field: json.userName
      tag: rename_userName
      target_field: island_browser.device.user_name
      ignore_missing: true
  - set:
      field: user.name
      tag: set_user_name_from_device_user_name
      copy_from: island_browser.device.user_name
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_device_user_name_into_related_user
      value: '{{{island_browser.device.user_name}}}'
      allow_duplicates: false
      if: ctx.island_browser?.device?.user_name != null
  - remove:
      field:
        - island_browser.device.architecture
        - island_browser.device.browser_name
        - island_browser.device.created_date
        - island_browser.device.device_type
        - island_browser.device.email
        - island_browser.device.external_ip_address
        - island_browser.device.id
        - island_browser.device.machine_id
        - island_browser.device.machine_model
        - island_browser.device.machine_name
        - island_browser.device.manufacturer
        - island_browser.device.os_platform
        - island_browser.device.os_user_name
        - island_browser.device.os_version
        - island_browser.device.serial_number
        - island_browser.device.tenant_id
        - island_browser.device.user_id
        - island_browser.device.user_name
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field:
        - json
        - _temp
        - _temp1
      tag: remove_json_and_temp
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
