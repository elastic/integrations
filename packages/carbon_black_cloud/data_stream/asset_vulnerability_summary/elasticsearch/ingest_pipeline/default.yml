---
description: Pipeline for parsing Carbon Black Cloud Asset Vulnerability Summary.
processors:
- rename:
    field: message
    target_field: event.original
    ignore_missing: true
- set:
    field: ecs.version
    value: '8.0.0'
- json:
    field: event.original
    target_field: json
- rename:
    field: json.host_name
    target_field: host.hostname
    ignore_missing: true
- convert:
    field: json.device_id
    type: string
    target_field: host.id
    ignore_missing: true
- rename:
    field: json.name
    target_field: host.name
    ignore_missing: true
- rename:
    field: json.os_info.os_name
    target_field: host.os.name
    ignore_missing: true
- set:
    field: host.os.type
    value: windows
    if: ctx?.json?.os_info.os_type == "WINDOWS"
- set:
    field: host.os.type
    value: ubuntu
    if: ctx?.json?.os_info.os_type == "UBUNTU"
- set:
    field: host.os.type
    value: centos
    if: ctx?.json?.os_info.os_type == "CENTOS"
- remove :
    field: json.os_info.os_type
    ignore_missing: true
- remove :
    field: json.device_id
    ignore_missing: true
- rename:
    field: json.os_info.os_version
    target_field: host.os.version
    ignore_missing: true
- rename:
    field: json.highest_risk_score
    target_field: vulnerability.score.base
    ignore_missing: true
- rename:
    field: json.severity
    target_field: vulnerability.severity
    ignore_missing: true
- date:
    field: json.last_sync_ts
    formats:
      - ISO8601
    target_field: carbon_black_cloud.asset_vulnerability_summary.last_sync.timestamp
- remove:
    field: json.last_sync_ts
    ignore_missing: true
- rename:
    field: json.sync_status
    target_field: carbon_black_cloud.asset_vulnerability_summary.sync.status
    ignore_missing: true
- rename:
    field: json.sync_type
    target_field: carbon_black_cloud.asset_vulnerability_summary.sync.type
    ignore_missing: true
- rename:
    field: json.type
    target_field: carbon_black_cloud.asset_vulnerability_summary.type
    ignore_missing: true
- rename:
    field: json.vm_id
    target_field: carbon_black_cloud.asset_vulnerability_summary.vm.id
    ignore_missing: true
- rename:
    field: json.vm_name
    target_field: carbon_black_cloud.asset_vulnerability_summary.vm.name
    ignore_missing: true
- rename:
    field: json.vuln_count
    target_field: carbon_black_cloud.asset_vulnerability_summary.vuln_count
    ignore_missing: true
- append:
    field: related.hosts
    value: "{{{host.hostname}}}"
    allow_duplicates: false
- script:
    description: Adds all the remaining fields in fields under carbon_black_cloud.asset_vulnerability_summary
    lang: painless
    if: ctx?.json != null
    source: |
        for (Map.Entry m : ctx.json.entrySet()) {
          ctx.carbon_black_cloud.asset_vulnerability_summary[m.getKey()] = m.getValue();
        }   
- remove:
    field: json
    ignore_missing: true
- script:
    description: Drops null/empty values recursively
    lang: painless
    source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
- remove:
    field: event.original
    if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: '{{{ _ingest.on_failure_message }}}'
