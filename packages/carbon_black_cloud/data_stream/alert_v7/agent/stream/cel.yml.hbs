config_version: 2
interval: {{interval}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/httpjson/http-request-trace-*.ndjson"
resource.tracer.maxbackups: 5
{{/if}}
{{#if proxy_url}}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
resource.url: {{hostname}}/api/alerts/v7/orgs/{{org_key}}/alerts/_search
state:
    api_key: '{{custom_api_secret_key}}/{{custom_api_id}}'
    want_more: false
    initial_interval: {{initial_interval}}
redact:
    fields:
        - api_key
# The alert data stream has a 15-minute delay to ensure that no occurrences are missed.
program: |
    request("POST", state.url).with({
            "Header":{
                "Content-Type": ["application/json"],
                "X-Auth-Token": [state.api_key],
            },
            "Body":{
                "time_range": {
                    "start": state.?cursor.last_backend_update_timestamp.orValue(string(now - duration(state.initial_interval) + duration("-15m"))), 
                    "end":   string(now + duration("-15m"))
                },
                "sort" : [{ "field": "backend_update_timestamp", "order": "ASC"}],
            }.encode_json(),
        }).do_request().as(resp, bytes(resp.Body).decode_json().as(body, {
            "events": body.results.map(e, {
                "message": e.encode_json(),
            }),
            "cursor": {
                  ?"last_backend_update_timestamp": (
                      has(body.results) && body.results.size() > 0 ?
                          optional.of(body.results.map(e, e.backend_update_timestamp).max().as(last_update,
                              !has(state.?cursor.last_backend_update_timestamp) ?
                                  last_update
                              : last_update < state.cursor.last_backend_update_timestamp ?
                                  state.cursor.last_backend_update_timestamp
                              :
                                  last_update
                          ))
                      :
                          state.?cursor.last_backend_update_timestamp
                  ),
               },
            "want_more": body.?num_found != body.?num_available,
            "api_key": state.api_key,
            "initial_interval": state.initial_interval,
        }))
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
