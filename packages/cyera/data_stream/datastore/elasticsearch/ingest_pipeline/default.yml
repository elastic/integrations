---
description: Pipeline for processing Datastore logs.
processors:
  - drop:
      description: Ignore retry placeholder message.
      if: ctx.message == 'retry'
  - remove:
      field:
        - organization
        - division
        - team
      ignore_missing: true
      if: ctx.organization instanceof String && ctx.division instanceof String && ctx.team instanceof String
      tag: remove_agentless_tags
      description: >-
        Removes the fields added by Agentless as metadata,
        as they can collide with ECS fields.
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
  - fingerprint:
      fields:
        - json.uid
        - json.lastModifiedTime
        - json.createdDate
      tag: fingerprint_datastore
      target_field: _id
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - rename:
      field: json.account.inPlatformIdentifier
      tag: rename_account_inPlatformIdentifier
      target_field: cyera.datastore.account.in_platform_identifier
      ignore_missing: true
  - set:
      field: cloud.account.id
      tag: set_cloud_account_id_from_datastore_account_in_platform_identifier
      copy_from: cyera.datastore.account.in_platform_identifier
      ignore_empty_value: true
  - rename:
      field: json.account.name
      tag: rename_account_name
      target_field: cyera.datastore.account.name
      ignore_missing: true
  - set:
      field: cloud.account.name
      tag: set_cloud_account_name_from_datastore_account_name
      copy_from: cyera.datastore.account.name
      ignore_empty_value: true
  - rename:
      field: json.arn
      tag: rename_arn
      target_field: cyera.datastore.arn
      ignore_missing: true
  - convert:
      field: json.autoScan
      tag: convert_autoScan_to_boolean
      target_field: cyera.datastore.auto_scan
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.azureId
      tag: rename_azureId
      target_field: cyera.datastore.azure_id
      ignore_missing: true
  - rename:
      field: json.classificationGroups
      tag: rename_classificationGroups
      target_field: cyera.datastore.classification.groups
      ignore_missing: true
  - rename:
      field: json.classificationLevel
      tag: rename_classificationLevel
      target_field: cyera.datastore.classification.level
      ignore_missing: true
  - rename:
      field: json.cloudProviderTags
      tag: rename_cloudProviderTags
      target_field: cyera.datastore.cloud_provider.tags
      ignore_missing: true
  - rename:
      field: json.cloudProviderUrl
      tag: rename_cloudProviderUrl
      target_field: cyera.datastore.cloud_provider.url
      ignore_missing: true
  - rename:
      field: json.collections
      tag: rename_collections
      target_field: cyera.datastore.collections
      ignore_missing: true
  - date:
      field: json.createdDate
      tag: date_createdDate
      target_field: cyera.datastore.created_date
      formats:
        - ISO8601
      if: ctx.json?.createdDate != null && ctx.json.createdDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      tag: set_event_created_from_datastore_created_date
      copy_from: cyera.datastore.created_date
      ignore_empty_value: true
  - rename:
      field: json.customCollections
      tag: rename_customCollections
      target_field: cyera.datastore.custom_collections
      ignore_missing: true
  - rename:
      field: json.dataType
      tag: rename_dataType
      target_field: cyera.datastore.data_type
      ignore_missing: true
  - foreach:
      field: json.datastoreOwners
      tag: foreach_datastoreOwners_datastoreUid
      if: ctx.json?.datastoreOwners instanceof List
      processor:
        rename:
          field: _ingest._value.datastoreUid
          tag: rename_datastoreOwners_datastoreUid
          target_field: _ingest._value.datastore_uid
          ignore_missing: true
  - foreach:
      field: json.datastoreOwners
      tag: foreach_datastoreOwners_email
      if: ctx.json?.datastoreOwners instanceof List
      processor:
        append:
          field: related.user
          tag: append_datastoreOwners_email_into_related_user
          value: '{{{_ingest._value.email}}}'
          allow_duplicates: false
  - foreach:
      field: json.datastoreOwners
      tag: foreach_datastoreOwners_ownerType
      if: ctx.json?.datastoreOwners instanceof List
      processor:
        rename:
          field: _ingest._value.ownerType
          tag: rename_datastoreOwners_ownerType
          target_field: _ingest._value.owner_type
          ignore_missing: true
  - foreach:
      field: json.datastoreOwners
      tag: foreach_datastoreOwners_datastoreOwnerUid
      if: ctx.json?.datastoreOwners instanceof List
      processor:
        rename:
          field: _ingest._value.datastoreOwnerUid
          tag: rename_datastoreOwners_datastoreOwnerUid
          target_field: _ingest._value.uid
          ignore_missing: true
  - rename:
      field: json.datastoreOwners
      tag: rename_datastoreOwners
      target_field: cyera.datastore.datastore.owners
      ignore_missing: true
  - convert:
      field: json.datastoreSizeInGiB
      tag: convert_datastoreSizeInGiB_to_double
      target_field: cyera.datastore.datastore.size_in_gi_b
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.discoveredDate
      tag: date_discoveredDate
      target_field: cyera.datastore.discovered_date
      formats:
        - ISO8601
      if: ctx.json?.discoveredDate != null && ctx.json.discoveredDate != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.driveId
      tag: rename_driveId
      target_field: cyera.datastore.drive_id
      ignore_missing: true
  - convert:
      field: json.encrypted
      tag: convert_encrypted_to_boolean
      target_field: cyera.datastore.encrypted
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.engine
      tag: rename_engine
      target_field: cyera.datastore.engine
      ignore_missing: true
  - rename:
      field: json.frameworks
      tag: rename_frameworks
      target_field: cyera.datastore.frameworks
      ignore_missing: true
  - convert:
      field: json.ghost
      tag: convert_ghost_to_boolean
      target_field: cyera.datastore.ghost
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.infrastructure
      tag: rename_infrastructure
      target_field: cyera.datastore.infrastructure
      ignore_missing: true
  - set:
      field: cloud.service.name
      tag: set_cloud_service_name_from_datastore_infrastructure
      copy_from: cyera.datastore.infrastructure
      ignore_empty_value: true
  - convert:
      field: json.issues.closed
      tag: convert_issues_closed_to_long
      target_field: cyera.datastore.issues.closed
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.issues.inProgress
      tag: convert_issues_inProgress_to_long
      target_field: cyera.datastore.issues.in_progress
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.issues.open
      tag: convert_issues_open_to_long
      target_field: cyera.datastore.issues.open
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.lastDataRefresh
      tag: date_lastDataRefresh
      target_field: cyera.datastore.last.data_refresh
      formats:
        - ISO8601
      if: ctx.json?.lastDataRefresh != null && ctx.json.lastDataRefresh != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.lastModifiedTime
      tag: date_lastModifiedTime
      target_field: cyera.datastore.last.modified_time
      formats:
        - ISO8601
      if: ctx.json?.lastModifiedTime != null && ctx.json.lastModifiedTime != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_datastore_last_modified_time
      copy_from: cyera.datastore.last.modified_time
      ignore_empty_value: true
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_datastore_created_date
      copy_from: cyera.datastore.created_date
      if: ctx.cyera?.datastore?.last?.modified_time == null
      ignore_empty_value: true
  - convert:
      field: json.learned
      tag: convert_learned_to_boolean
      target_field: cyera.datastore.learned
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.logging
      tag: rename_logging
      target_field: cyera.datastore.logging
      ignore_missing: true
  - rename:
      field: json.name
      tag: rename_name
      target_field: cyera.datastore.name
      ignore_missing: true
  - set:
      field: service.name
      tag: set_service_name_from_datastore_name
      copy_from: cyera.datastore.name
      ignore_empty_value: true
  - rename:
      field: json.owner
      tag: rename_owner
      target_field: cyera.datastore.owner
      ignore_missing: true
  - set:
      field: user.email
      tag: set_user_email_from_datastore_owner
      copy_from: cyera.datastore.owner
      ignore_empty_value: true
      if: ctx.cyera?.datastore?.owner != null && ctx.cyera.datastore.owner.contains('@')
  - set:
      field: user.name
      tag: set_user_name_from_datastore_owner
      copy_from: cyera.datastore.owner
      ignore_empty_value: true
      if: ctx.user?.email == null
  - dissect:
      field: cyera.datastore.owner
      pattern: '%{user.name}@%{user.domain}'
      tag: dissect_cyera_datastore_owner
      ignore_missing: true
      if: ctx.cyera?.datastore?.owner != null && ctx.cyera.datastore.owner.contains('@')
  - append:
      field: related.user
      tag: append_datastore_owner_into_related_user
      value: '{{{cyera.datastore.owner}}}'
      allow_duplicates: false
      if: ctx.cyera?.datastore?.owner != null
  - rename:
      field: json.projectIds
      tag: rename_projectIds
      target_field: cyera.datastore.project_ids
      ignore_missing: true
  - rename:
      field: json.provider
      tag: rename_provider
      target_field: cyera.datastore.provider
      ignore_missing: true
  - set:
      field: cloud.provider
      tag: set_cloud_provider_from_datastore_provider
      copy_from: cyera.datastore.provider
      ignore_empty_value: true
  - lowercase:
      field: cloud.provider
      tag: lowercase_cloud_provider
      ignore_missing: true
  - rename:
      field: json.publicAccessibilityState
      tag: rename_publicAccessibilityState
      target_field: cyera.datastore.public_accessibility_state
      ignore_missing: true
  - rename:
      field: json.rdsEndpoint
      tag: rename_rdsEndpoint
      target_field: cyera.datastore.rds_endpoint
      ignore_missing: true
  - convert:
      field: json.recordCountBySensitivity.Internal
      tag: convert_recordCountBySensitivity_Internal_to_long
      target_field: cyera.datastore.record_count_by_sensitivity.internal
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.recordCountBySensitivity.NotSensitive
      tag: convert_recordCountBySensitivity_NotSensitive_to_long
      target_field: cyera.datastore.record_count_by_sensitivity.not_sensitive
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.recordCountBySensitivity.Sensitive
      tag: convert_recordCountBySensitivity_Sensitive_to_long
      target_field: cyera.datastore.record_count_by_sensitivity.sensitive
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.recordCountBySensitivity.Unclassified
      tag: convert_recordCountBySensitivity_Unclassified_to_long
      target_field: cyera.datastore.record_count_by_sensitivity.unclassified
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.recordCountBySensitivity.VerySensitive
      tag: convert_recordCountBySensitivity_VerySensitive_to_long
      target_field: cyera.datastore.record_count_by_sensitivity.very_sensitive
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.regions
      tag: foreach_regions
      if: ctx.json?.regions instanceof List
      processor:
        append:
          field: cloud.region
          tag: append_regions_into_cloud_region
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - rename:
      field: json.regions
      tag: rename_regions
      target_field: cyera.datastore.regions
      ignore_missing: true
  - rename:
      field: json.scanningState
      tag: rename_scanningState
      target_field: cyera.datastore.scanning_state
      ignore_missing: true
  - rename:
      field: json.sensitivityDisplayName
      tag: rename_sensitivityDisplayName
      target_field: cyera.datastore.sensitivity.display_name
      ignore_missing: true
  - rename:
      field: json.sensitivity
      tag: rename_sensitivity
      target_field: cyera.datastore.sensitivity.value
      ignore_missing: true
  - rename:
      field: json.siteId
      tag: rename_siteId
      target_field: cyera.datastore.site.id
      ignore_missing: true
  - rename:
      field: json.siteName
      tag: rename_siteName
      target_field: cyera.datastore.site.name
      ignore_missing: true
  - rename:
      field: json.sslEnforced
      tag: rename_sslEnforced
      target_field: cyera.datastore.ssl_enforced
      ignore_missing: true
  - rename:
      field: json.type
      tag: rename_type
      target_field: cyera.datastore.type
      ignore_missing: true
  - set:
      field: service.type
      tag: set_service_type_from_datastore_type
      copy_from: cyera.datastore.type
      ignore_empty_value: true
  - rename:
      field: json.uid
      tag: rename_uid
      target_field: cyera.datastore.uid
      ignore_missing: true
  - set:
      field: service.id
      tag: set_service_id_from_datastore_uid
      copy_from: cyera.datastore.uid
      ignore_empty_value: true
  - set:
      field: event.id
      tag: set_event_id_from_datastore_uid
      copy_from: cyera.datastore.uid
      ignore_empty_value: true
  - rename:
      field: json.userId
      tag: rename_userId
      target_field: cyera.datastore.user.id
      ignore_missing: true
  - set:
      field: user.id
      tag: set_user_id_from_datastore_userId
      copy_from: cyera.datastore.user.id
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_datastore_user_id_into_related_user
      value: '{{{cyera.datastore.user.id}}}'
      allow_duplicates: false
      if: ctx.cyera?.datastore?.user?.id != null
  - rename:
      field: json.userTags
      tag: rename_userTags
      target_field: cyera.datastore.user.tags
      ignore_missing: true
  - rename:
      field: json.vpc
      tag: rename_vpc
      target_field: cyera.datastore.vpc
      ignore_missing: true
  - remove:
      field:
        - cyera.datastore.account.in_platform_identifier
        - cyera.datastore.account.name
        - cyera.datastore.created_date
        - cyera.datastore.infrastructure
        - cyera.datastore.last.modified_time
        - cyera.datastore.name
        - cyera.datastore.provider
        - cyera.datastore.regions
        - cyera.datastore.type
        - cyera.datastore.uid
        - cyera.datastore.user.id
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
