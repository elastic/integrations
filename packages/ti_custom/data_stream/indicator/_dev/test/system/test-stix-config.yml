input: cel
service: stix-taxii
vars: ~
data_stream:
  vars:
    url: http://{{Hostname}}:{{Port}}/api/indicators/
    api_key: abcd1234
    interval: 30s
    enable_taxii: false
    enable_request_tracer: true
    preserve_original_event: true
    ioc_expiration_duration: 5d
    feed_name: Vedere Labs
    feed_reference: https://www.forescout.com/research-labs/
    state: |
      url: {{url}}
      api_key: "abcd1234"
      initial_interval: {{initial_interval}}
    program: |
      state.with(
        request(
          "GET",
          (has(state.initial_interval) && state.initial_interval != "") ?
            (
              state.url.trim_right("/") + "?" + {
                "start": [(now() - duration(state.initial_interval)).format(time_layout.RFC3339)],
              }.format_query()
            )
          :
            state.url
        ).with(
          {
            "Header": {
              "api-key": [string(state.api_key)],
            }
          }
        ).do_request().as(resp, (resp.StatusCode == 200) ?
          bytes(resp.Body).decode_json().as(body,
            {
              "events": body.objects.map(e,
                {
                  "message": e.encode_json(),
                }
              ),
              "url": state.url,
              "api_key": state.api_key,
            }
          )
        :
          {
            "events": {
              "error": {
                "code": string(resp.StatusCode),
                "id": string(resp.Status),
                "message": "GET:" +
                (
                  (size(resp.Body) != 0) ?
                    string(resp.Body)
                  :
                    string(resp.Status) + " (" + string(resp.StatusCode) + ")"
                ),
              },
            }
          }
        )
      )
assert:
  hit_count: 1
