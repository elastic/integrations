---
description: Pipeline for ingesting APM trace events.
processors:
  - remove:
      field:
        - observer.id
        - observer.ephemeral_id
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: ecs
      ignore_failure: true
      ignore_missing: true
  - user_agent:
      field: user_agent.original
      ignore_failure: true
      ignore_missing: true
      target_field: user_agent
  - rename:
      field: process.ppid
      ignore_failure: true
      ignore_missing: true
      target_field: process.parent.pid
  - geoip:
      database_file: GeoLite2-City.mmdb
      field: client.ip
      ignore_missing: true
      on_failure:
        - remove:
            field: client.ip
            ignore_failure: true
            ignore_missing: true
      target_field: client.geo
  - set:
      if: ctx.transaction?.type != null
      field: processor.event
      value: transaction
  - set:
      if: ctx.span?.type != null
      field: processor.event
      value: span
  - script:
      if: ctx.processor?.event != null && ctx.get(ctx.processor.event)?.duration == null
      source: |-
        def durationNanos = ctx.event?.duration ?: 0;
        def eventType = ctx.processor.event;
        def rootObject = ctx.get(eventType);
        if (rootObject == null) {
          rootObject = [:];
          ctx[eventType] = rootObject;
        }
        rootObject.duration = ["us": (long)(durationNanos/1000)];
  - remove:
      field: event.duration
      ignore_failure: true
      ignore_missing: true
  # event.success_count logic
  - set:
      if: ctx.event?.outcome == 'success'
      field: event.success_count
      value: 1
      ignore_failure: true
  - set:
      if: ctx.event?.outcome == 'failure'
      field: event.success_count
      value: 0
      ignore_failure: true
# end of event.success_count logic
