---
description: Pipeline for parsing redis logs
processors:
  - set:
      field: event.ingested
      value: '{{_ingest.timestamp}}'
  - set:
      field: ecs.version
      value: "1.10.0"
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - grok:
      field: event.original
      patterns:
      - "(%{POSINT:process.pid:long}:%{CHAR:redis.log.role} )?(%{REDISTIMESTAMP1:redis.log.timestamp}||%{REDISTIMESTAMP2:redis.log.timestamp})
        %{REDISLEVEL:log.level} %{GREEDYDATA:message}"
      - "%{POSINT:process.pid:long}:signal-handler \\(%{POSINT:redis.log.timestamp}\\)
        %{GREEDYDATA:message}"
      pattern_definitions:
        CHAR: "[a-zA-Z]"
        REDISLEVEL: "[.\\-*#]"
        REDISTIMESTAMP1: "%{MONTHDAY} %{MONTH} %{TIME}"
        REDISTIMESTAMP2: "%{MONTHDAY} %{MONTH} %{YEAR} %{TIME}"
  - script:
      lang: painless
      if: ctx.log?.level != null
      source: |-
        if (ctx.log.level == params.dot) {
          ctx.log.level = params.debug;
        } else if (ctx.log.level == params.dash) {
          ctx.log.level = params.verbose;
        } else if (ctx.log.level == params.asterisk) {
          ctx.log.level = params.notice;
        } else if (ctx.log.level == params.hash) {
          ctx.log.level = params.warning;
        }
      params:
        dot: "."
        debug: debug
        dash: "-"
        verbose: verbose
        asterisk: "*"
        notice: notice
        hash: "#"
        warning: warning
  - script:
      lang: painless
      if: ctx.redis?.log?.role != null
      source: |-
        if (ctx.redis.log.role == params.master_abbrev) {
          ctx.redis.log.role = params.master;
        } else if (ctx.redis.log.role == params.slave_abbrev) {
          ctx.redis.log.role = params.slave;
        } else if (ctx.redis.log.role == params.child_abbrev) {
          ctx.redis.log.role = params.child;
        } else if (ctx.redis.log.role == params.sentinel_abbrev) {
          ctx.redis.log.role = params.sentinel;
        }
      params:
        master_abbrev: M
        master: master
        slave_abbrev: S
        slave: slave
        child_abbrev: C
        child: child
        sentinel_abbrev: X
        sentinel: sentinel
  - rename:
      field: "@timestamp"
      target_field: event.created
  - date:
      field: redis.log.timestamp
      target_field: "@timestamp"
      formats:
      - dd MMM yyyy H:m:s.SSS
      - dd MMM H:m:s.SSS
      - dd MMM H:m:s
      - UNIX
      ignore_failure: false
  - remove:
      field: redis.log.timestamp
      ignore_failure: true
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
- set:
    field: error.message
    value: "{{ _ingest.on_failure_message }}"
