config_version: 2
interval: {{interval}}
{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/cel/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
{{#if proxy_url}}
resource.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
resource.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
resource.timeout: {{http_client_timeout}}
{{/if}}
max_executions: {{max_executions}}
resource.url: {{api_host}}
state:
  want_more: false
  limit: {{limit}}
  initial_interval: {{initial_interval}}
  access_key: {{access_key}}
  secret_key: {{secret_key}}
program: |-
  request(
  	"GET",
  	state.url.trim_right("/") + "/assets"
  ).with(
  	{
  		"Header": {
  			"Content-Type": ["application/json"],
  			"Accept": ["application/json"],
  			"X-ApiKeys": ["accessKey=" + state.access_key + ";secretKey=" + state.secret_key],
  		},
  	}
  ).do_request().as(resp,
  	bytes(resp.Body).decode_json().as(body,
  		state.with(
  			{
  				"events": body.assets.map(e,
  					{
  						"message": e.encode_json(),
  					}
  				),
  			}
  		)
  	)
  )
{{#if processors}}
processors: {{processors}}
{{/if}}