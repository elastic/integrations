---
description: Pipeline for processing tenable ot security cloud events
processors:
  - rename:
      field: message
      target_field: tenable_ot_security.events

  - fingerprint:
      fields:
        - tenable_ot_security.events
      tag: fingerprinting
      target_field: "_id"
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'    

##################### Scripts for processing input #####################
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
        
  - script:
      description: Convert Additional Info keys to snake case.
      tag: additional-info-keys-to-snake-case
      lang: painless
      source: |
        Map keysToSnakeCase(Map m) {
          def regex = /_?([a-z])([A-Z]+)/;
          def snakeCaseMap = [:];
          for (entry in m.entrySet()) {
            def k = entry.getKey();
            def v = entry.getValue();
            if (v instanceof Map) {
              v = keysToSnakeCase(v);
            } else if (v instanceof List) {
              for (int i = 0; i < v.size(); i++) {
                def item = v.get(i);
                if (item instanceof Map) {
                  v.set(i, keysToSnakeCase(item));
                }
              }
            }
            k = regex.matcher(k).replaceAll('$1_$2').toLowerCase();
            snakeCaseMap.put(k, v);
          }
          return snakeCaseMap;
        }
        if (ctx.tenable_ot_security.events != null) {
          ctx.tenable_ot_security.events = keysToSnakeCase(ctx.tenable_ot_security.events);
        }
##################### ECS Fields #####################
  - set:
      field: event.kind
      value: event

  - set:
      field: ecs.version
      value: "8.11.0"

  - append:
      field: event.category
      value: iam

  - set:
      field: event.module
      value: tenable_ot_security

  - set:
      field: event.type
      value: ["info"]

  - set:
      field: event.dataset
      value: tenable_ot_security.events

  - set:
     field: "@timestamp"
     copy_from: tenable_ot_security.events.time
     ignore_empty_value: true

  - set:
      field: event.id
      copy_from: tenable_ot_security.events.id
      ignore_empty_value: true

  - append:
      field: related.hosts
      value: '{{{tenable_ot_security.events.src_ip}}}'
      allow_duplicates: false

  - append:
      field: related.hosts
      value: '{{{tenable_ot_security.events.dst_ip}}}'    
      allow_duplicates: false 
  
  - append:
      field: related.hosts
      value: '{{{tenable_ot_security.events.src_mac}}}'
      allow_duplicates: false

  - append:
      field: related.hosts
      value: '{{{tenable_ot_security.events.dst_mac}}}'    
      allow_duplicates: false 

  - append:
      field: network.protocol
      value: '{{{tenable_ot_security.events.protocol_raw}}}'
      allow_duplicates: false

  - append:
      field: "related.user"
      value: "{{{tenable_ot_security.events.resolved_user}}}"
      allow_duplicates: false

  - gsub:
      field: "related.hosts"
      pattern: "^\\{\\d+=(.+)\\}$"
      replacement: "$1"    
  
# #################### Override host.ip ######################
  - convert:
      field: tenable_ot_security.events.src_ip
      type: ip
      if: ctx.tenable_ot_security.events?.src_ip != null && ctx.tenable_ot_security.events.src_ip != ''
      ignore_missing: true

  - append:
      field: host.ip
      value: "{{{tenable_ot_security.events.src_ip}}}"    
      allow_duplicates: false 
      if: ctx.tenable_ot_security.events?.src_ip != null && ctx.tenable_ot_security.events.src_ip != '' 

  - geoip:
      field: host.ip
      target_field: host.geo
      ignore_missing: true
      ignore_failure: true      

 ################### Error Log fields ###################
on_failure:
  - append:
      field: error.message
      value: '{{{_ingest.on_failure_message}}}'

  - set:
      field: event.kind
      value: pipeline_error