---
description: Pipeline for processing Vulnerabilities.
processors:
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - set:
      field: ecs.version
      value: 8.11.0
  - set:
      field: event.kind
      value: event
  - set:
      field: event.category
      value: ["threat", "vulnerability"]
  - set:
      field: event.type
      value: ["indicator"]
  - set:
      field: event.module
      value: ti_rapid7_threat_command
  - set:
      field: vulnerability.classification
      value: CVSS
  - set:
      field: vulnerability.enumeration
      value: CVE
  - set:
      field: vulnerability.scanner.vendor
      value: Rapid7
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - drop:
      if: ctx.json?.content != null && ctx.json.content.isEmpty()
  - date:
      field: json.updateDate
      target_field: rapid7.tc.vulnerability.update_date
      formats:
        - ISO8601
      if: ctx.json?.updateDate != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      copy_from: rapid7.tc.vulnerability.update_date
      on_failure:
        - set:
            field: '@timestamp'
            copy_from: _ingest.timestamp
  - rename:
      field: json.cveId
      target_field: rapid7.tc.vulnerability.id
      ignore_missing: true
  - set:
      field: vulnerability.id
      copy_from: rapid7.tc.vulnerability.id
      ignore_failure: true
      ignore_empty_value: true
  - set:
      field: vulnerability.reference
      value: https://dashboard.ti.insight.rapid7.com/#/risk-analyzer/vulnerabilities?search={{{vulnerability.id}}}
      ignore_failure: true
      if: ctx.vulnerability?.id != null
  - date:
      field: json.publishedDate
      target_field: rapid7.tc.vulnerability.published_date
      formats:
        - ISO8601
      if: ctx.json?.publishedDate != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.severity
      target_field: rapid7.tc.vulnerability.severity
      ignore_missing: true
  - set:
      field: vulnerability.severity
      copy_from: rapid7.tc.vulnerability.severity
      ignore_failure: true
      ignore_empty_value: true
  - convert:
      field: json.intsightsScore
      type: double
      target_field: rapid7.tc.vulnerability.intsights_score
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.cvssScore
      type: double
      target_field: rapid7.tc.vulnerability.cvss_score
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.base
      copy_from: rapid7.tc.vulnerability.cvss_score
      ignore_failure: true
      ignore_empty_value: true
  - convert:
      field: json.mentionsAmount
      type: long
      target_field: rapid7.tc.vulnerability.mentions.total
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.PasteSite
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.paste_site
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.HackingForum
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.hacking_forum
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.InstantMessage
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.instant_message
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.DarkWeb
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.dark_web
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.ClearWebCyberBlogs
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.clear_web_cyber_blogs
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.CodeRepositories
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.code_repositories
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.Exploit
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.exploit
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.mentionsPerSource.SocialMedia
      type: long
      target_field: rapid7.tc.vulnerability.mentions.source.social_media
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.firstMentionDate
      target_field: rapid7.tc.vulnerability.mention.first_date
      ignore_missing: true
  - rename:
      field: json.lastMentionDate
      target_field: rapid7.tc.vulnerability.mention.last_date
      ignore_missing: true
  - convert:
      field: json.exploitAvailability
      type: boolean
      target_field: rapid7.tc.vulnerability.exploit_availability
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value:
              - '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.vulnerabilityOrigin
      target_field: rapid7.tc.vulnerability.origin
      ignore_missing: true
  - rename:
      field: json.relatedThreatActors
      target_field: rapid7.tc.vulnerability.related.threat_actors
      ignore_missing: true
  - rename:
      field: json.relatedMalware
      target_field: rapid7.tc.vulnerability.related.malware
      ignore_missing: true
  - rename:
      field: json.relatedCampaigns
      target_field: rapid7.tc.vulnerability.related.campaigns
      ignore_missing: true
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.Value
          target_field: _ingest._value.value
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.Range.VersionStartIncluding
          target_field: _ingest._value.range.version.start.including
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.Range.VersionEndIncluding
          target_field: _ingest._value.range.version.end.including
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.Range.VersionStartExcluding
          target_field: _ingest._value.range.version.start.excluding
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.Range.VersionEndExcluding
          target_field: _ingest._value.range.version.end.excluding
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.Title
          target_field: _ingest._value.title
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - foreach:
      field: json.cpe
      processor:
        rename:
          field: _ingest._value.VendorProduct
          target_field: _ingest._value.vendor_product
          ignore_missing: true
      ignore_failure: true
      if: ctx.json?.cpe != null && ctx.json.cpe instanceof List
  - rename:
      field: json.cpe
      target_field: rapid7.tc.vulnerability.cpe
      ignore_missing: true
  - fingerprint:
      fields:
        - vulnerability.id
        - rapid7.tc.vulnerability.update_date
      target_field: _id
      ignore_missing: true
  - remove:
      field: json
      ignore_missing: true
  - remove:
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_missing: true
      ignore_failure: true
  - script:
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        } drop(ctx);
      ignore_failure: true
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
