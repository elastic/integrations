---
description: Pipeline for processing sample logs
processors:
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - set:
      field: ecs.version
      value: '8.11.0'

  #
  # The syslog header should have been stripped off, so we need to process the key=value data
  # We will be using painless here, because it is the best option we have.
  - script:
      lang: painless
      source: |
        ArrayList splitBySpace(String input) {
          def fields = new ArrayList();
          def lastSep = 0;
          def inQuote = false;
          for (int i = 0, n = input.length(); i < n; ++i) {
            char c = input.charAt(i);
            if (c == (char)'"') {
              inQuote = !inQuote;
            }
            if (!inQuote && c == (char)' ') {
              fields.add(input.substring(lastSep, i));
              lastSep = i + 1;
            }
            if (i == n - 1) {
              fields.add(input.substring(lastSep));
            }
          }
          return fields;
        }
        ctx["stormshield"] = new HashMap();
        def fields = splitBySpace(ctx["event.original"]);
        for (String field : fields) {
          int equal = field.indexOf('=');
          if (equal > 0) {
            String key = field.substring(0, equal);
            String value = field.substring(equal + 1);
            char c = value.charAt(0);
            if (c == (char)'"') {
              value = value.substring(1, value.length()-1);
            }
            ctx["stormshield"][key] = value;
          }
        }

on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
