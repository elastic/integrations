---
description: Pipeline for Citrix Web App Firewall logs
processors:
  - set:
      field: ecs.version
      value: '8.4.0'
  - rename:
      field: message
      target_field: event.original
  - grok:
      description: Extract header details and message from log line.
      field: event.original
      patterns:
        - '^%{SYSLOG_TIMESTAMP} %{LEVEL} %{IP:client.ip:ip} %{GREEDYDATA:citrix.detail}'
      pattern_definitions:
        LEVEL: '<?%{IDENT:citrix.facility:keyword}\.%{IDENT:citrix.priority:keyword}>?'
        IDENT: '[a-zA-Z][a-zA-Z0-9]*'
        SYSLOG_TIMESTAMP: '(?:%{SYSLOGTIMESTAMP:_tmp.timestamp}|%{TIMESTAMP_ISO8601:_tmp.timestamp8601})'
        TIMESTAMP_ISO8601: '%{YEAR}-%{MONTHNUM}-%{MONTHDAY}[T ]%{HOUR}:?%{MINUTE}(?::?%{SECOND})?%{ISO8601_TIMEZONE:event.timezone}?'

  - pipeline:
      name: '{{ IngestPipeline "cef" }}'
      if: ctx.citrix?.detail != null && ctx.citrix?.detail.startsWith("CEF:")
  - pipeline:
      name: '{{ IngestPipeline "native" }}'
      if: ctx.citrix?.detail != null && !ctx.citrix?.detail.startsWith("CEF:")

  - convert:
      field: event.severity
      type: long
      ignore_missing: true

  - set:
      field: _conf.tz_offset
      value: UTC
      override: false
  - set:
      field: event.timezone
      copy_from: _conf.tz_offset
      if: ctx.event?.timezone == null || ctx.event?.timezone == ""
  - date:
      if: ctx?._tmp?.timestamp8601 != null
      field: _tmp.timestamp8601
      timezone: '{{{event.timezone}}}'
      formats:
        - ISO8601
  - set:
      field: _tmp.timestamp
      if: ctx._tmp?.timestamp != null && ctx.citrix?.event_year != null
      value: "{{{citrix.event_year}}} {{{_tmp.timestamp}}}"
  - date:
      if: ctx?._tmp?.timestamp != null
      field: _tmp.timestamp
      timezone: '{{{event.timezone}}}'
      formats:
        - MMM d HH:mm:ss
        - MMM  d HH:mm:ss
        - MMM dd HH:mm:ss
        - MMMM d HH:mm:ss
        - MMMM  d HH:mm:ss
        - MMMM dd HH:mm:ss
        - yyyy MMM d HH:mm:ss
        - yyyy MMM  d HH:mm:ss
        - yyyy MMM dd HH:mm:ss
        - yyyy MMMM d HH:mm:ss
        - yyyy MMMM  d HH:mm:ss
        - yyyy MMMM dd HH:mm:ss
  - date:
      if: ctx?._tmp?.timestamp_native != null
      field: _tmp.timestamp_native
      formats:
        - MM/dd/yyyy:HH:mm:ss
      timezone: '{{{event.timezone}}}'
  - remove:
      field: citrix.event_year
      ignore_failure: true

  - geoip:
      field: client.ip
      target_field: client.geo
      ignore_missing: true
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true

  # IP Autonomous System (AS) Lookup
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
      - asn
      - organization_name
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: client.ip
      target_field: client.as
      properties:
      - asn
      - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: client.as.asn
      target_field: client.as.number
      ignore_missing: true
  - rename:
      field: client.as.organization_name
      target_field: client.as.organization.name
      ignore_missing: true

  - uri_parts:
      field: url.original
      target_field: url
      if: ctx.url?.original != null && ctx.url?.original != ""

  - script:
      description: Drops null/empty values recursively
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
  - remove:
      field: event.original
      if: ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_missing: true
  - remove:
      field:
        - _tmp
        - _conf
      ignore_missing: true

on_failure:
  - remove:
      field:
        - _tmp
        - _conf
      ignore_missing: true
  - append:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
