---
description: Pipeline for Barracuda Cloudgen Firewall
processors:
  - set:
      field: ecs.version
      value: '8.3.0'
  - set:
      field: observer.vendor
      value: barracuda
  - set:
      field: observer.type
      value: firewall
  - rename:
      field: message
      target_field: event.original
  - json:
      field: event.original
      target_field: json
  - pipeline:
      name: '{{ IngestPipeline "firewall" }}'
      if: ctx.type == 'ngfw-act'
  - pipeline:
      name: '{{ IngestPipeline "web" }}'
      if: ctx.type == 'ngfw-wf'
  - pipeline:
      name: '{{ IngestPipeline "threat" }}'
      if: ctx.type == 'ngfw-threat'

  - set:
      field: network.type
      value: ipv4
      if: 'ctx.source?.ip != null && ctx.source?.ip.contains(".")'
  - set:
      field: network.type
      value: ipv6
      if: 'ctx.source?.ip != null && ctx.source?.ip.contains(":")'     
  - community_id:
      target_field: network.community_id
      ignore_failure: true
  - network_direction:
      internal_networks_field: _tmp.internal_networks
  # IP Geolocation Lookup
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      field: destination.ip
      target_field: destination.geo
      ignore_missing: true

  # IP Autonomous System (AS) Lookup
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
      - asn
      - organization_name
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
      - asn
      - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - append:
      field: related.hosts
      value: '{{host.name}}'
      allow_duplicates: false
      if: ctx.host?.name != null && ctx.host?.name != ''
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - append:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
