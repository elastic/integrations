---
description: Pipeline for processing Apache Tomcat Thread Pool metrics.
processors:
  - set:
      field: ecs.version
      value: 8.7.0
  - set:
      field: event.kind
      value: metric
  - set:
      field: event.module
      value: apache_tomcat
  - set:
      field: event.type
      value: [info]
  - set:
      field: event.category
      value: [web]
  - dissect:
      field: prometheus.labels.name
      tag: 'dissect_nio_connector'
      pattern: "\"%{apache_tomcat.thread_pool.nio_connector}\""
      ignore_missing: true
      on_failure:
      - append:
          field: error.message
          value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_acceptCount
      target_field: apache_tomcat.thread_pool.thread.accept.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_currentThreadsBusy
      target_field: apache_tomcat.thread_pool.thread.current.busy
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_connectionCount
      target_field: apache_tomcat.thread_pool.connection.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_connectionLinger
      target_field: apache_tomcat.thread_pool.connection.linger
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_maxConnections
      target_field: apache_tomcat.thread_pool.connection.max
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_connectionTimeout
      target_field: apache_tomcat.thread_pool.connection.timeout
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_currentThreadCount
      target_field: apache_tomcat.thread_pool.thread.current.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_executorTerminationTimeoutMillis
      target_field: apache_tomcat.thread_pool.executor_termination.timeout.ms
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_keepAliveCount
      target_field: apache_tomcat.thread_pool.keep_alive.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_maxKeepAliveRequests
      target_field: apache_tomcat.thread_pool.keep_alive.max_requests
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_keepAliveTimeout
      target_field: apache_tomcat.thread_pool.keep_alive.timeout
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_maxThreads
      target_field: apache_tomcat.thread_pool.thread.requests.max
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_localPort
      target_field: apache_tomcat.thread_pool.thread.port.default
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_portOffset
      target_field: apache_tomcat.thread_pool.thread.port.offset
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_port
      target_field: apache_tomcat.thread_pool.thread.port.value
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_portWithOffset
      target_field: apache_tomcat.thread_pool.thread.port.with_offset
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_acceptorThreadPriority
      target_field: apache_tomcat.thread_pool.thread.priority.acceptor
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_pollerThreadPriority
      target_field: apache_tomcat.thread_pool.thread.priority.poller
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_threadPriority
      target_field: apache_tomcat.thread_pool.thread.priority.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_selectorTimeout
      target_field: apache_tomcat.thread_pool.thread.selector.timeout
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_sniParseLimit
      target_field: apache_tomcat.thread_pool.thread.sni_parse_limit
      ignore_missing: true
  - rename:
      field: prometheus.metrics.Catalina_ThreadPool_minSpareThreads
      target_field: apache_tomcat.thread_pool.thread.running.min
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_CurrentThreadAllocatedBytes
      target_field: apache_tomcat.thread_pool.thread.current.allocated.bytes
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_CurrentThreadCpuTime
      target_field: apache_tomcat.thread_pool.thread.current.cpu.time.ms
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_CurrentThreadUserTime
      target_field: apache_tomcat.thread_pool.thread.current.user.time.ms
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_DaemonThreadCount
      target_field: apache_tomcat.thread_pool.thread.daemon.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_PeakThreadCount
      target_field: apache_tomcat.thread_pool.thread.peak.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_ThreadCount
      target_field: apache_tomcat.thread_pool.thread.active.count
      ignore_missing: true
  - rename:
      field: prometheus.metrics.java_lang_Threading_TotalStartedThreadCount
      target_field: apache_tomcat.thread_pool.thread.total
      ignore_missing: true
  - set:
      field: apache_tomcat.thread_pool.thread.running.value
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_running == 1
  - set:
      field: apache_tomcat.thread_pool.thread.running.value
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_running == 0
  - set:
      field: apache_tomcat.thread_pool.ssl_enabled
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_sSLEnabled == 1
  - set:
      field: apache_tomcat.thread_pool.ssl_enabled
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_sSLEnabled == 0
  - set:
      field: apache_tomcat.thread_pool.tcp_no_delay
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_tcpNoDelay == 1
  - set:
      field: apache_tomcat.thread_pool.tcp_no_delay
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_tcpNoDelay == 0
  - set:
      field: apache_tomcat.thread_pool.use_inherited_channel
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_useInheritedChannel == 1
  - set:
      field: apache_tomcat.thread_pool.use_inherited_channel
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_useInheritedChannel == 0
  - set:
      field: apache_tomcat.thread_pool.use_send_file
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_useSendfile == 1
  - set:
      field: apache_tomcat.thread_pool.use_send_file
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_useSendfile == 0
  - set:
      field: apache_tomcat.thread_pool.thread.allocated_memory.enabled
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadAllocatedMemoryEnabled == 1
  - set:
      field: apache_tomcat.thread_pool.thread.allocated_memory.enabled
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadAllocatedMemoryEnabled == 0
  - set:
      field: apache_tomcat.thread_pool.thread.allocated_memory.supported 
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadAllocatedMemorySupported == 1
  - set:
      field: apache_tomcat.thread_pool.thread.allocated_memory.supported 
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadAllocatedMemorySupported == 0
  - set:
      field: apache_tomcat.thread_pool.contention.monitoring_enabled 
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadContentionMonitoringEnabled == 1
  - set:
      field: apache_tomcat.thread_pool.contention.monitoring_enabled 
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadContentionMonitoringEnabled == 0
  - set:
      field: apache_tomcat.thread_pool.initiated_connector.state
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_bindOnInit == 1
  - set:
      field: apache_tomcat.thread_pool.initiated_connector.state
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_bindOnInit == 0
  - set:
      field: apache_tomcat.thread_pool.thread.daemon.status
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_daemon == 1
  - set:
      field: apache_tomcat.thread_pool.thread.daemon.status
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_daemon == 0
  - set:
      field: apache_tomcat.thread_pool.thread.paused
      value: true
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_paused == 1
  - set:
      field: apache_tomcat.thread_pool.thread.paused
      value: false
      if: ctx.prometheus?.metrics?.Catalina_ThreadPool_paused == 0
  - set:
      field: apache_tomcat.thread_pool.thread.current.cpu.time.enabled
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadCpuTimeEnabled == 1
  - set:
      field: apache_tomcat.thread_pool.thread.current.cpu.time.enabled
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadCpuTimeEnabled == 0
  - set:
      field: apache_tomcat.thread_pool.thread.supported.contention_monitoring 
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadContentionMonitoringSupported == 1
  - set:
      field: apache_tomcat.thread_pool.thread.supported.contention_monitoring 
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_ThreadContentionMonitoringSupported == 0
  - set:
      field: apache_tomcat.thread_pool.thread.supported.usage.object_monitor
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_ObjectMonitorUsageSupported == 1
  - set:
      field: apache_tomcat.thread_pool.thread.supported.usage.object_monitor
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_ObjectMonitorUsageSupported == 0
  - set:
      field: apache_tomcat.thread_pool.thread.supported.usage.synchronizer
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_SynchronizerUsageSupported == 1
  - set:
      field: apache_tomcat.thread_pool.thread.supported.usage.synchronizer
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_SynchronizerUsageSupported == 0
  - set:
      field: apache_tomcat.thread_pool.thread.supported.cpu.current.time
      value: true
      if: ctx.prometheus?.metrics?.java_lang_Threading_CurrentThreadCpuTimeSupported == 1
  - set:
      field: apache_tomcat.thread_pool.thread.supported.cpu.current.time
      value: false
      if: ctx.prometheus?.metrics?.java_lang_Threading_CurrentThreadCpuTimeSupported == 0
  - set:
      field: apache_tomcat.thread_pool.persist_authentication
      value: true
      if: ctx.prometheus?.metrics?.Catalina_Manager_persistAuthentication == 1
  - set:
      field: apache_tomcat.thread_pool.persist_authentication
      value: false
      if: ctx.prometheus?.metrics?.Catalina_Manager_persistAuthentication == 0
  - remove:
      field:
        - prometheus
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean drop(Object o) {
            if (o == null || o == "") {
            return true;
            } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
            } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
            }
            return false;
        }
        drop(ctx);
on_failure:
  - set:
      field: error.message
      value: "{{{_ingest.on_failure_message}}}"
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false