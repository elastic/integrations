---
## Reference document for DHCP field mapping: https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2008-R2-and-2008/dd183591(v=ws.10)
description: Pipeline for processing Microsoft DHCP Server logs.
processors:
  - csv:
      field: event.original
      target_fields:
        - event.code
        - _tmp_.date
        - _tmp_.time
        - message
        - source.ip
        - source.address
        - _tmp_.source.mac
        - user.name
        - microsoft.dhcp.transaction_id
        - microsoft.dhcp.result
        - microsoft.dhcp.probation_time
        - microsoft.dhcp.correlation_id
        - microsoft.dhcp.dhc_id
        - microsoft.dhcp.vendor.hex
        - microsoft.dhcp.vendor.string
        - microsoft.dhcp.user.hex
        - microsoft.dhcp.user.string
        - microsoft.dhcp.relay_agent_info
        - microsoft.dhcp.dns_error_code
      ignore_failure: true
  - lowercase:
      field: source.address
      if: "ctx.source?.address != null"
  - set:
      field: source.domain
      if: "ctx.source?.address != null"
      copy_from: source.address
  - set:
      field: _tmp_.timestamp
      value: "{{{_tmp_.date}}} {{{_tmp_.time}}}"
  - date:
      field: _tmp_.timestamp
      formats:
        - "MM/dd/yy HH:mm:ss"
      timezone: "{{{event.timezone}}}"
  - script:
      description: Set event action, category, outcome, and type for all known event types.
      lang: painless
      tag: Add ECS categorization fields
      params:
        "00":
          action: log-start
          category:
            - process
          reason: "The log was started."
          type:
            - start
        "01":
          action: log-end
          category:
            - process
          reason: "The log was stopped."
          type:
            - end
        "02":
          action: log-pause
          category:
            - process
          reason: "The log was temporarily paused due to low disk space."
          type:
            - change
          outcome: failure
        "10":
          action: dhcp-new
          category:
            - network
          reason: "A new IP address was leased to a client."
          type:
            - allowed
            - connection
        "11":
          action: dhcp-renew
          category:
            - network
          reason: "A lease was renewed by a client."
          type:
            - allowed
            - connection
        "12":
          action: dhcp-release
          category:
            - network
          reason: "A lease was released by a client."
          type:
            - allowed
            - connection
        "13":
          category:
            - network
          reason: "An IP address was found to be in use on the network."
          type:
            - connection
        "14":
          category:
            - network
          reason: "A lease request could not be satisfied because the scope's address pool was exhausted."
          type:
            - connection
            - denied
          outcome: failure
        "15":
          action: dhcp-deny
          category:
            - network
          reason: "A lease was denied."
          type:
            - connection
            - denied
          outcome: failure
        "16":
          action: dhcp-delete
          category:
            - network
          reason: "A lease was deleted."
          type:
            - connection
        "17":
          action: dhcp-expire
          category:
            - network
          reason: "A lease was expired and DNS records for an expired leases have not been deleted."
          type:
            - connection
        "18":
          action: dhcp-expire
          category:
            - network
          reason: "A lease was expired and DNS records were deleted."
          type:
            - connection
        "20":
          category:
            - network
          reason: "A BOOTP address was leased to a client."
          type:
            - allowed
            - connection
        "21":
          category:
            - network
          reason: "A dynamic BOOTP address was leased to a client."
          type:
            - allowed
            - connection
        "22":
          category:
            - network
          reason: "A BOOTP request could not be satisfied because the scope's address pool for BOOTP was exhausted."
          type:
            - connection
            - denied
          outcome: failure
        "23":
          category:
            - network
          reason: "A BOOTP IP address was deleted after checking to see it was not in use."
          type:
            - connection
            - denied
          outcome: failure
        "24":
          action: ip-cleanup-start
          category:
            - process
          reason: "IP address cleanup operation has began."
          type:
            - start
        "25":
          action: ip-cleanup-end
          category:
            - process
          reason: "IP address cleanup statistics."
          type:
            - start
        "30":
          action: dhcp-dns-update
          category:
            - network
          reason: "DNS update request to the named DNS server."
          type:
            - connection
        "31":
          action: dhcp-dns-update
          category:
            - network
          reason: "DNS update failed."
          type:
            - connection
          outcome: failure
        "32":
          action: dhcp-dns-update
          category:
            - network
          reason: "DNS update successful."
          type:
            - connection
        "33":
          category:
            - network
          reason: "Packet dropped due to NAP policy."
          type:
            - connection
          outcome: failure
        "34":
          action: dhcp-dns-update
          category:
            - network
          reason: "DNS update request failed.as the DNS update request queue limit exceeded."
          type:
            - connection
          outcome: failure
        "35":
          action: dhcp-dns-update
          category:
            - network
          reason: "DNS update request failed."
          type:
            - connection
            - denied
          outcome: failure
        "36":
          category:
            - network
          reason: "Packet dropped because the server is in failover standby role or the hash of the client ID does not match."
          type:
            - connection
            - denied
          outcome: failure
        "50":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server could not locate the applicable domain for its configured Active Directory installation."
          type:
            - connection
          outcome: failure
        "51":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server was authorized to start on the network."
          type:
            - allowed
            - connection
        "52":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server was recently upgraded to a Windows Server 2008 operating system, and, therefore, the unauthorized DHCP server detection feature (used to determine whether the server has been authorized in Active Directory) was disabled."
          type:
            - connection
        "53":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server was authorized to start using previously cached information. AD DS could not be found at the time the server was started on the network."
          type:
            - allowed
            - connection
        "54":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server was not authorized to start on the network. When this event occurs, it is likely followed by the server being stopped."
          type:
            - connection
            - denied
          outcome: failure
        "55":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server was successfully authorized to start on the network."
          type:
            - allowed
            - connection
        "56":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server was not authorized to start on the network and was shut down by the operating system. You must first authorize the server in the directory before starting it again."
          type:
            - connection
            - denied
          outcome: failure
        "57":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "Another DHCP server exists and is authorized for service in the same domain."
          type:
            - connection
        "58":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server could not locate the specified domain."
          type:
            - connection
          outcome: failure
        "59":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "A network-related failure prevented the server from determining if it is authorized."
          type:
            - connection
          outcome: failure
        "60":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "No domain controller running Windows Server 2008 was located. For detecting whether the server is authorized, a domain controller that is enabled for AD DS is required."
          type:
            - connection
        "61":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "Another DHCP server was found on the network that belongs to the Active Directory domain."
          type:
            - connection
        "62":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "Another DHCP server was found on the network."
          type:
            - connection
        "63":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server is trying once more to determine whether it is authorized to start and provide service on the network."
          type:
            - connection
        "64":
          action: rogue-server-detection
          category:
            - authentication
            - network
          reason: "The DHCP server has its service bindings or network connections configured so that it is not enabled to provide service."
          type:
            - connection
      source: |-
        if (ctx.event?.code == null || params.get(ctx.event.code) == null) {
          return;
        }
        def hm = new HashMap(params[ctx.event.code]);
        hm.forEach((k, v) -> ctx.event[k] = v);
  - script:
      description: Set the QResult description based on numerical value.
      lang: painless
      tag: add_qresult_description
      params:
        "0": NoQuarantine
        "1": Quarantine
        "2": Drop Packet
        "3": Probation
        "6": No Quarantine Information
      source: |-
        if (ctx.microsoft?.dhcp?.result == null) {
          return;
        }
        def desc = params.get(ctx.microsoft.dhcp.result);
        if (desc == null) {
          return;
        }
        ctx.microsoft.dhcp['result_description'] = desc; 
  - set:
      field: event.outcome
      value: success
      if: ctx.event?.outcome == null
  - set:
      field: event.reason
      value: '{{{event.reason}}}'
      if: ctx.event?.reasson != null
  - uppercase:
      field: _tmp_.source.mac
      ignore_missing: true
  - gsub:
      field: _tmp_.source.mac
      pattern: '(..)(?!$)'
      replacement: '$1-'
      ignore_missing: true
  - set:
      if: ctx._tmp_?.source?.mac != null
      field: source.mac
      copy_from: _tmp_.source.mac
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: |-
        Processor "{{ _ingest.on_failure_processor_type }}" with tag "{{ _ingest.on_failure_processor_tag }}" in pipeline "{{ _ingest.on_failure_pipeline }}" failed with message "{{ _ingest.on_failure_message }}"
