# HELP citadel_server_csr_count The number of CSRs received by Citadel server.
# TYPE citadel_server_csr_count counter
citadel_server_csr_count 8
# HELP citadel_server_root_cert_expiry_timestamp The unix timestamp, in seconds, when Citadel root cert will expire. A negative time indicates the cert is expired.
# TYPE citadel_server_root_cert_expiry_timestamp gauge
citadel_server_root_cert_expiry_timestamp 1.979112171e+09
# HELP citadel_server_success_cert_issuance_count The number of certificates issuances that have succeeded.
# TYPE citadel_server_success_cert_issuance_count counter
citadel_server_success_cert_issuance_count 8
# HELP endpoint_no_pod Endpoints without an associated pod.
# TYPE endpoint_no_pod gauge
endpoint_no_pod 0
# HELP galley_validation_config_updates k8s webhook configuration updates
# TYPE galley_validation_config_updates counter
galley_validation_config_updates 3
# HELP galley_validation_failed Resource validation failed
# TYPE galley_validation_failed counter
galley_validation_failed{group="networking.istio.io",reason="invalid_resource",resource="gateways",version="v1alpha3"} 1
# HELP galley_validation_passed Resource is valid
# TYPE galley_validation_passed counter
galley_validation_passed{group="networking.istio.io",resource="envoyfilters",version="v1alpha3"} 10
galley_validation_passed{group="networking.istio.io",resource="gateways",version="v1alpha3"} 1
galley_validation_passed{group="networking.istio.io",resource="gateways",version="v1beta1"} 1
galley_validation_passed{group="networking.istio.io",resource="virtualservices",version="v1alpha3"} 1
galley_validation_passed{group="networking.istio.io",resource="virtualservices",version="v1beta1"} 1
# HELP go_gc_cycles_automatic_gc_cycles_total Count of completed GC cycles generated by the Go runtime.
# TYPE go_gc_cycles_automatic_gc_cycles_total counter
go_gc_cycles_automatic_gc_cycles_total 192
# HELP go_gc_cycles_forced_gc_cycles_total Count of completed GC cycles forced by the application.
# TYPE go_gc_cycles_forced_gc_cycles_total counter
go_gc_cycles_forced_gc_cycles_total 0
# HELP go_gc_cycles_total_gc_cycles_total Count of all completed GC cycles.
# TYPE go_gc_cycles_total_gc_cycles_total counter
go_gc_cycles_total_gc_cycles_total 192
# HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.
# TYPE go_gc_duration_seconds summary
go_gc_duration_seconds{quantile="0"} 2.5e-05
go_gc_duration_seconds{quantile="0.25"} 0.00015096
go_gc_duration_seconds{quantile="0.5"} 0.00018042
go_gc_duration_seconds{quantile="0.75"} 0.00022414
go_gc_duration_seconds{quantile="1"} 0.026726571
go_gc_duration_seconds_sum 0.107539426
go_gc_duration_seconds_count 192
# HELP go_gc_heap_allocs_by_size_bytes_total Distribution of heap allocations by approximate size. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks.
# TYPE go_gc_heap_allocs_by_size_bytes_total histogram
go_gc_heap_allocs_by_size_bytes_total_bucket{le="8.999999999999998"} 701558
go_gc_heap_allocs_by_size_bytes_total_bucket{le="24.999999999999996"} 8.981551e+06
go_gc_heap_allocs_by_size_bytes_total_bucket{le="64.99999999999999"} 1.6149191e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="144.99999999999997"} 1.9276732e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="320.99999999999994"} 2.0356701e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="704.9999999999999"} 2.0732768e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="1536.9999999999998"} 2.09166e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="3200.9999999999995"} 2.0930658e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="6528.999999999999"} 2.0947195e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="13568.999999999998"} 2.0953406e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="27264.999999999996"} 2.0958058e+07
go_gc_heap_allocs_by_size_bytes_total_bucket{le="+Inf"} 2.0959148e+07
go_gc_heap_allocs_by_size_bytes_total_sum 1.746392088e+09
go_gc_heap_allocs_by_size_bytes_total_count 2.0959148e+07
# HELP go_gc_heap_allocs_bytes_total Cumulative sum of memory allocated to the heap by the application.
# TYPE go_gc_heap_allocs_bytes_total counter
go_gc_heap_allocs_bytes_total 1.746392088e+09
# HELP go_gc_heap_allocs_objects_total Cumulative count of heap allocations triggered by the application. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks.
# TYPE go_gc_heap_allocs_objects_total counter
go_gc_heap_allocs_objects_total 2.0959148e+07
# HELP go_gc_heap_frees_by_size_bytes_total Distribution of freed heap allocations by approximate size. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks.
# TYPE go_gc_heap_frees_by_size_bytes_total histogram
go_gc_heap_frees_by_size_bytes_total_bucket{le="8.999999999999998"} 694834
go_gc_heap_frees_by_size_bytes_total_bucket{le="24.999999999999996"} 8.907063e+06
go_gc_heap_frees_by_size_bytes_total_bucket{le="64.99999999999999"} 1.6019373e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="144.99999999999997"} 1.9121915e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="320.99999999999994"} 2.018993e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="704.9999999999999"} 2.0559961e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="1536.9999999999998"} 2.074169e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="3200.9999999999995"} 2.0755152e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="6528.999999999999"} 2.077139e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="13568.999999999998"} 2.0777483e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="27264.999999999996"} 2.0782015e+07
go_gc_heap_frees_by_size_bytes_total_bucket{le="+Inf"} 2.078303e+07
go_gc_heap_frees_by_size_bytes_total_sum 1.71354768e+09
go_gc_heap_frees_by_size_bytes_total_count 2.078303e+07
# HELP go_gc_heap_frees_bytes_total Cumulative sum of heap memory freed by the garbage collector.
# TYPE go_gc_heap_frees_bytes_total counter
go_gc_heap_frees_bytes_total 1.71354768e+09
# HELP go_gc_heap_frees_objects_total Cumulative count of heap allocations whose storage was freed by the garbage collector. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks.
# TYPE go_gc_heap_frees_objects_total counter
go_gc_heap_frees_objects_total 2.078303e+07
# HELP go_gc_heap_goal_bytes Heap size target for the end of the GC cycle.
# TYPE go_gc_heap_goal_bytes gauge
go_gc_heap_goal_bytes 5.8007152e+07
# HELP go_gc_heap_objects_objects Number of objects, live or unswept, occupying heap memory.
# TYPE go_gc_heap_objects_objects gauge
go_gc_heap_objects_objects 176118
# HELP go_gc_heap_tiny_allocs_objects_total Count of small allocations that are packed together into blocks. These allocations are counted separately from other allocations because each individual allocation is not tracked by the runtime, only their block. Each block is already accounted for in allocs-by-size and frees-by-size.
# TYPE go_gc_heap_tiny_allocs_objects_total counter
go_gc_heap_tiny_allocs_objects_total 1.876341e+06
# HELP go_gc_pauses_seconds_total Distribution individual GC-related stop-the-world pause latencies.
# TYPE go_gc_pauses_seconds_total histogram
go_gc_pauses_seconds_total_bucket{le="-5e-324"} 0
go_gc_pauses_seconds_total_bucket{le="9.999999999999999e-10"} 0
go_gc_pauses_seconds_total_bucket{le="9.999999999999999e-09"} 0
go_gc_pauses_seconds_total_bucket{le="9.999999999999998e-08"} 0
go_gc_pauses_seconds_total_bucket{le="1.0239999999999999e-06"} 0
go_gc_pauses_seconds_total_bucket{le="1.0239999999999999e-05"} 173
go_gc_pauses_seconds_total_bucket{le="0.00010239999999999998"} 197
go_gc_pauses_seconds_total_bucket{le="0.0010485759999999998"} 377
go_gc_pauses_seconds_total_bucket{le="0.010485759999999998"} 381
go_gc_pauses_seconds_total_bucket{le="0.10485759999999998"} 384
go_gc_pauses_seconds_total_bucket{le="+Inf"} 384
go_gc_pauses_seconds_total_sum NaN
go_gc_pauses_seconds_total_count 384
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 428
# HELP go_info Information about the Go environment.
# TYPE go_info gauge
go_info{version="go1.18.4"} 1
# HELP go_memory_classes_heap_free_bytes Memory that is completely free and eligible to be returned to the underlying system, but has not been. This metric is the runtime's estimate of free address space that is backed by physical memory.
# TYPE go_memory_classes_heap_free_bytes gauge
go_memory_classes_heap_free_bytes 4.456448e+06
# HELP go_memory_classes_heap_objects_bytes Memory occupied by live objects and dead objects that have not yet been marked free by the garbage collector.
# TYPE go_memory_classes_heap_objects_bytes gauge
go_memory_classes_heap_objects_bytes 3.2844408e+07
# HELP go_memory_classes_heap_released_bytes Memory that is completely free and has been returned to the underlying system. This metric is the runtime's estimate of free address space that is still mapped into the process, but is not backed by physical memory.
# TYPE go_memory_classes_heap_released_bytes gauge
go_memory_classes_heap_released_bytes 1.9644416e+07
# HELP go_memory_classes_heap_stacks_bytes Memory allocated from the heap that is reserved for stack space, whether or not it is currently in-use.
# TYPE go_memory_classes_heap_stacks_bytes gauge
go_memory_classes_heap_stacks_bytes 2.719744e+06
# HELP go_memory_classes_heap_unused_bytes Memory that is reserved for heap objects but is not currently used to hold heap objects.
# TYPE go_memory_classes_heap_unused_bytes gauge
go_memory_classes_heap_unused_bytes 7.443848e+06
# HELP go_memory_classes_metadata_mcache_free_bytes Memory that is reserved for runtime mcache structures, but not in-use.
# TYPE go_memory_classes_metadata_mcache_free_bytes gauge
go_memory_classes_metadata_mcache_free_bytes 13200
# HELP go_memory_classes_metadata_mcache_inuse_bytes Memory that is occupied by runtime mcache structures that are currently being used.
# TYPE go_memory_classes_metadata_mcache_inuse_bytes gauge
go_memory_classes_metadata_mcache_inuse_bytes 2400
# HELP go_memory_classes_metadata_mspan_free_bytes Memory that is reserved for runtime mspan structures, but not in-use.
# TYPE go_memory_classes_metadata_mspan_free_bytes gauge
go_memory_classes_metadata_mspan_free_bytes 159936
# HELP go_memory_classes_metadata_mspan_inuse_bytes Memory that is occupied by runtime mspan structures that are currently being used.
# TYPE go_memory_classes_metadata_mspan_inuse_bytes gauge
go_memory_classes_metadata_mspan_inuse_bytes 427584
# HELP go_memory_classes_metadata_other_bytes Memory that is reserved for or used to hold runtime metadata.
# TYPE go_memory_classes_metadata_other_bytes gauge
go_memory_classes_metadata_other_bytes 6.68484e+06
# HELP go_memory_classes_os_stacks_bytes Stack memory allocated by the underlying operating system.
# TYPE go_memory_classes_os_stacks_bytes gauge
go_memory_classes_os_stacks_bytes 0
# HELP go_memory_classes_other_bytes Memory used by execution trace buffers, structures for debugging the runtime, finalizer and profiler specials, and more.
# TYPE go_memory_classes_other_bytes gauge
go_memory_classes_other_bytes 510453
# HELP go_memory_classes_profiling_buckets_bytes Memory that is used by the stack trace hash map used for profiling.
# TYPE go_memory_classes_profiling_buckets_bytes gauge
go_memory_classes_profiling_buckets_bytes 1.918331e+06
# HELP go_memory_classes_total_bytes All memory mapped by the Go runtime into the current process as read-write. Note that this does not include memory mapped by code called via cgo or via the syscall package. Sum of all metrics in /memory/classes.
# TYPE go_memory_classes_total_bytes gauge
go_memory_classes_total_bytes 7.6825608e+07
# HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.
# TYPE go_memstats_alloc_bytes gauge
go_memstats_alloc_bytes 3.2844408e+07
# HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.
# TYPE go_memstats_alloc_bytes_total counter
go_memstats_alloc_bytes_total 1.746392088e+09
# HELP go_memstats_buck_hash_sys_bytes Number of bytes used by the profiling bucket hash table.
# TYPE go_memstats_buck_hash_sys_bytes gauge
go_memstats_buck_hash_sys_bytes 1.918331e+06
# HELP go_memstats_frees_total Total number of frees.
# TYPE go_memstats_frees_total counter
go_memstats_frees_total 2.2659371e+07
# HELP go_memstats_gc_cpu_fraction The fraction of this program's available CPU time used by the GC since the program started.
# TYPE go_memstats_gc_cpu_fraction gauge
go_memstats_gc_cpu_fraction 0
# HELP go_memstats_gc_sys_bytes Number of bytes used for garbage collection system metadata.
# TYPE go_memstats_gc_sys_bytes gauge
go_memstats_gc_sys_bytes 6.68484e+06
# HELP go_memstats_heap_alloc_bytes Number of heap bytes allocated and still in use.
# TYPE go_memstats_heap_alloc_bytes gauge
go_memstats_heap_alloc_bytes 3.2844408e+07
# HELP go_memstats_heap_idle_bytes Number of heap bytes waiting to be used.
# TYPE go_memstats_heap_idle_bytes gauge
go_memstats_heap_idle_bytes 2.4100864e+07
# HELP go_memstats_heap_inuse_bytes Number of heap bytes that are in use.
# TYPE go_memstats_heap_inuse_bytes gauge
go_memstats_heap_inuse_bytes 4.0288256e+07
# HELP go_memstats_heap_objects Number of allocated objects.
# TYPE go_memstats_heap_objects gauge
go_memstats_heap_objects 176118
# HELP go_memstats_heap_released_bytes Number of heap bytes released to OS.
# TYPE go_memstats_heap_released_bytes gauge
go_memstats_heap_released_bytes 1.9644416e+07
# HELP go_memstats_heap_sys_bytes Number of heap bytes obtained from system.
# TYPE go_memstats_heap_sys_bytes gauge
go_memstats_heap_sys_bytes 6.438912e+07
# HELP go_memstats_last_gc_time_seconds Number of seconds since 1970 of last garbage collection.
# TYPE go_memstats_last_gc_time_seconds gauge
go_memstats_last_gc_time_seconds 1.6637735667156978e+09
# HELP go_memstats_lookups_total Total number of pointer lookups.
# TYPE go_memstats_lookups_total counter
go_memstats_lookups_total 0
# HELP go_memstats_mallocs_total Total number of mallocs.
# TYPE go_memstats_mallocs_total counter
go_memstats_mallocs_total 2.2835489e+07
# HELP go_memstats_mcache_inuse_bytes Number of bytes in use by mcache structures.
# TYPE go_memstats_mcache_inuse_bytes gauge
go_memstats_mcache_inuse_bytes 2400
# HELP go_memstats_mcache_sys_bytes Number of bytes used for mcache structures obtained from system.
# TYPE go_memstats_mcache_sys_bytes gauge
go_memstats_mcache_sys_bytes 15600
# HELP go_memstats_mspan_inuse_bytes Number of bytes in use by mspan structures.
# TYPE go_memstats_mspan_inuse_bytes gauge
go_memstats_mspan_inuse_bytes 427584
# HELP go_memstats_mspan_sys_bytes Number of bytes used for mspan structures obtained from system.
# TYPE go_memstats_mspan_sys_bytes gauge
go_memstats_mspan_sys_bytes 587520
# HELP go_memstats_next_gc_bytes Number of heap bytes when next garbage collection will take place.
# TYPE go_memstats_next_gc_bytes gauge
go_memstats_next_gc_bytes 5.8007152e+07
# HELP go_memstats_other_sys_bytes Number of bytes used for other system allocations.
# TYPE go_memstats_other_sys_bytes gauge
go_memstats_other_sys_bytes 510453
# HELP go_memstats_stack_inuse_bytes Number of bytes in use by the stack allocator.
# TYPE go_memstats_stack_inuse_bytes gauge
go_memstats_stack_inuse_bytes 2.719744e+06
# HELP go_memstats_stack_sys_bytes Number of bytes obtained from system for stack allocator.
# TYPE go_memstats_stack_sys_bytes gauge
go_memstats_stack_sys_bytes 2.719744e+06
# HELP go_memstats_sys_bytes Number of bytes obtained from system.
# TYPE go_memstats_sys_bytes gauge
go_memstats_sys_bytes 7.6825608e+07
# HELP go_sched_goroutines_goroutines Count of live goroutines.
# TYPE go_sched_goroutines_goroutines gauge
go_sched_goroutines_goroutines 428
# HELP go_sched_latencies_seconds Distribution of the time goroutines have spent in the scheduler in a runnable state before actually running.
# TYPE go_sched_latencies_seconds histogram
go_sched_latencies_seconds_bucket{le="-5e-324"} 0
go_sched_latencies_seconds_bucket{le="9.999999999999999e-10"} 69316
go_sched_latencies_seconds_bucket{le="9.999999999999999e-09"} 69316
go_sched_latencies_seconds_bucket{le="9.999999999999998e-08"} 69647
go_sched_latencies_seconds_bucket{le="1.0239999999999999e-06"} 167204
go_sched_latencies_seconds_bucket{le="1.0239999999999999e-05"} 206229
go_sched_latencies_seconds_bucket{le="0.00010239999999999998"} 237852
go_sched_latencies_seconds_bucket{le="0.0010485759999999998"} 244106
go_sched_latencies_seconds_bucket{le="0.010485759999999998"} 244423
go_sched_latencies_seconds_bucket{le="0.10485759999999998"} 244483
go_sched_latencies_seconds_bucket{le="+Inf"} 244483
go_sched_latencies_seconds_sum NaN
go_sched_latencies_seconds_count 244483
# HELP go_threads Number of OS threads created.
# TYPE go_threads gauge
go_threads 9
# HELP grpc_server_handled_total Total number of RPCs completed on the server, regardless of success or failure.
# TYPE grpc_server_handled_total counter
grpc_server_handled_total{grpc_code="OK",grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary"} 8
# HELP grpc_server_handling_seconds Histogram of response latency (seconds) of gRPC that had been application-level handled by the server.
# TYPE grpc_server_handling_seconds histogram
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.005"} 0
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.01"} 2
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.025"} 6
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.05"} 7
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.1"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.25"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="0.5"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="1"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="2.5"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="5"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="10"} 8
grpc_server_handling_seconds_bucket{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary",le="+Inf"} 8
grpc_server_handling_seconds_sum{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary"} 0.166428781
grpc_server_handling_seconds_count{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary"} 8
# HELP grpc_server_msg_received_total Total number of RPC stream messages received on the server.
# TYPE grpc_server_msg_received_total counter
grpc_server_msg_received_total{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary"} 8
# HELP grpc_server_msg_sent_total Total number of gRPC stream messages sent by the server.
# TYPE grpc_server_msg_sent_total counter
grpc_server_msg_sent_total{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary"} 8
# HELP grpc_server_started_total Total number of RPCs started on the server.
# TYPE grpc_server_started_total counter
grpc_server_started_total{grpc_method="CreateCertificate",grpc_service="istio.v1.auth.IstioCertificateService",grpc_type="unary"} 8
# HELP istio_build Istio component build info
# TYPE istio_build gauge
istio_build{component="pilot",tag="1.14.3"} 1
# HELP istiod_managed_clusters Number of clusters managed by istiod
# TYPE istiod_managed_clusters gauge
istiod_managed_clusters{cluster_type="local"} 1
istiod_managed_clusters{cluster_type="remote"} 0
# HELP istiod_uptime_seconds Current istiod server uptime in seconds
# TYPE istiod_uptime_seconds gauge
istiod_uptime_seconds 21472.767842613
# HELP pilot_conflict_inbound_listener Number of conflicting inbound listeners.
# TYPE pilot_conflict_inbound_listener gauge
pilot_conflict_inbound_listener 0
# HELP pilot_conflict_outbound_listener_http_over_current_tcp Number of conflicting wildcard http listeners with current wildcard tcp listener.
# TYPE pilot_conflict_outbound_listener_http_over_current_tcp gauge
pilot_conflict_outbound_listener_http_over_current_tcp 0
# HELP pilot_conflict_outbound_listener_tcp_over_current_http Number of conflicting wildcard tcp listeners with current wildcard http listener.
# TYPE pilot_conflict_outbound_listener_tcp_over_current_http gauge
pilot_conflict_outbound_listener_tcp_over_current_http 0
# HELP pilot_conflict_outbound_listener_tcp_over_current_tcp Number of conflicting tcp listeners with current tcp listener.
# TYPE pilot_conflict_outbound_listener_tcp_over_current_tcp gauge
pilot_conflict_outbound_listener_tcp_over_current_tcp 0
# HELP pilot_destrule_subsets Duplicate subsets across destination rules for same host
# TYPE pilot_destrule_subsets gauge
pilot_destrule_subsets 0
# HELP pilot_duplicate_envoy_clusters Duplicate envoy clusters caused by service entries with same hostname
# TYPE pilot_duplicate_envoy_clusters gauge
pilot_duplicate_envoy_clusters 0
# HELP pilot_eds_no_instances Number of clusters without instances.
# TYPE pilot_eds_no_instances gauge
pilot_eds_no_instances 0
# HELP pilot_endpoint_not_ready Endpoint found in unready state.
# TYPE pilot_endpoint_not_ready gauge
pilot_endpoint_not_ready 0
# HELP pilot_inbound_updates Total number of updates received by pilot.
# TYPE pilot_inbound_updates counter
pilot_inbound_updates{type="config"} 95
pilot_inbound_updates{type="eds"} 59
pilot_inbound_updates{type="svc"} 26
# HELP pilot_info Pilot version and build information.
# TYPE pilot_info gauge
pilot_info{version="1.14.3-a95e01fe300e14a11e7e9503d4b2c196ab755fcf-Clean"} 1
# HELP pilot_k8s_cfg_events Events from k8s config.
# TYPE pilot_k8s_cfg_events counter
pilot_k8s_cfg_events{event="add",type="EnvoyFilter"} 10
pilot_k8s_cfg_events{event="add",type="Gateway"} 1
pilot_k8s_cfg_events{event="add",type="VirtualService"} 1
# HELP pilot_k8s_reg_events Events from k8s registry.
# TYPE pilot_k8s_reg_events counter
pilot_k8s_reg_events{event="add",type="EndpointSlice"} 18
pilot_k8s_reg_events{event="add",type="Namespaces"} 6
pilot_k8s_reg_events{event="add",type="Nodes"} 3
pilot_k8s_reg_events{event="add",type="Pods"} 39
pilot_k8s_reg_events{event="add",type="Services"} 18
pilot_k8s_reg_events{event="update",type="EndpointSlice"} 29
pilot_k8s_reg_events{event="update",type="Namespaces"} 1
pilot_k8s_reg_events{event="update",type="Nodes"} 427
pilot_k8s_reg_events{event="update",type="Pods"} 60
pilot_k8s_reg_events{event="update",type="Services"} 2
# HELP pilot_no_ip Pods not found in the endpoint table, possibly invalid.
# TYPE pilot_no_ip gauge
pilot_no_ip 0
# HELP pilot_proxy_convergence_time Delay in seconds between config change and a proxy receiving all required configuration.
# TYPE pilot_proxy_convergence_time histogram
pilot_proxy_convergence_time_bucket{le="0.1"} 127
pilot_proxy_convergence_time_bucket{le="0.5"} 165
pilot_proxy_convergence_time_bucket{le="1"} 165
pilot_proxy_convergence_time_bucket{le="3"} 165
pilot_proxy_convergence_time_bucket{le="5"} 165
pilot_proxy_convergence_time_bucket{le="10"} 165
pilot_proxy_convergence_time_bucket{le="20"} 165
pilot_proxy_convergence_time_bucket{le="30"} 165
pilot_proxy_convergence_time_bucket{le="+Inf"} 165
pilot_proxy_convergence_time_sum 9.696536635999998
pilot_proxy_convergence_time_count 165
# HELP pilot_proxy_queue_time Time in seconds, a proxy is in the push queue before being dequeued.
# TYPE pilot_proxy_queue_time histogram
pilot_proxy_queue_time_bucket{le="0.1"} 177
pilot_proxy_queue_time_bucket{le="0.5"} 177
pilot_proxy_queue_time_bucket{le="1"} 177
pilot_proxy_queue_time_bucket{le="3"} 177
pilot_proxy_queue_time_bucket{le="5"} 177
pilot_proxy_queue_time_bucket{le="10"} 177
pilot_proxy_queue_time_bucket{le="20"} 177
pilot_proxy_queue_time_bucket{le="30"} 177
pilot_proxy_queue_time_bucket{le="+Inf"} 177
pilot_proxy_queue_time_sum 0.05242515500000003
pilot_proxy_queue_time_count 177
# HELP pilot_push_triggers Total number of times a push was triggered, labeled by reason for the push.
# TYPE pilot_push_triggers counter
pilot_push_triggers{type="config"} 16
pilot_push_triggers{type="endpoint"} 201
pilot_push_triggers{type="proxy"} 8
pilot_push_triggers{type="service"} 60
# HELP pilot_services Total services known to pilot.
# TYPE pilot_services gauge
pilot_services 18
# HELP pilot_virt_services Total virtual services known to pilot.
# TYPE pilot_virt_services gauge
pilot_virt_services 1
# HELP pilot_vservice_dup_domain Virtual services with dup domains.
# TYPE pilot_vservice_dup_domain gauge
pilot_vservice_dup_domain 0
# HELP pilot_xds Number of endpoints connected to this pilot using XDS.
# TYPE pilot_xds gauge
pilot_xds{version="1.14.3"} 8
# HELP pilot_xds_config_size_bytes Distribution of configuration sizes pushed to clients
# TYPE pilot_xds_config_size_bytes histogram
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="1"} 0
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="10000"} 0
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="1e+06"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="4e+06"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="1e+07"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="4e+07"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.cluster.v3.Cluster",le="+Inf"} 225
pilot_xds_config_size_bytes_sum{type="type.googleapis.com/envoy.config.cluster.v3.Cluster"} 6.433863000000001e+06
pilot_xds_config_size_bytes_count{type="type.googleapis.com/envoy.config.cluster.v3.Cluster"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="1"} 0
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="10000"} 314
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="1e+06"} 314
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="4e+06"} 314
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="1e+07"} 314
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="4e+07"} 314
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment",le="+Inf"} 314
pilot_xds_config_size_bytes_sum{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment"} 1.4793530000000002e+06
pilot_xds_config_size_bytes_count{type="type.googleapis.com/envoy.config.endpoint.v3.ClusterLoadAssignment"} 314
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="1"} 49
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="10000"} 73
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="1e+06"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="4e+06"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="1e+07"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="4e+07"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.listener.v3.Listener",le="+Inf"} 225
pilot_xds_config_size_bytes_sum{type="type.googleapis.com/envoy.config.listener.v3.Listener"} 2.190728599999999e+07
pilot_xds_config_size_bytes_count{type="type.googleapis.com/envoy.config.listener.v3.Listener"} 225
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="1"} 0
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="10000"} 68
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="1e+06"} 206
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="4e+06"} 206
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="1e+07"} 206
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="4e+07"} 206
pilot_xds_config_size_bytes_bucket{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration",le="+Inf"} 206
pilot_xds_config_size_bytes_sum{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration"} 2.3926380000000005e+06
pilot_xds_config_size_bytes_count{type="type.googleapis.com/envoy.config.route.v3.RouteConfiguration"} 206
# HELP pilot_xds_expired_nonce Total number of XDS requests with an expired nonce.
# TYPE pilot_xds_expired_nonce counter
pilot_xds_expired_nonce{type="eds"} 78
pilot_xds_expired_nonce{type="lds"} 1
pilot_xds_expired_nonce{type="rds"} 31
# HELP pilot_xds_push_time Total time in seconds Pilot takes to push lds, rds, cds and eds.
# TYPE pilot_xds_push_time histogram
pilot_xds_push_time_bucket{type="cds",le="0.01"} 161
pilot_xds_push_time_bucket{type="cds",le="0.1"} 219
pilot_xds_push_time_bucket{type="cds",le="1"} 225
pilot_xds_push_time_bucket{type="cds",le="3"} 225
pilot_xds_push_time_bucket{type="cds",le="5"} 225
pilot_xds_push_time_bucket{type="cds",le="10"} 225
pilot_xds_push_time_bucket{type="cds",le="20"} 225
pilot_xds_push_time_bucket{type="cds",le="30"} 225
pilot_xds_push_time_bucket{type="cds",le="+Inf"} 225
pilot_xds_push_time_sum{type="cds"} 3.3931308840000014
pilot_xds_push_time_count{type="cds"} 225
pilot_xds_push_time_bucket{type="eds",le="0.01"} 290
pilot_xds_push_time_bucket{type="eds",le="0.1"} 311
pilot_xds_push_time_bucket{type="eds",le="1"} 314
pilot_xds_push_time_bucket{type="eds",le="3"} 314
pilot_xds_push_time_bucket{type="eds",le="5"} 314
pilot_xds_push_time_bucket{type="eds",le="10"} 314
pilot_xds_push_time_bucket{type="eds",le="20"} 314
pilot_xds_push_time_bucket{type="eds",le="30"} 314
pilot_xds_push_time_bucket{type="eds",le="+Inf"} 314
pilot_xds_push_time_sum{type="eds"} 1.4409977410000008
pilot_xds_push_time_count{type="eds"} 314
pilot_xds_push_time_bucket{type="lds",le="0.01"} 156
pilot_xds_push_time_bucket{type="lds",le="0.1"} 213
pilot_xds_push_time_bucket{type="lds",le="1"} 225
pilot_xds_push_time_bucket{type="lds",le="3"} 225
pilot_xds_push_time_bucket{type="lds",le="5"} 225
pilot_xds_push_time_bucket{type="lds",le="10"} 225
pilot_xds_push_time_bucket{type="lds",le="20"} 225
pilot_xds_push_time_bucket{type="lds",le="30"} 225
pilot_xds_push_time_bucket{type="lds",le="+Inf"} 225
pilot_xds_push_time_sum{type="lds"} 4.0205183490000005
pilot_xds_push_time_count{type="lds"} 225
pilot_xds_push_time_bucket{type="rds",le="0.01"} 183
pilot_xds_push_time_bucket{type="rds",le="0.1"} 205
pilot_xds_push_time_bucket{type="rds",le="1"} 206
pilot_xds_push_time_bucket{type="rds",le="3"} 206
pilot_xds_push_time_bucket{type="rds",le="5"} 206
pilot_xds_push_time_bucket{type="rds",le="10"} 206
pilot_xds_push_time_bucket{type="rds",le="20"} 206
pilot_xds_push_time_bucket{type="rds",le="30"} 206
pilot_xds_push_time_bucket{type="rds",le="+Inf"} 206
pilot_xds_push_time_sum{type="rds"} 1.07998998
pilot_xds_push_time_count{type="rds"} 206
# HELP pilot_xds_pushes Pilot build and send errors for lds, rds, cds and eds.
# TYPE pilot_xds_pushes counter
pilot_xds_pushes{type="cds"} 225
pilot_xds_pushes{type="eds"} 314
pilot_xds_pushes{type="lds"} 225
pilot_xds_pushes{type="rds"} 206
# HELP pilot_xds_send_time Total time in seconds Pilot takes to send generated configuration.
# TYPE pilot_xds_send_time histogram
pilot_xds_send_time_bucket{le="0.01"} 961
pilot_xds_send_time_bucket{le="0.1"} 970
pilot_xds_send_time_bucket{le="1"} 970
pilot_xds_send_time_bucket{le="3"} 970
pilot_xds_send_time_bucket{le="5"} 970
pilot_xds_send_time_bucket{le="10"} 970
pilot_xds_send_time_bucket{le="20"} 970
pilot_xds_send_time_bucket{le="30"} 970
pilot_xds_send_time_bucket{le="+Inf"} 970
pilot_xds_send_time_sum 0.29652352700000023
pilot_xds_send_time_count 970
# HELP process_cpu_seconds_total Total user and system CPU time spent in seconds.
# TYPE process_cpu_seconds_total counter
process_cpu_seconds_total 88.59
# HELP process_max_fds Maximum number of open file descriptors.
# TYPE process_max_fds gauge
process_max_fds 1.048576e+06
# HELP process_open_fds Number of open file descriptors.
# TYPE process_open_fds gauge
process_open_fds 29
# HELP process_resident_memory_bytes Resident memory size in bytes.
# TYPE process_resident_memory_bytes gauge
process_resident_memory_bytes 6.4155648e+07
# HELP process_start_time_seconds Start time of the process since unix epoch in seconds.
# TYPE process_start_time_seconds gauge
process_start_time_seconds 1.66375216986e+09
# HELP process_virtual_memory_bytes Virtual memory size in bytes.
# TYPE process_virtual_memory_bytes gauge
process_virtual_memory_bytes 5.104316416e+09
# HELP process_virtual_memory_max_bytes Maximum amount of virtual memory available in bytes.
# TYPE process_virtual_memory_max_bytes gauge
process_virtual_memory_max_bytes 1.8446744073709552e+19
# HELP sidecar_injection_requests_total Total number of sidecar injection requests.
# TYPE sidecar_injection_requests_total counter
sidecar_injection_requests_total 6
# HELP sidecar_injection_success_total Total number of successful sidecar injection requests.
# TYPE sidecar_injection_success_total counter
sidecar_injection_success_total 6
# HELP webhook_patch_attempts_total Webhook patching attempts
# TYPE webhook_patch_attempts_total counter
webhook_patch_attempts_total{name="istio-revision-tag-default"} 1
webhook_patch_attempts_total{name="istio-sidecar-injector"} 3
