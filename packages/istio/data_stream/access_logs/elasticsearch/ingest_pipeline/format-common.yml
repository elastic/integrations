---
description: Pipeline for processing Istio access logs
processors:
  - drop:
      if: ctx.first_char != '['
  - dissect:
      field: event.original
      pattern: '[%{istio.access.start_time}] %{istio.access.message}'
  - grok:
      field: istio.access.message
      patterns:
        - '"(-|%{DATA:http.request.method}) (-|%{DATA:url.original}) (-|%{DATA:istio.access.protocol})" (-|%{NUMBER:http.response.status_code:long}) (-|%{DATA:istio.access.response.flags}) (-|%{DATA:istio.access.response.code_details}) (-|%{DATA:istio.access.connection_termination_details}) "(-|%{DATA:istio.access.upstream.transport_failure_reason})" %{NUMBER:istio.access.bytes.received:long} %{NUMBER:istio.access.bytes.sent:long} (-|%{NUMBER:istio.access.duration:long}) (-|%{NUMBER:istio.access.upstream.service_time:long}) "(-|%{DATA:istio.access.x-forwarded-for})" "(-|%{DATA:user_agent.original})" "(-|%{DATA:http.request.id})" "(-|%{DATA:istio.access.authority})" "(-|%{DATA:istio.access.upstream.host})" (-|%{DATA:istio.access.upstream.cluster}) (-|%{HOSTPORT:istio.access.upstream.local_address}) (-|%{HOSTPORT:istio.access.downstream.local_address}) (-|%{DATA:istio.access.downstream.remote_address}) (-|%{DATA:istio.access.requested_server_name}) (-|%{GREEDYDATA:istio.access.route_name})'
      ignore_missing: true
  - remove:
      field: istio.access.message
      ignore_missing: true
  - set:
      field: destination.address
      copy_from: istio.access.upstream.host
      ignore_failure: true
  - grok:
      field: destination.address
      patterns:
        - ^-$
        - ^%{HOSTNAME:destination.domain}$
        - "^%{IPV4:destination.ip}:%{NUMBER:destination.port}$"
        - "^\\[%{IPV6:destination.ip}\\]:%{NUMBER:destination.port}$"
        - "^%{IPV6NOCOMPRESS:destination.ip}:%{NUMBER:destination.port}$"
        - "^%{IPV6:destination.ip}%{IPV6PORTSEP}%{NUMBER:destination.port}$"
        - "^%{IPV6:destination.ip}%{IPV6PORTSEP}%{POSINT:destination.port}$"
      pattern_definitions:
        IPV6NOCOMPRESS: '([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}'
        IPV6PORTSEP: '(?: port |[p#.])'
      ignore_missing: true
  - convert:
      field: destination.ip
      type: ip
      ignore_missing: true
      on_failure:
      - remove:
          field: destination.ip
  - convert:
      field: destination.port
      type: long
      ignore_missing: true
      on_failure:
      - remove: 
          field: destination.port
  - set:
      field: source.address
      copy_from: istio.access.downstream.remote_address
  - grok:
      field: source.address
      patterns:
        - ^-$
        - ^%{HOSTNAME:source.domain}$
        - "^%{IPV4:source.ip}:%{NUMBER:source.port}$"
        - "^\\[%{IPV6:source.ip}\\]:%{NUMBER:source.port}$"
        - "^%{IPV6NOCOMPRESS:source.ip}:%{NUMBER:source.port}$"
        - "^%{IPV6:source.ip}%{IPV6PORTSEP}%{NUMBER:source.port}$"
        - "^%{IPV6:source.ip}%{IPV6PORTSEP}%{POSINT:source.port}$"
      pattern_definitions:
        IPV6NOCOMPRESS: '([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}'
        IPV6PORTSEP: '(?: port |[p#.])'
      ignore_missing: true
      ignore_failure: true
  - convert:
      field: source.ip
      type: ip
      ignore_missing: true
      on_failure:
      - remove:
          field: source.ip
  - convert:
      field: source.port
      type: long
      ignore_missing: true
      on_failure:
      - remove: 
          field: source.port
  - remove:
      field: source.port
      if: "ctx?.source?.port == 0"
  - set:
      field: network.transport
      value: "tcp"
  - set:
      field: network.protocol
      value: "http"
      if: "ctx?.istio?.access?.protocol != null"
  - set:
      field: http.response.body.bytes
      copy_from: istio.access.bytes.received
      if: "ctx?.network?.protocol == 'http'"
  - set:
      field: http.request.body.bytes
      copy_from: istio.access.bytes.sent
      if: "ctx?.network?.protocol == 'http'"
  - grok:
      field: istio.access.protocol
      patterns:
        - (-|HTTP/%{NUMBER:http.version})
      ignore_missing: true
  - remove:
      field: istio.access.protocol
      ignore_failure: true
  - script:
      lang: painless
      source:
        ctx.event.duration = Math.round(ctx.istio.access.upstream.service_time *
        params.scale)
      params:
        scale: 1000000
      if: ctx.istio?.access?.upstream?.service_time != null
  - date:
      field: istio.access.start_time
      formats:
        - ISO8601
      target_field: "@timestamp"
  - remove:
      field: istio.access.start_time
on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'    