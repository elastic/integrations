---
description: Pipeline for processing sample logs
processors:
  - drop:
      if: ctx.first_char != '['
  - dissect:
      field: event.original
      pattern: '[%{istio.access.start_time}]
        "%{http.request.method}
        %{url.original}
        %{istio.access.message}'
  - grok:
      field: istio.access.message
      patterns:
        - (-|%{DATA:istio.access.protocol})" 
          (-|%{NUMBER:http.response.status_code:long})
          (-|%{DATA:istio.access.response.flags})
          (-|%{DATA:istio.access.response.code_details})
          (-|%{DATA:istio.access.connection_termination_details})
          "(-|%{DATA:istio.access.upstream.transport_failure_reason})"
          %{NUMBER:istio.access.bytes.received:long}
          %{NUMBER:istio.access.bytes.sent:long}
          (-|%{NUMBER:istio.access.duration:long})
          (-|%{NUMBER:istio.access.upstream.service_time:long})
          "(-|%{DATA:istio.access.x-forwarded-for})"
          "(-|%{DATA:user_agent.original})"
          "%{DATA:http.request.id}"
          "(-|%{DATA:istio.access.authority})"
          "(-|%{ISTIO_HOST:istio.access.upstream.host})"
          (-|%{DATA:istio.access.upstream.cluster})
          (-|%{HOSTPORT:istio.access.upstream.local_address})
          (-|%{HOSTPORT:istio.access.downstream.local_address})
          (-|%{ISTIO_HOSTPORT:istio.access.downstream.remote_address})
          (-|%{DATA:istio.access.requested_server_name})
          (-|%{GREEDYDATA:istio.access.route_name})
      pattern_definitions:
        ISTIO_HOST: (%{HOSTPORT}|%{URI})
        ISTIO_HOSTPORT: (%{HOSTPORT}|%{IPORHOST}:%{NONNEGINT})
      ignore_missing: true
  - remove:
      field: istio.access.message
      ignore_missing: true
  - set:
      field: destination.address
      copy_from: istio.access.downstream.local_address
  - set:
      field: source.address
      copy_from: istio.access.downstream.remote_address
  - grok:
      field: source.address
      patterns:
        - (-|%{IP:source.ip}:%{NONNEGINT:source.port})
      ignore_missing: true
  - convert:
      field: source.port
      type: long
      ignore_missing: true
  - grok:
      field: destination.address
      patterns:
        - (-|%{IP:destination.ip}:%{POSINT:destination.port})
      ignore_missing: true
  - convert:
      field: destination.port
      type: long
      ignore_missing: true
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
      - asn
      - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - append:
      field: related.ip
      value: "{{source.ip}}"
      if: "ctx?.source?.ip != null"
  - append:
      field: related.ip
      value: "{{destination.ip}}"
      if: "ctx?.destination?.ip != null"
  - set:
      field: network.transport
      value: "tcp/udp"
      if: "ctx?.istio?.access?.protocol == null"
  - set:
      field: network.protocol
      value: "http"
      if: "ctx?.istio?.access?.protocol != null"
  - set:
      field: http.response.body.bytes
      copy_from: istio.access.bytes.received
      if: "ctx?.network?.protocol == 'http'"
  - set:
      field: http.request.body.bytes
      copy_from: istio.access.bytes.sent
      if: "ctx?.network?.protocol == 'http'"
  - grok:
      field: istio.access.protocol
      patterns:
        - (-|HTTP/%{NUMBER:http.version})
      ignore_missing: true
  - remove:
      field: istio.access.protocol
      ignore_failure: true
  - script:
      lang: painless
      source:
        ctx.event.duration = Math.round(ctx.istio.access.upstream.service_time *
        params.scale)
      params:
        scale: 1000000
      if: ctx.istio?.access?.upstream?.service_time != null
  - date:
      field: istio.access.start_time
      formats:
        - ISO8601
      target_field: "@timestamp"
  - remove:
      field: istio.access.start_time
  - set:
      field: event.id
      copy_from: http.request.id
on_failure:
  - set:
      field: error.message
      value: '{{ _ingest.on_failure_message }}'    