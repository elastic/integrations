{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies rare Azure Entra ID apps IDs requesting authentication on-behalf-of a principal user. An adversary with stolen credentials may specify an Azure-managed app ID to authenticate on-behalf-of a user. This is a rare event and may indicate an attempt to bypass conditional access policies (CAP) and multi-factor authentication (MFA) requirements. The app ID specified may not be commonly used by the user based on their historical sign-in activity.",
        "from": "now-9m",
        "history_window_start": "now-14d",
        "index": [
            "filebeat-*",
            "logs-azure*"
        ],
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "Azure Entra ID Rare App ID for Principal Authentication",
        "new_terms_fields": [
            "azure.signinlogs.properties.user_principal_name",
            "azure.signinlogs.properties.app_id"
        ],
        "note": "## Triage and analysis\n\n### Investigating Azure Entra ID Rare App ID for Principal Authentication\n\nThis rule identifies rare Azure Entra apps IDs requesting authentication on-behalf-of a principal user. An adversary with stolen credentials may specify an Azure-managed app ID to authenticate on-behalf-of a user. This is a rare event and may indicate an attempt to bypass conditional access policies (CAP) and multi-factor authentication (MFA) requirements. The app ID specified may not be commonly used by the user based on their historical sign-in activity.\n\n**This is a New Terms rule that focuses on first occurrence of the client `azure.signinlogs.properties.app_id` requesting authentication on-behalf-of the principal user `azure.signinlogs.properties.user_principal_name` in the last 14-days.**\n\n### Possible investigation steps\n\n- Identify the source IP address from which the failed login attempts originated by reviewing `source.ip`. Determine if the IP is associated with known malicious activity using threat intelligence sources or if it belongs to a corporate VPN, proxy, or automation process.\n- Analyze affected user accounts by reviewing `azure.signinlogs.properties.user_principal_name` to determine if they belong to privileged roles or high-value users. Look for patterns indicating multiple failed attempts across different users, which could suggest a password spraying attempt.\n- Examine the authentication method used in `azure.signinlogs.properties.authentication_details` to identify which authentication protocols were attempted and why they failed. Legacy authentication methods may be more susceptible to brute-force attacks.\n- Review the authentication error codes found in `azure.signinlogs.properties.status.error_code` to understand why the login attempts failed. Common errors include `50126` for invalid credentials, `50053` for account lockouts, `50055` for expired passwords, and `50056` for users without a password.\n- Correlate failed logins with other sign-in activity by looking at `event.outcome`. Identify if there were any successful logins from the same user shortly after multiple failures or if there are different geolocations or device fingerprints associated with the same account.\n- Review `azure.signinlogs.properties.app_id` to identify which applications were initiating the authentication attempts. Determine if these applications are Microsoft-owned, third-party, or custom applications and if they are authorized to access the resources.\n- Check for any conditional access policies that may have been triggered by the failed login attempts by reviewing `azure.signinlogs.properties.authentication_requirement`. This can help identify if the failed attempts were due to policy enforcement or misconfiguration.\n\n## False positive analysis\n\n### Common benign scenarios\n- Automated scripts or applications using non-interactive authentication may trigger this detection, particularly if they rely on legacy authentication protocols recorded in `azure.signinlogs.properties.authentication_protocol`.\n- Corporate proxies or VPNs may cause multiple users to authenticate from the same IP, appearing as repeated failed attempts under `source.ip`.\n- User account lockouts from forgotten passwords or misconfigured applications may show multiple authentication failures in `azure.signinlogs.properties.status.error_code`.\n\n### How to reduce false positives\n- Exclude known trusted IPs, such as corporate infrastructure, from alerts by filtering `source.ip`.\n- Exlcude known custom applications from `azure.signinlogs.properties.app_id` that are authorized to use non-interactive authentication.\n- Ignore principals with a history of failed logins due to legitimate reasons, such as expired passwords or account lockouts, by filtering `azure.signinlogs.properties.user_principal_name`.\n- Correlate sign-in failures with password reset events or normal user behavior before triggering an alert.\n\n## Response and remediation\n\n### Immediate actions\n- Block the source IP address in `source.ip` if determined to be malicious.\n- Reset passwords for all affected user accounts listed in `azure.signinlogs.properties.user_principal_name` and enforce stronger password policies.\n- Ensure basic authentication is disabled for all applications using legacy authentication protocols listed in `azure.signinlogs.properties.authentication_protocol`.\n- Enable multi-factor authentication (MFA) for impacted accounts to mitigate credential-based attacks.\n- Review conditional access policies to ensure they are correctly configured to block unauthorized access attempts recorded in `azure.signinlogs.properties.authentication_requirement`.\n- Review Conditional Access policies to enforce risk-based authentication and block unauthorized access attempts recorded in `azure.signinlogs.properties.authentication_requirement`.\n\n### Long-term mitigation\n- Implement a zero-trust security model by enforcing least privilege access and continuous authentication.\n- Regularly review and update conditional access policies to ensure they are effective against evolving threats.\n- Restrict the use of legacy authentication protocols by disabling authentication methods listed in `azure.signinlogs.properties.client_app_used`.\n- Regularly audit authentication logs in `azure.signinlogs` to detect abnormal login behavior and ensure early detection of potential attacks.\n- Regularly rotate client credentials and secrets for applications using non-interactive authentication to reduce the risk of credential theft.\n",
        "query": "event.dataset: \"azure.signinlogs\" and event.category: \"authentication\"\n    and azure.signinlogs.properties.is_interactive: false\n    and azure.signinlogs.properties.user_type: \"Member\"\n    and not azure.signinlogs.properties.client_app_used: \"Browser\"\n    and not source.as.organization.name: \"MICROSOFT-CORP-MSN-AS-BLOCK\"\n",
        "references": [
            "https://securityscorecard.com/wp-content/uploads/2025/02/MassiveBotnet-Report_022125_03.pdf"
        ],
        "related_integrations": [
            {
                "package": "azure",
                "version": "^1.22.0"
            }
        ],
        "required_fields": [
            {
                "ecs": false,
                "name": "azure.signinlogs.properties.client_app_used",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "azure.signinlogs.properties.is_interactive",
                "type": "boolean"
            },
            {
                "ecs": false,
                "name": "azure.signinlogs.properties.user_type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.category",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "source.as.organization.name",
                "type": "keyword"
            }
        ],
        "risk_score": 47,
        "rule_id": "c766bc56-fdca-11ef-b194-f661ea17fbcd",
        "severity": "medium",
        "tags": [
            "Domain: Cloud",
            "Data Source: Azure",
            "Data Source: Entra ID",
            "Data Source: Entra ID Sign-in",
            "Use Case: Identity and Access Audit",
            "Use Case: Threat Detection",
            "Tactic: Initial Access",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0001",
                    "name": "Initial Access",
                    "reference": "https://attack.mitre.org/tactics/TA0001/"
                },
                "technique": [
                    {
                        "id": "T1078",
                        "name": "Valid Accounts",
                        "reference": "https://attack.mitre.org/techniques/T1078/",
                        "subtechnique": [
                            {
                                "id": "T1078.004",
                                "name": "Cloud Accounts",
                                "reference": "https://attack.mitre.org/techniques/T1078/004/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "new_terms",
        "version": 3
    },
    "id": "c766bc56-fdca-11ef-b194-f661ea17fbcd_3",
    "type": "security-rule"
}