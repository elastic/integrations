{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies potential attempt to execute via a reverse shell using the netcat utility to execute Windows commands using the default interpreters like Cmd.exe and Powershell.",
        "from": "now-9m",
        "index": [
            "logs-endpoint.events.process-*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Potential Command Shell via NetCat",
        "note": "## Triage and analysis\n\n### Investigating Potential Command Shell via NetCat\n\nAttackers may abuse the NetCat utility to execute commands remotely using the builtin Windows Command Shell interpreters.\n\n#### Possible investigation steps\n\n- Verify if the user is authorized to use the Netcat utility.\n- Investigate the process execution chain (parent process tree) and how the netcat binary was dropped.\n- Review the network connections made by the parent process and check their reputation.\n- Investiguate all child processes spawned by the Cmd or Powershell instance.\n- Examine the host for other alerts within the same period.\n\n### False positive analysis\n\n- IT Support or system amdinistrator authorized activity using NetCat.\n\n### Response and remediation\n\n- Initiate the incident response process based on the outcome of the triage.\n- Isolate the involved host to prevent further post-compromise behavior.\n- If the triage identified malware, search the environment for additional compromised hosts.\n  - Implement temporary network rules, procedures, and segmentation to contain the malware.\n  - Stop suspicious processes.\n  - Immediately block the identified indicators of compromise (IoCs).\n  - Inspect the affected systems for additional malware backdoors like reverse shells, reverse proxies, or droppers that attackers could use to reinfect the system.\n- Remove and block malicious artifacts identified during triage.\n- Run a full antimalware scan. This may reveal additional artifacts left in the system, persistence mechanisms, and malware components.\n- Investigate credential exposure on systems compromised or used by the attacker to ensure all compromised accounts are identified. Reset passwords for these accounts and other potentially compromised credentials, such as email, business systems, and web services.\n- Determine the initial vector abused by the attacker and take action to prevent reinfection through the same vector.\n- Using the incident response data, update logging and audit policies to improve the mean time to detect (MTTD) and the mean time to respond (MTTR).\n",
        "query": "process where host.os.type == \"windows\" and event.type == \"start\" and\nprocess.name : (\"cmd.exe\", \"powershell.exe\") and process.parent.args : \"-e\" and\n (\n  (process.parent.args_count == 5 and process.parent.command_line regex~ \"\"\".*[0-9]{1,3}(\\.[0-9]{1,3}){3}.*\"\"\") or\n  (process.parent.args : \"-*l*\" and process.parent.args : \"-*p*\" and process.parent.args : (\"cmd.exe\", \"powershell.exe\"))\n  )\n",
        "related_integrations": [
            {
                "package": "endpoint",
                "version": "^9.0.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.name",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.parent.args",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.parent.args_count",
                "type": "long"
            },
            {
                "ecs": true,
                "name": "process.parent.command_line",
                "type": "wildcard"
            }
        ],
        "risk_score": 73,
        "rule_id": "9c0f61fa-abf4-4b11-8d9d-5978c09182dd",
        "severity": "high",
        "tags": [
            "Domain: Endpoint",
            "OS: Windows",
            "Use Case: Threat Detection",
            "Tactic: Execution",
            "Resources: Investigation Guide",
            "Data Source: Elastic Defend"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0002",
                    "name": "Execution",
                    "reference": "https://attack.mitre.org/tactics/TA0002/"
                },
                "technique": [
                    {
                        "id": "T1059",
                        "name": "Command and Scripting Interpreter",
                        "reference": "https://attack.mitre.org/techniques/T1059/",
                        "subtechnique": [
                            {
                                "id": "T1059.001",
                                "name": "PowerShell",
                                "reference": "https://attack.mitre.org/techniques/T1059/001/"
                            },
                            {
                                "id": "T1059.003",
                                "name": "Windows Command Shell",
                                "reference": "https://attack.mitre.org/techniques/T1059/003/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 1
    },
    "id": "9c0f61fa-abf4-4b11-8d9d-5978c09182dd_1",
    "type": "security-rule"
}