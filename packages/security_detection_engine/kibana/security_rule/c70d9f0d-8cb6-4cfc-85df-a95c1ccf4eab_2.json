{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Detects use of sensitive AWS STS or IAM API operations using temporary credentials (session tokens starting with 'ASIA'). This may indicate credential theft or abuse of elevated access via a stolen session. It is not common for legitimate users to perform sensitive IAM operations with temporary session tokens.",
        "false_positives": [
            "Some CI/CD pipelines or administrative users may use session tokens. Review user context, IP, and timing to validate."
        ],
        "from": "now-9m",
        "history_window_start": "now-14d",
        "index": [
            "filebeat-*",
            "logs-aws.cloudtrail-*"
        ],
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "AWS IAM API Calls via Temporary Session Tokens",
        "new_terms_fields": [
            "aws.cloudtrail.user_identity.arn"
        ],
        "note": "## Triage and analysis\n\n### Investigating AWS IAM API Calls via Temporary Session Tokens\n\nThis rule detects sensitive IAM API operations performed using temporary AWS credentials (session tokens starting with 'ASIA'). These are short-lived credentials commonly obtained via sts:GetSessionToken, sts:AssumeRole, or AWS SSO login. While temporary credentials are often used for development and automation, they are rarely associated with direct IAM manipulation and may indicate credential theft, privilege escalation, or abuse of developer access.\n\n#### Possible investigation steps:\n\n- Review aws.cloudtrail.user_identity.arn to determine which IAM user or assumed role initiated the request.\n- Check aws.cloudtrail.user_identity.access_key_id to confirm if the credential starts with 'ASIA', indicating a temporary session token.\n- Examine aws.cloudtrail.user_identity.session_context.mfa_authenticated to verify whether MFA was present during session creation.\n- Investigate source.ip to assess whether the request originated from a known network, office IP, or corporate VPN.\n- Look at user_agent.original to determine if the API call came from a known CLI version or unexpected tool (e.g., unknown SDK, custom script).\n- Confirm whether a recent sts:GetSessionToken, sts:AssumeRole, or AWS SSO login event issued the temporary credential.\n- Correlate other events using the same access key ID to identify additional privileged actions, such as iam:CreateAccessKey, iam:PutUserPolicy, or iam:EnableMFADevice.\n- Analyze timing via @timestamp to determine if the action occurred during off-hours or deviates from normal user behavior.\n- Review the event.outcome to check if the API call was successful or failed, which may indicate unauthorized access attempts.\n- Check for related events in the same session, such as iam:CreateUser, iam:AttachUserPolicy, or sts:GetCallerIdentity, to identify potential lateral movement or privilege escalation.\n\n### False positive analysis:\n\n- Determine if the IAM user or automation pipeline routinely performs privileged actions using temporary session tokens.\n- Validate whether the MFA context and source IP match expected developer or CI/CD behavior.\n- Review recent IAM policy changes or deployments that may explain the behavior.\n- Confirm if the user has a legitimate reason to perform sensitive IAM operations with temporary credentials, such as during a deployment or maintenance window.\n\n### Response and remediation:\n\n- Revoke the temporary session token and rotate long-term access keys for the associated user if the behavior is unauthorized.\n- Audit related CloudTrail events within the same session to identify policy changes, resource creation, or lateral movement.\n- Add explicit deny statements in IAM policies to prevent sensitive IAM actions when aws:authType is not \"console\".\n- Implement IP restrictions for IAM and STS API actions using aws:SourceIp conditions.\n- Strengthen monitoring for IAM activity initiated by session tokens with MFA to improve detection coverage.\n",
        "query": "event.dataset: aws.cloudtrail\n    and event.provider: (\"iam.amazonaws.com\")\n    and aws.cloudtrail.user_identity.type: \"IAMUser\"\n    and aws.cloudtrail.user_identity.access_key_id: ASIA*\n",
        "references": [
            "https://www.sygnia.co/blog/sygnia-investigation-bybit-hack/"
        ],
        "related_integrations": [
            {
                "integration": "cloudtrail",
                "package": "aws",
                "version": "^2.40.0"
            }
        ],
        "required_fields": [
            {
                "ecs": false,
                "name": "aws.cloudtrail.user_identity.access_key_id",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "aws.cloudtrail.user_identity.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.provider",
                "type": "keyword"
            }
        ],
        "risk_score": 21,
        "rule_id": "c70d9f0d-8cb6-4cfc-85df-a95c1ccf4eab",
        "severity": "low",
        "tags": [
            "Domain: Cloud",
            "Data Source: AWS",
            "Data Source: Amazon Web Services",
            "Data Source: AWS CloudTrail",
            "Data Source: AWS IAM",
            "Data Source: AWS STS",
            "Tactic: Persistence",
            "Tactic: Privilege Escalation",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0003",
                    "name": "Persistence",
                    "reference": "https://attack.mitre.org/tactics/TA0003/"
                },
                "technique": [
                    {
                        "id": "T1098",
                        "name": "Account Manipulation",
                        "reference": "https://attack.mitre.org/techniques/T1098/"
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "new_terms",
        "version": 2
    },
    "id": "c70d9f0d-8cb6-4cfc-85df-a95c1ccf4eab_2",
    "type": "security-rule"
}