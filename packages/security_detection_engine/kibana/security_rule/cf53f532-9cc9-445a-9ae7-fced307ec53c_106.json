{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Cobalt Strike is a threat emulation platform commonly modified and used by adversaries to conduct network attack and exploitation campaigns. This rule detects a network activity algorithm leveraged by Cobalt Strike implant beacons for command and control.",
        "false_positives": [
            "This rule should be tailored to either exclude systems, as sources or destinations, in which this behavior is expected."
        ],
        "from": "now-9m",
        "index": [
            "packetbeat-*",
            "auditbeat-*",
            "filebeat-*",
            "logs-network_traffic.*"
        ],
        "language": "lucene",
        "license": "Elastic License v2",
        "name": "Cobalt Strike Command and Control Beacon",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Cobalt Strike Command and Control Beacon\n\nCobalt Strike is a penetration testing tool often repurposed by attackers for malicious activities, particularly for establishing command and control (C2) channels. Adversaries exploit its beaconing feature to communicate with compromised systems using common protocols like HTTP or TLS. The detection rule identifies suspicious network patterns, such as specific domain naming conventions, indicative of Cobalt Strike's C2 activity, helping analysts pinpoint potential threats.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific domain that triggered the rule, focusing on the pattern [a-z]{3}.stage.[0-9]{8}\\..* to determine if it matches known malicious domains.\n- Analyze the network traffic logs associated with the alert, specifically looking at events categorized under network or network_traffic with types tls or http, to gather more context about the communication.\n- Investigate the source IP address and destination domain involved in the alert to determine if they have been associated with previous malicious activities or are listed in threat intelligence databases.\n- Examine the timeline of the network activity to identify any patterns or anomalies that could indicate a larger campaign or coordinated attack.\n- Check for any related alerts or incidents in the security information and event management (SIEM) system that might provide additional context or indicate a broader compromise.\n- Assess the affected endpoint for any signs of compromise, such as unusual processes or connections, to determine if further containment or remediation actions are necessary.\n\n### False positive analysis\n\n- Legitimate software updates or patch management systems may use similar domain naming conventions. Review and whitelist known update servers to prevent false alerts.\n- Internal development or testing environments might mimic Cobalt Strike's domain patterns for legitimate purposes. Identify and exclude these environments from the rule.\n- Automated scripts or tools that generate network traffic with similar domain structures can trigger false positives. Monitor and document these tools, then create exceptions for their activity.\n- Some content delivery networks (CDNs) might use domain patterns that match the rule's criteria. Verify and exclude trusted CDNs to reduce unnecessary alerts.\n- Regularly review and update the list of exceptions to ensure that only verified non-threatening behaviors are excluded, maintaining the rule's effectiveness.\n\n### Response and remediation\n\n- Isolate the affected systems immediately to prevent further communication with the Cobalt Strike C2 server. This can be done by disconnecting the network or using network segmentation techniques.\n- Conduct a thorough forensic analysis of the compromised systems to identify the extent of the breach and any additional payloads or backdoors that may have been installed.\n- Remove any identified Cobalt Strike beacons or related malware from the affected systems using updated antivirus or endpoint detection and response (EDR) tools.\n- Change all credentials and access tokens that may have been exposed or used on the compromised systems to prevent unauthorized access.\n- Monitor network traffic for any signs of re-infection or communication attempts with known Cobalt Strike C2 domains, using updated threat intelligence feeds.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems or data have been compromised.\n- Implement network-level controls, such as blocking known malicious domains and IP addresses associated with Cobalt Strike, to prevent future attacks.\n\n## Threat intel\n\nThis activity has been observed in FIN7 campaigns.",
        "query": "((event.category: (network OR network_traffic) AND type: (tls OR http))\n    OR event.dataset: (network_traffic.tls OR network_traffic.http)\n) AND destination.domain:/[a-z]{3}.stage.[0-9]{8}\\..*/\n",
        "references": [
            "https://blog.morphisec.com/fin7-attacks-restaurant-industry",
            "https://www.fireeye.com/blog/threat-research/2017/04/fin7-phishing-lnk.html",
            "https://www.elastic.co/security-labs/collecting-cobalt-strike-beacons-with-the-elastic-stack"
        ],
        "related_integrations": [],
        "risk_score": 73,
        "rule_id": "cf53f532-9cc9-445a-9ae7-fced307ec53c",
        "severity": "high",
        "tags": [
            "Use Case: Threat Detection",
            "Tactic: Command and Control",
            "Domain: Endpoint",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0011",
                    "name": "Command and Control",
                    "reference": "https://attack.mitre.org/tactics/TA0011/"
                },
                "technique": [
                    {
                        "id": "T1071",
                        "name": "Application Layer Protocol",
                        "reference": "https://attack.mitre.org/techniques/T1071/"
                    },
                    {
                        "id": "T1568",
                        "name": "Dynamic Resolution",
                        "reference": "https://attack.mitre.org/techniques/T1568/",
                        "subtechnique": [
                            {
                                "id": "T1568.002",
                                "name": "Domain Generation Algorithms",
                                "reference": "https://attack.mitre.org/techniques/T1568/002/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "query",
        "version": 106
    },
    "id": "cf53f532-9cc9-445a-9ae7-fced307ec53c_106",
    "type": "security-rule"
}