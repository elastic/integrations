{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "The kubeconfig file is a critical component in Kubernetes environments, containing configuration details for accessing and managing Kubernetes clusters. Attackers may attempt to get access to, create or modify kubeconfig files to gain unauthorized initial access to Kubernetes clusters or move laterally within the cluster.",
        "from": "now-9m",
        "index": [
            "logs-endpoint.events.file*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Kubeconfig File Creation or Modification",
        "note": " ## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Kubeconfig File Creation or Modification\nKubeconfig files are essential in Kubernetes environments, storing configurations for cluster access and management. Adversaries may target these files to gain unauthorized access or move laterally within clusters. The detection rule identifies suspicious creation or modification of kubeconfig files, excluding legitimate processes like kubeadm and minikube, to flag potential threats and mitigate risks associated with unauthorized access.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific file path involved in the creation or modification event, focusing on paths like \"/root/.kube/config\" or \"/etc/kubernetes/admin.conf\".\n- Examine the process responsible for the file creation or modification, ensuring it is not one of the excluded legitimate processes such as \"kubeadm\", \"kubelet\", \"vcluster\", or \"minikube\".\n- Check the user account associated with the process to determine if it has legitimate access to modify kubeconfig files and assess if the activity aligns with typical user behavior.\n- Investigate the timing of the event to see if it coincides with any scheduled maintenance or deployment activities that could explain the modification.\n- Look for any related alerts or logs that might indicate lateral movement or unauthorized access attempts within the Kubernetes cluster.\n- Assess the network activity from the host where the modification occurred to identify any suspicious connections or data transfers that could suggest unauthorized access or exfiltration.\n\n### False positive analysis\n\n- Legitimate administrative tools like kubeadm, kubelet, vcluster, and minikube may create or modify kubeconfig files as part of normal operations. Ensure these processes are excluded from triggering alerts by maintaining the exclusion list in the detection rule.\n- Automated scripts or configuration management tools that use sed to modify kubeconfig files might be flagged. Consider adding specific script names or paths to the exclusion list if they are verified as non-threatening.\n- User-initiated changes to kubeconfig files for legitimate access or configuration updates can trigger alerts. Implement a process to verify and document such changes, allowing for quick exclusion of known user actions.\n- Regular updates or maintenance activities that involve kubeconfig file modifications should be documented and excluded from detection. Coordinate with the operations team to identify and whitelist these activities.\n- Development environments where frequent kubeconfig changes occur, such as in testing or staging, may generate false positives. Establish a separate monitoring policy for these environments to reduce noise while maintaining security oversight.\n\n### Response and remediation\n\n- Immediately isolate the affected system to prevent further unauthorized access or lateral movement within the Kubernetes cluster.\n- Revoke any potentially compromised credentials associated with the kubeconfig files and issue new credentials to ensure secure access.\n- Conduct a thorough review of recent access logs and audit trails to identify any unauthorized access or suspicious activity related to the kubeconfig files.\n- Restore the kubeconfig files from a known good backup to ensure the integrity of the configuration and access settings.\n- Implement additional monitoring and alerting for any future modifications to kubeconfig files, focusing on processes not typically involved in legitimate changes.\n- Escalate the incident to the security operations team for further investigation and to assess the potential impact on the broader Kubernetes environment.\n- Review and update Kubernetes access policies to ensure they align with best practices for security and least privilege, reducing the risk of unauthorized access.\n",
        "query": "file where host.os.type == \"linux\" and event.type != \"deletion\" and file.path like (\n  \"/root/.kube/config\",\n  \"/home/*/.kube/config\",\n  \"/etc/kubernetes/admin.conf\",\n  \"/etc/kubernetes/super-admin.conf\",\n  \"/etc/kubernetes/kubelet.conf\",\n  \"/etc/kubernetes/controller-manager.conf\",\n  \"/etc/kubernetes/scheduler.conf\",\n  \"/var/lib/*/kubeconfig\"\n) and not (\n  process.name in (\"kubeadm\", \"kubelet\", \"vcluster\", \"minikube\") or\n  (process.name == \"sed\" and file.Ext.original.name like \"sed*\")\n)\n",
        "references": [
            "https://kubernetes-threat-matrix.redguard.ch/initial-access/kubeconfig-file/",
            "https://kubenomicon.com/Initial_access/Kubeconfig_file.html"
        ],
        "related_integrations": [
            {
                "package": "endpoint",
                "version": "^9.0.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.type",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "file.Ext.original.name",
                "type": "unknown"
            },
            {
                "ecs": true,
                "name": "file.path",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.name",
                "type": "keyword"
            }
        ],
        "risk_score": 47,
        "rule_id": "b11116fd-023c-4718-aeb8-fa9d283fc53b",
        "setup": "## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\n\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n",
        "severity": "medium",
        "tags": [
            "Domain: Endpoint",
            "Domain: Container",
            "Domain: Kubernetes",
            "OS: Linux",
            "Use Case: Threat Detection",
            "Tactic: Lateral Movement",
            "Tactic: Defense Evasion",
            "Tactic: Initial Access",
            "Data Source: Elastic Defend",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0008",
                    "name": "Lateral Movement",
                    "reference": "https://attack.mitre.org/tactics/TA0008/"
                },
                "technique": [
                    {
                        "id": "T1550",
                        "name": "Use Alternate Authentication Material",
                        "reference": "https://attack.mitre.org/techniques/T1550/"
                    }
                ]
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0005",
                    "name": "Defense Evasion",
                    "reference": "https://attack.mitre.org/tactics/TA0005/"
                },
                "technique": [
                    {
                        "id": "T1550",
                        "name": "Use Alternate Authentication Material",
                        "reference": "https://attack.mitre.org/techniques/T1550/"
                    }
                ]
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0001",
                    "name": "Initial Access",
                    "reference": "https://attack.mitre.org/tactics/TA0001/"
                },
                "technique": [
                    {
                        "id": "T1078",
                        "name": "Valid Accounts",
                        "reference": "https://attack.mitre.org/techniques/T1078/"
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 2
    },
    "id": "b11116fd-023c-4718-aeb8-fa9d283fc53b_2",
    "type": "security-rule"
}