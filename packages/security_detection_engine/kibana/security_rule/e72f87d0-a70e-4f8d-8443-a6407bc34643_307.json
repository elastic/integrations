{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Detects the creation of a WMI Event Subscription. Attackers can abuse this mechanism for persistence or to elevate to SYSTEM privileges.",
        "from": "now-9m",
        "index": [
            "winlogbeat-*",
            "logs-windows.sysmon_operational-*",
            "logs-endpoint.events.api-*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Suspicious WMI Event Subscription Created",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious WMI Event Subscription Created\n\nWindows Management Instrumentation (WMI) is a powerful framework for managing data and operations on Windows systems. It allows for event subscriptions that can trigger actions based on system events. Adversaries exploit this for persistence by creating event subscriptions that execute malicious scripts or commands. The detection rule identifies such abuse by monitoring specific event codes and API calls related to the creation of suspicious WMI event consumers, flagging potential threats.\n\n### Possible investigation steps\n\n- Review the event logs for event code 21 in the windows.sysmon_operational dataset to identify the specific WMI event subscription created, focusing on the winlog.event_data.Operation and winlog.event_data.Consumer fields.\n- Examine the process details associated with the IWbemServices::PutInstance API call in the endpoint.events.api dataset, particularly the process.Ext.api.parameters.consumer_type, to determine the nature of the consumer created.\n- Investigate the source and context of the command or script associated with the CommandLineEventConsumer or ActiveScriptEventConsumer to assess its legitimacy and potential malicious intent.\n- Check for any related processes or activities around the time of the event to identify potential lateral movement or further persistence mechanisms.\n- Correlate the findings with other security alerts or logs to determine if this event is part of a broader attack pattern or campaign.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools may create WMI event subscriptions for system monitoring or automation. Review the source and context of the event to determine if it aligns with known administrative activities.\n- Software installations or updates might use WMI event subscriptions as part of their setup or configuration processes. Verify if the event coincides with recent software changes and consider excluding these specific events if they are routine.\n- Security software or management tools often use WMI for legitimate purposes. Identify and document these tools in your environment, and create exceptions for their known behaviors to reduce noise.\n- Scheduled tasks or system maintenance scripts may trigger similar events. Cross-reference with scheduled task logs or maintenance windows to confirm if these are expected activities.\n- Custom scripts developed in-house for system management might inadvertently match the detection criteria. Ensure these scripts are documented and consider excluding their specific signatures from the rule.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further malicious activity and lateral movement.\n- Terminate any suspicious processes associated with the WMI event subscription, specifically those linked to CommandLineEventConsumer or ActiveScriptEventConsumer.\n- Remove the malicious WMI event subscription by using WMI management tools or scripts to delete the identified event consumer.\n- Conduct a thorough scan of the affected system using updated antivirus and anti-malware tools to identify and remove any additional threats.\n- Review and reset any compromised credentials, especially if SYSTEM privileges were potentially accessed or escalated.\n- Monitor the network for any signs of similar activity or attempts to recreate the WMI event subscription, using enhanced logging and alerting mechanisms.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to assess the potential impact on other systems within the network.",
        "query": "any where\n (\n   (event.dataset == \"windows.sysmon_operational\" and event.code == \"21\" and\n    winlog.event_data.Operation : \"Created\" and winlog.event_data.Consumer : (\"*subscription:CommandLineEventConsumer*\", \"*subscription:ActiveScriptEventConsumer*\")) or\n\n   (event.dataset == \"endpoint.events.api\" and event.provider == \"Microsoft-Windows-WMI-Activity\" and process.Ext.api.name == \"IWbemServices::PutInstance\" and\n    process.Ext.api.parameters.consumer_type in (\"ActiveScriptEventConsumer\", \"CommandLineEventConsumer\"))\n )\n",
        "references": [
            "https://www.blackhat.com/docs/us-15/materials/us-15-Graeber-Abusing-Windows-Management-Instrumentation-WMI-To-Build-A-Persistent%20Asynchronous-And-Fileless-Backdoor-wp.pdf",
            "https://medium.com/threatpunter/detecting-removing-wmi-persistence-60ccbb7dff96"
        ],
        "related_integrations": [
            {
                "package": "windows",
                "version": "^2.0.0"
            },
            {
                "package": "endpoint",
                "version": "^8.2.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.code",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.provider",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "process.Ext.api.name",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "process.Ext.api.parameters.consumer_type",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "winlog.event_data.Consumer",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "winlog.event_data.Operation",
                "type": "keyword"
            }
        ],
        "risk_score": 47,
        "rule_id": "e72f87d0-a70e-4f8d-8443-a6407bc34643",
        "severity": "medium",
        "tags": [
            "Domain: Endpoint",
            "OS: Windows",
            "Use Case: Threat Detection",
            "Tactic: Persistence",
            "Data Source: Sysmon",
            "Data Source: Elastic Defend",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0003",
                    "name": "Persistence",
                    "reference": "https://attack.mitre.org/tactics/TA0003/"
                },
                "technique": [
                    {
                        "id": "T1546",
                        "name": "Event Triggered Execution",
                        "reference": "https://attack.mitre.org/techniques/T1546/",
                        "subtechnique": [
                            {
                                "id": "T1546.003",
                                "name": "Windows Management Instrumentation Event Subscription",
                                "reference": "https://attack.mitre.org/techniques/T1546/003/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 307
    },
    "id": "e72f87d0-a70e-4f8d-8443-a6407bc34643_307",
    "type": "security-rule"
}