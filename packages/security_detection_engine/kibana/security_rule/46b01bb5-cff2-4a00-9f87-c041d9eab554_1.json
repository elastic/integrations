{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies instances where an unusual process spawns a chrome browser child process. This behavior could be related to malware stealing browser information.",
        "from": "now-9m",
        "index": [
            "endgame-*",
            "logs-endpoint.events.process-*",
            "logs-m365_defender.event-*",
            "logs-sentinel_one_cloud_funnel.*",
            "logs-system.security*",
            "logs-windows.forwarded*",
            "logs-windows.sysmon_operational-*",
            "winlogbeat-*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Browser Process Spawned from an Unusual Parent",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Browser Process Spawned from an Unusual Parent\n\n### Possible investigation steps\n\n- Review the process execution details to confirm that a web browser process (e.g., chrome.exe, msedge.exe, firefox.exe) has an unusual or suspicious parent process. Focus on the process.parent.name, process.name, and process.args fields.\n- Examine the command line arguments for signs of remote debugging flags (e.g., --remote-debugging-port, --remote-debugging-pipe) or injected DLLs that could indicate attempts to hijack browser sessions.\n- Check whether the parent process is a scripting host (e.g., wscript.exe, cscript.exe), system utility, or unexpected binary (e.g., cmd.exe, rundll32.exe, powershell.exe) rather than the legitimate browser updater or system launcher.\n- Investigate if the suspicious parent process has a known reputation or hash linked to malware or credential-stealing tools by correlating with threat intelligence sources.\n- Look for additional related processes spawned by the browser that might indicate malicious activity, such as network connections to unusual external IPs or data exfiltration attempts.\n- Review authentication logs to identify if any credential theft attempts occurred shortly after the suspicious browser activity, focusing on abnormal logins, failed authentications, or credential access patterns.\n- Cross-reference with endpoint telemetry (e.g., Defender for Endpoint, Sysmon) to identify whether this event is part of a broader intrusion attempt involving code injection or persistence mechanisms.\n\n### False positive analysis\n\n- Certain enterprise management or testing tools may launch browsers with remote debugging enabled for automation purposes. Identify and document such legitimate tools and processes.\n- Development environments may use browser remote debugging features during legitimate software testing. Exclude known dev/test machines or users from triggering alerts in production environments.\n- Security testing frameworks or internal red team activities may use similar techniques. Coordinate with authorized security teams to whitelist scheduled exercises.\n- Browser extensions or third-party plugins could sometimes spawn processes that appear unusual. Validate if the behavior aligns with known, legitimate extensions.\n- Automated IT scripts or orchestration tools might start browsers in debugging mode for monitoring purposes. Whitelist these cases based on process path, signature, or command-line arguments.\n\n### Response and remediation\n\n- Isolate the affected endpoint from the network to prevent potential credential theft or data exfiltration.\n- Terminate any suspicious processes identified in the alert, including both the browser and its anomalous parent process.\n- Collect forensic artifacts (process memory, browser profiles, injected modules) for further investigation and potential IOCs.\n- Reset credentials for accounts that may have been exposed through the compromised browser session.\n- Deploy updated endpoint protection signatures and enable stricter application control policies to prevent browsers from being launched by untrusted processes.\n- Enhance monitoring for browser processes launched with debugging flags or code injection indicators across the environment.\n- Escalate to the SOC or IR team to determine whether this event is part of a larger credential theft campaign or linked to other lateral movement activity.",
        "query": "process where host.os.type == \"windows\" and event.type == \"start\" and\n  process.name : (\"chrome.exe\", \"msedge.exe\") and\n  process.parent.executable != null and process.command_line != null and\n  (\n  process.command_line :\n           (\"\\\"C:\\\\Program Files (x86)\\\\Microsoft\\\\Edge\\\\Application\\\\msedge.exe\\\"\",\n            \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\"\",\n            \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\" --headless --disable-logging --log-level=3 --v=0\",\n            \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\" --headless --log-level=3\",\n            \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\" --headless\",\n            \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\" --remote-debugging-port=922? --profile-directory=\\\"Default\\\"*\",\n            \"\\\"C:\\\\Program Files\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\\\" --headless --restore-last-session --remote-debugging-port=45452*\") or\n\n  (process.args : \"--remote-debugging-port=922?\" and process.args : \"--window-position=-*,-*\")\n   ) and\n  not process.parent.executable :\n                         (\"C:\\\\Windows\\\\explorer.exe\",\n                          \"C:\\\\Program Files (x86)\\\\*.exe\",\n                          \"C:\\\\Program Files\\\\*.exe\",\n                          \"C:\\\\Windows\\\\System32\\\\rdpinit.exe\",\n                          \"C:\\\\Windows\\\\System32\\\\sihost.exe\",\n                          \"C:\\\\Windows\\\\System32\\\\RuntimeBroker.exe\",\n                          \"C:\\\\Windows\\\\System32\\\\SECOCL64.exe\")\n",
        "references": [
            "https://www.elastic.co/security-labs/katz-and-mouse-game"
        ],
        "related_integrations": [
            {
                "package": "windows",
                "version": "^3.0.0"
            },
            {
                "package": "endpoint",
                "version": "^9.0.0"
            },
            {
                "package": "system",
                "version": "^2.0.0"
            },
            {
                "package": "m365_defender",
                "version": "^3.0.0"
            },
            {
                "package": "sentinel_one_cloud_funnel",
                "version": "^1.9.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.args",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.command_line",
                "type": "wildcard"
            },
            {
                "ecs": true,
                "name": "process.name",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.parent.executable",
                "type": "keyword"
            }
        ],
        "risk_score": 73,
        "rule_id": "46b01bb5-cff2-4a00-9f87-c041d9eab554",
        "severity": "high",
        "tags": [
            "Domain: Endpoint",
            "OS: Windows",
            "Use Case: Threat Detection",
            "Tactic: Credential Access",
            "Data Source: Elastic Endgame",
            "Data Source: Elastic Defend",
            "Data Source: Windows Security Event Logs",
            "Data Source: Microsoft Defender for Endpoint",
            "Data Source: Sysmon",
            "Data Source: SentinelOne",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0006",
                    "name": "Credential Access",
                    "reference": "https://attack.mitre.org/tactics/TA0006/"
                },
                "technique": [
                    {
                        "id": "T1555",
                        "name": "Credentials from Password Stores",
                        "reference": "https://attack.mitre.org/techniques/T1555/",
                        "subtechnique": [
                            {
                                "id": "T1555.003",
                                "name": "Credentials from Web Browsers",
                                "reference": "https://attack.mitre.org/techniques/T1555/003/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 1
    },
    "id": "46b01bb5-cff2-4a00-9f87-c041d9eab554_1",
    "type": "security-rule"
}