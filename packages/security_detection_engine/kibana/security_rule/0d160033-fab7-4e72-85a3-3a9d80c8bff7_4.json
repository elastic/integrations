{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "This rule uses alert data to determine when multiple different alerts involving the same user are triggered. Analysts can use this to prioritize triage and response, as these users are more likely to be compromised.",
        "false_positives": [
            "False positives can occur with Generic built-in accounts, such as Administrator, admin, etc. if they are widespread used in your environment. As a best practice, they shouldn't be used in day-to-day tasks, as it prevents the ability to quickly identify and contact the account owner to find out if an alert is a planned activity, regular business activity, or an upcoming incident."
        ],
        "from": "now-24h",
        "index": [
            ".alerts-security.*"
        ],
        "interval": "1h",
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "Multiple Alerts Involving a User",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Multiple Alerts Involving a User\n\nIn security environments, monitoring user activity is crucial as adversaries often exploit user accounts to gain unauthorized access. Attackers may trigger multiple alerts by performing suspicious actions under a compromised user account. The detection rule identifies such patterns by correlating diverse alerts linked to the same user, excluding known system accounts, thus prioritizing potential threats for analysts.\n\n### Possible investigation steps\n\n- Review the alert details to identify the specific user account involved, focusing on the user.name field to gather initial context about the user.\n- Examine the timeline and sequence of the triggered alerts to understand the pattern of activity associated with the user, noting any unusual or unexpected actions.\n- Cross-reference the user activity with known legitimate activities or scheduled tasks to rule out false positives, ensuring that the actions are not part of normal operations.\n- Investigate the source and destination IP addresses associated with the alerts to identify any suspicious or unauthorized access points.\n- Check for any recent changes in user permissions or group memberships that could indicate privilege escalation attempts.\n- Look into any recent login attempts or authentication failures for the user account to detect potential brute force or credential stuffing attacks.\n- Collaborate with the user or their manager to verify if the activities were authorized or if the account might be compromised.\n\n### False positive analysis\n\n- Alerts triggered by automated system processes or scripts that mimic user behavior can be false positives. To manage these, identify and exclude known benign scripts or processes from the rule.\n- Frequent alerts from users in roles that inherently require access to multiple systems or sensitive data, such as IT administrators, may not indicate compromise. Implement role-based exceptions to reduce noise.\n- Alerts generated by legitimate software updates or maintenance activities can be mistaken for suspicious behavior. Schedule these activities during known maintenance windows and exclude them from the rule during these times.\n- Users involved in testing or development environments may trigger multiple alerts due to their work nature. Create exceptions for these environments to prevent unnecessary alerts.\n- High-volume users, such as those in customer support or sales, may naturally generate more alerts. Monitor these users separately and adjust the rule to focus on unusual patterns rather than volume alone.\n\n### Response and remediation\n\n- Isolate the affected user account immediately to prevent further unauthorized access. Disable the account or change the password to stop any ongoing malicious activity.\n- Conduct a thorough review of the affected user's recent activities and access logs to identify any unauthorized actions or data access. This will help in understanding the scope of the compromise.\n- Remove any malicious software or unauthorized tools that may have been installed on the user's system. Use endpoint detection and response (EDR) tools to scan and clean the system.\n- Restore any altered or deleted data from backups, ensuring that the restored data is free from any malicious modifications.\n- Notify relevant stakeholders, including IT security teams and management, about the incident and the steps being taken to address it. This ensures that everyone is aware and can provide support if needed.\n- Implement additional monitoring on the affected user account and related systems to detect any further suspicious activities. This includes setting up alerts for unusual login attempts or data access patterns.\n- Review and update access controls and permissions for the affected user and similar accounts to prevent future incidents. Ensure that least privilege principles are applied.",
        "query": "signal.rule.name:* and user.name:* and not user.id:(\"S-1-5-18\" or \"S-1-5-19\" or \"S-1-5-20\")\n",
        "required_fields": [
            {
                "ecs": false,
                "name": "signal.rule.name",
                "type": "unknown"
            },
            {
                "ecs": true,
                "name": "user.id",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "user.name",
                "type": "keyword"
            }
        ],
        "risk_score": 73,
        "rule_id": "0d160033-fab7-4e72-85a3-3a9d80c8bff7",
        "severity": "high",
        "tags": [
            "Use Case: Threat Detection",
            "Rule Type: Higher-Order Rule",
            "Resources: Investigation Guide"
        ],
        "threshold": {
            "cardinality": [
                {
                    "field": "signal.rule.rule_id",
                    "value": 5
                }
            ],
            "field": [
                "user.name"
            ],
            "value": 1
        },
        "timestamp_override": "event.ingested",
        "type": "threshold",
        "version": 4
    },
    "id": "0d160033-fab7-4e72-85a3-3a9d80c8bff7_4",
    "type": "security-rule"
}