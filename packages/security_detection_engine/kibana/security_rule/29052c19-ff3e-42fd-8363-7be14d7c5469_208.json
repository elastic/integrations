{
    "attributes": {
        "author": [
            "Elastic",
            "Austin Songer"
        ],
        "description": "Identifies a change to an AWS Security Group Configuration. A security group is like a virtual firewall, and modifying configurations may allow unauthorized access. Threat actors may abuse this to establish persistence, exfiltrate data, or pivot in an AWS environment.",
        "false_positives": [
            "A security group may be created by a system or network administrator. Verify whether the user identity, user agent, and/or hostname should be making changes in your environment. Security group creations by unfamiliar users or hosts should be investigated. If known behavior is causing false positives, it can be exempted from the rule."
        ],
        "from": "now-9m",
        "index": [
            "filebeat-*",
            "logs-aws.cloudtrail-*"
        ],
        "investigation_fields": {
            "field_names": [
                "@timestamp",
                "user.name",
                "aws.cloudtrail.user_identity.arn",
                "aws.cloudtrail.user_identity.type",
                "user_agent.original",
                "aws.cloudtrail.flattened.request_parameters.instanceId",
                "event.action",
                "event.outcome",
                "cloud.region",
                "event.provider",
                "aws.cloudtrail.request_parameters",
                "aws.cloudtrail.response_elements"
            ]
        },
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "AWS EC2 Security Group Configuration Change",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating AWS EC2 Security Group Configuration Change\n\nAWS EC2 Security Groups act as virtual firewalls, controlling inbound and outbound traffic to instances. Adversaries may exploit changes in these configurations to gain unauthorized access, maintain persistence, or exfiltrate data. The detection rule monitors successful modifications to security group settings, such as rule changes or new group creation, to identify potential security breaches and unauthorized access attempts.\n\n### Possible investigation steps\n\n- Review the CloudTrail logs for the specific event.dataset \"aws.cloudtrail\" to identify the exact changes made to the security group configuration.\n- Examine the event.provider \"ec2.amazonaws.com\" and event.action fields to determine the type of action performed, such as \"AuthorizeSecurityGroupEgress\" or \"ModifySecurityGroupRules\", to understand the nature of the change.\n- Check the event.outcome field to confirm the success of the action and correlate it with any suspicious activity or unauthorized access attempts.\n- Investigate the IAM user or role associated with the change to verify if the action aligns with their typical behavior and permissions.\n- Analyze the timing and context of the change to see if it coincides with any other unusual activities or alerts in the AWS environment.\n- Assess the impact of the security group change on the overall security posture, including potential exposure of sensitive resources or data.\n- If necessary, consult with the responsible team or individual to validate the legitimacy of the change and ensure it was authorized.\n\n### False positive analysis\n\n- Routine administrative changes to security groups by authorized personnel can trigger alerts. To manage this, maintain a list of known IP addresses and users who regularly perform these tasks and create exceptions for their activities.\n- Automated scripts or tools used for infrastructure management may frequently modify security group settings. Identify these tools and exclude their actions from triggering alerts by using their specific identifiers or tags.\n- Scheduled updates or deployments that involve security group modifications can result in false positives. Document these schedules and adjust the monitoring rules to account for these expected changes during specific time windows.\n- Changes made by cloud service providers as part of their maintenance or updates might be flagged. Verify these changes through official communication from the provider and consider excluding them if they are part of standard operations.\n\n### Response and remediation\n\n- Immediately isolate the affected EC2 instances by removing them from the compromised security group to prevent further unauthorized access.\n- Revert any unauthorized changes to the security group configurations by restoring them to their last known good state using AWS CloudTrail logs for reference.\n- Conduct a thorough review of IAM roles and permissions associated with the affected security groups to ensure that only authorized personnel have the ability to modify security group settings.\n- Implement additional monitoring and alerting for any future changes to security group configurations, focusing on the specific actions identified in the detection rule.\n- Escalate the incident to the security operations team for further investigation and to determine if there are any broader implications or related threats within the AWS environment.\n- Review and update the AWS security group policies to enforce stricter rules and minimize the attack surface, ensuring that only necessary ports and protocols are allowed.\n- Conduct a post-incident analysis to identify the root cause and implement measures to prevent similar incidents, such as enhancing logging and monitoring capabilities or applying stricter access controls.\n\n### Investigating AWS EC2 Security Group Configuration Change\n\nThis rule identifies any changes to an AWS Security Group, which functions as a virtual firewall controlling inbound and outbound traffic for resources like EC2 instances. Modifications to a security group configuration could expose critical assets to unauthorized access. Threat actors may exploit such changes to establish persistence, exfiltrate data, or pivot within an AWS environment.\n\n#### Possible Investigation Steps\n\n1. **Identify the Modified Security Group**:\n   - **Security Group ID**: Check the `aws.cloudtrail.flattened.request_parameters.groupId` field to identify the specific security group affected.\n   - **Rule Changes**: Review `aws.cloudtrail.flattened.response_elements.securityGroupRuleSet` to determine the new rules or configurations, including any added or removed IP ranges, protocol changes, and port specifications.\n\n2. **Review User Context**:\n   - **User Identity**: Inspect the `aws.cloudtrail.user_identity.arn` field to determine which user or role made the modification. Verify if this is an authorized administrator or a potentially compromised account.\n   - **Access Patterns**: Analyze whether this user regularly interacts with security group configurations or if this event is out of the ordinary for their account.\n\n3. **Analyze the Configuration Change**:\n   - **Egress vs. Ingress**: Determine if the change affected inbound (ingress) or outbound (egress) traffic by reviewing fields like `isEgress` in the `securityGroupRuleSet`. Unauthorized changes to outbound traffic can indicate data exfiltration attempts.\n   - **IP Ranges and Ports**: Assess any added IP ranges, especially `0.0.0.0/0`, which exposes resources to the internet. Port changes should also be evaluated to ensure only necessary ports are open.\n\n4. **Check User Agent and Source IP**:\n   - **User Agent Analysis**: Examine the `user_agent.original` field to identify the tool or application used, such as `AWS Console` or `Terraform`, which may reveal if the action was automated or manual.\n   - **Source IP and Geolocation**: Use `source.address` and `source.geo` fields to verify if the IP address and geolocation match expected locations for your organization. Unexpected IPs or regions may indicate unauthorized access.\n\n5. **Evaluate for Persistence Indicators**:\n   - **Repeated Changes**: Investigate if similar changes were recently made across multiple security groups, which may suggest an attempt to maintain or expand access.\n   - **Permissions Review**: Confirm that the user\u2019s IAM policies are configured to limit changes to security groups only as necessary.\n\n6. **Correlate with Other CloudTrail Events**:\n   - **Cross-Reference Other Security Events**: Look for related actions like `AuthorizeSecurityGroupIngress`, `CreateSecurityGroup`, or `RevokeSecurityGroupIngress` that may indicate additional or preparatory steps for unauthorized access.\n   - **Monitor for IAM or Network Changes**: Check for IAM modifications, network interface changes, or other configuration updates in the same timeframe to detect broader malicious activities.\n\n### False Positive Analysis\n\n- **Routine Security Changes**: Security group modifications may be part of regular infrastructure maintenance. Verify if this action aligns with known, scheduled administrative activities.\n- **Automated Configuration Management**: If you are using automated tools like `Terraform` or `CloudFormation`, confirm if the change matches expected configuration drift corrections or deployments.\n\n### Response and Remediation\n\n- **Revert Unauthorized Changes**: If unauthorized, revert the security group configuration to its previous state to secure the environment.\n- **Restrict Security Group Permissions**: Remove permissions to modify security groups from any compromised or unnecessary accounts to limit future access.\n- **Quarantine Affected Resources**: If necessary, isolate any affected instances or resources to prevent further unauthorized activity.\n- **Audit IAM and Security Group Policies**: Regularly review permissions related to security groups to ensure least privilege access and prevent excessive access.\n\n### Additional Information\n\nFor more details on managing AWS Security Groups and best practices, refer to the [AWS EC2 Security Groups Documentation](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-security-groups.html) and AWS security best practices.\n",
        "query": "event.dataset: \"aws.cloudtrail\"\n    and event.provider: \"ec2.amazonaws.com\"\n    and event.action:(\n            \"AuthorizeSecurityGroupEgress\" or\n            \"CreateSecurityGroup\" or\n            \"ModifyInstanceAttribute\" or\n            \"ModifySecurityGroupRules\" or\n            \"RevokeSecurityGroupEgress\" or\n            \"RevokeSecurityGroupIngress\")\n    and event.outcome: \"success\"\n",
        "references": [
            "https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-security-groups.html"
        ],
        "related_integrations": [
            {
                "integration": "cloudtrail",
                "package": "aws",
                "version": "^2.0.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.action",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.outcome",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.provider",
                "type": "keyword"
            }
        ],
        "risk_score": 21,
        "rule_id": "29052c19-ff3e-42fd-8363-7be14d7c5469",
        "severity": "low",
        "tags": [
            "Domain: Cloud",
            "Data Source: AWS",
            "Data Source: Amazon Web Services",
            "Data Source: AWS EC2",
            "Use Case: Network Security Monitoring",
            "Resources: Investigation Guide",
            "Tactic: Persistence",
            "Tactic: Defense Evasion"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0003",
                    "name": "Persistence",
                    "reference": "https://attack.mitre.org/tactics/TA0003/"
                },
                "technique": []
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0005",
                    "name": "Defense Evasion",
                    "reference": "https://attack.mitre.org/tactics/TA0005/"
                },
                "technique": [
                    {
                        "id": "T1562",
                        "name": "Impair Defenses",
                        "reference": "https://attack.mitre.org/techniques/T1562/",
                        "subtechnique": [
                            {
                                "id": "T1562.007",
                                "name": "Disable or Modify Cloud Firewall",
                                "reference": "https://attack.mitre.org/techniques/T1562/007/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "query",
        "version": 208
    },
    "id": "29052c19-ff3e-42fd-8363-7be14d7c5469_208",
    "type": "security-rule"
}