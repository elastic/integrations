{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "This rule detects kernel unpacking activity through several built-in Linux utilities. Attackers may use these utilities to unpack kernel images and modules to search for vulnerabilities or to modify the kernel.",
        "from": "now-9m",
        "index": [
            "logs-endpoint.events.process*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Kernel Unpacking Activity",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Kernel Unpacking Activity\n\nKernel unpacking involves using utilities to extract or inspect kernel images and modules, often for legitimate maintenance or updates. However, adversaries exploit this to identify vulnerabilities or alter the kernel for malicious purposes. The detection rule identifies suspicious unpacking by monitoring specific Linux utilities and command patterns, excluding benign processes like system updates, to flag potential threats.\n\n### Possible investigation steps\n\n- Review the process details to identify the specific utility used for unpacking, such as \"file\", \"unlzma\", \"gunzip\", etc., and verify if the usage aligns with typical system maintenance activities.\n- Examine the parent process name and arguments, especially those involving \"/boot/*\", to determine if the unpacking activity is part of a legitimate system operation or an unauthorized action.\n- Check the user account associated with the process to assess if the activity was initiated by a legitimate user or an unauthorized entity.\n- Investigate the timing of the event to see if it coincides with scheduled maintenance or updates, which might explain the unpacking activity.\n- Look for any related alerts or logs that might indicate further suspicious behavior, such as attempts to modify kernel modules or other system files following the unpacking activity.\n- Cross-reference the event with recent system updates or patches to rule out false positives related to legitimate system operations.\n\n### False positive analysis\n\n- System updates and maintenance activities can trigger this rule when legitimate processes unpack kernel images. To manage this, exclude processes initiated by known update utilities like \"mkinitramfs\" from triggering alerts.\n- Custom scripts or administrative tasks that involve unpacking kernel images for legitimate purposes may also cause false positives. Identify and whitelist these scripts or processes by their specific command patterns or parent process names.\n- Backup or recovery operations that involve accessing or unpacking kernel files might be flagged. Review these operations and exclude them by specifying the responsible process names or arguments in the detection rule.\n- Automated security tools that scan or analyze kernel images for compliance or vulnerability assessments can be mistaken for malicious activity. Exclude these tools by adding their process names to the exception list.\n\n### Response and remediation\n\n- Isolate the affected system from the network to prevent potential lateral movement or further exploitation by the adversary.\n- Terminate any suspicious processes identified by the detection rule, especially those involving the unpacking of kernel images or modules.\n- Conduct a thorough review of the system's kernel and module integrity using trusted tools to ensure no unauthorized modifications have been made.\n- Restore the system from a known good backup if any unauthorized changes to the kernel or system files are detected.\n- Update the system's kernel and all related packages to the latest versions to mitigate any known vulnerabilities that could be exploited.\n- Monitor the system for any recurring suspicious activity, focusing on the use of utilities and command patterns identified in the detection rule.\n- Escalate the incident to the security operations team for further investigation and to assess the potential impact on other systems within the network.",
        "query": "process where host.os.type == \"linux\" and event.type == \"start\" and event.action == \"exec\" and\n(process.parent.args like \"/boot/*\" or process.args like \"/boot/*\") and (\n  (process.name in (\"file\", \"unlzma\", \"gunzip\", \"unxz\", \"bunzip2\", \"unzstd\", \"unzip\", \"tar\")) or\n  (process.name == \"grep\" and process.args == \"ELF\") or\n  (process.name in (\"lzop\", \"lz4\") and process.args in (\"-d\", \"--decode\"))\n) and\nnot process.parent.name == \"mkinitramfs\"\n",
        "references": [
            "https://www.elastic.co/security-labs/declawing-pumakit"
        ],
        "related_integrations": [
            {
                "package": "endpoint",
                "version": "^8.2.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.action",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.args",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.name",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.parent.args",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.parent.name",
                "type": "keyword"
            }
        ],
        "risk_score": 21,
        "rule_id": "4f725dc5-ae44-46c1-9ac5-99f6f7a70d8a",
        "setup": "## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n",
        "severity": "low",
        "tags": [
            "Domain: Endpoint",
            "OS: Linux",
            "Use Case: Threat Detection",
            "Tactic: Discovery",
            "Tactic: Defense Evasion",
            "Data Source: Elastic Defend",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0007",
                    "name": "Discovery",
                    "reference": "https://attack.mitre.org/tactics/TA0007/"
                },
                "technique": [
                    {
                        "id": "T1082",
                        "name": "System Information Discovery",
                        "reference": "https://attack.mitre.org/techniques/T1082/"
                    }
                ]
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0005",
                    "name": "Defense Evasion",
                    "reference": "https://attack.mitre.org/tactics/TA0005/"
                },
                "technique": [
                    {
                        "id": "T1014",
                        "name": "Rootkit",
                        "reference": "https://attack.mitre.org/techniques/T1014/"
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 3
    },
    "id": "4f725dc5-ae44-46c1-9ac5-99f6f7a70d8a_3",
    "type": "security-rule"
}