{
    "attributes": {
        "author": [
            "Elastic",
            "Matteo Potito Giorgio"
        ],
        "description": "Identifies the load of a DLL without a valid code signature by the Azure AD Sync process, which may indicate an attempt to persist or collect sensitive credentials passing through the Azure AD synchronization server.",
        "from": "now-9m",
        "index": [
            "winlogbeat-*",
            "logs-endpoint.events.library-*",
            "logs-windows.sysmon_operational-*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Untrusted DLL Loaded by Azure AD Sync Service",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Untrusted DLL Loaded by Azure AD Sync Service\n\nAzure AD Sync Service facilitates identity synchronization between on-premises directories and Azure AD, crucial for seamless authentication. Adversaries may exploit this by loading malicious DLLs to intercept credentials. The detection rule identifies untrusted DLLs loaded by the Azure AD Sync process, focusing on those lacking valid signatures and excluding known safe paths, thus highlighting potential credential access threats.\n\n### Possible investigation steps\n\n- Review the process details for AzureADConnectAuthenticationAgentService.exe to confirm its legitimacy and check for any unusual behavior or anomalies.\n- Examine the specific DLL file path that triggered the alert to determine if it is located in an unexpected or suspicious directory.\n- Investigate the code signature status of the DLL to understand why it is untrusted, and verify if the DLL should have a valid signature.\n- Check the system for any recent changes or installations that could have introduced the untrusted DLL, focusing on the timeframe around the alert.\n- Analyze the event logs for any other suspicious activities or related alerts that might indicate a broader compromise or attack pattern.\n- Correlate the alert with other security tools or logs to gather additional context and determine if this is part of a larger attack campaign.\n\n### False positive analysis\n\n- DLLs from legitimate software updates or installations may trigger alerts if they are not yet recognized as trusted. Users can monitor these occurrences and verify the legitimacy of the software source before adding exceptions.\n- Custom or in-house developed applications might load DLLs that lack valid signatures. Users should ensure these applications are from a trusted source and consider signing them or adding their paths to the exclusion list.\n- DLLs located in non-standard directories that are part of legitimate software operations can be flagged. Users should verify the software's legitimacy and update the exclusion list with these specific paths if necessary.\n- Temporary files or DLLs created during software installation or updates might be flagged. Users should confirm the installation process and temporarily exclude these paths during the update period.\n- Security or monitoring tools that dynamically load DLLs for legitimate purposes may be misidentified. Users should verify the tool's activity and add it to the exclusion list if it is deemed safe.\n\n### Response and remediation\n\n- Immediately isolate the affected Azure AD Sync server from the network to prevent further unauthorized access or data exfiltration.\n- Terminate the AzureADConnectAuthenticationAgentService.exe process to stop the execution of the untrusted DLL and prevent potential credential dumping.\n- Conduct a thorough review of the loaded DLLs on the affected server to identify and remove any malicious or unauthorized files.\n- Restore the server from a known good backup taken before the incident to ensure the system is free from compromise.\n- Change all credentials that may have been exposed or compromised, focusing on those related to Azure AD and on-premises directory services.\n- Implement application whitelisting to prevent unauthorized DLLs from being loaded by critical processes like Azure AD Sync.\n- Escalate the incident to the security operations center (SOC) for further investigation and to determine if additional systems are affected.",
        "query": "any where host.os.type == \"windows\" and process.name : \"AzureADConnectAuthenticationAgentService.exe\" and\n(\n (event.category == \"library\" and event.action == \"load\") or\n (event.category == \"process\" and event.action : \"Image loaded*\")\n) and\n\nnot (?dll.code_signature.trusted == true or file.code_signature.status == \"Valid\") and not\n\n  (\n   /* Elastic defend DLL path */\n   ?dll.path :\n         (\"?:\\\\Windows\\\\assembly\\\\NativeImages*\",\n          \"?:\\\\Windows\\\\Microsoft.NET\\\\*\",\n          \"?:\\\\Windows\\\\WinSxS\\\\*\",\n          \"?:\\\\Windows\\\\System32\\\\DriverStore\\\\FileRepository\\\\*\") or\n\n   /* Sysmon DLL path is mapped to file.path */\n   file.path :\n         (\"?:\\\\Windows\\\\assembly\\\\NativeImages*\",\n          \"?:\\\\Windows\\\\Microsoft.NET\\\\*\",\n          \"?:\\\\Windows\\\\WinSxS\\\\*\",\n          \"?:\\\\Windows\\\\System32\\\\DriverStore\\\\FileRepository\\\\*\")\n  )\n",
        "references": [
            "https://blog.xpnsec.com/azuread-connect-for-redteam/",
            "https://medium.com/@breakingmhet/detect-azure-pass-through-authentication-abuse-azure-hybrid-environments-ed4274784252",
            "https://learn.microsoft.com/en-us/azure/active-directory/hybrid/tshoot-connect-pass-through-authentication"
        ],
        "related_integrations": [
            {
                "package": "endpoint",
                "version": "^8.2.0"
            },
            {
                "package": "windows",
                "version": "^2.0.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "dll.code_signature.trusted",
                "type": "boolean"
            },
            {
                "ecs": true,
                "name": "dll.path",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.action",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.category",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "file.code_signature.status",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "file.path",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.name",
                "type": "keyword"
            }
        ],
        "risk_score": 73,
        "rule_id": "f909075d-afc7-42d7-b399-600b94352fd9",
        "severity": "high",
        "tags": [
            "Domain: Endpoint",
            "OS: Windows",
            "Use Case: Threat Detection",
            "Tactic: Credential Access",
            "Data Source: Elastic Defend",
            "Data Source: Sysmon",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0006",
                    "name": "Credential Access",
                    "reference": "https://attack.mitre.org/tactics/TA0006/"
                },
                "technique": [
                    {
                        "id": "T1003",
                        "name": "OS Credential Dumping",
                        "reference": "https://attack.mitre.org/techniques/T1003/"
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 103
    },
    "id": "f909075d-afc7-42d7-b399-600b94352fd9_103",
    "type": "security-rule"
}