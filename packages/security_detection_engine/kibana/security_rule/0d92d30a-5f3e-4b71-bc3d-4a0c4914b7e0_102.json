{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "This rule identifies potentially suspicious activity by detecting instances where a single IAM user's temporary session token is accessed from multiple IP addresses within a short time frame. Such behavior may suggest that an adversary has compromised temporary credentials and is utilizing them from various locations. To enhance detection accuracy and minimize false positives, the rule incorporates criteria that evaluate unique IP addresses, user agents, cities, and networks. These additional checks help distinguish between legitimate distributed access patterns and potential credential misuse. Detected activities are classified into different types based on the combination of unique indicators, with each classification assigned a fidelity score reflecting the likelihood of malicious behavior. High fidelity scores are given to patterns most indicative of threats, such as multiple unique IPs, networks, cities, and user agents. Medium and low fidelity scores correspond to less severe patterns, enabling security teams to effectively prioritize alerts.",
        "false_positives": [
            "Highly distributed environments (e.g., globally deployed automation or edge nodes) may cause a single IAM user to appear from multiple IPs. Review the geolocation, network context, and user agent patterns to rule out benign use."
        ],
        "from": "now-32m",
        "interval": "5m",
        "language": "esql",
        "license": "Elastic License v2",
        "name": "AWS Access Token Used from Multiple Addresses",
        "note": "## Triage and Analysis\n\n### Investigating AWS Access Token Used from Multiple Addresses\n\nAccess tokens are bound to a single user. Usage from multiple IP addresses may indicate the token was stolen and used elsewhere. By correlating this with additional detection criteria like multiple user agents, different cities, and different networks, we can improve the fidelity of the rule and help to eliminate false positives associated with expected behavior, like dual-stack IPV4/IPV6 usage.\n\n#### Possible Investigation Steps\n\n- **Identify the IAM User**: Examine the `aws.cloudtrail.user_identity.arn` stored in `user_id` and correlate with the `source.ips` stored in `ip_list` and `unique_ips` count to determine how widely the token was used.\n- **Correlate Additional Detection Context**: Examine `activity_type` and `fidelity_score` to determine additional cities, networks or user agents associated with the token usage.\n- **Determine Access Key Type**: Examine the `access_key_id` to determine whether the token is short-term (beginning with ASIA) or long-term (beginning with AKIA).\n- **Check Recent MFA Events**: Determine whether the user recently enabled MFA, registered devices, or assumed a role using this token.\n- **Review Workload Context**: Confirm whether the user was expected to be active across multiple cities, networks or user agent environments.\n- **Trace Adversary Movement**: Pivot to related actions (e.g., `s3:ListBuckets`, `iam:ListUsers`, `sts:GetCallerIdentity`) to track further enumeration.\n\n### False Positive Analysis\n\n- Automation frameworks that rotate through multiple IPs or cloud functions with dynamic egress IPs may cause this alert to fire.\n- Confirm geolocation and workload context before escalating.\n\n### Response and Remediation\n\n- **Revoke the Token**: Disable or rotate the IAM credentials and invalidate the temporary session token.\n- **Audit the Environment**: Look for signs of lateral movement or data access during the token's validity.\n- **Strengthen Controls**: Require MFA for high-privilege actions, restrict access via policy conditions (e.g., IP range or device).\n\n### References\n\n- [IAM Long-Term Credentials](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html)\n- [STS Temporary Credentials](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html)\n- [Using MFA with Temporary Credentials](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_enable-regions.html)\n- [AWS Threat Detection Use Cases](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-standards-fsbp-controls.html)\n",
        "query": "from logs-aws.cloudtrail* metadata _id, _version, _index\n| where @timestamp > now() - 30 minutes\n  and event.dataset == \"aws.cloudtrail\"\n  and aws.cloudtrail.user_identity.arn is not null\n  and aws.cloudtrail.user_identity.type == \"IAMUser\"\n  and source.ip is not null\n  and not (\n    user_agent.original like \"%Terraform%\" or\n    user_agent.original like \"%Ansible%\" or\n    user_agent.original like \"%Pulumni%\"\n  )\n  and `source.as.organization.name` != \"AMAZON-AES\"\n  and event.provider not in (\n    \"health.amazonaws.com\", \"monitoring.amazonaws.com\", \"notifications.amazonaws.com\",\n    \"ce.amazonaws.com\", \"cost-optimization-hub.amazonaws.com\",\n    \"servicecatalog-appregistry.amazonaws.com\", \"securityhub.amazonaws.com\"\n  )\n\n| eval\n  Esql.time_window_date_trunc = date_trunc(30 minutes, @timestamp),\n  Esql.aws_cloudtrail_user_identity_arn = aws.cloudtrail.user_identity.arn,\n  Esql.aws_cloudtrail_user_identity_access_key_id = aws.cloudtrail.user_identity.access_key_id,\n  Esql.source_ip = source.ip,\n  Esql.user_agent_original = user_agent.original,\n  Esql.source_ip_string = to_string(source.ip),\n  Esql.source_ip_user_agent_pair = concat(Esql.source_ip_string, \" - \", user_agent.original),\n  Esql.source_ip_city_pair = concat(Esql.source_ip_string, \" - \", source.geo.city_name),\n  Esql.source_geo_city_name = source.geo.city_name,\n  Esql.event_timestamp = @timestamp,\n  Esql.source_network_org_name = `source.as.organization.name`\n\n| stats\n  Esql.event_action_values = values(event.action),\n  Esql.event_provider_values = values(event.provider),\n  Esql.aws_cloudtrail_user_identity_access_key_id_values = values(Esql.aws_cloudtrail_user_identity_access_key_id),\n  Esql.aws_cloudtrail_user_identity_arn_values = values(Esql.aws_cloudtrail_user_identity_arn),\n  Esql.source_ip_values = values(Esql.source_ip),\n  Esql.user_agent_original_values = values(Esql.user_agent_original),\n  Esql.source_ip_user_agent_pair_values = values(Esql.source_ip_user_agent_pair),\n  Esql.source_geo_city_name_values = values(Esql.source_geo_city_name),\n  Esql.source_ip_city_pair_values = values(Esql.source_ip_city_pair),\n  Esql.source_network_org_name_values = values(Esql.source_network_org_name),\n  Esql.source_ip_count_distinct = count_distinct(Esql.source_ip),\n  Esql.user_agent_original_count_distinct = count_distinct(Esql.user_agent_original),\n  Esql.source_geo_city_name_count_distinct = count_distinct(Esql.source_geo_city_name),\n  Esql.source_network_org_name_count_distinct = count_distinct(Esql.source_network_org_name),\n  Esql.timestamp_first_seen = min(Esql.event_timestamp),\n  Esql.timestamp_last_seen = max(Esql.event_timestamp),\n  Esql.event_count = count()\n  by Esql.time_window_date_trunc, Esql.aws_cloudtrail_user_identity_access_key_id\n\n| eval\n  Esql.activity_type = case(\n    Esql.source_ip_count_distinct >= 2 and Esql.source_network_org_name_count_distinct >= 2 and Esql.source_geo_city_name_count_distinct >= 2 and Esql.user_agent_original_count_distinct >= 2, \"multiple_ip_network_city_user_agent\",\n    Esql.source_ip_count_distinct >= 2 and Esql.source_network_org_name_count_distinct >= 2 and Esql.source_geo_city_name_count_distinct >= 2, \"multiple_ip_network_city\",\n    Esql.source_ip_count_distinct >= 2 and Esql.source_geo_city_name_count_distinct >= 2, \"multiple_ip_and_city\",\n    Esql.source_ip_count_distinct >= 2 and Esql.source_network_org_name_count_distinct >= 2, \"multiple_ip_and_network\",\n    Esql.source_ip_count_distinct >= 2 and Esql.user_agent_original_count_distinct >= 2, \"multiple_ip_and_user_agent\",\n    \"normal_activity\"\n  ),\n  Esql.activity_fidelity_score = case(\n    Esql.activity_type == \"multiple_ip_network_city_user_agent\", \"high\",\n    Esql.activity_type == \"multiple_ip_network_city\", \"high\",\n    Esql.activity_type == \"multiple_ip_and_city\", \"medium\",\n    Esql.activity_type == \"multiple_ip_and_network\", \"medium\",\n    Esql.activity_type == \"multiple_ip_and_user_agent\", \"low\"\n  )\n\n| keep\n  Esql.time_window_date_trunc,\n  Esql.activity_type,\n  Esql.activity_fidelity_score,\n  Esql.event_count,\n  Esql.timestamp_first_seen,\n  Esql.timestamp_last_seen,\n  Esql.aws_cloudtrail_user_identity_arn_values,\n  Esql.aws_cloudtrail_user_identity_access_key_id_values,\n  Esql.event_action_values,\n  Esql.event_provider_values,\n  Esql.source_ip_values,\n  Esql.user_agent_original_values,\n  Esql.source_ip_user_agent_pair_values,\n  Esql.source_geo_city_name_values,\n  Esql.source_ip_city_pair_values,\n  Esql.source_network_org_name_values,\n  Esql.source_ip_count_distinct,\n  Esql.user_agent_original_count_distinct,\n  Esql.source_geo_city_name_count_distinct,\n  Esql.source_network_org_name_count_distinct\n\n| where Esql.activity_type != \"normal_activity\"\n",
        "references": [
            "https://www.sygnia.co/blog/sygnia-investigation-bybit-hack/"
        ],
        "risk_score": 47,
        "rule_id": "0d92d30a-5f3e-4b71-bc3d-4a0c4914b7e0",
        "severity": "medium",
        "tags": [
            "Domain: Cloud",
            "Data Source: AWS",
            "Data Source: Amazon Web Services",
            "Data Source: AWS IAM",
            "Data Source: AWS CloudTrail",
            "Tactic: Initial Access",
            "Use Case: Identity and Access Audit",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0001",
                    "name": "Initial Access",
                    "reference": "https://attack.mitre.org/tactics/TA0001/"
                },
                "technique": [
                    {
                        "id": "T1078",
                        "name": "Valid Accounts",
                        "reference": "https://attack.mitre.org/techniques/T1078/",
                        "subtechnique": [
                            {
                                "id": "T1078.004",
                                "name": "Cloud Accounts",
                                "reference": "https://attack.mitre.org/techniques/T1078/004/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "esql",
        "version": 102
    },
    "id": "0d92d30a-5f3e-4b71-bc3d-4a0c4914b7e0_102",
    "type": "security-rule"
}