{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Detects Inter-Process Communication with Outlook via Component Object Model from an unusual process. Adversaries may target user email to collect sensitive information or send email on their behalf via API.",
        "from": "now-9m",
        "index": [
            "logs-endpoint.events.process*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Suspicious Inter-Process Communication via Outlook",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Suspicious Inter-Process Communication via Outlook\n\nOutlook's integration with the Component Object Model (COM) allows processes to automate tasks like sending emails. Adversaries exploit this by using unusual processes to interact with Outlook, potentially to exfiltrate data or send unauthorized emails. The detection rule identifies such anomalies by monitoring for unexpected processes initiating communication with Outlook, especially those lacking trusted signatures or recently modified, indicating potential malicious activity.\n\n### Possible investigation steps\n\n- Review the process entity ID to identify the specific process that initiated communication with Outlook and determine if it is one of the unusual processes listed, such as rundll32.exe, mshta.exe, or powershell.exe.\n- Check the code signature status of the initiating process. If the process is unsigned or has an untrusted signature, investigate the source and legitimacy of the executable.\n- Analyze the relative file creation and modification times of the initiating process. If the process was created or modified recently (within 500 seconds), it may indicate a newly introduced or altered executable, warranting further scrutiny.\n- Investigate the effective parent process of OUTLOOK.EXE to understand the context of how Outlook was launched. Determine if the parent process is expected or if it is an unusual or suspicious process.\n- Correlate the alert with any recent user activity or changes on the host to identify potential user actions or system changes that could explain the process behavior.\n- Examine any network activity associated with the initiating process to identify potential data exfiltration or unauthorized email sending attempts.\n- Review any additional alerts or logs related to the host or user account to identify patterns or additional indicators of compromise.\n\n### False positive analysis\n\n- Legitimate administrative scripts or tools may trigger the rule if they use processes like PowerShell or cmd.exe to automate tasks involving Outlook. To manage this, identify and whitelist these scripts or tools by their specific file paths or hashes.\n- Software updates or installations might cause processes to appear as recently modified, leading to false positives. Regularly update the list of trusted software and exclude these known update processes from triggering alerts.\n- Custom in-house applications that interact with Outlook for business purposes may be flagged. Ensure these applications are signed with a trusted certificate or add them to an exception list based on their unique identifiers.\n- Security tools or monitoring software that perform regular checks on Outlook might be misidentified. Verify these tools and exclude them by their process names or signatures to prevent unnecessary alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further unauthorized access or data exfiltration.\n- Terminate any suspicious processes identified in the alert, particularly those interacting with Outlook, such as rundll32.exe, mshta.exe, or powershell.exe.\n- Conduct a thorough review of the email account associated with the affected Outlook process to identify any unauthorized access or email activity. Reset the account credentials if necessary.\n- Analyze the process code signatures and file modification times to determine if any legitimate applications have been compromised. Reinstall or update these applications as needed.\n- Escalate the incident to the security operations center (SOC) or incident response team for further investigation and to determine if additional systems are affected.\n- Implement additional monitoring on the affected system and similar endpoints to detect any recurrence of the suspicious activity.\n- Review and update endpoint protection policies to ensure that similar threats are detected and blocked in the future, leveraging the MITRE ATT&CK framework for guidance on email collection techniques.",
        "query": "sequence with maxspan=1m\n[process where host.os.type == \"windows\" and event.action == \"start\" and\n  (\n    process.name : (\n      \"rundll32.exe\", \"mshta.exe\", \"powershell.exe\", \"pwsh.exe\",\n      \"cmd.exe\", \"regsvr32.exe\", \"cscript.exe\", \"wscript.exe\"\n    ) or\n    (\n      (process.code_signature.trusted == false or process.code_signature.exists == false) and\n      (process.Ext.relative_file_creation_time <= 500 or process.Ext.relative_file_name_modify_time <= 500)\n    )\n  )\n] by process.entity_id\n[process where host.os.type == \"windows\" and event.action == \"start\" and process.name : \"OUTLOOK.EXE\" and\n  process.Ext.effective_parent.name != null] by process.Ext.effective_parent.entity_id\n",
        "references": [
            "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/apt29/Archive/CALDERA_DIY/evals/payloads/stepSeventeen_email.ps1"
        ],
        "related_integrations": [
            {
                "package": "endpoint",
                "version": "^8.2.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.action",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "process.Ext.effective_parent.entity_id",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "process.Ext.effective_parent.name",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "process.Ext.relative_file_creation_time",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "process.Ext.relative_file_name_modify_time",
                "type": "unknown"
            },
            {
                "ecs": true,
                "name": "process.code_signature.exists",
                "type": "boolean"
            },
            {
                "ecs": true,
                "name": "process.code_signature.trusted",
                "type": "boolean"
            },
            {
                "ecs": true,
                "name": "process.entity_id",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "process.name",
                "type": "keyword"
            }
        ],
        "risk_score": 47,
        "rule_id": "1dee0500-4aeb-44ca-b24b-4a285d7b6ba1",
        "severity": "medium",
        "tags": [
            "Domain: Endpoint",
            "OS: Windows",
            "Use Case: Threat Detection",
            "Tactic: Collection",
            "Data Source: Elastic Defend",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0009",
                    "name": "Collection",
                    "reference": "https://attack.mitre.org/tactics/TA0009/"
                },
                "technique": [
                    {
                        "id": "T1114",
                        "name": "Email Collection",
                        "reference": "https://attack.mitre.org/techniques/T1114/",
                        "subtechnique": [
                            {
                                "id": "T1114.001",
                                "name": "Local Email Collection",
                                "reference": "https://attack.mitre.org/techniques/T1114/001/"
                            }
                        ]
                    }
                ]
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0002",
                    "name": "Execution",
                    "reference": "https://attack.mitre.org/tactics/TA0002/"
                },
                "technique": [
                    {
                        "id": "T1559",
                        "name": "Inter-Process Communication",
                        "reference": "https://attack.mitre.org/techniques/T1559/",
                        "subtechnique": [
                            {
                                "id": "T1559.001",
                                "name": "Component Object Model",
                                "reference": "https://attack.mitre.org/techniques/T1559/001/"
                            }
                        ]
                    }
                ]
            }
        ],
        "type": "eql",
        "version": 8
    },
    "id": "1dee0500-4aeb-44ca-b24b-4a285d7b6ba1_8",
    "type": "security-rule"
}