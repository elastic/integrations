{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies when a single user or service principal deletes multiple Azure Storage Accounts within a short time period. This behavior may indicate an adversary attempting to cause widespread service disruption, destroy evidence, or execute a destructive attack such as ransomware. Mass deletion of storage accounts can have severe business impact and is rarely performed by legitimate administrators except during controlled decommissioning activities.",
        "false_positives": [
            "Infrastructure teams may legitimately delete multiple storage accounts during planned decommissioning, resource cleanup, or large-scale infrastructure optimization. Verify that the deletion activity was expected and follows organizational change management processes. Consider exceptions for approved maintenance windows or automation service principals."
        ],
        "from": "now-9m",
        "index": [
            "logs-azure.activitylogs-*"
        ],
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "Azure Storage Account Deletions by User",
        "note": "## Triage and analysis\n\n### Investigating Azure Storage Account Deletions by User\n\nAzure Storage Accounts are critical infrastructure components that store application data, backups, and business-critical information. Mass deletion of storage accounts is an unusual and high-impact activity that can result in significant data loss and service disruption. Adversaries may perform bulk deletions to destroy evidence after data exfiltration, cause denial of service, or as part of ransomware campaigns targeting cloud infrastructure. This detection identifies when a single identity deletes multiple storage accounts in a short timeframe, which is indicative of potentially malicious activity.\n\n### Possible investigation steps\n\n- Review the Azure activity logs to identify the user or service principal that initiated the multiple storage account deletions by examining the principal ID, UPN and user agent fields in `azure.activitylogs.identity.claims_initiated_by_user.name`.\n- Check the specific storage account names in `azure.resource.name` to understand which storage resources were deleted and assess the overall business impact.\n- Investigate the timing and sequence of deletions to determine if they followed a pattern consistent with automated malicious activity or manual destruction.\n- Examine the user's recent activity history including authentication events, privilege changes, and other Azure resource modifications to identify signs of account compromise.\n- Verify if the storage account deletions align with approved change requests, maintenance windows, or decommissioning activities in your organization.\n- Check if the deleted storage accounts contained critical data and whether backups are available for recovery.\n- Review any related alerts or activities such as data exfiltration, unusual authentication patterns, or privilege escalation that occurred before the deletions.\n- Investigate if other Azure resources (VMs, databases, resource groups) were also deleted or modified by the same principal.\n- Check the authentication source and location to identify if the activity originated from an expected network location or potentially compromised session.\n\n### False positive analysis\n\n- Legitimate bulk decommissioning of storage accounts during infrastructure cleanup may trigger this alert. Document approved resource cleanup activities and coordinate with infrastructure teams to create exceptions during planned maintenance windows.\n- Infrastructure-as-Code (IaC) automation tools or CI/CD pipelines may delete multiple test or temporary storage accounts. Identify service principals used by automation tools and consider creating exceptions for these identities when operating in non-production environments.\n- Cloud resource optimization initiatives may involve bulk deletion of unused storage accounts. Coordinate with finance and infrastructure teams to understand planned cost optimization activities and schedule them during documented maintenance windows.\n- Disaster recovery testing or blue-green deployment strategies may involve deletion of multiple storage accounts. Work with DevOps teams to identify these patterns and create time-based exceptions during testing periods.\n\n### Response and remediation\n\n- Immediately investigate whether the deletions were authorized by verifying with the account owner or relevant stakeholders.\n- If the deletions were unauthorized, disable the compromised user account or service principal immediately to prevent further damage.\n- Attempt to recover deleted storage accounts if soft-delete is enabled, or restore data from backups for critical storage accounts.\n- Review and audit all Azure RBAC permissions to identify how the attacker gained storage account deletion capabilities (requires Contributor or Owner role).\n- Conduct a full security assessment to identify the initial access vector and any other compromised accounts or resources.\n- Implement Azure Resource Locks on all critical storage accounts to prevent accidental or malicious deletion.\n- Configure Azure Policy to require approval workflows for storage account deletions using Azure Blueprints or custom governance solutions.\n- Enable Azure Activity Log alerts to notify security teams immediately when storage accounts are deleted.\n- Escalate the incident to the security operations center (SOC) or incident response team for investigation of potential broader compromise.\n- Document the incident and update security policies, playbooks, and procedures to prevent similar incidents in the future.\n",
        "query": "event.dataset: azure.activitylogs and\n    azure.activitylogs.operation_name: \"MICROSOFT.STORAGE/STORAGEACCOUNTS/DELETE\" and\n    azure.activitylogs.identity.claims_initiated_by_user.name: *\n",
        "references": [
            "https://www.microsoft.com/en-us/security/blog/2025/08/27/storm-0501s-evolving-techniques-lead-to-cloud-based-ransomware/"
        ],
        "related_integrations": [
            {
                "integration": "activitylogs",
                "package": "azure",
                "version": "^1.22.0"
            }
        ],
        "required_fields": [
            {
                "ecs": false,
                "name": "azure.activitylogs.identity.claims_initiated_by_user.name",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "azure.activitylogs.operation_name",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            }
        ],
        "risk_score": 73,
        "rule_id": "b2c3d4e5-6f7a-8b9c-0d1e-2f3a4b5c6d7e",
        "severity": "high",
        "tags": [
            "Domain: Cloud",
            "Domain: Storage",
            "Data Source: Azure",
            "Data Source: Azure Activity Logs",
            "Use Case: Threat Detection",
            "Tactic: Impact",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0040",
                    "name": "Impact",
                    "reference": "https://attack.mitre.org/tactics/TA0040/"
                },
                "technique": [
                    {
                        "id": "T1485",
                        "name": "Data Destruction",
                        "reference": "https://attack.mitre.org/techniques/T1485/"
                    },
                    {
                        "id": "T1489",
                        "name": "Service Stop",
                        "reference": "https://attack.mitre.org/techniques/T1489/"
                    }
                ]
            }
        ],
        "threshold": {
            "cardinality": [
                {
                    "field": "azure.resource.name",
                    "value": 5
                }
            ],
            "field": [
                "azure.activitylogs.identity.claims_initiated_by_user.name"
            ],
            "value": 1
        },
        "timestamp_override": "event.ingested",
        "type": "threshold",
        "version": 1
    },
    "id": "b2c3d4e5-6f7a-8b9c-0d1e-2f3a4b5c6d7e_1",
    "type": "security-rule"
}