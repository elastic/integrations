{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies unusual high-privileged access to Azure Storage Account keys by users with Owner, Contributor, or Storage Account Contributor roles. This technique was observed in STORM-0501 ransomware campaigns where compromised identities with high-privilege Azure RBAC roles retrieved access keys to perform unauthorized operations on Storage Accounts. Microsoft recommends using Shared Access Signature (SAS) models instead of direct key access for improved security. This rule detects when a user principal with high-privilege roles accesses storage keys for the first time in 7 days.",
        "from": "now-9m",
        "history_window_start": "now-7d",
        "index": [
            "logs-azure.activitylogs-*"
        ],
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "Azure Storage Account Keys Accessed by Privileged User",
        "new_terms_fields": [
            "azure.activitylogs.identity.authorization.evidence.principal_id",
            "azure.resource.name"
        ],
        "note": "## Triage and Analysis\n\n### Investigating Azure Storage Account Keys Accessed by Privileged User\n\nAzure Storage Account keys provide full administrative access to storage resources. While legitimate administrators may occasionally need to access these keys, Microsoft recommends using more granular access methods like Shared Access Signatures (SAS) or Azure AD authentication. This detection identifies when users with high-privilege roles (Owner, Contributor, Storage Account Contributor, or User Access Administrator) access storage account keys, particularly focusing on unusual patterns that may indicate compromise. This technique was notably observed in STORM-0501 ransomware campaigns where compromised identities retrieved keys for unauthorized storage operations.\n\n### Possible investigation steps\n\n- Review the `azure.activitylogs.identity.authorization.evidence.principal_id` to identify the specific user who accessed the storage account keys.\n- Examine the `azure.resource.name` field to determine which storage account's keys were accessed and assess the sensitivity of data stored there.\n- Check the `azure.activitylogs.identity.authorization.evidence.role` to confirm the user's assigned role and whether this level of access is justified for their job function.\n- Investigate the timing and frequency of the key access event - multiple key retrievals in a short timeframe may indicate automated exfiltration attempts.\n- Review the source IP address and geographic location of the access request to identify any anomalous access patterns or locations.\n- Correlate this event with other activities by the same principal ID, looking for patterns such as permission escalations, unusual data access, or configuration changes.\n- Check Azure AD sign-in logs for the user around the same timeframe to identify any suspicious authentication events or MFA bypasses.\n- Examine subsequent storage account activities to determine if the retrieved keys were used for data access, modification, or exfiltration.\n\n### False positive analysis\n\n- DevOps and infrastructure teams may legitimately access storage keys during deployment or migration activities. Document these planned activities and consider creating exceptions for specific time windows.\n- Emergency troubleshooting scenarios may require administrators to retrieve storage keys. Establish a process for documenting these emergency accesses and review them regularly.\n- Automated backup or disaster recovery systems might use high-privilege service accounts that occasionally need key access. Consider using managed identities or service principals with more restricted permissions instead.\n- Legacy applications that haven't been migrated to use SAS tokens or Azure AD authentication may still require key-based access. Plan to modernize these applications and track them as exceptions in the meantime.\n- New storage account provisioning by administrators will often include initial key retrieval. Consider the age of the storage account when evaluating the risk level.\n\n### Response and remediation\n\n- Immediately rotate the storage account keys that were accessed using Azure Portal or Azure CLI.\n- Review all recent activities on the affected storage account to identify any unauthorized data access, modification, or exfiltration attempts.\n- If unauthorized access is confirmed, disable the compromised user account and initiate password reset procedures.\n- Audit all storage accounts accessible by the compromised identity and rotate keys for any accounts that may have been accessed.\n- Implement Entra ID authentication or SAS tokens for applications currently using storage account keys to reduce future risk.\n- Configure Azure Policy to restrict the listKeys operation to specific roles or require additional approval workflows.\n- Review and potentially restrict the assignment of high-privilege roles like Owner and Contributor, following the principle of least privilege.\n- Enable diagnostic logging for all storage accounts to maintain detailed audit trails of access and operations.\n- Consider implementing Privileged Identity Management (PIM) for just-in-time access to high-privilege roles that can list storage keys.\n",
        "query": "event.dataset: \"azure.activitylogs\" and\nazure.activitylogs.operation_name: \"MICROSOFT.STORAGE/STORAGEACCOUNTS/LISTKEYS/ACTION\" and\nazure.activitylogs.identity.authorization.evidence.principal_type: \"User\" and\nazure.activitylogs.identity.authorization.evidence.role: (\n    \"Owner\" or\n    \"Contributor\" or\n    \"Storage Account Contributor\" or\n    \"User Access Administrator\"\n) and event.outcome: \"success\"\n",
        "references": [
            "https://www.microsoft.com/en-us/security/blog/2025/08/27/storm-0501s-evolving-techniques-lead-to-cloud-based-ransomware/",
            "https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage"
        ],
        "related_integrations": [
            {
                "integration": "activitylogs",
                "package": "azure",
                "version": "^1.22.0"
            }
        ],
        "required_fields": [
            {
                "ecs": false,
                "name": "azure.activitylogs.identity.authorization.evidence.principal_type",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "azure.activitylogs.identity.authorization.evidence.role",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "azure.activitylogs.operation_name",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "event.outcome",
                "type": "keyword"
            }
        ],
        "risk_score": 47,
        "rule_id": "8b4d6c3a-2e9f-4b7c-9a5d-6f8e3c1b4d2a",
        "severity": "medium",
        "tags": [
            "Domain: Cloud",
            "Domain: Identity",
            "Use Case: Threat Detection",
            "Data Source: Azure",
            "Data Source: Azure Activity Logs",
            "Tactic: Credential Access",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0006",
                    "name": "Credential Access",
                    "reference": "https://attack.mitre.org/tactics/TA0006/"
                },
                "technique": [
                    {
                        "id": "T1555",
                        "name": "Credentials from Password Stores",
                        "reference": "https://attack.mitre.org/techniques/T1555/",
                        "subtechnique": [
                            {
                                "id": "T1555.006",
                                "name": "Cloud Secrets Management Stores",
                                "reference": "https://attack.mitre.org/techniques/T1555/006/"
                            }
                        ]
                    }
                ]
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0001",
                    "name": "Initial Access",
                    "reference": "https://attack.mitre.org/tactics/TA0001/"
                },
                "technique": [
                    {
                        "id": "T1078",
                        "name": "Valid Accounts",
                        "reference": "https://attack.mitre.org/techniques/T1078/",
                        "subtechnique": [
                            {
                                "id": "T1078.004",
                                "name": "Cloud Accounts",
                                "reference": "https://attack.mitre.org/techniques/T1078/004/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "new_terms",
        "version": 1
    },
    "id": "8b4d6c3a-2e9f-4b7c-9a5d-6f8e3c1b4d2a_1",
    "type": "security-rule"
}