{
    "attributes": {
        "author": [
            "Elastic",
            "Willem D'Haese",
            "Austin Songer"
        ],
        "description": "Identifies brute-force authentication activity targeting Microsoft 365 user accounts using failed sign-in patterns that match password spraying, credential stuffing, or password guessing behavior. Adversaries may attempt brute-force authentication with credentials obtained from previous breaches, leaks, marketplaces or guessable passwords.",
        "false_positives": [
            "Automated processes that attempt to authenticate using expired credentials and unbounded retries may lead to false positives."
        ],
        "from": "now-60m",
        "interval": "10m",
        "language": "esql",
        "license": "Elastic License v2",
        "name": "Potential Microsoft 365 User Account Brute Force",
        "note": "## Triage and Analysis\n\n### Investigating Potential Microsoft 365 User Account Brute Force\n\nIdentifies brute-force authentication activity targeting Microsoft 365 user accounts using failed sign-in patterns that match password spraying, credential stuffing, or password guessing behavior. Adversaries may attempt brute-force authentication with credentials obtained from previous breaches, leaks, marketplaces or guessable passwords.\n\n### Possible investigation steps\n\n- Review `user_id_list`: Enumerates the user accounts targeted. Look for naming patterns or privilege levels (e.g., admins).\n- Check `login_errors`: A consistent error such as `\"InvalidUserNameOrPassword\"` confirms a spray-style attack using one or a few passwords.\n- Examine `ip_list` and `source_orgs`: Determine if the traffic originates from a known corporate VPN, datacenter, or suspicious ASN like hosting providers or anonymizers.\n- Review `countries` and `unique_country_count`: Geographic anomalies (e.g., login attempts from unexpected regions) may indicate malicious automation.\n- Validate `total_attempts` vs `duration_seconds`: A high frequency of login attempts over a short period may suggest automation rather than manual logins.\n- Cross-reference with successful logins: Pivot to surrounding sign-in logs (`azure.signinlogs`) or risk detections (`identityprotection`) for any account that eventually succeeded.\n- Check for multi-factor challenges or bypasses: Determine if any of the accounts were protected or if the attack bypassed MFA.\n\n### False positive analysis\n\n- IT administrators using automation tools (e.g., PowerShell) during account provisioning may trigger false positives if login attempts cluster.\n- Penetration testing or red team simulations may resemble spray activity.\n- Infrequent, low-volume login testing tools like ADFS testing scripts can exhibit similar patterns.\n\n### Response and remediation\n\n- Initiate an internal incident ticket and inform the affected identity/IT team.\n- Temporarily disable impacted user accounts if compromise is suspected.\n- Investigate whether any login attempts succeeded after the spray window.\n- Block the offending IPs or ASN temporarily via firewall or conditional access policies.\n- Rotate passwords for all targeted accounts and audit for password reuse.\n- Enforce or verify MFA is enabled for all user accounts.\n- Consider deploying account lockout or progressive delay mechanisms if not already enabled.\n",
        "query": "from logs-o365.audit-*\n| mv_expand event.category\n| eval\n    Esql.time_window_date_trunc = date_trunc(5 minutes, @timestamp),\n    Esql_priv.o365_audit_UserId_lower = to_lower(o365.audit.UserId),\n    Esql.o365_audit_LogonError = o365.audit.LogonError,\n    Esql.o365_audit_ExtendedProperties_RequestType_lower = to_lower(o365.audit.ExtendedProperties.RequestType)\n| where\n    event.dataset == \"o365.audit\" and\n    event.category == \"authentication\" and\n    event.provider in (\"AzureActiveDirectory\", \"Exchange\") and\n    event.action in (\"UserLoginFailed\", \"PasswordLogonInitialAuthUsingPassword\") and\n    Esql.o365_audit_ExtendedProperties_RequestType_lower rlike \"(oauth.*||.*login.*)\" and\n    Esql.o365_audit_LogonError != \"IdsLocked\" and\n    Esql.o365_audit_LogonError not in (\n        \"EntitlementGrantsNotFound\",\n        \"UserStrongAuthEnrollmentRequired\",\n        \"UserStrongAuthClientAuthNRequired\",\n        \"InvalidReplyTo\",\n        \"SsoArtifactExpiredDueToConditionalAccess\",\n        \"PasswordResetRegistrationRequiredInterrupt\",\n        \"SsoUserAccountNotFoundInResourceTenant\",\n        \"UserStrongAuthExpired\",\n        \"CmsiInterrupt\"\n    ) and\n    Esql_priv.o365_audit_UserId_lower != \"not available\" and\n    o365.audit.Target.Type in (\"0\", \"2\", \"6\", \"10\")\n| stats\n    Esql.o365_audit_UserId_lower_count_distinct = count_distinct(Esql_priv.o365_audit_UserId_lower),\n    Esql_priv.o365_audit_UserId_lower_values = values(Esql_priv.o365_audit_UserId_lower),\n    Esql.o365_audit_LogonError_values = values(Esql.o365_audit_LogonError),\n    Esql.o365_audit_LogonError_count_distinct = count_distinct(Esql.o365_audit_LogonError),\n    Esql.o365_audit_ExtendedProperties_RequestType_values = values(Esql.o365_audit_ExtendedProperties_RequestType_lower),\n    Esql.source_ip_values = values(source.ip),\n    Esql.source_ip_count_distinct = count_distinct(source.ip),\n    Esql.source_as_organization_name_values = values(source.`as`.organization.name),\n    Esql.source_geo_country_name_values = values(source.geo.country_name),\n    Esql.source_geo_country_name_count_distinct = count_distinct(source.geo.country_name),\n    Esql.source_as_organization_name_count_distinct = count_distinct(source.`as`.organization.name),\n    Esql.timestamp_first_seen = min(@timestamp),\n    Esql.timestamp_last_seen = max(@timestamp),\n    Esql.event_count = count(*)\n  by Esql.time_window_date_trunc\n| eval\n    Esql.event_duration_seconds = date_diff(\"seconds\", Esql.timestamp_first_seen, Esql.timestamp_last_seen),\n    Esql.brute_force_type = case(\n        Esql.o365_audit_UserId_lower_count_distinct >= 15 and Esql.o365_audit_LogonError_count_distinct == 1 and Esql.event_count >= 10 and Esql.event_duration_seconds <= 1800, \"password_spraying\",\n        Esql.o365_audit_UserId_lower_count_distinct >= 8 and Esql.event_count >= 15 and Esql.o365_audit_LogonError_count_distinct <= 3 and Esql.source_ip_count_distinct <= 5 and Esql.event_duration_seconds <= 600, \"credential_stuffing\",\n        Esql.o365_audit_UserId_lower_count_distinct == 1 and Esql.o365_audit_LogonError_count_distinct == 1 and Esql.event_count >= 20 and Esql.event_duration_seconds <= 300, \"password_guessing\",\n        \"other\"\n    )\n| keep\n    Esql.time_window_date_trunc,\n    Esql.o365_audit_UserId_lower_count_distinct,\n    Esql_priv.o365_audit_UserId_lower_values,\n    Esql.o365_audit_LogonError_values,\n    Esql.o365_audit_LogonError_count_distinct,\n    Esql.o365_audit_ExtendedProperties_RequestType_values,\n    Esql.source_ip_values,\n    Esql.source_ip_count_distinct,\n    Esql.source_as_organization_name_values,\n    Esql.source_geo_country_name_values,\n    Esql.source_geo_country_name_count_distinct,\n    Esql.source_as_organization_name_count_distinct,\n    Esql.timestamp_first_seen,\n    Esql.timestamp_last_seen,\n    Esql.event_duration_seconds,\n    Esql.event_count,\n    Esql.brute_force_type\n| where Esql.brute_force_type != \"other\"\n",
        "references": [
            "https://learn.microsoft.com/en-us/security/operations/incident-response-playbook-password-spray",
            "https://learn.microsoft.com/en-us/purview/audit-log-detailed-properties",
            "https://securityscorecard.com/research/massive-botnet-targets-m365-with-stealthy-password-spraying-attacks/",
            "https://github.com/0xZDH/Omnispray",
            "https://github.com/0xZDH/o365spray"
        ],
        "risk_score": 47,
        "rule_id": "26f68dba-ce29-497b-8e13-b4fde1db5a2d",
        "severity": "medium",
        "tags": [
            "Domain: Cloud",
            "Domain: SaaS",
            "Data Source: Microsoft 365",
            "Data Source: Microsoft 365 Audit Logs",
            "Use Case: Identity and Access Audit",
            "Use Case: Threat Detection",
            "Tactic: Credential Access",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0006",
                    "name": "Credential Access",
                    "reference": "https://attack.mitre.org/tactics/TA0006/"
                },
                "technique": [
                    {
                        "id": "T1110",
                        "name": "Brute Force",
                        "reference": "https://attack.mitre.org/techniques/T1110/",
                        "subtechnique": [
                            {
                                "id": "T1110.001",
                                "name": "Password Guessing",
                                "reference": "https://attack.mitre.org/techniques/T1110/001/"
                            },
                            {
                                "id": "T1110.003",
                                "name": "Password Spraying",
                                "reference": "https://attack.mitre.org/techniques/T1110/003/"
                            },
                            {
                                "id": "T1110.004",
                                "name": "Credential Stuffing",
                                "reference": "https://attack.mitre.org/techniques/T1110/004/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "esql",
        "version": 414
    },
    "id": "26f68dba-ce29-497b-8e13-b4fde1db5a2d_414",
    "type": "security-rule"
}