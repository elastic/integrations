{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "This rule detects the deletion of Kubernetes events, which can indicate an attempt to cover up malicious activity or misconfigurations. Adversaries may delete events to remove traces of their actions, making it harder for defenders to investigate and respond to incidents.",
        "index": [
            "logs-kubernetes.audit_logs-*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Kubernetes Events Deleted",
        "note": " ## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Kubernetes Events Deleted\nKubernetes, a container orchestration platform, logs events to track activities within the cluster. These events are crucial for monitoring and troubleshooting. Adversaries may delete these logs to hide their tracks, impeding incident response. The detection rule identifies deletions of Kubernetes events, signaling potential defense evasion attempts by matching specific audit log attributes, thus alerting security teams to investigate further.\n\n### Possible investigation steps\n\n- Review the audit logs to identify the source of the deletion request by examining the `kubernetes.audit.user.username` field to determine which user or service account initiated the delete action.\n- Check the `kubernetes.audit.sourceIPs` field to trace the IP address from which the deletion request originated, which can help identify potential unauthorized access.\n- Investigate the `kubernetes.audit.objectRef.namespace` field to understand which namespace the deleted events belonged to, as this can provide context on the affected applications or services.\n- Analyze the timeline of events leading up to the deletion by reviewing other audit logs with similar `kubernetes.audit.verb` values to identify any suspicious activities or patterns.\n- Assess the role and permissions of the user or service account involved in the deletion to determine if they had legitimate access or if there was a potential privilege escalation.\n- Cross-reference the deletion event with other security alerts or logs to identify any correlated activities that might indicate a broader attack or misconfiguration.\n\n### False positive analysis\n\n- Routine maintenance activities may involve the deletion of Kubernetes events, such as during cluster upgrades or cleanup tasks. To manage this, create exceptions for known maintenance periods or specific user accounts responsible for these tasks.\n- Automated scripts or tools that manage Kubernetes resources might delete events as part of their normal operation. Identify these scripts and exclude their actions from triggering alerts by whitelisting their service accounts or IP addresses.\n- Misconfigured applications or services might inadvertently delete events. Regularly review and update configurations to ensure they align with best practices, and consider excluding specific applications if they are known to cause benign deletions.\n- Development and testing environments often have more frequent event deletions as part of iterative testing processes. Implement separate monitoring rules or thresholds for these environments to reduce noise in alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected Kubernetes cluster to prevent further unauthorized access or tampering with event logs.\n- Review and restore any deleted Kubernetes events from backup logs or snapshots to ensure a complete audit trail is available for further investigation.\n- Conduct a thorough review of access controls and permissions within the Kubernetes environment to identify and revoke any unauthorized access that may have led to the deletion of events.\n- Implement stricter logging and monitoring policies to ensure that any future deletions of Kubernetes events are detected and alerted in real-time.\n- Escalate the incident to the security operations center (SOC) for a comprehensive analysis of potential breaches and to determine if additional systems or data were affected.\n- Coordinate with the incident response team to conduct a root cause analysis and identify any vulnerabilities or misconfigurations that allowed the event deletion to occur.\n- Update and reinforce security policies and procedures to prevent similar incidents, including enhancing detection capabilities for defense evasion tactics as outlined in MITRE ATT&CK.\n",
        "query": "any where host.os.type == \"linux\" and event.dataset == \"kubernetes.audit_logs\" and kubernetes.audit.verb == \"delete\" and\nkubernetes.audit.objectRef.resource == \"events\" and kubernetes.audit.stage == \"ResponseComplete\"\n",
        "related_integrations": [
            {
                "package": "kubernetes",
                "version": "^1.80.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "event.dataset",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.objectRef.resource",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.stage",
                "type": "keyword"
            },
            {
                "ecs": false,
                "name": "kubernetes.audit.verb",
                "type": "keyword"
            }
        ],
        "risk_score": 21,
        "rule_id": "33c27b4e-8ec6-406f-b8e5-345dc024aa97",
        "severity": "low",
        "tags": [
            "Data Source: Kubernetes",
            "Domain: Kubernetes",
            "Use Case: Threat Detection",
            "Tactic: Defense Evasion",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0005",
                    "name": "Defense Evasion",
                    "reference": "https://attack.mitre.org/tactics/TA0005/"
                },
                "technique": [
                    {
                        "id": "T1070",
                        "name": "Indicator Removal",
                        "reference": "https://attack.mitre.org/techniques/T1070/",
                        "subtechnique": [
                            {
                                "id": "T1070.004",
                                "name": "File Deletion",
                                "reference": "https://attack.mitre.org/techniques/T1070/004/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 1
    },
    "id": "33c27b4e-8ec6-406f-b8e5-345dc024aa97_1",
    "type": "security-rule"
}