{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "This rule is part of the \"GitHub UEBA - Unusual Activity from Account Pack\", and leverages alert data to determine when multiple alerts are executed by the same user in a timespan of one hour. Analysts can use this to prioritize triage and response, as these alerts are a higher indicator of compromised user accounts or PATs.",
        "from": "now-60m",
        "index": [
            ".alerts-security.*"
        ],
        "language": "kuery",
        "license": "Elastic License v2",
        "name": "GitHub UEBA - Multiple Alerts from a GitHub Account",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating GitHub UEBA - Multiple Alerts from a GitHub Account\n\nUser and Entity Behavior Analytics (UEBA) in GitHub environments helps identify unusual patterns that may indicate compromised accounts or tokens. Adversaries might exploit GitHub by executing multiple unauthorized actions within a short period. This detection rule flags such anomalies by monitoring for multiple alerts from the same user within an hour, aiding in prioritizing potential threats for further investigation.\n\n### Possible investigation steps\n\n- Review the alert details in the security dashboard to identify the specific user account associated with the multiple alerts.\n- Check the recent activity logs for the identified user in GitHub to determine the nature and frequency of actions performed within the alert timeframe.\n- Investigate any recent changes to the user's permissions or access levels that might have facilitated unusual activity.\n- Correlate the alert data with other security tools or logs to identify any additional suspicious behavior or related alerts involving the same user.\n- Contact the user to verify if the actions were legitimate or if they suspect their account or personal access token (PAT) might be compromised.\n- If a compromise is suspected, initiate a password reset and revoke any active PATs for the user, and monitor for any further suspicious activity.\n\n### False positive analysis\n\n- High-frequency automated workflows or CI/CD pipelines may trigger multiple alerts within an hour. Review these workflows to ensure they are legitimate and consider adding exceptions for known, non-threatening automation.\n- Developers or teams working on time-sensitive projects might perform numerous actions in a short period, leading to false positives. Identify these users or teams and create exceptions to prevent unnecessary alerts.\n- Scheduled tasks or scripts that interact with GitHub repositories can generate multiple alerts. Verify the legitimacy of these tasks and exclude them from the rule if they are deemed safe.\n- Frequent use of GitHub Actions or bots that perform repetitive tasks could be misinterpreted as suspicious activity. Confirm their purpose and add them to an allowlist if they are part of normal operations.\n- Consider implementing a review process for alerts that involve known trusted users or service accounts to quickly dismiss false positives without compromising security.\n\n### Response and remediation\n\n- Immediately isolate the affected GitHub account by revoking all active sessions and tokens to prevent further unauthorized actions.\n- Conduct a password reset for the compromised account and enforce multi-factor authentication (MFA) to enhance security.\n- Review recent activity logs for the affected account to identify any unauthorized changes or data exfiltration, and revert any malicious modifications.\n- Notify the account owner and relevant security teams about the potential compromise to ensure awareness and coordinated response efforts.\n- Escalate the incident to the security operations center (SOC) for further investigation and to determine if additional accounts or systems are affected.\n- Implement additional monitoring on the affected account and related systems to detect any further suspicious activity.\n- Update and refine access controls and permissions for the affected account to minimize the risk of future unauthorized actions.",
        "query": "signal.rule.tags:(\"Use Case: UEBA\" and \"Data Source: Github\") and kibana.alert.workflow_status:\"open\"\n",
        "required_fields": [
            {
                "ecs": false,
                "name": "kibana.alert.workflow_status",
                "type": "unknown"
            },
            {
                "ecs": false,
                "name": "signal.rule.tags",
                "type": "unknown"
            }
        ],
        "risk_score": 47,
        "rule_id": "929223b4-fba3-4a1c-a943-ec4716ad23ec",
        "severity": "medium",
        "tags": [
            "Domain: Cloud",
            "Use Case: Threat Detection",
            "Use Case: UEBA",
            "Tactic: Execution",
            "Rule Type: Higher-Order Rule",
            "Data Source: Github",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0002",
                    "name": "Execution",
                    "reference": "https://attack.mitre.org/tactics/TA0002/"
                },
                "technique": []
            }
        ],
        "threshold": {
            "cardinality": [
                {
                    "field": "signal.rule.name",
                    "value": 5
                }
            ],
            "field": [
                "user.name"
            ],
            "value": 1
        },
        "timestamp_override": "event.ingested",
        "type": "threshold",
        "version": 102
    },
    "id": "929223b4-fba3-4a1c-a943-ec4716ad23ec_102",
    "type": "security-rule"
}