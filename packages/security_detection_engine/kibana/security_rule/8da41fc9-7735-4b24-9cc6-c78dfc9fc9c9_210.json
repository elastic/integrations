{
    "attributes": {
        "author": [
            "Elastic"
        ],
        "description": "Identifies an attempt to exploit a local privilege escalation in polkit pkexec (CVE-2021-4034) via unsecure environment variable injection. Successful exploitation allows an unprivileged user to escalate to the root user.",
        "from": "now-9m",
        "index": [
            "endgame-*",
            "logs-endpoint.events.file*",
            "logs-sentinel_one_cloud_funnel.*"
        ],
        "language": "eql",
        "license": "Elastic License v2",
        "name": "Potential Privilege Escalation via PKEXEC",
        "note": "## Triage and analysis\n\n> **Disclaimer**:\n> This investigation guide was created using generative AI technology and has been reviewed to improve its accuracy and relevance. While every effort has been made to ensure its quality, we recommend validating the content and adapting it to suit your specific environment and operational needs.\n\n### Investigating Potential Privilege Escalation via PKEXEC\n\nPolkit's pkexec is a command-line utility that allows an authorized user to execute commands as another user, typically root, in Linux environments. Adversaries exploit vulnerabilities like CVE-2021-4034 by injecting unsecure environment variables, enabling unauthorized privilege escalation. The detection rule identifies suspicious file paths indicative of such exploitation attempts, focusing on environment variable manipulation to preemptively flag potential threats.\n\n### Possible investigation steps\n\n- Review the alert details to confirm the presence of the file path pattern \"/*GCONV_PATH*\" on a Linux host, as this is indicative of the potential exploitation attempt.\n- Examine the process execution history on the affected host to identify any instances of pkexec being executed around the time of the alert. Look for unusual or unauthorized command executions.\n- Check the environment variables set during the pkexec execution to identify any suspicious or unauthorized modifications that could indicate an exploitation attempt.\n- Investigate the user account associated with the alert to determine if it has a history of privilege escalation attempts or other suspicious activities.\n- Analyze system logs and security events for any additional indicators of compromise or related suspicious activities that occurred before or after the alert.\n- Assess the patch status of the affected system to determine if it is vulnerable to CVE-2021-4034 and ensure that appropriate security updates have been applied.\n\n### False positive analysis\n\n- Routine administrative tasks involving pkexec may trigger alerts if they involve environment variable manipulation. Review the context of the command execution to determine if it aligns with expected administrative behavior.\n- Custom scripts or applications that legitimately use environment variables in their execution paths might be flagged. Identify these scripts and consider adding them to an exception list if they are verified as non-threatening.\n- Automated system management tools that modify environment variables for legitimate purposes could cause false positives. Monitor these tools and exclude their known safe operations from the detection rule.\n- Development environments where developers frequently test applications with varying environment variables might generate alerts. Establish a baseline of normal activity and exclude these patterns if they are consistent and verified as safe.\n- Scheduled tasks or cron jobs that involve environment variable changes should be reviewed. If they are part of regular system maintenance, document and exclude them from triggering alerts.\n\n### Response and remediation\n\n- Immediately isolate the affected system from the network to prevent further exploitation or lateral movement by the attacker.\n- Terminate any suspicious processes associated with pkexec or unauthorized privilege escalation attempts to halt ongoing exploitation.\n- Conduct a thorough review of system logs and file access records to identify any unauthorized changes or access patterns, focusing on the presence of GCONV_PATH in file paths.\n- Revert any unauthorized changes made by the attacker, such as modifications to critical system files or configurations, to restore system integrity.\n- Apply the latest security patches and updates to the polkit package to address CVE-2021-4034 and prevent future exploitation.\n- Implement enhanced monitoring and alerting for similar privilege escalation attempts, ensuring that any future attempts are detected and responded to promptly.\n- Report the incident to relevant internal security teams and, if necessary, escalate to external authorities or cybersecurity partners for further investigation and support.",
        "query": "file where host.os.type == \"linux\" and file.path : \"/*GCONV_PATH*\"\n",
        "references": [
            "https://seclists.org/oss-sec/2022/q1/80",
            "https://haxx.in/files/blasty-vs-pkexec.c"
        ],
        "related_integrations": [
            {
                "package": "endpoint",
                "version": "^8.2.0"
            },
            {
                "package": "sentinel_one_cloud_funnel",
                "version": "^1.0.0"
            }
        ],
        "required_fields": [
            {
                "ecs": true,
                "name": "file.path",
                "type": "keyword"
            },
            {
                "ecs": true,
                "name": "host.os.type",
                "type": "keyword"
            }
        ],
        "risk_score": 73,
        "rule_id": "8da41fc9-7735-4b24-9cc6-c78dfc9fc9c9",
        "setup": "## Setup\n\nThis rule requires data coming in from Elastic Defend.\n\n### Elastic Defend Integration Setup\nElastic Defend is integrated into the Elastic Agent using Fleet. Upon configuration, the integration allows the Elastic Agent to monitor events on your host and send data to the Elastic Security app.\n\n#### Prerequisite Requirements:\n- Fleet is required for Elastic Defend.\n- To configure Fleet Server refer to the [documentation](https://www.elastic.co/guide/en/fleet/current/fleet-server.html).\n\n#### The following steps should be executed in order to add the Elastic Defend integration on a Linux System:\n- Go to the Kibana home page and click \"Add integrations\".\n- In the query bar, search for \"Elastic Defend\" and select the integration to see more details about it.\n- Click \"Add Elastic Defend\".\n- Configure the integration name and optionally add a description.\n- Select the type of environment you want to protect, either \"Traditional Endpoints\" or \"Cloud Workloads\".\n- Select a configuration preset. Each preset comes with different default settings for Elastic Agent, you can further customize these later by configuring the Elastic Defend integration policy. [Helper guide](https://www.elastic.co/guide/en/security/current/configure-endpoint-integration-policy.html).\n- We suggest selecting \"Complete EDR (Endpoint Detection and Response)\" as a configuration setting, that provides \"All events; all preventions\"\n- Enter a name for the agent policy in \"New agent policy name\". If other agent policies already exist, you can click the \"Existing hosts\" tab and select an existing policy instead.\nFor more details on Elastic Agent configuration settings, refer to the [helper guide](https://www.elastic.co/guide/en/fleet/8.10/agent-policy.html).\n- Click \"Save and Continue\".\n- To complete the integration, select \"Add Elastic Agent to your hosts\" and continue to the next section to install the Elastic Agent on your hosts.\nFor more details on Elastic Defend refer to the [helper guide](https://www.elastic.co/guide/en/security/current/install-endpoint.html).\n",
        "severity": "high",
        "tags": [
            "Domain: Endpoint",
            "OS: Linux",
            "Use Case: Threat Detection",
            "Tactic: Privilege Escalation",
            "Data Source: Elastic Endgame",
            "Use Case: Vulnerability",
            "Data Source: Elastic Defend",
            "Data Source: SentinelOne",
            "Resources: Investigation Guide"
        ],
        "threat": [
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0004",
                    "name": "Privilege Escalation",
                    "reference": "https://attack.mitre.org/tactics/TA0004/"
                },
                "technique": [
                    {
                        "id": "T1068",
                        "name": "Exploitation for Privilege Escalation",
                        "reference": "https://attack.mitre.org/techniques/T1068/"
                    }
                ]
            },
            {
                "framework": "MITRE ATT&CK",
                "tactic": {
                    "id": "TA0005",
                    "name": "Defense Evasion",
                    "reference": "https://attack.mitre.org/tactics/TA0005/"
                },
                "technique": [
                    {
                        "id": "T1574",
                        "name": "Hijack Execution Flow",
                        "reference": "https://attack.mitre.org/techniques/T1574/",
                        "subtechnique": [
                            {
                                "id": "T1574.007",
                                "name": "Path Interception by PATH Environment Variable",
                                "reference": "https://attack.mitre.org/techniques/T1574/007/"
                            }
                        ]
                    }
                ]
            }
        ],
        "timestamp_override": "event.ingested",
        "type": "eql",
        "version": 210
    },
    "id": "8da41fc9-7735-4b24-9cc6-c78dfc9fc9c9_210",
    "type": "security-rule"
}