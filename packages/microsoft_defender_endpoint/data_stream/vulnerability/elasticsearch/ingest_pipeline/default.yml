---
description: Pipeline for processing Vulnerability logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - terminate:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      description: error message set and no data to process.
  - drop:
      if: ctx.message == 'retry'
      tag: drop_retry_events
  - remove:
      field:
        - organization
        - division
        - team
      ignore_missing: true
      if: ctx.organization instanceof String && ctx.division instanceof String && ctx.team instanceof String
      tag: remove_agentless_tags
      description: >-
        Removes the fields added by Agentless as metadata,
        as they can collide with ECS fields.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_event_kind_to_event
      value: event
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - append:
      field: event.category
      tag: append_event_category
      value: vulnerability
  - set:
      field: observer.product
      tag: set_observer_product
      value: Microsoft Defender for Endpoint
  - set:
      field: observer.vendor
      tag : set_observer_vendor
      value: Microsoft
  - rename:
      field: json.CveBatchTitle
      tag: rename_CveBatchTitle
      target_field: microsoft_defender_endpoint.vulnerability.cve_batch_title
      ignore_missing: true
  - rename:
      field: json.CveBatchUrl
      tag: rename_CveBatchUrl
      target_field: microsoft_defender_endpoint.vulnerability.cve_batch_url
      ignore_missing: true
  - rename:
      field: json.CveId
      tag: rename_CveId
      target_field: microsoft_defender_endpoint.vulnerability.cve_id
      ignore_missing: true
  - set:
      field: vulnerability.id
      tag: set_vulnerability_id_from_vulnerability_cve_id
      copy_from: microsoft_defender_endpoint.vulnerability.cve_id
      ignore_empty_value: true
  - set:
      field: vulnerability.cve
      tag: set_vulnerability_cve_from_vulnerability_id
      copy_from: vulnerability.id
      ignore_empty_value: true
      if: ctx.vulnerability?.id != null && ctx.vulnerability.id.toUpperCase().contains('CVE') == true
  - set:
      field: vulnerability.reference
      tag: set_vulnerability_reference_from_vulnerability_id
      value: https://www.cve.org/CVERecord?id={{{vulnerability.id}}}
      if: ctx.vulnerability?.id != null && ctx.vulnerability.id.toUpperCase().contains('CVE') == true
  - script:
      description: Dynamically set vulnerability.enumeration values.
      tag: script_map_vulnerability_id
      lang: painless
      if: ctx.vulnerability?.id != null
      params:
        vulnerability_enumeration:
          - CVE
          - TVM
      source: |
        String vulnerability_id = ctx.vulnerability.id.toUpperCase();
        for (String enum: params.vulnerability_enumeration) {
          if (vulnerability_id.contains(enum)) {
            ctx.vulnerability.put('enumeration', enum);
            return;
          }
        }
  - convert:
      field: json.CvssScore
      tag: convert_CvssScore_to_float
      target_field: microsoft_defender_endpoint.vulnerability.cvss_score
      type: float
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.base
      tag: set_vulnerability_score_base_from_vulnerability_cvss_score
      copy_from: microsoft_defender_endpoint.vulnerability.cvss_score
      ignore_empty_value: true
  - set:
      field: vulnerability.classification
      tag: set_vulnerability_classification_from_vulnerability_cvss_score
      value: CVSS
      if: ctx.microsoft_defender_endpoint?.vulnerability?.cvss_score != null
      ignore_empty_value: true
  - set:
      field: vulnerability.scanner.vendor
      tag: set_vulnerability_scanner_vendor
      value: Microsoft
  - set:
      field: message
      tag: set_message_from_cve_batch_title
      copy_from: microsoft_defender_endpoint.vulnerability.cve_batch_title
      ignore_empty_value: true
  - rename:
      field: json.DeviceId
      tag: rename_DeviceId
      target_field: microsoft_defender_endpoint.vulnerability.device_id
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_microsoft_defender_endpoint_vulnerability_device_id
      copy_from: microsoft_defender_endpoint.vulnerability.device_id
      ignore_empty_value: true
  - set:
      field: resource.id
      tag: set_resource_id_from_microsoft_defender_endpoint_vulnerability_device_id
      copy_from: microsoft_defender_endpoint.vulnerability.device_id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_related_hosts_from_microsoft_defender_endpoint_vulnerability_device_id
      value: '{{{microsoft_defender_endpoint.vulnerability.device_id}}}'
      allow_duplicates: false
      if: ctx.microsoft_defender_endpoint?.vulnerability?.device_id != null
  - rename:
      field: json.DeviceName
      tag: rename_DeviceName
      target_field: microsoft_defender_endpoint.vulnerability.device_name
      ignore_missing: true
  - set:
      field: host.hostname
      tag: set_host_hostname_from_microsoft_defender_endpoint_vulnerability_device_name
      copy_from: microsoft_defender_endpoint.vulnerability.device_name
      ignore_empty_value: true
  - set:
      field: host.name
      tag: set_host_name_from_microsoft_defender_endpoint_vulnerability_device_name
      copy_from: microsoft_defender_endpoint.vulnerability.device_name
      ignore_empty_value: true
  - set:
      field: resource.name
      tag: set_resource_name_from_microsoft_defender_endpoint_vulnerability_device_name
      copy_from: microsoft_defender_endpoint.vulnerability.device_name
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_microsoft_defender_endpoint_vulnerability_device_name_into_related_hosts
      value: '{{{microsoft_defender_endpoint.vulnerability.device_name}}}'
      allow_duplicates: false
      if: ctx.microsoft_defender_endpoint?.vulnerability?.device_name != null
  - rename:
      field: json.DiskPaths
      tag: rename_DiskPaths
      target_field: microsoft_defender_endpoint.vulnerability.disk_paths
      ignore_missing: true
  - rename:
      field: json.ExploitabilityLevel
      tag: rename_ExploitabilityLevel
      target_field: microsoft_defender_endpoint.vulnerability.exploitability_level
      ignore_missing: true
  - date:
      field: json.FirstSeenTimestamp
      tag: date_FirstSeenTimestamp
      target_field: microsoft_defender_endpoint.vulnerability.first_seen_timestamp
      formats:
        - yyyy-MM-dd HH:mm:ss
        - yyyy-MM-dd HH:mm:ss.SSSSSSS
        - ISO8601
      if: ctx.json?.FirstSeenTimestamp != null && ctx.json.FirstSeenTimestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.Id
      tag: rename_Id
      target_field: microsoft_defender_endpoint.vulnerability.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_microsoft_defender_endpoint_vulnerability_id
      copy_from: microsoft_defender_endpoint.vulnerability.id
      ignore_empty_value: true
  - set:
      field: event.id
      tag: set_event_id_from_vulnerability_cve_id
      copy_from: microsoft_defender_endpoint.vulnerability.cve_id
      ignore_empty_value: true
      if: ctx.event?.id == null
  - convert:
      field: json.IsOnboarded
      tag: convert_IsOnboarded_to_boolean
      target_field: microsoft_defender_endpoint.vulnerability.is_onboarded
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.LastSeenTimestamp
      tag: date_LastSeenTimestamp
      target_field: microsoft_defender_endpoint.vulnerability.last_seen_timestamp
      formats:
        - yyyy-MM-dd HH:mm:ss
        - yyyy-MM-dd HH:mm:ss.SSSSSSS
        - ISO8601
      if: ctx.json?.LastSeenTimestamp != null && ctx.json.LastSeenTimestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.OSArchitecture
      tag: rename_OSArchitecture
      target_field: microsoft_defender_endpoint.vulnerability.os_architecture
      ignore_missing: true
  - set:
      field: host.architecture
      tag: set_host_architecture_from_vulnerability_os_architecture
      copy_from: microsoft_defender_endpoint.vulnerability.os_architecture
      ignore_empty_value: true
  - rename:
      field: json.OSPlatform
      tag: rename_OSPlatform
      target_field: microsoft_defender_endpoint.vulnerability.os_platform
      ignore_missing: true
  - set:
      field: host.os.platform
      tag: set_host_os_platform_from_microsoft_defender_endpoint_vulnerability_os_platform
      copy_from: microsoft_defender_endpoint.vulnerability.os_platform
      ignore_empty_value: true
  - script:
      description: Dynamically set host.os.type values.
      tag: script_map_host_os_type
      lang: painless
      if: ctx.microsoft_defender_endpoint?.vulnerability?.os_platform != null
      params:
        os_type:
          - linux
          - macos
          - unix
          - windows
          - ios
          - android
      source: |
        String os_platform = ctx.microsoft_defender_endpoint.vulnerability.os_platform.toLowerCase();
        for (String os: params.os_type) {
          if (os_platform.contains(os)) {
            ctx.host.os.put('type', os);
            return;
          }
        }
        if (os_platform.contains('centos') || os_platform.contains('ubuntu')) {
          ctx.host.os.put('type', 'linux');
        }
  - convert:
      field: json.OSVersion
      tag: convert_OSVersion_to_string
      target_field: microsoft_defender_endpoint.vulnerability.os_version
      type: string
      ignore_missing: true
  - set:
      field: host.os.version
      tag: set_host_os_version_from_vulnerability_os_version
      copy_from: microsoft_defender_endpoint.vulnerability.os_version
      ignore_empty_value: true
  - set:
      field: host.os.name
      value: '{{{host.os.platform}}} {{{host.os.version}}}'
      ignore_failure: true
      if: ctx.host?.os?.platform != null && ctx.host?.os?.version != null
  - convert:
      field: json.RbacGroupId
      tag: convert_RbacGroupId_to_string
      target_field: microsoft_defender_endpoint.vulnerability.rbac_group_id
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: group.id
      tag: set_group_id_from_vulnerability_rbac_group_id
      copy_from: microsoft_defender_endpoint.vulnerability.rbac_group_id
      ignore_empty_value: true
  - rename:
      field: json.RbacGroupName
      tag: rename_RbacGroupName
      target_field: microsoft_defender_endpoint.vulnerability.rbac_group_name
      ignore_missing: true
  - set:
      field: group.name
      tag: set_group_name_from_vulnerability_rbac_group_name
      copy_from: microsoft_defender_endpoint.vulnerability.rbac_group_name
      ignore_empty_value: true
  - rename:
      field: json.RecommendationReference
      tag: rename_RecommendationReference
      target_field: microsoft_defender_endpoint.vulnerability.recommendation_reference
      ignore_missing: true
  - rename:
      field: json.RecommendedSecurityUpdate
      tag: rename_RecommendedSecurityUpdate
      target_field: microsoft_defender_endpoint.vulnerability.recommended_security_update
      ignore_missing: true
  - convert:
      field: json.RecommendedSecurityUpdateId
      tag: convert_RecommendedSecurityUpdateId_to_string
      target_field: microsoft_defender_endpoint.vulnerability.recommended_security_update_id
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.RegistryPaths
      tag: rename_RegistryPaths
      target_field: microsoft_defender_endpoint.vulnerability.registry_paths
      ignore_missing: true
  - convert:
      field: json.SecurityUpdateAvailable
      tag: convert_SecurityUpdateAvailable_to_boolean
      target_field: microsoft_defender_endpoint.vulnerability.security_update_available
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.SoftwareName
      tag: rename_SoftwareName
      target_field: microsoft_defender_endpoint.vulnerability.software_name
      ignore_missing: true
  - set:
      field: package.name
      tag: set_package_name_from_vulnerability_software_name
      copy_from: microsoft_defender_endpoint.vulnerability.software_name
      ignore_empty_value: true
  - rename:
      field: json.SoftwareVendor
      tag: rename_SoftwareVendor
      target_field: microsoft_defender_endpoint.vulnerability.software_vendor
      ignore_missing: true
  - rename:
      field: json.SoftwareVersion
      tag: rename_SoftwareVersion
      target_field: microsoft_defender_endpoint.vulnerability.software_version
      ignore_missing: true
  - set:
      field: package.version
      tag: set_package_version_from_vulnerability_software_version
      copy_from: microsoft_defender_endpoint.vulnerability.software_version
      ignore_empty_value: true
  - set:
      field: vulnerability.title
      tag: set_vulnerability_title_from_package_name_package_version_vulnerability_id
      value: 'Vulnerability found in {{{package.name}}} {{{package.version}}} - {{{vulnerability.id}}}'
      if: ctx.package?.name != null && ctx.package?.version != null && ctx.vulnerability?.id != null
  - set:
      field: vulnerability.title
      tag: set_vulnerability_title_from_package_name_package_version
      value: 'Vulnerability found in {{{package.name}}} {{{package.version}}}'
      if: ctx.package?.name != null && ctx.package?.version != null && ctx.vulnerability?.title == null
  - set:
      field: vulnerability.title
      tag: set_vulnerability_title_from_vulnerability_id
      value: 'Vulnerability found - {{{vulnerability.id}}}'
      if: ctx.vulnerability?.id != null && ctx.vulnerability?.title == null
  - rename:
      field: json.VulnerabilitySeverityLevel
      tag: rename_VulnerabilitySeverityLevel
      target_field: microsoft_defender_endpoint.vulnerability.severity_level
      ignore_missing: true
  - set:
      field: vulnerability.severity
      tag: set_vulnerability_severity_from_vulnerability_severity_level
      copy_from: microsoft_defender_endpoint.vulnerability.severity_level
      ignore_empty_value: true
  - remove:
      field:
        - microsoft_defender_endpoint.vulnerability.cve_batch_title  
        - microsoft_defender_endpoint.vulnerability.device_id
        - microsoft_defender_endpoint.vulnerability.device_name
        - microsoft_defender_endpoint.vulnerability.id
        - microsoft_defender_endpoint.vulnerability.cve_id
        - microsoft_defender_endpoint.vulnerability.os_architecture
        - microsoft_defender_endpoint.vulnerability.os_platform
        - microsoft_defender_endpoint.vulnerability.os_version
        - microsoft_defender_endpoint.vulnerability.rbac_group_id
        - microsoft_defender_endpoint.vulnerability.rbac_group_name
        - microsoft_defender_endpoint.vulnerability.software_name
        - microsoft_defender_endpoint.vulnerability.software_version
        - microsoft_defender_endpoint.vulnerability.severity_level
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null  
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
