---
description: Pipeline for processing Tenable.io vulnerability logs.
processors:
  - set:
      field: ecs.version
      value: '8.5.0'
  - set:
      field: event.category
      value: [threat]
  - set:
      field: event.type
      value: [indicator]
  - set:
      field: vulnerability.scanner.vendor
      value: Tenable
  - set:
      field: vulnerability.score.version
      value: '3.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - fingerprint:
      fields:
        - event.original
      target_field: _id
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
  - set:
      field: event.kind
      value: event
      if: '!["medium", "high","critical"].contains(ctx.json?.severity)'
      ignore_empty_value: true
  - set:
      field: event.kind
      value: alert
      if: '["medium", "high","critical"].contains(ctx.json?.severity)'
      ignore_empty_value: true
  - date:
      field: json.indexed
      target_field: tenable_io.vulnerability.indexed
      formats:
        - ISO8601
      if: ctx.json?.indexed != null && ctx.json.indexed != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      copy_from: tenable_io.vulnerability.indexed
      ignore_empty_value: true
  - rename:
      field: json.asset.netbios_name
      target_field: tenable_io.vulnerability.asset.netbios.name
      ignore_missing: true
  - set:
      field: host.domain
      copy_from: tenable_io.vulnerability.asset.netbios.name
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{host.domain}}}'
      if: ctx.host?.domain != null
      allow_duplicates: false
  - convert:
      field: json.asset.hostname
      target_field: tenable_io.vulnerability.asset.hostname
      type: ip
      if: ctx.json?.asset?.hostname != ''
      ignore_missing: true
      on_failure:
        - rename:
            field: json.asset.hostname
            target_field: host.hostname
            ignore_missing: true
        - append:
            field: related.hosts
            value: '{{{host.hostname}}}'
            allow_duplicates: false
  - append:
      field: host.ip
      value: '{{{tenable_io.vulnerability.asset.hostname}}}'
      if: ctx.tenable_io?.vulnerability?.asset?.hostname != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{{tenable_io.vulnerability.asset.hostname}}}'
      if: ctx.tenable_io?.vulnerability?.asset?.hostname != null
      allow_duplicates: false
  - rename:
      field: json.asset.uuid
      target_field: tenable_io.vulnerability.asset.uuid
      ignore_missing: true
  - set:
      field: host.id
      copy_from: tenable_io.vulnerability.asset.uuid
      ignore_empty_value: true
  - convert:
      field: json.asset.ipv4
      target_field: tenable_io.vulnerability.asset.ipv4
      type: ip
      if: ctx.json?.asset?.ipv4 != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: host.ip
      value: '{{{tenable_io.vulnerability.asset.ipv4}}}'
      allow_duplicates: false
  - convert:
      field: json.asset.ipv6
      target_field: tenable_io.vulnerability.asset.ipv6
      type: ip
      if: ctx.json?.asset?.ipv6 != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: host.ip
      value: '{{{tenable_io.vulnerability.asset.ipv6}}}'
      allow_duplicates: false
  - foreach:
      field: host.ip
      if: ctx.host?.ip instanceof List
      processor:
        append:
          field: related.ip
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - gsub:
      field: json.asset.mac_address
      pattern: '[:.]'
      replacement: '-'
      ignore_missing: true
  - uppercase:
      field: json.asset.mac_address
      ignore_missing: true
  - rename:
      field: json.asset.mac_address
      target_field: tenable_io.vulnerability.asset.mac_address
      ignore_missing: true
  - append:
      field: host.mac
      value: '{{{tenable_io.vulnerability.asset.mac_address}}}'
      allow_duplicates: false
  - rename:
      field: json.asset.fqdn
      target_field: tenable_io.vulnerability.asset.fqdn
      ignore_missing: true
  - set:
      field: host.name
      copy_from: tenable_io.vulnerability.asset.fqdn
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{tenable_io.vulnerability.asset.fqdn}}}'
      if: ctx.tenable_io?.vulnerability?.asset?.fqdn != null
      allow_duplicates: false
  - rename:
      field: json.asset.operating_system
      target_field: tenable_io.vulnerability.asset.operating_system
      ignore_missing: true
  - set:
      field: host.os.full
      copy_from: tenable_io.vulnerability.asset.operating_system
      ignore_empty_value: true
  - rename:
      field: json.plugin.description
      target_field: tenable_io.vulnerability.plugin.description
      ignore_missing: true
  - set:
      field: vulnerability.description
      copy_from: tenable_io.vulnerability.plugin.description
      ignore_empty_value: true
  - rename:
      field: json.plugin.cve
      target_field: tenable_io.vulnerability.plugin.cve
      ignore_missing: true
  - set:
      field: vulnerability.id
      copy_from: tenable_io.vulnerability.plugin.cve
      ignore_empty_value: true
  - rename:
      field: json.plugin.see_also
      target_field: tenable_io.vulnerability.plugin.see_also
      ignore_missing: true
  - set:
      field: vulnerability.reference
      copy_from: tenable_io.vulnerability.plugin.see_also
      ignore_empty_value: true
  - rename:
      field: json.scan.uuid
      target_field: tenable_io.vulnerability.scan.uuid
      ignore_missing: true
  - set:
      field: vulnerability.report_id
      copy_from: tenable_io.vulnerability.scan.uuid
      ignore_empty_value: true
  - convert:
      field: json.plugin.cvss3_base_score
      target_field: tenable_io.vulnerability.plugin.cvss3.base_score
      type: double
      if: ctx.json?.plugin?.cvss3_base_score != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.base
      copy_from: tenable_io.vulnerability.plugin.cvss3.base_score
      ignore_empty_value: true
  - convert:
      field: json.plugin.cvss3_temporal_score
      target_field: tenable_io.vulnerability.plugin.cvss3.temporal.score
      type: double
      if: ctx.json?.plugin?.cvss3_temporal_score != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.temporal
      copy_from: tenable_io.vulnerability.plugin.cvss3.temporal.score
      ignore_empty_value: true
  - rename:
      field: json.severity
      target_field: tenable_io.vulnerability.severity.value
      ignore_missing: true
  - set:
      field: vulnerability.severity
      copy_from: tenable_io.vulnerability.severity.value
      ignore_empty_value: true
  - rename:
      field: json.asset.agent_uuid
      target_field: tenable_io.vulnerability.asset.agent_uuid
      ignore_missing: true
  - rename:
      field: json.asset.bios_uuid
      target_field: tenable_io.vulnerability.asset.bios_uuid
      ignore_missing: true
  - rename:
      field: json.asset.device_type
      target_field: tenable_io.vulnerability.asset.device_type
      ignore_missing: true
  - date:
      field: json.asset.last_authenticated_results
      target_field: tenable_io.vulnerability.asset.last_authenticated_results
      formats:
        - ISO8601
      if: ctx.json?.asset?.last_authenticated_results != null && ctx.json.asset.last_authenticated_results != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.asset.last_unauthenticated_results
      target_field: tenable_io.vulnerability.asset.last_unauthenticated_results
      formats:
        - ISO8601
      if: ctx.json?.asset?.last_unauthenticated_results != null && ctx.json.asset.last_unauthenticated_results != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.asset.netbios_workgroup
      target_field: tenable_io.vulnerability.asset.netbios.workgroup
      ignore_missing: true
  - rename:
      field: json.asset.network_id
      target_field: tenable_io.vulnerability.asset.network_id
      ignore_missing: true
  - convert:
      field: json.asset.tracked
      target_field: tenable_io.vulnerability.asset.tracked
      type: boolean
      if: ctx.json?.asset?.tracked != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.output
      target_field: tenable_io.vulnerability.output
      ignore_missing: true
  - convert:
      field: json.plugin.bid
      target_field: tenable_io.vulnerability.plugin.bid
      type: long
      if: ctx.json?.plugin?.bid != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.canvas_package
      target_field: tenable_io.vulnerability.plugin.canvas_package
      ignore_missing: true
  - convert:
      field: json.plugin.checks_for_default_account
      target_field: tenable_io.vulnerability.plugin.checks_for_default_account
      type: boolean
      if: ctx.json?.plugin?.checks_for_default_account != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.checks_for_malware
      target_field: tenable_io.vulnerability.plugin.checks_for_malware
      type: boolean
      if: ctx.json?.plugin?.checks_for_malware != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.cpe
      target_field: tenable_io.vulnerability.plugin.cpe
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_temporal_vector.exploitability
      target_field: tenable_io.vulnerability.plugin.cvss3.temporal.vector.exploitability
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_temporal_vector.remediation_level
      target_field: tenable_io.vulnerability.plugin.cvss3.temporal.vector.remediation_level
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_temporal_vector.report_confidence
      target_field: tenable_io.vulnerability.plugin.cvss3.temporal.vector.report_confidence
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_temporal_vector.raw
      target_field: tenable_io.vulnerability.plugin.cvss3.temporal.vector.raw
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_temporal_vector.exploit_code_maturity
      target_field: tenable_io.vulnerability.plugin.cvss3.temporal.vector.exploit_code_maturity
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.access_vector
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.access.vector
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.access_complexity
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.access.complexity
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.authentication
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.authentication
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.confidentiality_impact
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.confidentiality_impact
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.integrity_impact
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.integrity_impact
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.availability_impact
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.availability_impact
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.raw
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.raw
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.attack_vector
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.attack.vector
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.attack_complexity
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.attack.complexity
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.privileges_required
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.privileges_required
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.user_interaction
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.user_interaction
      ignore_missing: true
  - rename:
      field: json.plugin.cvss3_vector.scope
      target_field: tenable_io.vulnerability.plugin.cvss3.vector.scope
      ignore_missing: true
  - convert:
      field: json.plugin.cvss_base_score
      target_field: tenable_io.vulnerability.plugin.cvss.base_score
      type: double
      if: ctx.json?.plugin?.cvss_base_score != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.cvss_temporal_score
      target_field: tenable_io.vulnerability.plugin.cvss.temporal.score
      type: double
      if: ctx.json?.plugin?.cvss_temporal_score != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.cvss_temporal_vector.exploitability
      target_field: tenable_io.vulnerability.plugin.cvss.temporal.vector.exploitability
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_temporal_vector.remediation_level
      target_field: tenable_io.vulnerability.plugin.cvss.temporal.vector.remediation_level
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_temporal_vector.report_confidence
      target_field: tenable_io.vulnerability.plugin.cvss.temporal.vector.report_confidence
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_temporal_vector.raw
      target_field: tenable_io.vulnerability.plugin.cvss.temporal.vector.raw
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.access_vector
      target_field: tenable_io.vulnerability.plugin.cvss.vector.access.vector
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.access_complexity
      target_field: tenable_io.vulnerability.plugin.cvss.vector.access.complexity
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.authentication
      target_field: tenable_io.vulnerability.plugin.cvss.vector.authentication
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.confidentiality_impact
      target_field: tenable_io.vulnerability.plugin.cvss.vector.confidentiality_impact
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.integrity_impact
      target_field: tenable_io.vulnerability.plugin.cvss.vector.integrity_impact
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.availability_impact
      target_field: tenable_io.vulnerability.plugin.cvss.vector.availability_impact
      ignore_missing: true
  - rename:
      field: json.plugin.cvss_vector.raw
      target_field: tenable_io.vulnerability.plugin.cvss.vector.raw
      ignore_missing: true
  - rename:
      field: json.plugin.d2_elliot_name
      target_field: tenable_io.vulnerability.plugin.d2_elliot_name
      ignore_missing: true
  - convert:
      field: json.plugin.exploit_available
      target_field: tenable_io.vulnerability.plugin.exploit_available
      type: boolean
      if: ctx.json?.plugin?.exploit_available != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.exploit_framework_canvas
      target_field: tenable_io.vulnerability.plugin.exploit_framework.canvas
      type: boolean
      if: ctx.json?.plugin?.exploit_framework_canvas != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.exploit_framework_core
      target_field: tenable_io.vulnerability.plugin.exploit_framework.core
      type: boolean
      if: ctx.json?.plugin?.exploit_framework_core != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.exploit_framework_d2_elliot
      target_field: tenable_io.vulnerability.plugin.exploit_framework.d2_elliot
      type: boolean
      if: ctx.json?.plugin?.exploit_framework_d2_elliot != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.exploit_framework_exploithub
      target_field: tenable_io.vulnerability.plugin.exploit_framework.hub
      type: boolean
      if: ctx.json?.plugin?.exploit_framework_exploithub != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.exploit_framework_metasploit
      target_field: tenable_io.vulnerability.plugin.exploit_framework.metasploit
      type: boolean
      if: ctx.json?.plugin?.exploit_framework_metasploit != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.exploitability_ease
      target_field: tenable_io.vulnerability.plugin.exploitability_ease
      ignore_missing: true
  - convert:
      field: json.plugin.exploited_by_malware
      target_field: tenable_io.vulnerability.plugin.exploited_by.malware
      type: boolean
      if: ctx.json?.plugin?.exploited_by_malware != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.exploited_by_nessus
      target_field: tenable_io.vulnerability.plugin.exploited_by.nessus
      type: boolean
      if: ctx.json?.plugin?.exploited_by_nessus != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.exploithub_sku
      target_field: tenable_io.vulnerability.plugin.exploithub_sku
      ignore_missing: true
  - rename:
      field: json.plugin.family
      target_field: tenable_io.vulnerability.plugin.family
      ignore_missing: true
  - convert:
      field: json.plugin.family_id
      target_field: tenable_io.vulnerability.plugin.family_id
      type: long
      if: ctx.json.plugin.family_id != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.id
      target_field: tenable_io.vulnerability.plugin.id
      type: long
      if: ctx.json.plugin?.id != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.in_the_news
      target_field: tenable_io.vulnerability.plugin.in_the_news
      type: boolean
      if: ctx.json?.plugin?.in_the_news != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.metasploit_name
      target_field: tenable_io.vulnerability.plugin.metasploit_name
      ignore_missing: true
  - rename:
      field: json.plugin.ms_bulletin
      target_field: tenable_io.vulnerability.plugin.ms_bulletin
      ignore_missing: true
  - rename:
      field: json.plugin.name
      target_field: tenable_io.vulnerability.plugin.name
      ignore_missing: true
  - date:
      field: json.plugin.patch_publication_date
      target_field: tenable_io.vulnerability.plugin.patch_publication_date
      formats:
        - ISO8601
      if: ctx.json?.plugin?.patch_publication_date != null && ctx.json.plugin.patch_publication_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.plugin.modification_date
      target_field: tenable_io.vulnerability.plugin.modification_date
      formats:
        - ISO8601
      if: ctx.json?.plugin?.modification_date != null && ctx.json.plugin.modification_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.plugin.publication_date
      target_field: tenable_io.vulnerability.plugin.publication_date
      formats:
        - ISO8601
      if: ctx.json?.plugin?.publication_date != null && ctx.json.plugin.publication_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.risk_factor
      target_field: tenable_io.vulnerability.plugin.risk_factor
      ignore_missing: true
  - rename:
      field: json.plugin.solution
      target_field: tenable_io.vulnerability.plugin.solution
      ignore_missing: true
  - rename:
      field: json.plugin.stig_severity
      target_field: tenable_io.vulnerability.plugin.stig_severity
      ignore_missing: true
  - rename:
      field: json.plugin.synopsis
      target_field: tenable_io.vulnerability.plugin.synopsis
      ignore_missing: true
  - rename:
      field: json.plugin.type
      target_field: tenable_io.vulnerability.plugin.type
      ignore_missing: true
  - convert:
      field: json.plugin.unsupported_by_vendor
      target_field: tenable_io.vulnerability.plugin.unsupported_by_vendor
      type: boolean
      if: ctx.json?.plugin?.unsupported_by_vendor != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.usn
      target_field: tenable_io.vulnerability.plugin.usn
      ignore_missing: true
  - rename:
      field: json.plugin.version
      target_field: tenable_io.vulnerability.plugin.version
      ignore_missing: true
  - date:
      field: json.plugin.vuln_publication_date
      target_field: tenable_io.vulnerability.plugin.vuln_publication_date
      formats:
        - ISO8601
      if: ctx.json?.plugin?.vuln_publication_date != null && ctx.json.plugin.vuln_publication_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.xrefs
      target_field: tenable_io.vulnerability.plugin.xrefs
      ignore_missing: true
  - rename:
      field: json.plugin.xref
      target_field: tenable_io.vulnerability.plugin.xref
      ignore_missing: true
  - convert:
      field: json.plugin.vpr.score
      target_field: tenable_io.vulnerability.plugin.vpr.score
      type: double
      if: ctx.json?.plugin?.vpr?.score != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.plugin.vpr.updated
      target_field: tenable_io.vulnerability.plugin.vpr.updated
      formats:
        - ISO8601
      if: ctx.json?.plugin?.vpr?.updated != null && ctx.json.plugin.vpr.updated != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.vpr.drivers.age_of_vuln.lower_bound
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.age_of_vuln.lower_bound
      type: long
      if: ctx.json?.plugin?.vpr?.drivers?.age_of_vuln?.lower_bound != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.vpr.drivers.age_of_vuln.upper_bound
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.age_of_vuln.upper_bound
      type: long
      if: ctx.json?.plugin?.vpr?.drivers?.age_of_vuln?.upper_bound != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.vpr.drivers.exploit_code_maturity
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.exploit_code_maturity
      ignore_missing: true
  - convert:
      field: json.plugin.vpr.drivers.cvss3_impact_score
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.cvss3_impact_score
      type: double
      if: ctx.json?.plugin?.vpr?.drivers?.cvss3_impact_score != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.vpr.drivers.cvss_impact_score_predicted
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.cvss_impact_score_predicted
      type: boolean
      if: ctx.json?.plugin?.vpr?.drivers?.cvss_impact_score_predicted != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.vpr.drivers.threat_intensity_last28
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.threat_intensity_last28
      ignore_missing: true
  - convert:
      field: json.plugin.vpr.drivers.threat_recency.lower_bound
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.threat_recency.lower_bound
      type: long
      if: ctx.json?.plugin?.vpr?.drivers?.threat_recency?.lower_bound != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.vpr.drivers.threat_recency.upper_bound
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.threat_recency.upper_bound
      type: long
      if: ctx.json?.plugin?.vpr?.drivers?.threat_recency?.upper_bound != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.plugin.vpr.drivers.threat_sources_last28
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.threat_sources_last28
      ignore_missing: true
  - rename:
      field: json.plugin.vpr.drivers.product_coverage
      target_field: tenable_io.vulnerability.plugin.vpr.drivers.product_coverage
      ignore_missing: true
  - convert:
      field: json.port.port
      target_field: tenable_io.vulnerability.port.value
      type: long
      if: ctx.json?.port?.port != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.port.protocol
      target_field: tenable_io.vulnerability.port.protocol
      ignore_missing: true
  - set:
      field: network.transport
      copy_from: tenable_io.vulnerability.port.protocol
      ignore_empty_value: true
  - lowercase:
      field: network.transport
      ignore_missing: true
  - rename:
      field: json.port.service
      target_field: tenable_io.vulnerability.port.service
      ignore_missing: true
  - rename:
      field: json.recast_reason
      target_field: tenable_io.vulnerability.recast_reason
      ignore_missing: true
  - rename:
      field: json.recast_rule_uuid
      target_field: tenable_io.vulnerability.recast_rule_uuid
      ignore_missing: true
  - date:
      field: json.scan.completed_at
      target_field: tenable_io.vulnerability.scan.completed_at
      formats:
        - ISO8601
      if: ctx.json?.scan?.completed_at != null && ctx.json.scan.completed_at != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.scan.schedule_uuid
      target_field: tenable_io.vulnerability.scan.schedule_uuid
      ignore_missing: true
  - date:
      field: json.scan.started_at
      target_field: tenable_io.vulnerability.scan.started_at
      formats:
        - ISO8601
      if: ctx.json?.scan?.started_at != null && ctx.json.scan.started_at != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.severity_id
      target_field: tenable_io.vulnerability.severity.id
      type: long
      if: ctx.json?.severity_id != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.severity_default_id
      target_field: tenable_io.vulnerability.severity.default_id
      type: long
      if: ctx.json?.severity_default_id != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.severity_modification_type
      target_field: tenable_io.vulnerability.severity.modification_type
      ignore_missing: true
  - date:
      field: json.first_found
      target_field: tenable_io.vulnerability.first_found
      formats:
        - ISO8601
      if: ctx.json?.first_found != null && ctx.json.first_found != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.last_fixed
      target_field: tenable_io.vulnerability.last_fixed
      formats:
        - ISO8601
      if: ctx.json?.last_fixed != null && ctx.json.last_fixed != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.last_found
      target_field: tenable_io.vulnerability.last_found
      formats:
        - ISO8601
      if: ctx.json?.last_found != null && ctx.json.last_found != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.state
      target_field: tenable_io.vulnerability.state
      ignore_missing: true
  - rename:
      field: json.plugin.IO_address
      target_field: tenable_io.vulnerability.plugin.io_address
      ignore_missing: true
  - rename:
      field: json.plugin.intel_type
      target_field: tenable_io.vulnerability.plugin.intel_type
      ignore_missing: true
  - date:
      field: json.plugin.plugin_publication_date
      target_field: tenable_io.vulnerability.plugin.plugin_publication_date
      formats:
        - ISO8601
      if: ctx.json?.plugin?.plugin_publication_date != null && ctx.json.plugin.plugin_publication_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.vuln_publication_date
      target_field: tenable_io.vulnerability.vuln_publication_date
      formats:
        - ISO8601
      if: ctx.json?.vuln_publication_date != null && ctx.json.vuln_publication_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.has_patch
      target_field: tenable_io.vulnerability.plugin.has_patch
      type: boolean
      if: ctx.json?.plugin?.has_patch != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.plugin.plugin_modification_date
      target_field: tenable_io.vulnerability.plugin.plugin_modification_date
      formats:
        - ISO8601
      if: ctx.json?.plugin?.plugin_modification_date != null && ctx.json.plugin.plugin_modification_date != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.always_run
      target_field: tenable_io.vulnerability.plugin.always_run
      type: boolean
      if: ctx.json?.plugin?.always_run != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.plugin.compliance
      target_field: tenable_io.vulnerability.plugin.compliance
      type: boolean
      if: ctx.json?.plugin?.compliance != ''
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - remove:
      field: json
      ignore_missing: true
  - remove:
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      field:
        - tenable_io.vulnerability.indexed
        - tenable_io.vulnerability.asset.netbios.name
        - tenable_io.vulnerability.asset.uuid
        - tenable_io.vulnerability.asset.ipv4
        - tenable_io.vulnerability.asset.ipv6
        - tenable_io.vulnerability.asset.mac_address
        - tenable_io.vulnerability.asset.fqdn
        - tenable_io.vulnerability.asset.operating_system
        - tenable_io.vulnerability.plugin.description
        - tenable_io.vulnerability.plugin.cve
        - tenable_io.vulnerability.plugin.see_also
        - tenable_io.vulnerability.scan.uuid
        - tenable_io.vulnerability.plugin.cvss3.base_score
        - tenable_io.vulnerability.plugin.cvss3.temporal.score
        - tenable_io.vulnerability.severity.value
        - tenable_io.vulnerability.port.protocol
      ignore_missing: true
  - remove:
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source:
        boolean dropEmptyFields(Object object) {
          if (object == null || object == '') {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
