---
description: Pipeline for Jamf Protect Telemetry Performance events.
processors:

##########################
## ECS Event Specific ##
##########################
    - set:
        field: event.reason
        value: Collection of system performance data
    - append:
        field: event.category
        value: host
    - rename:
        field: jamf_protect.telemetry.event.performance.metrics.tasks
        target_field: custom.performance_metrics.task
        ignore_missing: true
    - convert:
        field: jamf_protect.telemetry.event.performance.metrics.cpu_percentage
        type: double
        target_field: custom.performance_metrics.cpu_percentage
        ignore_missing: true
        on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
    - convert:
        field: jamf_protect.telemetry.event.performance.metrics.cpu_time_seconds
        type: double
        target_field: custom.performance_metrics.cpu_time_seconds
        ignore_missing: true
        on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
    - convert:
        field: jamf_protect.telemetry.event.performance.metrics.interrupt_wakeups
        type: long
        target_field: custom.performance_metrics.interrupt_wakeups
        ignore_missing: true
        on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
    - convert:
        field: jamf_protect.telemetry.event.performance.metrics.platform_idle_wakeups
        type: long
        target_field: custom.performance_metrics.platform_idle_wakeups
        ignore_missing: true
        on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
    - convert:
        field: jamf_protect.telemetry.event.performance.metrics.resident_memory_size_mb
        type: double
        target_field: custom.performance_metrics.resident_memory_size.mb
        ignore_missing: true
        on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
    - convert:
        field: jamf_protect.telemetry.event.performance.metrics.virtual_memory_size_mb
        type: double
        target_field: custom.performance_metrics.virtual_memory_size.mb
        ignore_missing: true
        on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
    - script:
        lang: painless
        if: ctx.jamf_protect.telemetry?.event?.performance?.metrics?.cpu_percentage != null
        source: |
            ctx.host.cpu = new HashMap();
            ctx.host.cpu.usage = Math.round(ctx.jamf_protect.telemetry?.event?.performance?.metrics?.cpu_percentage *10) / 1000.0;
on_failure:
- append:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
