---
description: Pipeline for Jamf Protect Telemetry events.
processors:

##########################
## ECS Event Specific ##
##########################
    - set:
        field: event.reason
        value: A user has logged into the system via OpenSSH
    - append:
        field: event.type
        value: start
    - append:
        field: event.category
        value: authentication  
    - append:
        field: event.category
        value: session 
    - script:
        lang: painless
        source: |
            if (ctx.jamf_protect?.telemetry?.event?.openssh_login?.success != null) {
              if (ctx.jamf_protect.telemetry.event.openssh_login.success == true) {
                ctx.event = ctx.event != null ? ctx.event : new HashMap();
                ctx.event.outcome = 'success';
              } else if (ctx.jamf_protect.telemetry.event.openssh_login.success == false) {
                ctx.event = ctx.event != null ? ctx.event : new HashMap();
                ctx.event.outcome = 'failure';
              }
            } else {
              ctx.event = ctx.event != null ? ctx.event : new HashMap();
              ctx.event.outcome = 'unknown';
            }
    - convert:
        field: jamf_protect.telemetry.event.openssh_login.graphical_session_id
        target_field: jamf_protect.graphical_session_id
        type: string
        ignore_missing: true
    - rename:
        field: jamf_protect.telemetry.event.openssh_login.username
        target_field: user.name
        ignore_missing: true
    - script:
        lang: painless
        source: >
            if (ctx.jamf_protect?.telemetry?.event?.openssh_login?.source_address_type != null) {
                def itemType = ctx.jamf_protect.telemetry.event.openssh_login.source_address_type;
                def itemTypeMap = [
                    0: 'Unknown',
                    1: 'IPv4',
                    2: 'IPv6',
                    3: 'UNIX Socket'
                ];
                def itemTypeString = itemTypeMap.containsKey(itemType) ? itemTypeMap[itemType] : 'Unknown';
                ctx.jamf_protect = ctx.jamf_protect != null ? ctx.jamf_protect : new HashMap();
                ctx.jamf_protect.source_address_type = itemTypeString;
            }
    - script:
        lang: painless
        source: >
            if (ctx.jamf_protect?.telemetry?.event?.openssh_login?.result_type != null) {
            def itemType = ctx.jamf_protect.telemetry.event.openssh_login.result_type;
            def itemTypeMap = [
                0: 'Exceeded maximum attempts',
                1: 'Denied by root',
                2: 'Success',
                3: 'no reason',
                4: 'Password',
                5: 'kbdint',
                6: 'public key',
                7: 'Host based',
                8: 'gss api',
                9: 'invalid user'
            ];
            def itemTypeString = itemTypeMap.containsKey(itemType) ? itemTypeMap[itemType] : 'Unknown';
            ctx.jamf_protect = ctx.jamf_protect != null ? ctx.jamf_protect : new HashMap();
            ctx.jamf_protect.authentication_result_type = itemTypeString;
            }
##########################
## ECS Process ##
##########################
    - pipeline:
        name: '{{ IngestPipeline "pipeline_object_process" }}'
