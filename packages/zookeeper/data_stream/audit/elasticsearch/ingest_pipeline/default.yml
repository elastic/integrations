---
description: Pipeline for parsing ZooKeeper log messages
processors:
- set:
    field: ecs.version
    value: '8.2.0'
- rename:
    field: message
    target_field: event.original
- grok:
    field: event.original
    patterns:
      - '%{TIMESTAMP_ISO8601:_tmp.timestamp}%{SPACE}%{LOGLEVEL:log.level}%{SPACE}%{CALLER_CLASS:log.logger}:%{SPACE}%{GREEDYDATA:_tmp.message}'
    pattern_definitions:
      CALLER_CLASS: (%{JAVACLASS}|%{NOTSPACE})
- set:
    field: event.timezone
    value: "{{_tmp.tz_offset}}"
    if: ctx._tmp?.tz_offset != null && ctx._tmp?.tz_offset != 'local'
- date:
    if: ctx.event.timezone == null
    field: _tmp.timestamp
    target_field: '@timestamp'
    formats:
    - yyyy-MM-dd HH:mm:ss,SSS
- date:
    if: ctx.event.timezone != null
    field: _tmp.timestamp
    target_field: '@timestamp'
    formats:
    - yyyy-MM-dd HH:mm:ss,SSS
    timezone: '{{ event.timezone }}'
- kv:
    field: _tmp.message
    field_split: "\\s+"
    value_split: "="
    target_field: zookeeper.audit
- rename:
    field: zookeeper.audit.operation
    target_field: event.action
    ignore_missing: true
- set:
    field: event.outcome
    value: "{{zookeeper.audit.result}}"
    ignore_empty_value: true
    if: '["success","failure"].contains(ctx.zookeeper?.audit?.result)'
- rename:
    field: zookeeper.audit.ip
    target_field: client.address
    ignore_missing: true
- convert:
    field: client.address
    target_field: client.ip
    type: ip
    ignore_missing: true
- geoip:
    field: client.ip
    target_field: client.geo
    if: ctx?.client?.ip != null
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: client.ip
    target_field: client.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
    if: ctx?.client?.ip != null
- set:
    field: user.id
    value: "{{zookeeper.audit.user}}"
    ignore_empty_value: true
- split:
    field: zookeeper.audit.user
    separator: ","
    ignore_missing: true
- append:
    field: related.user
    value: '{{user.id}}'
    if: ctx?.user?.id != null
- append:
    field: related.ip
    value: '{{client.ip}}'
    if: ctx?.client?.ip != null
- remove:
    field:
    - _tmp
    ignore_missing: true
- remove:
    field: event.original
    if: "ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))"
    ignore_failure: true
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
