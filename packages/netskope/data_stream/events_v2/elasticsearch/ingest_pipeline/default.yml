---
description: Pipeline for processing events v2 logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: netskope.events_v2
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - drop:
      tag: drop_alert_events
      if: ctx.netskope?.events_v2?.alert == "yes"
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |-
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == '-' || v == 'N/A' || v == 'NotChecked' || v == 'NotAvailable' || v == 'NoSSL'
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
              handleMap(v);
            } else if (v instanceof List) {
              handleList(v);
            }
            return v == '-' || v == 'N/A' || v == 'NotChecked' || v == 'NotAvailable' || v == 'NoSSL'
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_event_kind
      value: event
  - set:
      field: event.id
      tag: set_event_id_from_events_v2__id
      copy_from: netskope.events_v2._id
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_events_v2_acting_user_into_related_user
      value: '{{{netskope.events_v2.acting_user}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.acting_user != null
  - set:
      field: event.action
      tag: set_event_action_from_events_v2_action
      copy_from: netskope.events_v2.action
      ignore_empty_value: true
  - lowercase:
      field: event.action
      tag: lowercase_event_action
      ignore_missing: true
  - split:
      field: event.action
      tag: split_event_action
      separator: \s+
      ignore_missing: true
      if: ctx.event?.action != null && ctx.event?.action != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - join:
      field: event.action
      tag: join_event_action
      separator: '-'
      if: ctx.event?.action != null && ctx.event?.action != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: event.category
      tag: append_network_to_event_category
      value: network
      if: ctx.netskope?.events_v2?.record_type == "network"
  - append:
      field: event.type
      tag: append_allowed_to_event_type
      value: allowed
      if: ctx.netskope?.events_v2?.record_type == "network" && ctx.event?.action == 'allow'
  - append:
      field: event.type
      tag: append_denied_to_event_type
      value: denied
      if: ctx.netskope?.events_v2?.record_type == "network" && ctx.event?.action == 'block'
  - append:
      field: event.type
      tag: append_allow_to_event_type
      value: info
      if: ctx.event?.type == null
  - set:
      field: event.outcome
      tag: set_event_outcome_to_success
      value: success
      if: ctx.netskope?.events_v2?.activity != null && ['success', 'pass'].contains(ctx.netskope.events_v2.activity.toLowerCase())
  - set:
      field: event.outcome
      tag: set_event_outcome_to_failure
      value: failure
      if: ctx.netskope?.events_v2?.activity != null && ctx.netskope.events_v2.activity.toLowerCase().contains('fail')
  - set:
      field: event.outcome
      tag: set_event_outcome_to_failure
      value: unknown
      if: ctx.event?.outcome == null
  - set:
      field: network.application
      tag: set_network_application_from_events_v2_app
      copy_from: netskope.events_v2.app
      ignore_empty_value: true
  - lowercase:
      field: network.application
      tag: lowercase_network_application
      ignore_missing: true
  - convert:
      field: netskope.events_v2.app_session_id
      tag: convert_app_session_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.app_session_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.browser_session_id
      tag: convert_browser_session_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.browser_session_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.cci
      tag: convert_cci_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.cci
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.client_bytes
      tag: convert_client_bytes_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.client_bytes
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: client.bytes
      tag: set_client_bytes_from_events_v2_client_bytes
      copy_from: netskope.events_v2.client_bytes
      ignore_empty_value: true
  - set:
      field: source.bytes
      tag: copy_client_bytes_to_source_bytes
      copy_from: client.bytes
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.client_packets
      tag: convert_client_packets_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.client_packets
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: client.packets
      tag: set_client_packets_from_events_v2_client_packets
      copy_from: netskope.events_v2.client_packets
      ignore_empty_value: true
  - set:
      field: source.packets
      tag: copy_client_packets_to_source_packets
      copy_from: client.packets
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.conn_duration
      tag: convert_conn_duration_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.conn_duration
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: netskope.events_v2.conn_endtime
      tag: date_conn_endtime
      target_field: netskope.events_v2.conn_endtime
      formats:
        - epoch_second
      if: ctx.netskope?.events_v2?.conn_endtime != null && ctx.netskope.events_v2.conn_endtime != ''
      on_failure:
        - remove:
            field: netskope.events_v2.conn_endtime
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: netskope.events_v2.conn_starttime
      tag: date_conn_starttime
      target_field: netskope.events_v2.conn_starttime
      formats:
        - epoch_second
      if: ctx.netskope?.events_v2?.conn_starttime != null && ctx.netskope.events_v2.conn_starttime != ''
      on_failure:
        - remove:
            field: netskope.events_v2.conn_starttime
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.connection_id
      tag: convert_connection_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.connection_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.dlp_incident_id
      tag: convert_dlp_incident_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dlp_incident_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.dlp_parent_id
      tag: convert_dlp_parent_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dlp_parent_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.dlp_rule_count
      tag: convert_dlp_rule_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dlp_rule_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.dlp_is_unique_count
      tag: convert_dlp_is_unique_count_to_boolean
      type: boolean
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dlp_is_unique_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.dlp_unique_count
      tag: convert_dlp_unique_count_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dlp_unique_count
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.domain_ip
      tag: convert_domain_ip_to_ip
      target_field: netskope.events_v2.domain_ip
      type: ip
      ignore_missing: true
      if: ctx.netskope?.events_v2?.domain_ip != ''
      on_failure:
        - remove:
            field: netskope.events_v2.domain_ip
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      tag: append_events_v2_domain_ip_into_related_ip
      value: '{{{netskope.events_v2.domain_ip}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.domain_ip != null
  - set:
      field: destination.geo.country_iso_code
      tag: set_destination_geo_country_iso_code_from_events_v2_dst_country
      copy_from: netskope.events_v2.dst_country
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.dst_geoip_src
      tag: convert_dst_geoip_src_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dst_geoip_src
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.dst_latitude
      tag: convert_dst_latitude_to_double
      type: double
      ignore_missing: true
      on_failure:
        - rename:
            field: netskope.events_v2.dst_latitude
            tag: rename_dst_latitude_to_dst_latitude_keyword
            target_field: netskope.events_v2.dst_latitude_keyword
  - convert:
      field: netskope.events_v2.dst_longitude
      tag: convert_dst_longitude_to_double
      type: double
      ignore_missing: true
      on_failure:
        - rename:
            field: netskope.events_v2.dst_longitude
            tag: rename_dst_longitude_to_dst_longitude_keyword
            target_field: netskope.events_v2.dst_longitude_keyword
  - set:
      field: destination.geo.location.lat
      tag: set_destination_geo_location_from_dst_latitude
      copy_from: netskope.events_v2.dst_latitude
      ignore_empty_value: true
  - set:
      field: destination.geo.location.lon
      tag: set_destination_geo_location_from_dst_longitude
      copy_from: netskope.events_v2.dst_longitude
      ignore_empty_value: true
  - remove:
      field: destination.geo.location
      if: >- 
        !(ctx.destination?.geo?.location?.lat instanceof double)
        || !(ctx.destination.geo.location.lon instanceof double)
        || ctx.destination.geo.location.lat < -90.0
        || ctx.destination.geo.location.lat > 90.0
        || ctx.destination.geo.location.lon < -180.0
        || ctx.destination.geo.location.lon > 180.0
      ignore_failure: true
  - set:
      field: destination.geo.city_name
      tag: set_destination_geo_city_name_from_events_v2_dst_location
      copy_from: netskope.events_v2.dst_location
      ignore_empty_value: true
  - set:
      field: destination.geo.region_name
      tag: set_destination_geo_region_name_from_events_v2_dst_region
      copy_from: netskope.events_v2.dst_region
      ignore_empty_value: true
  - set:
      field: destination.geo.timezone
      tag: set_destination_geo_timezone_from_events_v2_dst_timezone
      copy_from: netskope.events_v2.dst_timezone
      ignore_empty_value: true
  - set:
      field: destination.geo.postal_code
      tag: set_destination_geo_postal_code_from_events_v2_dst_zipcode
      copy_from: netskope.events_v2.dst_zipcode
      ignore_empty_value: true
  - set:
      field: destination.domain
      tag: set_destination_domain_from_events_v2_dsthost
      copy_from: netskope.events_v2.dsthost
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_events_v2_dsthost_into_related_hosts
      value: '{{{netskope.events_v2.dsthost}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.dsthost != null
  - convert:
      field: netskope.events_v2.dstip
      tag: convert_dstip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.netskope?.events_v2?.dstip != ''
      on_failure:
        - remove:
            field: netskope.events_v2.dstip
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: destination.ip
      tag: set_destination_ip_from_events_v2_dstip
      copy_from: netskope.events_v2.dstip
      ignore_empty_value: true
  - append:
      field: related.ip
      tag: append_events_v2_dstip_into_related_ip
      value: '{{{netskope.events_v2.dstip}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.dstip != null
  - convert:
      field: netskope.events_v2.dstport
      tag: convert_dstport_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.dstport
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: destination.port
      tag: set_destination_port_from_events_v2_dstport
      copy_from: netskope.events_v2.dstport
      ignore_empty_value: true
  - date:
      field: netskope.events_v2.end_time
      tag: date_end_time
      target_field: netskope.events_v2.end_time
      formats:
        - 'yyyy-MM-dd HH:mm:ss'
        - ISO8601
      if: ctx.netskope?.events_v2?.end_time != null && ctx.netskope.events_v2.end_time != ''
      on_failure:
        - remove:
            field: netskope.events_v2.end_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.end
      tag: set_event_end_from_events_v2_end_time
      copy_from: netskope.events_v2.end_time
      ignore_empty_value: true
  - set:
      field: file.path
      tag: set_file_path_from_events_v2_file_path
      copy_from: netskope.events_v2.file_path
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.file_size
      tag: convert_file_size_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.file_size
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: file.size
      tag: set_file_size_from_events_v2_file_size
      copy_from: netskope.events_v2.file_size
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_events_v2_from_user_into_related_user
      value: '{{{netskope.events_v2.from_user}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.from_user != null
  - set:
      field: host.name
      tag: set_host_name_from_events_v2_hostname
      copy_from: netskope.events_v2.hostname
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_events_v2_hostname_into_related_hosts
      value: '{{{netskope.events_v2.hostname}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.hostname != null
  - convert:
      field: netskope.events_v2.incident_id
      tag: convert_incident_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
           field: netskope.events_v2.incident_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: network.transport
      tag: set_network_transport_from_events_v2_ip_protocol
      copy_from: netskope.events_v2.ip_protocol
      ignore_empty_value: true
  - lowercase:
      field: network.transport
      tag: lowercase_network_transport
      ignore_missing: true
  - convert:
      field: netskope.events_v2.latest_incident_id
      tag: convert_latest_incident_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.latest_incident_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: file.hash.md5
      tag: set_file_hash_md5_from_events_v2_md5
      copy_from: netskope.events_v2.md5
      ignore_empty_value: true
  - append:
      field: related.hash
      tag: append_events_v2_md5_into_related_hash
      value: '{{{netskope.events_v2.md5}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.md5 != null
  - convert:
      field: netskope.events_v2.numbytes
      tag: convert_numbytes_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.numbytes
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: network.bytes
      tag: set_network_bytes_from_events_v2_numbytes
      copy_from: netskope.events_v2.numbytes
      ignore_empty_value: true
  - set:
      field: host.os.full
      tag: set_host_os_full_from_events_v2_os
      copy_from: netskope.events_v2.os
      ignore_empty_value: true
  - set:
      field: host.os.family
      tag: set_host_os_family_from_events_v2_os_family
      copy_from: netskope.events_v2.os_family
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_events_v2_os_user_name_into_related_user
      value: '{{{netskope.events_v2.os_user_name}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.os_user_name != null
  - dissect:
      field: netskope.events_v2.os_version
      tag: dissect_os_version
      pattern: '%{} %{host.os.version}'
      ignore_failure: true
  - append:
      field: related.user
      tag: append_events_v2_owner_into_related_user
      value: '{{{netskope.events_v2.owner}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.owner != null
  - convert:
      field: netskope.events_v2.pid
      tag: convert_pid_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.pid
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: process.pid
      tag: set_process_pid_from_events_v2_pid
      copy_from: netskope.events_v2.pid
      ignore_empty_value: true
  - set:
      field: file.x509.subject.distinguished_name
      tag: set_file_x509_subject_distinguished_name_from_events_v2_process_cert_subject
      copy_from: netskope.events_v2.process_cert_subject
      ignore_empty_value: true
  - set:
      field: process.name
      tag: set_process_name_from_events_v2_process_name
      copy_from: netskope.events_v2.process_name
      ignore_empty_value: true
  - set:
      field: http.request.referrer
      tag: set_http_request_referrer_from_events_v2_referer
      copy_from: netskope.events_v2.referer
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.req_cnt
      tag: convert_req_cnt_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.req_cnt
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.request_id
      tag: convert_request_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.request_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.resp_cnt
      tag: convert_resp_cnt_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.resp_cnt
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.response_time
      tag: convert_response_time_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.response_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.server_bytes
      tag: convert_server_bytes_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.server_bytes
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: server.bytes
      tag: set_server_bytes_from_events_v2_server_bytes
      copy_from: netskope.events_v2.server_bytes
      ignore_empty_value: true
  - set:
      field: destination.bytes
      tag: copy_server_bytes_to_destination_bytes
      copy_from: server.bytes
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.server_packets
      tag: convert_server_packets_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.server_packets
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: server.packets
      tag: set_server_packets_from_events_v2_server_packets
      copy_from: netskope.events_v2.server_packets
      ignore_empty_value: true
  - set:
      field: destination.packets
      tag: copy_server_packets_to_destination_packets
      copy_from: server.packets
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.session_duration
      tag: convert_session_duration_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.session_duration
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      description: Set event severity based on severity.
      if: ctx.netskope?.events_v2?.severity != null
      lang: painless
      params:
        informational: 21
        low: 21
        medium: 47
        high: 73
      source: |-
        ctx.event = ctx.event ?: [:];
        ctx.event.severity = params.get(ctx.netskope.events_v2.severity.toLowerCase());
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: file.hash.sha256
      tag: set_file_hash_sha256_from_events_v2_sha256
      copy_from: netskope.events_v2.sha256
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.src_geoip_src
      tag: convert_src_geoip_src_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.src_geoip_src
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.src_latitude
      tag: convert_src_latitude_to_double
      type: double
      ignore_missing: true
      on_failure:
        - rename:
            field: netskope.events_v2.src_latitude
            tag: rename_src_latitude_to_src_latitude_keyword
            target_field: netskope.events_v2.src_latitude_keyword
  - convert:
      field: netskope.events_v2.src_longitude
      tag: convert_src_longitude_to_double
      type: double
      ignore_missing: true
      on_failure:
        - rename:
            field: netskope.events_v2.src_longitude
            tag: rename_src_longitude_to_src_longitude_keyword
            target_field: netskope.events_v2.src_longitude_keyword
  - set:
      field: source.geo.location.lat
      tag: set_source_geo_location_from_src_latitude
      copy_from: netskope.events_v2.src_latitude
      ignore_empty_value: true
  - set:
      field: source.geo.location.lon
      tag: set_source_geo_location_from_src_longitude
      copy_from: netskope.events_v2.src_longitude
      ignore_empty_value: true
  - remove:
      field: source.geo.location
      if: >-
        !(ctx.source?.geo?.location?.lat instanceof double)
        || !(ctx.source.geo.location.lon instanceof double)
        || ctx.source.geo.location.lat < -90.0
        || ctx.source.geo.location.lat > 90.0
        || ctx.source.geo.location.lon < -180.0
        || ctx.source.geo.location.lon > 180.0
      ignore_failure: true
  - convert:
      field: netskope.events_v2.srcport
      tag: convert_srcport_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.srcport
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.geo.region_name
      tag: set_source_geo_region_name_from_src_region
      copy_from: netskope.events_v2.src_region
      ignore_empty_value: true
  - set:
      field: source.geo.postal_code
      tag: set_source_geo_postal_code_from_src_zipcode
      copy_from: netskope.events_v2.src_zipcode
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.srcip
      tag: convert_srcip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.netskope?.events_v2?.srcip != ''
      on_failure:
        - remove:
            field: netskope.events_v2.srcip
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.ip
      tag: set_source_ip_from_srcip
      copy_from: netskope.events_v2.srcip
      ignore_empty_value: true
  - set:
      field: source.port
      tag: set_source_port_from_srcport
      copy_from: netskope.events_v2.srcport
      ignore_empty_value: true
  - set:
      field: source.geo.country_iso_code
      tag: set_source_geo_country_iso_code_from_src_country
      copy_from: netskope.events_v2.src_country
      ignore_empty_value: true
  - date:
      field: netskope.events_v2.start_time
      tag: date_start_time
      target_field: netskope.events_v2.start_time
      formats:
        - ISO8601
      if: ctx.netskope?.events_v2?.start_time != null && ctx.netskope.events_v2.start_time != ''
      on_failure:
        - remove:
            field: netskope.events_v2.start_time
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.start
      tag: set_event_start_from_events_v2_start_time
      copy_from: netskope.events_v2.start_time
      ignore_empty_value: true
  - date:
      field: netskope.events_v2.timestamp
      tag: date_timestamp
      target_field: netskope.events_v2.timestamp
      formats:
        - epoch_second
      if: ctx.netskope?.events_v2?.timestamp != null && ctx.netskope.events_v2.timestamp != ''
      on_failure:
        - remove:
            field: netskope.events_v2.timestamp
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_events_v2_timestamp
      copy_from: netskope.events_v2.timestamp
      ignore_empty_value: true
  - set:
      field: user.target.email
      tag: set_user_target_email_from_events_v2_to_user
      copy_from: netskope.events_v2.to_user
      ignore_empty_value: true
  - append:
      field: related.user
      tag: append_events_v2_to_user_into_related_user
      value: '{{{netskope.events_v2.to_user}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.to_user != null
  - convert:
      field: netskope.events_v2.total_packets
      tag: convert_total_packets_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.total_packets
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: network.packets
      tag: set_network_packets_from_events_v2_total_packets
      copy_from: netskope.events_v2.total_packets
      ignore_empty_value: true
  - convert:
      field: netskope.events_v2.transaction_id
      tag: convert_transaction_id_to_long
      type: long
      ignore_missing: true
      on_failure:
        - remove:
            field: netskope.events_v2.transaction_id
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: url.original
      tag: set_url_original_from_events_v2_url
      copy_from: netskope.events_v2.url
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_events_v2_url_into_related_hosts
      value: '{{{netskope.events_v2.url}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.url != null
  - set:
      field: user.email
      tag: set_user_email_from_events_v2_user
      copy_from: netskope.events_v2.user
      ignore_empty_value: true
  - dissect:
      field: user.email
      tag: create_user_name_and_user_domain
      pattern: "%{user.name}@%{user.domain}"
      ignore_missing: true
      if: ctx.user?.email != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: related.user
      tag: append_user_name_into_related_user
      value: '{{{user.name}}}'
      allow_duplicates: false
      if: ctx.user?.name != null
  - append:
      field: related.user
      tag: append_events_v2_user_into_related_user
      value: '{{{netskope.events_v2.user}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.user != null
  - append:
      field: related.user
      tag: append_events_v2_user_id_into_related_user
      value: '{{{netskope.events_v2.user_id}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.user_id != null
  - user_agent:
      field: netskope.events_v2.useragent
      if: ctx.netskope?.events_v2?.useragent != null && ctx.netskope.events_v2.useragent != ''
      tag: 'user_agent_processor'
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag fail-{{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: netskope.events_v2.userip
      tag: convert_userip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.netskope?.events_v2?.userip != ''
      on_failure:
        - remove:
            field: netskope.events_v2.userip
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      tag: append_events_v2_userip_into_related_ip
      value: '{{{netskope.events_v2.userip}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.userip != null
  - convert:
      field: netskope.events_v2.app_session_id
      tag: convert_app_session_id
      target_field: netskope.events_v2.app_session_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.dlp_incident_id
      tag: convert_dlp_incident_id
      target_field: netskope.events_v2.dlp_incident_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.connection_id
      tag: convert_connection_id
      target_field: netskope.events_v2.connection_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.latest_incident_id
      tag: convert_latest_incident_id
      target_field: netskope.events_v2.latest_incident_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.browser_session_id
      tag: convert_browser_session_id
      target_field: netskope.events_v2.browser_session_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.request_id
      tag: convert_request_id
      target_field: netskope.events_v2.request_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.transaction_id
      tag: convert_transaction_id
      target_field: netskope.events_v2.transaction_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.incident_id
      tag: convert_incident_id
      target_field: netskope.events_v2.incident_id
      type: string
      ignore_missing: true
  - convert:
      field: netskope.events_v2.dlp_parent_id
      tag: convert_dlp_parent_id
      target_field: netskope.events_v2.dlp_parent_id
      type: string
      ignore_missing: true
  - append:
      field: related.user
      tag: append_events_v2_assignee_into_related_user
      value: '{{{netskope.events_v2.assignee}}}'
      allow_duplicates: false
      if: ctx.netskope?.events_v2?.assignee != null
  - remove:
      field:
        - netskope.events_v2._id
        - netskope.events_v2.action
        - netskope.events_v2.app
        - netskope.events_v2.client_bytes
        - netskope.events_v2.client_packets
        - netskope.events_v2.dst_country
        - netskope.events_v2.dst_location
        - netskope.events_v2.dst_region
        - netskope.events_v2.dst_timezone
        - netskope.events_v2.dst_zipcode
        - netskope.events_v2.dsthost
        - netskope.events_v2.dstip
        - netskope.events_v2.dstport
        - netskope.events_v2.end_time
        - netskope.events_v2.file_path
        - netskope.events_v2.file_size
        - netskope.events_v2.hostname
        - netskope.events_v2.ip_protocol
        - netskope.events_v2.md5
        - netskope.events_v2.numbytes
        - netskope.events_v2.os
        - netskope.events_v2.os_family
        - netskope.events_v2.os_version
        - netskope.events_v2.pid
        - netskope.events_v2.process_cert_subject
        - netskope.events_v2.process_name
        - netskope.events_v2.referer
        - netskope.events_v2.server_bytes
        - netskope.events_v2.server_packets
        - netskope.events_v2.sha256
        - netskope.events_v2.start_time
        - netskope.events_v2.timestamp
        - netskope.events_v2.to_user
        - netskope.events_v2.total_packets
        - netskope.events_v2.url
        - netskope.events_v2.user
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  # Cleanup
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: |-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
