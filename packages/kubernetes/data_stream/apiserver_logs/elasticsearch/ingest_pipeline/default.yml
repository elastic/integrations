---
description: Pipeline for processing Kubernetes apiserver logs.
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: event.kind
      value: event
  - set:
      field: event.category
      value: ["api"]
  - append:
      field: event.type
      value: ["access"]
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: 'ctx.event?.original == null'
      description: 'Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.'
  - remove:
      field: message
      ignore_missing: true
      if: 'ctx.event?.original != null'
      description: 'The `message` field is no longer required if the document has an `event.original` field.'
  - grok:
      field: event.original
      patterns:
      # Format as defined in klog docs: https://github.com/kubernetes/klog/blob/75663bb798999a49e3e4c0f2375ed5cca8164194/klog.go#L639C2-L639C50
      # Lmmdd hh:mm:ss.uuuuuu threadid file:line] msg...
       - ^%{KLOGSEVERITY:_tmp.severity_char}%{KLOGTIMESTAMP:_tmp.timestamp}\s+%{POSINT:process.thread.id:long} %{DATA:log.origin.file.name}\:%{POSINT:log.origin.file.line:long}\] %{GREEDYDATA:message}$
      pattern_definitions:
        KLOGSEVERITY: '[D,I,W,E,C]'
        KLOGTIMESTAMP: '\d{4}\s%{TIME}'
  - script:
      description: Set event.severity
      lang: painless
      source: |
        String klog_severity =
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }

#DEBUG, INFO, WARNING, ERROR, and CRITICAL

on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
