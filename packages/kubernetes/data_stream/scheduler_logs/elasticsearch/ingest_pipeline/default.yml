---
description: Pipeline for processing Kubernetes scheduler logs.
processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: event.kind
      value: event
  - set:
      field: event.category
      value: ["api"]
  - append:
      field: event.type
      value: ["access"]
  - set:
      field: orchestrator.type
      value: kubernetes
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: 'ctx.event?.original == null'
      description: 'Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.'
  - remove:
      field: message
      ignore_missing: true
      if: 'ctx.event?.original != null'
      description: 'The `message` field is no longer required if the document has an `event.original` field.'
  - grok:
      field: event.original
      patterns:
      # Format as defined in klog docs: https://github.com/kubernetes/klog/blob/75663bb798999a49e3e4c0f2375ed5cca8164194/klog.go#L639C2-L639C50
      # Lmmdd hh:mm:ss.uuuuuu threadid file:line] msg...
       - '^%{KLOGSEVERITY:_tmp.severity_char}%{KLOGTIMESTAMP:_tmp.timestamp}\s+%{POSINT:process.thread.id:long} %{DATA:log.origin.file.name}\:%{POSINT:log.origin.file.line:long}\] "%{DATA:message}" %{KLOGPARAMETERS:_tmp.klog_kv_string}$'
       - '^%{KLOGSEVERITY:_tmp.severity_char}%{KLOGTIMESTAMP:_tmp.timestamp}\s+%{POSINT:process.thread.id:long} %{DATA:log.origin.file.name}\:%{POSINT:log.origin.file.line:long}\] %{GREEDYDATA:message}$'
      pattern_definitions:
        KLOGSEVERITY: '[D,I,W,E,C]'
        KLOGTIMESTAMP: '\d{4}\s%{TIME}'
        KLOGPARAMETERS: '[a-zA-Z0-9_\-]+=.*'
  - script:
      description: Parse klog severity
      lang: painless
      source: |
        String severity_char = ctx._tmp?.severity_char;
        if (severity_char == 'D') {
          ctx.log.level = 'debug';
          ctx.event.severity = 7;
        }
        else if (severity_char == 'I') {
          ctx.log.level = 'informational';
          ctx.event.severity = 6;
        }
        else if (severity_char == 'W') {
          ctx.log.level = 'warning';
          ctx.event.severity = 4;
        }
        else if (severity_char == 'E') {
          ctx.log.level = 'error';
          ctx.event.severity = 3;
        }
        else if (severity_char == 'C') {
          ctx.log.level = 'critical';
          ctx.event.severity = 2;
        }
  - date:
      field: _tmp.timestamp
      formats:
        - MMdd HH:mm:ss.SSSSSS
  - kv:
      field: _tmp.klog_kv_string
      field_split: ' (?=[a-zA-Z0-9_\-]+=)'
      value_split: '(?<=\S+)='
      target_field: _tmp.klog_parameters
      strip_brackets: true
      ignore_missing: true
  - rename:
      field: _tmp.klog_parameters.node
      target_field: kubernetes.node.name
      ignore_missing: true
  - rename:
      field: _tmp.klog_parameters.pod
      target_field: kubernetes.pod.name
      ignore_missing: true
  - convert:
      field: _tmp.klog_parameters.evaluatedNodes
      target_field: kubernetes.scheduler.evaluated_nodes
      type: long
      ignore_missing: true
  - remove:
      field: _tmp.klog_parameters.evaluatedNodes
      ignore_missing: true
  - convert:
      field: _tmp.klog_parameters.feasibleNodes
      target_field: kubernetes.scheduler.feasible_nodes
      type: long
      ignore_missing: true
  - remove:
      field: _tmp.klog_parameters.feasibleNodes
      ignore_missing: true
  - rename:
      field: _tmp.klog_parameters
      target_field: kubernetes.scheduler.parameters
      if: 'ctx?._tmp?.klog_parameters != null && ctx._tmp.klog_parameters.size() > 0'
  - remove:
      field: _tmp

on_failure:
  - append:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: >-
        Processor '{{ _ingest.on_failure_processor_type }}'
        {{#_ingest.on_failure_processor_tag}}with tag '{{ _ingest.on_failure_processor_tag }}'
        {{/_ingest.on_failure_processor_tag}}failed with message '{{ _ingest.on_failure_message }}'

