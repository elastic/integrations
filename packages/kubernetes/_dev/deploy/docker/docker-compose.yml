version: '2.3'
services:
  kubernetes_is_ready:
    image: tianon/true
    depends_on:
      kubernetes:
        condition: service_healthy
  kubernetes:
    image: nginx:alpine
    ports:
      - 8080
      - 10249-10252
      - 25000
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - kube-state-metrics
      - apiserver
      - controllermanager
      - scheduler
      - proxy
      - kubelet
    healthcheck:
      interval: 1s
      retries: 120
      timeout: 120s
      test: |-
        curl -f -s http://localhost:8080/metrics -o /dev/null &&
        curl -f -s http://localhost:10249/metrics -o /dev/null &&
        curl -f -s http://localhost:10250/stats/summary -o /dev/null &&
        curl -f -s http://localhost:10251/metrics -o /dev/null &&
        curl -f -s http://localhost:10252/metrics -o /dev/null &&
        curl -f -s http://localhost:25000/metrics -o /dev/null
  kube-state-metrics:
    image: chanjarster/prometheus-mock-data:latest
    ports:
      - 8080
    volumes:
      - ./kube_state_metrics_data.1.8.txt:/home/java-app/etc/scrape-data.txt
  apiserver:
    image: chanjarster/prometheus-mock-data:latest
    ports:
      - 8080
    volumes:
      - ./apiserver_metrics.1.14.txt:/home/java-app/etc/scrape-data.txt
  controllermanager:
    image: chanjarster/prometheus-mock-data:latest
    ports:
      - 8080
    volumes:
      - ./controllermanager_metrics.1.14.txt:/home/java-app/etc/scrape-data.txt
  scheduler:
    image: chanjarster/prometheus-mock-data:latest
    ports:
      - 8080
    volumes:
      - ./scheduler_metrics.1.17.txt:/home/java-app/etc/scrape-data.txt
  proxy:
    image: chanjarster/prometheus-mock-data:latest
    ports:
      - 8080
    volumes:
      - ./proxy_metrics.1.14.txt:/home/java-app/etc/scrape-data.txt
  kubelet:
    image: clue/json-server
    ports:
      - 80
    volumes:
      - ./stats_summary.json:/data/db.json
