config_version: 2
interval: 1m
resource.timeout: 15
resource.url: "{{url}}"
state:
  url: "{{url}}"
program: |
  request("GET", state.url)
    .do_request()
    .as(resp, resp.StatusCode == 200 ?
      {
        "events": [{
          "message": {
            "state": "ok",
            "result": bytes(resp.Body).decode_json()
          }.encode_json()
        }]
      }
    :
      {
        "events": [{
          "message": {
            "state": "error",
            "error": {
              "code": string(resp.StatusCode),
              "message": "GET: " + state.url + " - " + (
                size(resp.Body) != 0 ?
                  string(resp.Body)
                :
                  string(resp.Status) + " (" + string(resp.StatusCode) + ")"
              )
            }
          }.encode_json()
        }]
      }
    )
tags:
  - preserve_original_event
  - agentless-hello-world
publisher_pipeline.disable_host: true
