---
description: Pipeline for processing Agentless Hello World generic logs.
processors:
  - set:
      field: ecs.version
      value: '9.1.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      field: event.original
      target_field: agentless_hello_world.generic
      on_failure:
        - set:
            field: error.type
            value: "json_parse_error"
        - set:
            field: error.message
            value: "{{{ _ingest.on_failure_message }}}"
  - set:
      field: event.kind
      value: event
  - set:
      field: event.type
      value: [info]
  - set:
      field: event.category
      value: [web]
  - remove:
      field: message
      if: ctx.event?.original != null
      ignore_missing: true
  - remove:
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
  - script:
      lang: painless
      description: This script processor iterates over the whole document to remove fields with null values.
      source: |
        void handleMap(Map map) {
          for (def x : map.values()) {
            if (x instanceof Map) {
                handleMap(x);
            } else if (x instanceof List) {
                handleList(x);
            }
          }
          map.values().removeIf(v -> v == null);
        }
        void handleList(List list) {
          for (def x : list) {
              if (x instanceof Map) {
                  handleMap(x);
              } else if (x instanceof List) {
                  handleList(x);
              }
          }
        }
        handleMap(ctx);
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
