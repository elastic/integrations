---
description: Pipeline for processing Kafka topic metrics
processors:
  # Extract topic name and partition ID from kafka.cluster MBeans
  - grok:
      field: "jolokia.metrics.mbean"
      patterns:
        - "kafka.cluster:type=Partition,name=%{NOTSPACE:metric_name},topic=%{NOTSPACE:topic_name},partition=%{NUMBER:partition_id}"
      if: "ctx.jolokia?.metrics?.mbean != null && ctx.jolokia.metrics.mbean.startsWith('kafka.cluster:type=Partition')"
      ignore_failure: true

  # Extract topic name and partition ID from kafka.log MBeans
  - grok:
      field: "jolokia.metrics.mbean"
      patterns:
        - "kafka.log:type=Log,name=%{NOTSPACE:metric_name},topic=%{NOTSPACE:topic_name},partition=%{NUMBER:partition_id}"
      if: "ctx.jolokia?.metrics?.mbean != null && ctx.jolokia.metrics.mbean.startsWith('kafka.log:type=Log')"
      ignore_failure: true

  # Extract topic name from kafka.server MBeans (no partition)
  - grok:
      field: "jolokia.metrics.mbean"
      patterns:
        - "kafka.server:type=BrokerTopicMetrics,name=%{NOTSPACE:metric_name},topic=%{NOTSPACE:topic_name}"
      if: "ctx.jolokia?.metrics?.mbean != null && ctx.jolokia.metrics.mbean.startsWith('kafka.server:type=BrokerTopicMetrics')"
      ignore_failure: true

  # Set topic name field directly in jolokia.metrics
  - set:
      field: "jolokia.metrics.topic.name"
      copy_from: "topic_name"
      if: "ctx.topic_name != null"
      ignore_failure: true

  # Set partition ID field directly in jolokia.metrics
  - set:
      field: "jolokia.metrics.partition.id"
      copy_from: "partition_id"
      if: "ctx.partition_id != null"
      ignore_failure: true

  # Remove temporary fields
  - remove:
      field: "topic_name"
      ignore_missing: true
  
  - remove:
      field: "partition_id"
      ignore_missing: true
      
  - remove:
      field: "metric_name"
      ignore_missing: true

  - set:
      field: ecs.version
      value: '8.11.0'
  - rename:
      field: jolokia.metrics
      target_field: kafka.topic
      ignore_missing: true
      ignore_failure: true
  - set:
      field: event.kind
      value: metric
  - set:
      field: event.type
      value: [info]
  - set:
      field: service.type
      value: kafka
  

  # Add metric fingerprint list
  - script:
      lang: painless
      source: |
        def queue = new ArrayList();
        def fingerprint = new ArrayList();

        if (ctx.containsKey('kafka') && ctx.kafka.containsKey('topic')) {
            queue.add(['p': 'kafka.topic', 'v': ctx.kafka.topic]);

            while (!queue.isEmpty()) {
                def item = queue.remove(0);
                def path = item.p;
                def val = item.v;

                if (val instanceof Map) {
                    for (entry in val.entrySet()) {
                        def key = entry.getKey();
                        def child = entry.getValue();
                        def childPath = path + '.' + key;
                        queue.add(['p': childPath, 'v': child]);
                    }
                } else {
                    fingerprint.add(path);
                }
            }

            ctx.kafka_topic_metric_fingerprint = fingerprint;
        }

  - fingerprint:
      fields: [kafka_topic_metric_fingerprint]
      target_field: kafka.topic.metric_fingerprint
      ignore_failure: true

  # Cleanup
  - remove:
      field: kafka_topic_metric_fingerprint
      ignore_missing: true

  - remove:
      field: kafka.topic.mbean
      ignore_missing: true

  - remove:
      field: jolokia.metrics
      ignore_missing: true

on_failure:
  - set:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}} with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}} failed with message '{{{ _ingest.on_failure_message }}}'
