---
description: Pipeline for processing MongoDB Atlas metrics logs.
processors:
  - set:
      field: ecs.version
      value: 8.11.0
  - set:
      field: event.kind
      value: event
  - set:
      field: event.module
      value: mongodb_atlas
  - set:
      field: label.cpu_state
      value: "KERNEL"
      if: ctx.cpu_state_kernel != null
      ignore_empty_value: true
  - rename:
      field: cpu_state_kernel.MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL
      target_field: process.cpu.children.normalized.usage.max
      if: ctx.cpu_state_kernel?.MAX_PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL != null
      ignore_missing: true
  - rename:
      field: cpu_state_kernel.PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL
      target_field: process.cpu.children.normalized.usage.avrage
      if: ctx.cpu_state_kernel?.PROCESS_NORMALIZED_CPU_CHILDREN_KERNEL != null
      ignore_missing: true
  - set:
      field: label.cpu_state
      value: "USER"
      if: ctx.cpu_state_user != null
      ignore_empty_value: true
  - rename:
      field: cpu_state_user.MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER
      target_field: process.cpu.children.normalized.usage.max
      if: ctx.cpu_state_user?.MAX_PROCESS_NORMALIZED_CPU_CHILDREN_USER != null
      ignore_missing: true
  - rename:
      field: cpu_state_user.PROCESS_NORMALIZED_CPU_CHILDREN_USER
      target_field: process.cpu.children.normalized.usage.avrage
      if: ctx.cpu_state_user?.PROCESS_NORMALIZED_CPU_CHILDREN_USER != null
      ignore_missing: true
  - script:
      lang: painless
      source: |-
        boolean drop(Object o) {
          if (o == null || o == '') {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      description: Drops null/empty values recursively.
  - remove:
      field:
        - event.original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - remove:
      field:
        - json
      ignore_missing: true
  - set:
      field: event.kind
      value: pipeline_error
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false