---
description: Pipeline for Microsoft-Windows-Windows Defender/Operational events
processors:
  ## ECS and Event fields.

  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: log.level
      copy_from: winlog.level
      ignore_empty_value: true
      ignore_failure: true
      if: ctx.winlog?.level != ""
  - date:
      field: winlog.time_created
      tag: "time_created_date"
      formats:
        - ISO8601
      if: ctx.winlog?.time_created != null
      on_failure:
        - remove:
            field: winlog.time_created
            ignore_failure: true
        - append:
            field: error.message
            value: "fail-{{{ _ingest.on_failure_processor_tag }}}"
        - fail:
            message: "Processor {{ _ingest.on_failure_processor_type }} with tag {{ _ingest.on_failure_processor_tag }} in pipeline {{ _ingest.on_failure_pipeline }} failed with message: {{ _ingest.on_failure_message }}"
  - convert:
      field: error.code
      type: string
      ignore_missing: true
  - set:
      field: event.code
      value: '{{winlog.event_id}}'
  - set:
      field: event.action
      value: antivirus-configuration-changed
      if: ctx.event?.code == "5007"
  - set:
      field: event.action
      value: antivirus-updated
      if: ctx.event?.code == "2000"
  - set:
      field: event.action
      value: file-uploaded
      if: ctx.event?.code == "2050"
  - set:
      field: event.action
      value: malware-detected
      if: ctx.event?.code == "1116" || ctx.event?.code == "1117"
  - set:
      field: event.action
      value: malware-quarantined
      if: ctx.event?.code == "1117" && ctx.winlog?.event_data?.Action_Name == "Quarantine"
  - set:
      field: event.category
      value: ["configuration"]
      if: ctx.event?.code == "5007"
  - set:
      field: event.category
      value: ["file"]
      if: ctx.event?.code == "2050"
  - set:
      field: event.category
      value: ["malware"]
      if: ctx.event?.code == "1116" || ctx.event?.code == "1117"
  - set:
      field: event.category
      value: ["process"]
      override: false
      if: ctx.event?.category == null  
  - set:
      field: event.kind
      value: event
  - set:
      field: event.outcome
      value: success
      if: ctx.winlog?.event_data?.Error_Description == "The operation completed successfully. "
  - set:
      field: event.reference
      ignore_empty_value: true
      copy_from: winlog.event_data.FWLink
  - script:
      description: Set Event Types
      lang: painless
      source: |
        if (ctx?.event?.category instanceof List) {
          for (category in ctx.event.category) {
            if (category == 'configuration' && ctx?.event?.code == '5007') {
              ctx.event.type = ['change'];
              break;
            }
          }
        }
        if (ctx?.event?.type == null && ctx?.event?.category instanceof List) {
          for (category in ctx.event.category) {
            if (category == 'malware' || category == 'file' || category == 'process') {
              ctx.event.type = ['info'];
              break;
            }
          }
        }
        if (ctx?.event?.type == null && ctx?.event?.category instanceof List) {
          for (category in ctx.event.category) {
            if (category == 'process') {
              ctx.event.type = ['start'];
              break;
            }
          }
        }
  - set:
      field: destination.domain
      override: false
      ignore_empty_value: true
      copy_from: winlog.event_data.Destination
  - convert:
      field: winlog.record_id
      type: string
      ignore_failure: true
      ignore_missing: true


  ## User fields.

  - split:
      field: winlog.event_data.Detection_User
      separator: '\\'
      target_field: "_temp.user_parts"
      ignore_missing: true
  - split:
      field: winlog.event_data.User
      target_field: "_temp.user_parts"
      separator: '\\'
      if: ctx.winlog?.event_data?.User != null
  - set:
      field: user.domain
      value: "{{_temp.user_parts.0}}"
      ignore_failure: true
      ignore_empty_value: true
      if: ctx._temp?.user_parts != null && ctx._temp.user_parts.size() == 2
  - set:
      field: user.name
      value: "{{_temp.user_parts.1}}"
      ignore_failure: true
      ignore_empty_value: true
      if: ctx._temp?.user_parts != null && ctx._temp.user_parts.size() == 2
  - remove:
      field: _temp
      ignore_missing: true
      if: ctx._temp != null
  - remove:
      field: winlog.message
      ignore_missing: true
      if: ctx.winlog?.message != null

    ## File Fields

  - grok:
      field: winlog.event_data.Path
      patterns:
        - "file:_(?<file.path>[^;]+)(; process:_pid:%{NUMBER:process.pid})?"
      ignore_missing: true
  - split:
      field: winlog.event_data.Path
      separator: ";"
      target_field: windows_defender.evidence_paths
      ignore_missing: true
      ignore_failure: true
  - trim:
      field: windows_defender.evidence_paths
      ignore_missing: true
      ignore_failure: true
  - gsub:
      field: windows_defender.evidence_paths
      pattern: "file:_"
      replacement: ""
      ignore_missing: true
      ignore_failure: true
  - gsub:
      field: windows_defender.evidence_paths
      pattern: "process:_"
      replacement: ""
      ignore_missing: true
      ignore_failure: true
  - grok:
      field: winlog.event_data.FileName
      patterns:
        - 'file:_(?<file.path>[^;]+)(; process:_pid:%{NUMBER:process.pid})?'
      ignore_missing: true
  - set:
      field: "file.path"
      copy_from: "winlog.event_data.Path"
      override: false
      ignore_empty_value: true
  - set:
      field: "file.path"
      override: false
      ignore_empty_value: true
      copy_from: "winlog.event_data.Filename"
  - grok:
      field: file.path
      patterns:
        - '(?<file.name>([^\\\\]*$))'
      ignore_missing: true
      if: ctx.file?.name == null
  - grok:
      field: file.name
      patterns:
        - '\.%{GREEDYDATA:file.extension}$'
      ignore_missing: true
  - set:
      field: file.hash.sha256
      copy_from: winlog.event_data.Sha256
      override: false
      ignore_empty_value: true
      if: ctx.winlog?.event_data?.Sha256 != "-"

      ## Process Fields

  - rename:
      field: winlog.event_data.Target_Commandline
      target_field: process.command_line
      ignore_missing: true
  - rename:
      field: winlog.event_data.Parent_Commandline
      target_field: process.parent.command_line
      ignore_missing: true
  - rename:
      field: winlog.event_data.Process_Name
      target_field: process.executable
      ignore_missing: true
      if: ctx.process?.executable == null && ctx.event?.code != "1126"
  - rename:
      field: winlog.event_data.Process_Name
      target_field: process.name
      ignore_missing: true
      if: ctx.process?.name == null && ctx.event?.code == "1126"
  - grok:
      field: process.executable
      patterns:
        - '(?<process.name>([^\\]*$))'
      ignore_missing: true
      if: ctx.process?.name == null

      ## URL Fields
  - set:
      field: destination.domain
      override: false
      ignore_empty_value: true
      copy_from: winlog.event_data.Destination

on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
