---
description: Pipeline for processing Cloud Configuration Finding logs
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: '8.11.0'
  - rename:
      field: message
      tag: rename_message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
      description: 'Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.'
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      if: ctx.event?.original != null
      description: 'The `message` field is no longer required if the document has an `event.original` field.'
  - json:
      field: event.original
      tag: json_decoding
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.resource.subscription.cloudProvider
      tag: rename_cloudProvider
      target_field: wiz.cloud_configuration_finding.resource.subscription.cloud_provider
      ignore_missing: true
  - set:
      field: cloud.provider
      tag: set_cloud_provider
      copy_from: wiz.cloud_configuration_finding.resource.subscription.cloud_provider
      ignore_empty_value: true
  - rename:
      field: json.resource.region
      tag: rename_region
      target_field: wiz.cloud_configuration_finding.resource.region
      ignore_missing: true
  - set:
      field: cloud.region
      tag: set_cloud_region
      copy_from: wiz.cloud_configuration_finding.resource.region
      ignore_empty_value: true
  - append:
      field: event.category
      tag: append_event_category
      value: configuration
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - date:
      field: json.firstSeenAt
      target_field: wiz.cloud_configuration_finding.first_seen_at
      tag: date_set_firstseenat
      formats:
        - ISO8601
      if: ctx.json?.firstSeenAt != null && ctx.json.firstSeenAt != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      tag: set_event_created
      copy_from: wiz.cloud_configuration_finding.first_seen_at
      ignore_empty_value: true
  - rename:
      field: json.id
      tag: rename_id
      target_field: wiz.cloud_configuration_finding.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id
      copy_from: wiz.cloud_configuration_finding.id
      ignore_empty_value: true
  - set:
      field: event.kind
      value: event
      tag: set_event_kind
  - rename:
      field: json.rule.description
      tag: rename_rule_description
      target_field: wiz.cloud_configuration_finding.rule.description
      ignore_missing: true
  - set:
      field: message
      tag: set_message
      copy_from: wiz.cloud_configuration_finding.rule.description
      ignore_empty_value: true
  - date:
      field: json.analyzedAt
      tag: date_set_timestamp
      formats:
        - ISO8601
      if: ctx.json?.analyzedAt != null && ctx.json.analyzedAt != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: wiz.cloud_configuration_finding.analyzed_at
      tag: date_set_analyzed_at
      copy_from: '@timestamp'
      ignore_empty_value: true
  - rename:
      field: json.rule.id
      tag: rename_rule_id
      target_field: wiz.cloud_configuration_finding.rule.id
      ignore_missing: true
  - set:
      field: rule.id
      tag: set_rule_id
      copy_from: wiz.cloud_configuration_finding.rule.id
      ignore_empty_value: true
  - rename:
      field: json.rule.name
      tag: rename_rule_name
      target_field: wiz.cloud_configuration_finding.rule.name
      ignore_missing: true
  - set:
      field: rule.name
      tag: set_rule_name
      copy_from: wiz.cloud_configuration_finding.rule.name
      ignore_empty_value: true
  - rename:
      field: json.resource.id
      tag: rename_resource_id
      target_field: wiz.cloud_configuration_finding.resource.id
      ignore_missing: true
  - set:
      field: resource.id
      tag: set_resource_id
      copy_from: wiz.cloud_configuration_finding.resource.id
      ignore_empty_value: true
  - rename:
      field: json.resource.name
      tag: rename_resource_name
      target_field: wiz.cloud_configuration_finding.resource.name
      ignore_missing: true
  - set:
      field: resource.name
      tag: set_resource_name
      copy_from: wiz.cloud_configuration_finding.resource.name
      ignore_empty_value: true
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - remove:
      field:
        - wiz.cloud_configuration_finding.analyzed_at
        - wiz.cloud_configuration_finding.resource.subscription.cloud_provider
        - wiz.cloud_configuration_finding.resource.region
        - wiz.cloud_configuration_finding.first_seen_at
        - wiz.cloud_configuration_finding.id
        - wiz.cloud_configuration_finding.rule.description
        - wiz.cloud_configuration_finding.resource.name
        - wiz.cloud_configuration_finding.rule.name
        - wiz.cloud_configuration_finding.resource.id
        - wiz.cloud_configuration_finding.rule.id
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - remove:
      field: event.original
      tag: remove_event_original
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
  - script:
      description: Drops null/empty values recursively.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        boolean drop(Object object) {
          if (object == null || object == '') {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(v -> drop(v));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(v -> drop(v));
            return (((List) object).length == 0);
          }
          return false;
        }
        drop(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
on_failure:
  - set:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      value: pipeline_error
