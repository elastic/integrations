---
description: Pipeline for processing Nagios XI events
processors:
- set:
    field: ecs.version
    value: '8.1.0'
- rename:
    field: message
    target_field: event.original
    ignore_missing: true
- json:
    field: event.original
    target_field: json
    ignore_failure: true
- fingerprint:
    fields:
    - json.logentry_id
    - json.logentry_type
    - json.instance_id
    - json.entry_time
    target_field: _id
    ignore_missing: true
- convert:
    field: json.logentry_type
    target_field: nagios_xi.event.logentry.type
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.instance_id
    target_field: nagios_xi.event.instance_id
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.logentry_id
    target_field: nagios_xi.event.logentry.id
    type: double
    ignore_missing: true
    ignore_failure: true
- date:
    field: json.entry_time
    formats:
    - yyyy-MM-dd HH:mm:ss
    ignore_failure: true
- set:
    field: json.entry_time
    value: "{{{@timestamp}}}"
    ignore_empty_value: true
    ignore_failure: true
- date:
    field: json.entry_time
    formats:
    - yyyy-MM-dd'T'HH:mm:ss.SSSXXX
    target_field: nagios_xi.event.entry_time
    ignore_failure: true
- rename:
    field: json.logentry_data
    target_field: message
    ignore_missing: true
    ignore_failure: true

- set:
    field: event.dataset
    value: nagios_xi.events
    ignore_empty_value: true
    ignore_failure: true
- set:
    field: event.kind
    value: events
    ignore_empty_value: true
    ignore_failure: true
- set:
    field: event.module
    value: nagios_xi
    ignore_empty_value: true
    ignore_failure: true
- set:
    field: event.type
    value: info
    ignore_empty_value: true
    ignore_failure: true

- script:
    description: Drops null/empty values recursively
    lang: painless
    source: |
        boolean drop(Object o) {
            if (o == null || o == "") {
            return true;
            } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
            } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
            }
            return false;
        }
        drop(ctx);

- remove:
    field: event.original
    if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
    ignore_failure: true
    ignore_missing: true

- remove:
    field:
    - json
    ignore_missing: true
    ignore_failure: true

on_failure:
- set:
    field: error.message
    value: "{{{ _ingest.on_failure_message }}}"
