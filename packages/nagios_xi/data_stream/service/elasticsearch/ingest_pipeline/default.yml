---
description: Pipeline for processing Nagios XI Services metrics
processors:
- set:
    field: ecs.version
    value: '8.0.0'
- rename:
    field: message
    target_field: event.original
    ignore_missing: true
- json:
    field: event.original
    target_field: json
    ignore_failure: true
- convert:
    field: json.normal_check_interval
    type: long
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.retry_check_interval
    type: long
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.execution_time
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.latency
    type: double
    ignore_missing: true
    ignore_failure: true
- date:
    field: json.status_update_time
    formats:
    - yyyy-MM-dd HH:mm:ss
    ignore_failure: true
- set:
    field: json.status_update_time
    value: "{{@timestamp}}"
    ignore_empty_value: true
    ignore_failure: true
- date:
    field: json.status_update_time
    formats:
    - yyyy-MM-dd'T'HH:mm:ss.SSSXXX
    target_field: json.status_update_time
    ignore_failure: true
- date:
    field: json.last_check
    formats:
    - yyyy-MM-dd HH:mm:ss
    target_field: json.last_check
    ignore_failure: true
- date:
    field: json.next_check
    formats:
    - yyyy-MM-dd HH:mm:ss
    target_field: json.next_check
    ignore_failure: true
- rename:
    field: json.host_name
    target_field: nagios_xi.metrics.service.host_name
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.display_name
    target_field: nagios_xi.metrics.service.display_name
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.address
    target_field: nagios_xi.metrics.service.address
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.status_update_time
    target_field: nagios_xi.metrics.service.status_update_time
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.output
    target_field: nagios_xi.metrics.service.status_text
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.perfdata
    target_field: nagios_xi.metrics.service.temp.performance_data
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.check_command
    target_field: nagios_xi.metrics.service.check_command
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.normal_check_interval
    target_field: nagios_xi.metrics.service.normal_check_interval
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.retry_check_interval
    target_field: nagios_xi.metrics.service.retry_check_interval
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.last_check
    target_field: nagios_xi.metrics.service.last_check
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.next_check
    target_field: nagios_xi.metrics.service.next_check
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.latency
    target_field: nagios_xi.metrics.service.latency
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.execution_time
    target_field: nagios_xi.metrics.service.execution_time
    ignore_missing: true
    ignore_failure: true

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.current_users
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_local_users")
- dissect:
    field: nagios_xi.metrics.service.current_users.performance_data
    pattern: users=%{nagios_xi.metrics.service.current_users.users};%{}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("current_users")
- convert:
    field: nagios_xi.metrics.service.current_users.users
    type: double
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.current_users
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("current_users")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.current_load
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_local_load")
- dissect:
    field: nagios_xi.metrics.service.current_load.performance_data
    pattern: load1=%{nagios_xi.metrics.service.current_load.load1};%{?}load5=%{nagios_xi.metrics.service.current_load.load5};%{?}load15=%{nagios_xi.metrics.service.current_load.load15};%{?}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("current_load")
- convert:
    field: nagios_xi.metrics.service.current_load.load1
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: nagios_xi.metrics.service.current_load.load5
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: nagios_xi.metrics.service.current_load.load15
    type: double
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.current_load
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("current_load")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.ssh
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_ssh") || ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_xi_service_ssh")
- dissect:
    field: nagios_xi.metrics.service.ssh.performance_data
    pattern: time=%{nagios_xi.metrics.service.ssh.time}s%{}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("ssh")
- convert:
    field: nagios_xi.metrics.service.ssh.time
    type: double
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.ssh
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("ssh")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.ping
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_ping") || ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_xi_service_ping")
- dissect:
    field: nagios_xi.metrics.service.ping.performance_data
    pattern: rta=%{nagios_xi.metrics.service.ping.rta}ms;%{?}pl=%{nagios_xi.metrics.service.ping.pl}%;%{?}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("ping")
- convert:
    field: nagios_xi.metrics.service.ping.rta
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: nagios_xi.metrics.service.ping.pl
    type: double
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.ping
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("ping")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.swap_usage
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_local_swap")
- dissect:
    field: nagios_xi.metrics.service.swap_usage.performance_data
    pattern: swap=%{nagios_xi.metrics.service.swap_usage.free_swap}MB;%{};%{};%{};%{nagios_xi.metrics.service.swap_usage.total_swap}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("swap_usage")
- convert:
    field: nagios_xi.metrics.service.swap_usage.free_swap
    type: long
    ignore_missing: true
    ignore_failure: true
- convert:
    field: nagios_xi.metrics.service.swap_usage.total_swap
    type: long
    ignore_missing: true
    ignore_failure: true
- script:
    source: |
        if(ctx?.nagios_xi?.metrics?.service?.containsKey("swap_usage")) {
            ctx.nagios_xi.metrics.service.swap_usage.used_swap = ctx.nagios_xi.metrics.service.swap_usage.total_swap - ctx.nagios_xi.metrics.service.swap_usage.free_swap
        }
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.swap_usage
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("swap_usage")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.process
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_local_procs")
- dissect:
    field: nagios_xi.metrics.service.process.performance_data
    pattern: procs=%{nagios_xi.metrics.service.process.total};%{}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("process")
- convert:
    field: nagios_xi.metrics.service.process.total
    type: double
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.process
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("process")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.http
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_http") || ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_xi_service_http")
- dissect:
    field: nagios_xi.metrics.service.http.performance_data
    pattern: time=%{nagios_xi.metrics.service.http.time}s;;;%{?un}size=%{nagios_xi.metrics.service.http.size}B;%{?}
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("http")
- convert:
    field: nagios_xi.metrics.service.http.time
    type: double
    ignore_missing: true
    ignore_failure: true
- convert:
    field: nagios_xi.metrics.service.http.size
    type: double
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.http
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("http")

- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.root_partition
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.check_command?.contains("check_local_disk")
- dissect:
    field: nagios_xi.metrics.service.root_partition.performance_data
    pattern: "%{?}=%{nagios_xi.metrics.service.root_partition.used_space}M%{};%{};%{};%{};%{nagios_xi.metrics.service.root_partition.total_space}"
    ignore_missing: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("root_partition")
- convert:
    field: nagios_xi.metrics.service.root_partition.total_space
    type: long
    ignore_missing: true
    ignore_failure: true
- convert:
    field: nagios_xi.metrics.service.root_partition.used_space
    type: long
    ignore_missing: true
    ignore_failure: true
- script:
    source: |
        if(ctx?.nagios_xi?.metrics?.service?.containsKey("root_partition")) {
            ctx.nagios_xi.metrics.service.root_partition.free_space = ctx.nagios_xi.metrics.service.root_partition.total_space - ctx.nagios_xi.metrics.service.root_partition.used_space
        }
    ignore_failure: true
- set:
    field: event.dataset
    value: nagios_xi.root_partition
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.nagios_xi?.metrics?.service?.containsKey("root_partition")

- set:
    field: event.dataset
    value: nagios_xi.custom
    ignore_empty_value: true
    ignore_failure: true
    if: '!(ctx?.nagios_xi?.metrics?.service?.containsKey("current_users") || ctx?.nagios_xi?.metrics?.service?.containsKey("current_load") || ctx?.nagios_xi?.metrics?.service?.containsKey("ssh") || ctx?.nagios_xi?.metrics?.service?.containsKey("ping") || ctx?.nagios_xi?.metrics?.service?.containsKey("swap_usage") || ctx?.nagios_xi?.metrics?.service?.containsKey("process") || ctx?.nagios_xi?.metrics?.service?.containsKey("http") || ctx?.nagios_xi?.metrics?.service?.containsKey("root_partition"))'
- set:
    copy_from: nagios_xi.metrics.service.temp
    field: nagios_xi.metrics.service.custom
    override: true
    ignore_empty_value: true
    ignore_failure: true
    if: ctx?.event?.dataset?.contains("nagios_xi.custom")
    
- set:
    field: event.kind
    value: metrics
    ignore_empty_value: true
    ignore_failure: true
- set:
    field: event.module
    value: nagios_xi
    ignore_empty_value: true
    ignore_failure: true
- set:
    field: event.type
    value: info
    ignore_empty_value: true
    ignore_failure: true

- script:
    description: Drops null/empty values recursively
    lang: painless
    source: |
        boolean drop(Object o) {
            if (o == null || o == "") {
            return true;
            } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
            } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
            }
            return false;
        }
        drop(ctx);

- remove:
    field: event.original
    if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
    ignore_failure: true
    ignore_missing: true

- remove:
    field:
    - json
    - nagios_xi.metrics.service.temp
    ignore_missing: true
    ignore_failure: true

on_failure:
- set:
    field: error.message
    value: "{{ _ingest.on_failure_message }}"
