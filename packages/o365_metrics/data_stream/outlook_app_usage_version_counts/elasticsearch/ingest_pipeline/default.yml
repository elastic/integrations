---
description: Pipeline for processing Microsoft 365 outlook app usage version counts metrics.
processors:
  - set:
      field: ecs.version
      value: "8.16.0"
  - set:
      copy_from: message
      field: event.original
      ignore_empty_value: true
      if: ctx.event?.original == null && (ctx.tags != null && (ctx.tags.contains('preserve_original_event')))
#   - fail:
#       tag: cel_failure
#       if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
#       message: error message set and no data to process            
  - json:
      field: message
      target_field: o365.metrics.outlook.app.usage.version.counts
      tag: json_decoding
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'      
  - remove:
      if: ctx.message != null
      field: message
      ignore_missing: true   
  - script:
      lang: painless
      description: Replace spaces, dashes and bom character in field names under o365.metrics.outlook.app.usage.version.counts.
      tag: painless_purge_spaces_and_dashes
      if: ctx.o365.metrics?.outlook.app.usage.version.counts instanceof Map
      source: |
        String underscore(String s) {
          String result = /[ -]/.matcher(s).replaceAll('_').toLowerCase();
          return /[\ufeff]/.matcher(result).replaceAll('')
        }
        
        def out = [:];
        for (def item : ctx.o365.metrics.outlook.app.usage.version.counts.entrySet()) {
          out[underscore(item.getKey())] = item.getValue();
        }
        ctx.o365.metrics.outlook.app.usage.version.counts = out;           

  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2007
      tag: convert_o365.metrics.outlook.app.usage.version.counts.outlook_2007
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2007 != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2007 != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.outlook_2007
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2007
      target_field: o365.metrics.outlook.app.usage.version.counts.outlook_2007.count
      ignore_missing: true
  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2010
      tag: convert_o365.metrics.outlook.app.usage.version.counts.outlook_2010
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2010 != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2010 != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.outlook_2010
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2010
      target_field: o365.metrics.outlook.app.usage.version.counts.outlook_2010.count
      ignore_missing: true
  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2013
      tag: convert_o365.metrics.outlook.app.usage.version.counts.outlook_2013
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2013 != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2013 != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.outlook_2013
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2013
      target_field: o365.metrics.outlook.app.usage.version.counts.outlook_2013.count
      ignore_missing: true
  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2016
      tag: convert_o365.metrics.outlook.app.usage.version.counts.outlook_2016
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2016 != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2016 != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.outlook_2016
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2016
      target_field: o365.metrics.outlook.app.usage.version.counts.outlook_2016.count
      ignore_missing: true
  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2019
      tag: convert_o365.metrics.outlook.app.usage.version.counts.outlook_2019
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2019 != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_2019 != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.outlook_2019
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_2019
      target_field: o365.metrics.outlook.app.usage.version.counts.outlook_2019.count
      ignore_missing: true
  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_m365
      tag: convert_o365.metrics.outlook.app.usage.version.counts.outlook_m365
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_m365 != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.outlook_m365 != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.outlook_m365
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.outlook_m365
      target_field: o365.metrics.outlook.app.usage.version.counts.outlook_m365.count
      ignore_missing: true
  - convert:
      field: o365.metrics.outlook.app.usage.version.counts.undetermined
      tag: convert_o365.metrics.outlook.app.usage.version.counts.undetermined
      type: long
      if: ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.undetermined != null && ctx.o365?.metrics?.outlook?.app?.usage?.version?.counts?.undetermined != ''
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.undetermined
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.undetermined
      target_field: o365.metrics.outlook.app.usage.version.counts.undetermined.count
      ignore_missing: true
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.report_period
      target_field: o365.metrics.outlook.app.usage.version.counts.report.period.day
      ignore_missing: true
  - date:
      field: o365.metrics.outlook.app.usage.version.counts.report_refresh_date
      tag: date_o365.metrics.outlook.app.usage.version.counts.report_refresh_date
      if: ctx.o365.metrics?.outlook?.app?.usage?.report_refresh_date != null && ctx.o365.metrics?.outlook?.app?.usage?.report_refresh_date != ''
      timezone: UTC
      formats:
        - yyyy-MM-dd
      on_failure:
        - remove:
            field: o365.metrics.outlook.app.usage.version.counts.report_refresh_date
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'      
  - rename:
      field: o365.metrics.outlook.app.usage.version.counts.report_refresh_date
      target_field: o365.metrics.outlook.app.usage.version.counts.report.refresh_date
      ignore_missing: true
  - set:
      field: '@timestamp'
      tag: set_timestamp_from_report_refresh_date
      copy_from: o365.metrics.outlook.app.usage.version.counts.report.refresh_date
      ignore_empty_value: true
  - fingerprint:
      fields:
        - o365.metrics.outlook.app.usage.version.counts.report.refresh_date
      target_field: _id

  - script:
      lang: painless
      tag: script_to_remove_null_values
      description: Drops null/empty values recursively.
      source: |
        boolean drop(Object o) {
          if (o == null || o == "") {
            return true;
          } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
          } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
          }
          return false;
        }
        drop(ctx);
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
on_failure:
  - set:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
  - append:
      field: event.type
      value: error
      if: ctx.error?.message != null