---
description: Pipeline for processing o365 subscriptions metrics.
processors:
  - set:
      field: ecs.version
      value: "8.16.0"
  - set:
      copy_from: message
      field: event.original
      ignore_empty_value: true
      if: ctx.event?.original == null && (ctx.tags != null && (ctx.tags.contains('preserve_original_event')))
  - json:
      field: message
      target_field: o365.metrics.subscriptions
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

  - rename:
      field: o365.metrics.subscriptions.accountId
      target_field: o365.metrics.subscriptions.account_id
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.accountName
      target_field: o365.metrics.subscriptions.account_name
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.appliesTo
      target_field: o365.metrics.subscriptions.applies_to
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.capabilityStatus
      target_field: o365.metrics.subscriptions.capability_status
      ignore_missing: true

# Convert consumedUnits to long
  - convert:
      field: o365.metrics.subscriptions.consumedUnits
      type: long
      tag: convert_consumed_units_to_long
      ignore_missing: true
      on_failure:
        - remove:
            field: o365.metrics.subscriptions.consumedUnits
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

  - rename:
      field: o365.metrics.subscriptions.consumedUnits
      target_field: o365.metrics.subscriptions.consumed_units.count
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.skuId
      target_field: o365.metrics.subscriptions.sku_id
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.skuPartNumber
      target_field: o365.metrics.subscriptions.sku_part_number
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.subscriptionIds
      target_field: o365.metrics.subscriptions.subscription_ids
      ignore_missing: true

# Convert prepaidUnits.enabled to long
  - convert:
      field: o365.metrics.subscriptions.prepaidUnits.enabled
      type: long
      tag: convert_prepaidUnits_enabled_to_long
      ignore_missing: true
      on_failure:
        - remove:
            field: o365.metrics.subscriptions.prepaidUnits.enabled
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

# Convert prepaidUnits.lockedOut to long
  - convert:
      field: o365.metrics.subscriptions.prepaidUnits.lockedOut
      type: long
      tag: convert_prepaidUnits_lockedOut_to_long
      ignore_missing: true
      on_failure:
        - remove:
            field: o365.metrics.subscriptions.prepaidUnits.lockedOut
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

# Convert prepaidUnits.suspended to long
  - convert:
      field: o365.metrics.subscriptions.prepaidUnits.suspended
      type: long
      tag: convert_prepaidUnits_suspended_to_long
      ignore_missing: true
      on_failure:
        - remove:
            field: o365.metrics.subscriptions.prepaidUnits.suspended
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'

# Rename fields under prepaidUnits
  - rename:
      field: o365.metrics.subscriptions.prepaidUnits.enabled
      target_field: o365.metrics.subscriptions.prepaid_units.enabled.count
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.prepaidUnits.lockedOut
      target_field: o365.metrics.subscriptions.prepaid_units.locked_out.count
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.prepaidUnits.suspended
      target_field: o365.metrics.subscriptions.prepaid_units.suspended.count
      ignore_missing: true

  - rename:
      field: o365.metrics.subscriptions.prepaidUnits.warning
      target_field: o365.metrics.subscriptions.prepaid_units.warning.count
      ignore_missing: true

  - remove:
      field: o365.metrics.subscriptions.prepaidUnits
      ignore_missing: true

# Rename fields under servicePlans
  - rename:
      field: o365.metrics.subscriptions.servicePlans
      target_field: o365.metrics.subscriptions.service_plans
      ignore_missing: true

  - foreach:
     field: o365.metrics.subscriptions.service_plans
     if: ctx.o365?.metrics?.subscriptions?.service_plans instanceof List
     processor:
       rename:
         field: _ingest._value.appliesTo
         target_field: _ingest._value.applies_to
         ignore_missing: true

  - foreach:
     field: o365.metrics.subscriptions.service_plans
     if: ctx.o365?.metrics?.subscriptions?.service_plans instanceof List
     processor:
       rename:
         field: _ingest._value.provisioningStatus
         target_field: _ingest._value.provisioning_status
         ignore_missing: true

  - foreach:
     field: o365.metrics.subscriptions.service_plans
     if: ctx.o365?.metrics?.subscriptions?.service_plans instanceof List
     processor:
       rename:
         field: _ingest._value.servicePlanId
         target_field: _ingest._value.service_plan_id
         ignore_missing: true

  - foreach:
     field: o365.metrics.subscriptions.service_plans
     if: ctx.o365?.metrics?.subscriptions?.service_plans instanceof List
     processor:
       rename:
         field: _ingest._value.servicePlanName
         target_field: _ingest._value.service_plan_name
         ignore_missing: true

  - remove:
      if: ctx.message != null
      field: message
      ignore_missing: true


# Create surplus_units field, useful for indicating if you are oversubscribed to any SKUs
  - script:
      description: "Calculate surplus units for account in o365.metrics.subscriptions"
      lang: painless
      ignore_failure: true
      source: >
        if (ctx.o365?.metrics?.subscriptions != null) {
          def prepaid = ctx.o365?.metrics?.subscriptions?.prepaid_units?.enabled?.count;
          def consumed = ctx.o365?.metrics?.subscriptions?.consumed_units?.count;
          if (prepaid != null && consumed != null) {
            ctx.o365.metrics.subscriptions.surplus_units = ctx.o365.metrics.subscriptions.surplus_units ?: [:];
            ctx.o365.metrics.subscriptions.surplus_units.count = prepaid - consumed;
          }
        }

  - remove:
      if: ctx.message != null
      field: message
      ignore_missing: true

  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean drop(Object o) {
            if (o == null || o == "") {
            return true;
            } else if (o instanceof Map) {
            ((Map) o).values().removeIf(v -> drop(v));
            return (((Map) o).size() == 0);
            } else if (o instanceof List) {
            ((List) o).removeIf(v -> drop(v));
            return (((List) o).length == 0);
            }
            return false;
        }
        drop(ctx);

on_failure:
  - set:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: event.kind
      value: pipeline_error
      allow_duplicates: false
  - append: 
      field: event.type 
      value: error 
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false