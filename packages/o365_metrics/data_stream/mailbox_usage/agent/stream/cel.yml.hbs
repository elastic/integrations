config_version: 2
interval: {{interval}}
auth.oauth2:
    client.id: {{client_id}}
    client.secret: {{client_secret}}
    provider: azure
    scopes:
{{#each token_scopes as |token_scope|}}
      - {{token_scope}}
{{/each}}
    endpoint_params: 
        grant_type: client_credentials
{{#if token_url}}
    token_url: {{token_url}}/{{azure_tenant_id}}/oauth2/v2.0/token
{{else if azure_tenant_id}}
    azure.tenant_id: {{azure_tenant_id}}
{{/if}}

resource.url: {{url}}
{{#if resource_ssl}}
resource.ssl: 
  {{resource_ssl}}
{{/if}}

{{#if enable_request_tracer}}
resource.tracer.filename: "../../logs/cel/http-request-trace-*.ndjson"
{{/if}}

tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}

state:
  want_more: false
  base:
    tenant_id: "{{azure_tenant_id}}"
    period: "{{period}}"

redact:
  fields:
    - base.tenant_id



program: |
    state.with(
    request(
      "GET",
      state.url + "/reports/getMailboxUsageQuotaStatusMailboxCounts(period='" + state.base.period + "')"
    ).do_request().as(resp1,
            resp1.StatusCode == 200
            ?
              bytes(resp1.Body).mime("text/csv; header=present").as(events1,
                request(
                  "GET",
                  state.url + "/reports/getMailboxUsageDetail(period='" + state.base.period + "')"
                ).do_request().as(resp2,
                  resp2.StatusCode == 200
                  ?
                    bytes(resp2.Body).mime("text/csv; header=present").as(events2, {
                      "events": 
                        events1.map(e, {"mailboxquotastatus": e.encode_json()}) +
                        events2.map(e, {"mailboxusagedetail": e.encode_json()})
                    })
                  :
                    {
                      "events": {
                        "error": {
                          "code": string(resp2.StatusCode),
                          "id": string(resp2.Status),
                          "message": "GET:"+(
                            size(resp2.Body) != 0 ?
                              string(resp2.Body)
                            :
                              string(resp2.Status) + ' (' + string(resp2.StatusCode) + ')'
                          ),
                        },
                      },
                      "want_more": false,
                    }
                )
              )
            :
              {
                "events": {
                  "error": {
                    "code": string(resp1.StatusCode),
                    "id": string(resp1.Status),
                    "message": "GET:"+(
                      size(resp1.Body) != 0 ?
                        string(resp1.Body)
                      :
                        string(resp1.Status) + ' (' + string(resp1.StatusCode) + ')'
                    ),
                  },
                },
                "want_more": false,
              }
          )
        )