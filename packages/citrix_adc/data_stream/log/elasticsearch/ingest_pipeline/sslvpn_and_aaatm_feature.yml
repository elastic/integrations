---
description: Pipeline for Citrix Native messages of SSLVPN and AAATM feature.
processors:
  # Keep the grok patterns separated by type, for efficiency and maintainability
  - grok:
      tag: grok_sslvpn_login
      if: 'ctx.citrix.name == "LOGIN"'
      field: citrix.extended.message
      patterns:
        - '^User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Browser_type "%{DATA:citrix_adc.log.browser_type}" - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'
        - '^User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Browser_type "%{DATA:citrix_adc.log.browser_type}" - SSLVPN_client_type %{DATA:citrix_adc.log.sslvpn_client_type} - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'
        - '^(Logout handler : )?Context %{DATA:citrix_adc.log.username}@%{IP} - SessionId: %{NUMBER:citrix_adc.log.session_id} - User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Browser_type "%{DATA:citrix_adc.log.browser_type}" - (SSLVPN_client_type %{WORD:citrix_adc.log.sslvpn_client_type} - )?Group\(s\) "%{DATA:citrix_adc.log.groups}" ?'

  - grok:
      tag: grok_sslvpn_logout
      if: 'ctx.citrix.name == "LOGOUT"'
      field: citrix.extended.message
      pattern_definitions:
        SEP: "%{SPACE}-%{SPACE}"
        USER_INFO: "User %{DATA:citrix_adc.log.user}"
        CLIENT_IP_OPT: "Client_ip (%{IP:citrix_adc.log.client_ip})?"
        NAT_IP: "Nat_ip (%{IP:citrix_adc.log.nat.ip}|%{DATA})"
        NAT_IP_ESCAPED: "Nat_ip (%{IP:citrix_adc.log.nat.ip}|\\\\?\"%{DATA}\\\\?\")"
        VSERVER_INFO: "Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port}"
        TIME_INFO: "Start_time \"%{DATA:_tmp.start_time}\"%{SEP}End_time \"%{DATA:_tmp.end_time}\"%{SEP}Duration %{NOTSPACE:citrix_adc.log.duration}"
        TIME_INFO_ESCAPED: "Start_time \\\\?\"%{DATA:_tmp.start_time}\\\\?\"%{SEP}End_time \\\\?\"%{DATA:_tmp.end_time}\\\\?\"%{SEP}Duration %{NOTSPACE:citrix_adc.log.duration}"
        HTTP_RESOURCES: "Http_resources_accessed %{INT:citrix_adc.log.http_resources_accessed}"
        NON_HTTP_SERVICES: "(?:NonHttp_services_accessed %{INT:citrix_adc.log.non_http_services_accessed}%{SEP})?"
        CONNECTIONS: "Total_TCP_connections %{INT:citrix_adc.log.total_tcp_connections}(?:%{SEP}Total_UDP_flows %{INT:citrix_adc.log.total_udp_flows})?"
        POLICIES: "Total_policies_allowed %{INT:citrix_adc.log.total_policies_allowed}%{SEP}Total_policies_denied %{INT:citrix_adc.log.total_policies_denied}"
        BYTES_INFO: "Total_bytes_send %{INT:citrix_adc.log.total_bytes_send}%{SEP}Total_bytes_recv %{INT:citrix_adc.log.total_bytes_received}"
        COMPRESSED_BYTES: "Total_compressedbytes_send %{INT:citrix_adc.log.total_compressed_bytes_send}%{SEP}Total_compressedbytes_recv %{INT:citrix_adc.log.total_compressed_bytes_recieved}"
        COMPRESSION_RATIOS: "Compression_ratio_send %{NUMBER:citrix_adc.log.compression_ratio_send}%%{SEP}Compression_ratio_recv %{NUMBER:citrix_adc.log.compression_ratio_recieved}%"
        LOGOUT_GROUP_INFO: 'LogoutMethod "%{DATA:citrix_adc.log.logout_method}"%{SEP}Group\(s\) "%{DATA:citrix_adc.log.groups}"'
        LOGOUT_GROUP_INFO_ESCAPED: "LogoutMethod \\\\?\"%{DATA:citrix_adc.log.logout_method}\\\\?\"%{SEP}Group\\(s\\) \\\\?\"%{DATA:citrix_adc.log.groups}\\\\?\""
      patterns:
        - '^%{USER_INFO}%{SEP}%{CLIENT_IP_OPT}%{SEP}%{NAT_IP}%{SEP}%{VSERVER_INFO}%{SEP}%{TIME_INFO}%{SEP}%{HTTP_RESOURCES}%{SEP}%{NON_HTTP_SERVICES}%{CONNECTIONS}%{SEP}?%{POLICIES}%{SEP}%{BYTES_INFO}%{SEP}%{COMPRESSED_BYTES}%{SEP}%{COMPRESSION_RATIOS}%{SEP}%{LOGOUT_GROUP_INFO} ?$'
        - '^(Logout handler : )?Context %{DATA:citrix_adc.log.username}@%{IP}%{SEP}SessionId: %{NUMBER:citrix_adc.log.session_id}%{SEP}%{USER_INFO}%{SEP}%{CLIENT_IP_OPT}%{SEP}%{NAT_IP_ESCAPED}%{SEP}%{VSERVER_INFO}%{SEP}%{TIME_INFO_ESCAPED}%{SEP}%{HTTP_RESOURCES}%{SEP}%{NON_HTTP_SERVICES}%{CONNECTIONS}%{SEP}%{POLICIES}%{SEP}%{BYTES_INFO}%{SEP}%{COMPRESSED_BYTES}%{SEP}%{COMPRESSION_RATIOS}%{SEP}%{LOGOUT_GROUP_INFO_ESCAPED} ?$'

  - grok:
      tag: grok_sslvpn_icastart
      if: 'ctx.citrix.name == "ICASTART"'
      field: citrix.extended.message
      patterns:
        - '^Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - SSLRelayAddress %{IP:citrix_adc.log.ssl_relay.address}:%{INT:citrix_adc.log.ssl_relay.port} - customername( %{WORD:citrix_adc.log.customer_name})? - username:domainname %{DATA:citrix_adc.log.username}:%{DATA:citrix_adc.log.domain_name} - applicationName %{DATA:citrix_adc.log.application_name} - startTime "%{DATA:_tmp.start_time}" - connectionId %{WORD:citrix_adc.log.connection_id} ?$'
        - '^%{DATA} Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - customername (%{WORD:citrix_adc.log.customer_name})? - username:domainname %{DATA:citrix_adc.log.username}:%{DATA:citrix_adc.log.domain_name} - applicationName %{DATA:citrix_adc.log.application_name} - startTime "%{DATA:_tmp.start_time}" - connectionId %{WORD:citrix_adc.log.connection_id} ?$'

  - grok:
      tag: grok_sslvpn_icaend_connstat
      if: 'ctx.citrix.name == "ICAEND_CONNSTAT"'
      field: citrix.extended.message
      patterns:
        - '^%{DATA} ?Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - (SSLRelayAddress %{IP:citrix_adc.log.ssl_relay.address}:%{INT:citrix_adc.log.ssl_relay.port} - )?customername (%{WORD:citrix_adc.log.customer_name})? - username:domainname %{DATA:citrix_adc.log.username}:%{DATA:citrix_adc.log.domain_name} - startTime "%{DATA:_tmp.start_time}" - endTime "%{DATA:_tmp.end_time}" - Duration %{DATA:citrix_adc.log.duration} ? - Total_bytes_send %{INT:citrix_adc.log.total_bytes_send} - Total_bytes_recv %{INT:citrix_adc.log.total_bytes_received} - Total_compressedbytes_send %{INT:citrix_adc.log.total_compressed_bytes_send} - Total_compressedbytes_recv %{INT:citrix_adc.log.total_compressed_bytes_recieved} - Compression_ratio_send %{NUMBER:citrix_adc.log.compression_ratio_send:float}% - Compression_ratio_recv %{NUMBER:citrix_adc.log.compression_ratio_recieved:float}% - connectionId %{WORD:citrix_adc.log.connection_id} ?$'
        - '^%{DATA} ?Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - (SSLRelayAddress %{IP:citrix_adc.log.ssl_relay.address}:%{INT:citrix_adc.log.ssl_relay.port} - )?customername (%{WORD:citrix_adc.log.customer_name})? ?- username:domainname %{DATA:citrix_adc.log.username}:%{DATA:citrix_adc.log.domain_name} - startTime "%{DATA:_tmp.start_time}" - endTime "%{DATA:_tmp.end_time}" - Duration %{DATA:citrix_adc.log.duration} ? - Total_bytes_send %{INT:citrix_adc.log.total_bytes_send} - Total_bytes_recv %{INT:citrix_adc.log.total_bytes_received} - Total_compressedbytes_send %{INT:citrix_adc.log.total_compressed_bytes_send} - Total_compressedbytes_recv %{INT:citrix_adc.log.total_compressed_bytes_recieved} - Compression_ratio_send %{NUMBER:citrix_adc.log.compression_ratio_send:float}% - Compression_ratio_recv %{NUMBER:citrix_adc.log.compression_ratio_recieved:float}% - connectionId %{WORD:citrix_adc.log.connection_id} - Total_bytes_wire_send %{INT:citrix_adc.log.total_bytes_wire_send} - Total_bytes_wire_recv %{INT:citrix_adc.log.total_bytes_wire_recieved} ?$'

  - grok:
      tag: grok_sslvpn_tcpconnstat
      if: 'ctx.citrix.name == "TCPCONNSTAT"'
      field: citrix.extended.message
      patterns:
        - '^User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - Start_time "%{DATA:_tmp.start_time}" - End_time "%{GREEDYDATA:_tmp.end_time}" - Duration %{DATA:citrix_adc.log.duration} - Total_bytes_send %{NUMBER:citrix_adc.log.total_bytes_send:int} - Total_bytes_recv %{NUMBER:citrix_adc.log.total_bytes_received:int} - Total_compressedbytes_send %{NUMBER:citrix_adc.log.total_compressed_bytes_send:int} - Total_compressedbytes_recv %{NUMBER:citrix_adc.log.total_compressed_bytes_recieved:int} - Compression_ratio_send %{NUMBER:citrix_adc.log.compression_ratio_send:float}% - Compression_ratio_recv %{NUMBER:citrix_adc.log.compression_ratio_recieved:float}% - Access %{WORD:citrix_adc.log.access} - Group\(s\) "%{DATA:citrix_adc.log.groups}"$'
        - '^Context %{DATA:citrix_adc.log.username}@%{IP} - SessionId: %{NUMBER:citrix_adc.log.session_id} - User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - Start_time "%{DATA:_tmp.start_time}" - End_time "%{GREEDYDATA:_tmp.end_time}" - Duration %{DATA:citrix_adc.log.duration} - Total_bytes_send %{NUMBER:citrix_adc.log.total_bytes_send:int} - Total_bytes_recv %{NUMBER:citrix_adc.log.total_bytes_received:int} - Total_compressedbytes_send %{NUMBER:citrix_adc.log.total_compressed_bytes_send:int} - Total_compressedbytes_recv %{NUMBER:citrix_adc.log.total_compressed_bytes_recieved:int} - Compression_ratio_send %{NUMBER:citrix_adc.log.compression_ratio_send:float}% - Compression_ratio_recv %{NUMBER:citrix_adc.log.compression_ratio_recieved:float}% - Access %{WORD:citrix_adc.log.access} - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'

  - grok:
      tag: grok_sslvpn_tcpconn_timeout
      if: 'ctx.citrix.name == "TCPCONN_TIMEDOUT"'
      field: citrix.extended.message
      patterns:
        - '^User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Last_contact "%{DATA:citrix_adc.log.last_contact}" - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'
        - '^Context %{DATA} - SessionId: %{NUMBER:citrix_adc.log.session_id} - User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Last_contact "%{DATA:citrix_adc.log.last_contact}" - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'

  - grok:
      tag: grok_sslvpn_udpflowstat
      if: 'ctx.citrix.name == "UDPFLOWSTAT"'
      field: citrix.extended.message
      patterns:
        - '^User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"${DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - Start_time "%{DATA:_tmp.start_time}" - End_time "%{GREEDYDATA:_tmp.end_time}" - Duration %{DATA:citrix_adc.log.duration} - Total_bytes_send %{NUMBER:citrix_adc.log.total_bytes_send:int} - Total_bytes_recv %{NUMBER:citrix_adc.log.total_bytes_received:int} - Access %{WORD:citrix_adc.log.access} - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'
        - '^Context %{DATA:citrix_adc.log.username}@%{IP} - SessionId: %{NUMBER:citrix_adc.log.session_id} - \[%{DATA}\] User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"${DATA}") - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Source %{IP:citrix_adc.log.source.ip}:%{INT:citrix_adc.log.source.port} - Destination %{IP:citrix_adc.log.destination.ip}:%{INT:citrix_adc.log.destination.port} - Start_time "%{DATA:_tmp.start_time}" - End_time "%{GREEDYDATA:_tmp.end_time}" - Duration %{DATA:citrix_adc.log.duration} - Total_bytes_send %{NUMBER:citrix_adc.log.total_bytes_send:int} - Total_bytes_recv %{NUMBER:citrix_adc.log.total_bytes_received:int} - Access %{WORD:citrix_adc.log.access} - Group\(s\) "%{DATA:citrix_adc.log.groups}" ?$'

  - grok:
      tag: grok_sslvpn_httprequest
      if: 'ctx.citrix.name == "HTTPREQUEST"'
      field: citrix.extended.message
      pattern_definitions:
       USERNAME_VARIANTS: "(%{USERNAME:citrix_adc.log.username}|%{EMAILADDRESS:citrix_adc.log.username}|%{DATA:citrix_adc.log.username})"
       USER_VARIANTS: "(%{USERNAME:citrix_adc.log.user}|%{EMAILADDRESS:citrix_adc.log.user}|%{DATA:citrix_adc.log.user})"
       CONTEXT_INFO: "Context %{USERNAME_VARIANTS}@%{IP:citrix_adc.log.client_ip} ?- SessionId: %{NUMBER:citrix_adc.log.session_id} ?-"
       TECH_SUPPORT: "(?:\\[TECHSUPPORT\\]\\[ENUMERATION\\] )?"
       HOST_USER_GROUP: "%{HOSTNAME:citrix_adc.log.hostname} User %{USER_VARIANTS} ?: Group\\(s\\) %{DATA:citrix_adc.log.groups}"
       VSERVER_INFO: "Vserver %{IP:citrix_adc.log.vserver.ip}:%{NUMBER:citrix_adc.log.vserver.port}"
       REQUEST_INFO: "%{WORD:citrix_adc.log.method} %{DATA:citrix_adc.log.request.path} - -"
       TIMESTAMP_TZ: "%{DATA:_tmp.timestamp} %{DATA:citrix_adc.log.timezone}"
      patterns:
        - '^%{CONTEXT_INFO} %{TECH_SUPPORT}%{HOST_USER_GROUP} : %{VSERVER_INFO} - %{DATA:_tmp.timestamp}(?: %{WORD:citrix_adc.log.timezone})?(?: : SSO is %{WORD:citrix_adc.log.sso_status})? : %{REQUEST_INFO} ?$'
        - '^%{CONTEXT_INFO} %{TECH_SUPPORT}%{HOST_USER_GROUP} : %{VSERVER_INFO} - %{TIMESTAMP_TZ} %{REQUEST_INFO} ?$'

  - grok:
      tag: grok_sslvpn_nonhttp_access_denied
      if: 'ctx.citrix.name == "NONHTTP_RESOURCEACCESS_DENIED"'
      field: citrix.extended.message
      patterns:
        - '^- Denied_by_policy "%{DATA:citrix_adc.log.policy_violation}" ?$'

  - grok:
      tag: grok_sslvpn_http_access_denied
      if: 'ctx.citrix.name == "HTTP_RESOURCEACCESS_DENIED"'
      field: citrix.extended.message
      patterns:
        - '^- Denied_by_policy "%{DATA:citrix_adc.log.policy_violation}" ?$'

  - grok:
      tag: grok_sslvpn_liclmt_reached
      if: 'ctx.citrix.name == "LICLMT_REACHED"'
      field: citrix.extended.message
      patterns:
        - '^Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - License_limit %{NUMBER:citrix_adc.log.license_limit:int} ?$'

  - grok:
      tag: grok_sslvpn_clisec_check
      if: 'ctx.citrix.name == "CLISEC_CHECK"'
      field: citrix.extended.message
      patterns:
        - '^%{WORD:citrix_adc.log.alert_type} ?: %{WORD:citrix_adc.log.alert_level} - ClientIP %{IP:citrix_adc.log.client_ip} - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Client_security_expression "%{DATA:citrix_adc.log.client_security_expression}" - ?$'

  - grok:
      tag: grok_sslvpn_sta_validate_resp
      if: 'ctx.citrix.name == "STA_VALIDATE_RESP"'
      field: citrix.extended.message
      patterns:
        - '^Xdatalen %{NUMBER:citrix_adc.log.data_length:int} - Xdata %{GREEDYDATA:citrix_adc.log.data} ?$'

  - grok:
      tag: grok_sslvpn_remove_session_debug
      if: 'ctx.citrix.name == "REMOVE_SESSION_DEBUG"'
      field: citrix.extended.message
      patterns:
        - '^(Sessionid|Session id) %{NUMBER:citrix_adc.log.session_id:int} - User %{DATA:citrix_adc.log.user} - Client_ip %{IP:citrix_adc.log.client_ip} - Nat_ip (%{IP:citrix_adc.log.nat.ip}|"%{DATA}") - Vserver_ip %{IP:citrix_adc.log.vserver.ip} - Errmsg "%{DATA:citrix_adc.log.errmsg}" ?$'

  - grok:
      tag: grok_sslvpn_clisec_exp_eval
      if: 'ctx.citrix.name == "CLISEC_EXP_EVAL"'
      field: citrix.extended.message
      patterns:
        - '^User %{USER:citrix_adc.log.user}%{SPACE}:%{SPACE}- Client%{SPACE}IP %{IP:citrix_adc.log.client_ip} - Vserver %{IP:citrix_adc.log.vserver.ip}:%{INT:citrix_adc.log.vserver.port} - Client%{SPACE}security%{SPACE}check%{SPACE}Passed\(%{NUMBER:citrix_adc.log.client_security_check_status:int}\)%{SPACE}on%{SPACE}the%{SPACE}client%{SPACE}machine$'

  - grok:
      tag: grok_sslvpn_message
      if: 'ctx.citrix.name == "Message"'
      field: citrix.extended.message
      patterns:
        - '^Logout handler : %{DATA}, for user <%{USERNAME|EMAILADDRESS:citrix_adc.log.username}>$'
        - '^aaatm_handler successfully parsed assertion client ip is %{IP:citrix_adx.log.client_ip}, username is %{DATA:citrix_adc.log.user}$'
        - '%{DATA}'

  - convert:
      field: citrix_adc.log.client_ip
      tag: convert_client_ip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.citrix_adc?.log?.client_ip != null && ctx.citrix_adc.log.client_ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: client.ip
      tag: set_client_ip_from_client_ip
      copy_from: citrix_adc.log.client_ip
      ignore_empty_value: true
  - set:
      field: url.domain
      tag: set_url_domain_from_hostname
      copy_from: citrix_adc.log.hostname
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.total_bytes_received
      tag: convert_total_bytes_received_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: destination.bytes
      tag: set_destination_bytes_from_total_bytes_received
      copy_from: citrix_adc.log.total_bytes_received
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.destination.ip
      tag: convert_destination_ip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.citrix_adc?.log?.destination?.ip != null && ctx.citrix_adc.log.destination.ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: destination.ip
      tag: set_destination_ip_from_destination_ip
      copy_from: citrix_adc.log.destination.ip
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.destination.port
      tag: convert_destination_port_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: destination.port
      tag: set_destination_port_from_destination_port
      copy_from: citrix_adc.log.destination.port
      ignore_empty_value: true
  - set:
      field: group.name
      tag: set_group_name_from_groups
      copy_from: citrix_adc.log.groups
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.vserver.ip
      tag: convert_vserver_ip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.citrix_adc?.log?.vserver?.ip != null && ctx.citrix_adc.log.vserver.ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: server.ip
      tag: set_server_ip_from_vserver_ip
      copy_from: citrix_adc.log.vserver.ip
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.vserver.port
      tag: convert_vserver_port_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: server.port
      tag: set_server_port_from_vserver_port
      copy_from: citrix_adc.log.vserver.port
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.total_bytes_send
      tag: convert_total_bytes_send_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.bytes
      tag: set_source_bytes_from_total_bytes_send
      copy_from: citrix_adc.log.total_bytes_send
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.source.ip
      tag: convert_source_ip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.citrix_adc?.log?.source?.ip != null && ctx.citrix_adc.log.source.ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.ip
      tag: set_source_ip_from_source_ip
      copy_from: citrix_adc.log.source.ip
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.nat.ip
      tag: convert_nat_ip_to_ip
      type: ip
      ignore_missing: true
      if: ctx.citrix_adc?.log?.nat?.ip != null && ctx.citrix_adc.log.nat.ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.nat.ip
      tag: set_source_nat_ip_from_nat_ip
      copy_from: citrix_adc.log.nat.ip
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.source.port
      tag: convert_source_port_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: source.port
      tag: set_source_port_from_source_port
      copy_from: citrix_adc.log.source.port
      ignore_empty_value: true
  - set:
      field: user.name
      tag: set_user_name_from_user
      copy_from: citrix_adc.log.user
      ignore_empty_value: true
  - convert:
      field: citrix_adc.log.ssl_relay.address
      tag: convert_ssl_relay_address_to_ip
      type: ip
      ignore_missing: true
      if: ctx.citrix_adc?.log?.ssl_relay?.address != null && ctx.citrix_adc.log.ssl_relay.address != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.ssl_relay.port
      tag: convert_ssl_relay_port_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.session_id
      tag: convert_session_id_to_string
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_tcp_connections
      tag: convert_total_tcp_connections_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_udp_flows
      tag: convert_total_udp_flows_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_policies_allowed
      tag: convert_total_policies_allowed_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_bytes_wire_send
      tag: convert_total_bytes_wire_send_to_string
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_bytes_wire_recieved
      tag: convert_total_bytes_wire_recieved_to_string
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_policies_denied
      tag: convert_total_policies_denied_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_compressed_bytes_send
      tag: convert_total_compressed_bytes_send_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.total_compressed_bytes_recieved
      tag: convert_total_compressed_bytes_recieved_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.compression_ratio_send
      tag: convert_compression_ratio_send_to_double
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.compression_ratio_recieved
      tag: convert_compression_ratio_recieved_to_double
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.license_limit
      tag: convert_license_limit_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.client_security_check_status
      tag: convert_client_security_check_status_to_string
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: citrix_adc.log.data_length
      tag: convert_data_length_to_long
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: user.domain
      tag: set_user_domain_from_domain_name
      copy_from: citrix_adc.log.domain_name
      ignore_empty_value: true
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: |-
        Processor "{{{ _ingest.on_failure_processor_type }}}" with tag "{{{ _ingest.on_failure_processor_tag }}}" in pipeline "{{{ _ingest.on_failure_pipeline }}}" failed with message "{{{ _ingest.on_failure_message }}}"
