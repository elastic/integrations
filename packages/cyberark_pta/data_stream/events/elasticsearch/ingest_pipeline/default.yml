---
description: Pipeline for CyberArk PTA

processors:
  - set:
      field: ecs.version
      value: '8.11.0'
  - set:
      field: event.action
      value: "{{{cef.extensions.deviceCustomString5}}}"
      if: "ctx?.cef?.extensions?.deviceCustomString5 != null && ctx?.cef?.extensions?.deviceCustomString5 != ''"
  - set:
      field: '@timestamp'
      value: "{{{cef.extensions.deviceCustomDate1}}}"
      ignore_empty_value: true
      override: true
  - set:
      field: event.id
      value: "{{{cef.extensions.deviceCustomString2}}}"
      if: "ctx?.cef?.extensions?.deviceCustomString2 != null && ctx?.cef?.extensions?.deviceCustomString2 != ''"
  - set:
      field: event.reference
      value: "{{{cef.extensions.deviceCustomString3}}}"
      if: "ctx?.cef?.extensions?.deviceCustomString3 != null && ctx?.cef?.extensions?.deviceCustomString3 != ''"
  - set:
      field: event.url
      value: "{{{cef.extensions.deviceCustomString4}}}"
      if: "ctx?.cef?.extensions?.deviceCustomString4 != null && ctx?.cef?.extensions?.deviceCustomString4 != ''"
  - set: 
      field: cyberark_pta.log.event_type
      value: "{{{cef.device.event_class_id}}}"
      if: "ctx?.cef?.device?.event_class_id != null && ctx?.cef?.device?.event_class_id != ''"
  - rename:
      field: message
      target_field: event.reason
      if: 'ctx.event?.reason == null'

  # cleanup 'None' for source or destination ip
  - remove:
      field: 
        - error
      if: "ctx?.cef?.extensions?.sourceAddress == null || ctx?.cef?.extensions?.destinationAddress == null"

  # normalize user fields
  - rename:
      field: source.user.name
      target_field: source.user.email
      tag: rename_source_user_email
      if: ctx.source?.user?.name != null && ctx.source.user.name.indexOf("@") > 0
  - dissect:
      field: source.user.email
      pattern: '%{source.user.name}@%{source.user.domain}'
      tag: dissect_source_user_email
      ignore_missing: true
      ignore_failure: true
      if: ctx.source?.user?.name == null
  - append:
      field: related.user
      value: '{{{source.user.name}}}'
      if: ctx.source?.user?.name != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      field: related.user
      value: '{{{source.user.email}}}'
      if: ctx.source?.user?.email != null
      allow_duplicates: false
      ignore_failure: true
  - rename:
      field: destination.user.name
      target_field: destination.user.email
      tag: rename_destination_user_email
      if: ctx.destination?.user?.name != null && ctx.destination.user.name.indexOf("@") > 0
  - dissect:
      field: destination.user.email
      pattern: '%{destination.user.name}@%{destination.user.domain}'
      tag: dissect_destination_user_email
      ignore_missing: true
      ignore_failure: true
      if: ctx.destination?.user?.name == null
  - append:
      field: related.user
      value: '{{{destination.user.name}}}'
      if: ctx.destination?.user?.name != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      field: related.user
      value: '{{{destination.user.email}}}'
      if: ctx.destination?.user?.email != null
      allow_duplicates: false
      ignore_failure: true

on_failure:
  - append:
      field: error.message
      value: "{{{ _ingest.on_failure_message }}}"
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
