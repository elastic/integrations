---
description: Pipeline for parsing cloudflare http logs
processors:
# Event Time Fields
- date:
    field: cloudflare.log.Datetime
    formats:
    - ISO8601
    - uuuu-MM-dd'T'HH:mm:ssX
    - uuuu-MM-dd'T'HH:mm:ss.SSSX
    - yyyy-MM-dd'T'HH:mm:ssZ
    - yyyy-MM-dd'T'HH:mm:ss.SSSZ
    timezone: UTC
    target_field: "@timestamp"
- date:
    field: cloudflare.log.Datetime
    formats:
    - uuuu-MM-dd'T'HH:mm:ssX
    - uuuu-MM-dd'T'HH:mm:ss.SSSX
    - yyyy-MM-dd'T'HH:mm:ssZ
    - yyyy-MM-dd'T'HH:mm:ss.SSSZ
    timezone: UTC
    target_field: "event.start"
- rename:
    field: cloudflare.log.Action
    target_field: event.action
    ignore_missing: true
# Cloudflare Edge Fields
- rename:
    field: cloudflare.log.EdgeColoCode
    target_field: cloudflare.log.edge.colo.code
    ignore_missing: true
# Source Fields
- rename:
    field: cloudflare.log.ClientIP
    target_field: source.address
    ignore_missing: true
- convert:
    field: source.address
    target_field: source.ip
    type: ip
    ignore_missing: true
    ignore_failure: true
- geoip:
    field: source.ip
    target_field: source.geo
    ignore_missing: true
    if: "ctx.source?.ip == null"
- rename:
    field: cloudflare.log.ClientCountry
    target_field: source.geo.country_iso_code
    ignore_missing: true
    if: ctx?.source?.geo?.country_iso_code == null
- geoip:
    database_file: GeoLite2-ASN.mmdb
    field: source.ip
    target_field: source.as
    properties:
    - asn
    - organization_name
    ignore_missing: true
- rename:
    field: source.as.asn
    target_field: source.as.number
    ignore_missing: true
- rename:
    field: cloudflare.log.ClientASN
    target_field: source.as.number
    ignore_missing: true
    if: ctx?.source?.as?.number == null
- rename:
    field: source.as.organization_name
    target_field: source.as.organization.name
    ignore_missing: true
- convert:
    field: cloudflare.log.ClientRequestBytes
    target_field: source.bytes
    type: long
    ignore_missing: true
- convert:
    field: cloudflare.log.ClientSrcPort
    target_field: source.port
    type: long
    ignore_missing: true
# Client Fields
- set:
    field: client
    copy_from: source
- rename:
    field: cloudflare.log.ClientIPClass
    target_field: cloudflare.log.client.ip_class
    ignore_missing: true
# HTTP Fields
- dissect:
    field: cloudflare.log.ClientRequestProtocol
    pattern: "%{network.protocol}/%{http.version}"
    ignore_failure: true
- convert:
    field: cloudflare.log.EdgeResponseBodyBytes
    target_field: http.response.body.bytes
    type: long
    ignore_missing: true
- rename:
    field: cloudflare.log.ClientRequestMethod
    target_field: http.request.method
    ignore_missing: true
- rename:
    field: cloudflare.log.ClientRequestReferer
    target_field: http.request.referrer
    ignore_missing: true
- rename:
    field: cloudflare.log.EdgeResponseStatus
    target_field: http.response.status_code
    ignore_missing: true
# URL Fields
- script:
    lang: painless
    description: This script processor creates the URL Full field
    source: |
      ctx.url.full = ""
      if(ctx.cloudflare.log.ClientRequestScheme != null) {
        ctx.url.full += ctx.cloudflare.log.ClientRequestScheme+'://'
      }
      if(ctx.cloudflare.log.ClientRequestScheme != null) {
        ctx.url.full += ctx.cloudflare.log.ClientRequestHost
      }
      if(ctx.cloudflare.log.ClientRequestPath != null) {
        ctx.url.full += ctx.cloudflare.log.ClientRequestPath
      }
      if(ctx.cloudflare.log.ClientRequestQuery != null) {
        ctx.url.full += '?'+ctx.cloudflare.log.ClientRequestQuery
      }
- uri_parts:
    field: url.full
    ignore_failure: true
    if: ctx?.url?.full != null
- set:
    field: url.domain
    copy_from: cloudflare.log.ClientRequestHost
    ignore_empty_value: true
    if: ctx?.url?.domain == null
- set:
    field: url.path
    copy_from: cloudflare.log.ClientRequestPath
    ignore_empty_value: true
    if: ctx?.url?.path == null
- set:
    field: url.scheme
    copy_from: cloudflare.log.ClientRequestScheme
    ignore_empty_value: true
    if: ctx?.url?.scheme == null
- set:
    field: url.query
    copy_from: cloudflare.log.ClientRequestQuery
    ignore_empty_value: true
    if: ctx?.url?.query == null
# User Agent Fields
- user_agent:
    field: cloudflare.log.ClientRequestUserAgent
    target_field: user_agent
    ignore_missing: true
# Cloudflare RayID Fields
- rename:
    field: cloudflare.log.OriginatorRayID
    target_field: cloudflare.log.originator.ray_id
    ignore_missing: true
- rename:
    field: cloudflare.log.RayID
    target_field: cloudflare.log.ray_id
    ignore_missing: true
# Cloudflare Origin Fields
- rename:
    field: cloudflare.log.OriginResponseStatus
    target_field: cloudflare.log.origin.response.status_code
    ignore_missing: true
# Other Fields
- rename:
    field: cloudflare.log.Kind
    target_field: cloudflare.log.kind
    ignore_missing: true
- rename:
    field: cloudflare.log.Source
    target_field: cloudflare.log.source
    ignore_missing: true
- rename:
    field: cloudflare.log.RuleID
    target_field: rule.id
    ignore_missing: true
- rename:
    field: cloudflare.log.Metadata
    target_field: cloudflare.log.metadata
    ignore_missing: true
- rename:
    field: cloudflare.log.MatchIndex
    target_field: cloudflare.log.MatchIndex
    ignore_missing: true
- remove:
    field:
      - cloudflare.log.Datetime
      - cloudflare.log.ClientCountry
      - cloudflare.log.ClientASN
      - cloudflare.log.ClientRequestBytes
      - cloudflare.log.ClientRequestUserAgent




      - cloudflare.log.EdgeResponseBytes
      - cloudflare.log.EdgeServerIP
      - cloudflare.log.OriginIP
      - cloudflare.log.WAFFlags
      - cloudflare.log.WAFMatchedVar
      - cloudflare.log.ClientSrcPort
      - cloudflare.log.ClientRequestHost
      - cloudflare.log.ClientRequestPath
      - cloudflare.log.ClientRequestScheme
      - cloudflare.log.ClientRequestQuery
      - cloudflare.log.CacheResponseStatus
      - cloudflare.log.CacheResponseBytes
      - cloudflare.log.OriginResponseTime
      - cloudflare.log.OriginResponseHTTPLastModified
      - cloudflare.log.OriginResponseHTTPExpires
      - cloudflare.log.WorkerCPUTime
      - cloudflare.log.WorkerSubrequestCount
      - cloudflare.log.ClientRequestProtocol
      - cloudflare.log.ClientSSLProtocol
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: "{{ _ingest.on_failure_message }}"