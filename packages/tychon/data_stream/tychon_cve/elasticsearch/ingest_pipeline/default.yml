---
description: Pipeline for parsing TYCHON Vulnerability Scan Results
processors:
  - dot_expander:
      field: "*"
  - set:
      if: ctx.containsKey("tychon") && ctx.tychon.containsKey("id")
      field: host.id
      value: "{{tychon.id}}"
  - remove:
      if: ctx.containsKey("tychon") && ctx.tychon.containsKey("id")
      field: 'tychon'
  - set:
      field: _id
      value: "{{id}}"
  - set:
      field: tychon.ipv4
      value: "{{host.ipv4}}"
  - set:
      field: tychon.ipv6
      value: "{{host.ipv6}}"
  - remove:
      ignore_missing: true
      field: host.ipv4
  - remove:
      ignore_missing: true
      field: host.ipv6
  - set:
      field: "@timestamp"
      value: "{{_ingest.timestamp}}"
  - set:
      field: ecs.version
      value: 8.8.0
  - set:
      field: event.kind
      value: state
  - set:
      field: event.module
      value: tychon
  - set:
      field: event.category
      value: [vulnerability]
  - split:
      field: host.ip
      separator: ","
  - script:
      source: if(ctx.vulnerability?.result == 'fail'){
                ctx.event.outcome = "failure"
              }else if(ctx.vulnerability?.result == 'pass'){
                ctx.event.outcome = "success"
              }else{
                ctx.event.outcome = "unknown"
              }
  - script:
      source: ctx.host.mac = ctx.host.mac.replace(':','-')
  - set:
      field: event.ingested
      value: "{{_ingest.timestamp}}"
  - convert:
      field: script.current_duration
      type: float
  - convert:
      field: vulnerability.score.base
      type: float
  - convert:
      field: vulnerability.year
      type: long
  - set: 
      field: vulnerability.scanner.vendor
      value: tychon
  - set:
      field: vulnerability.category
      value: [oval]
  - set:
      field: vulnerability.classification
      value: cvss
  - set:
      field: vulnerability.enumeration
      value: CVE
  - set:
      field: vulnerability.version
      value: "{{vulnerability.version}}"
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
 