---
processors:
  - set:
      field: event.kind
      value: alert
  - append:
      field: event.category
      value: malware
      tag: append_malware_category
  - append:
      field: event.type
      value: info
      tag: append_info_type
  - set:
      field: event.action
      value: ipd-detection
  - set:
      field: event.outcome
      value: success
      if: ctx.crowdstrike?.event?.AttemptOutcome == true
  - set:
      field: event.outcome
      value: failure
      if: ctx.crowdstrike?.event?.AttemptOutcome == false
  - rename:
      field: crowdstrike.event.DetectDescription
      target_field: message
      ignore_missing: true
      tag: rename_detect_description
  - rename:
      field: crowdstrike.event.LocationCountryCode
      target_field: host.geo.country_iso_code
      ignore_missing: true
      tag: rename_location_country_code
  - convert:
      field: crowdstrike.event.PatternId
      target_field: rule.uuid
      type: string
      tag: convert_pattern_id
      ignore_missing: true
  - rename:
      field: crowdstrike.event.Severity
      target_field: event.severity    
      ignore_missing: true
      tag: rename_severity
  - rename:
      field: crowdstrike.event.SourceAccountDomain
      target_field: user.domain  
      ignore_missing: true
      tag: rename_source_account_domain
  - rename:
      field: crowdstrike.event.SourceAccountName
      target_field: user.name 
      ignore_missing: true
      tag: rename_source_account_name
  - rename:
      field: crowdstrike.event.SourceAccountObjectSid
      target_field: user.id
      ignore_missing: true
      tag: rename_source_account_object_sid
  - rename:
      field: crowdstrike.event.SourceEndpointHostName
      target_field: host.name
      ignore_missing: true
      tag: rename_source_endpoint_hostname
  - rename:
      field: crowdstrike.event.SourceEndpointIpAddress
      target_field: host.ip
      ignore_missing: true
      tag: rename_source_endpoint_ipaddress
  - append:
      field: threat.technique.name
      value: "{{{crowdstrike.event.Technique}}}"
      tag: append_technique_name
      if: ctx.crowdstrike?.event?.Technique != null
  - append:
      field: threat.technique.id
      value: "{{{crowdstrike.event.TechniqueId}}}"
      tag: append_technique_id
      if: ctx.crowdstrike?.event?.TechniqueId != null
  - append:
      field: threat.tactic.name
      value: "{{{crowdstrike.event.Tactic}}}"
      tag: append_tactic_name
      if: ctx.crowdstrike?.event?.Tactic != null
  - append:
      field: threat.tactic.id
      value: "{{{crowdstrike.event.TacticId}}}"
      tag: append_tactic_id
      if: ctx.crowdstrike?.event?.TacticId != null
  - set: 
      field: rule.description
      copy_from: message
      tag: set_rule_description
      if: ctx.message != null
  - rename:
      field: crowdstrike.event.DetectName
      target_field: rule.name
      ignore_missing: true
      tag: rename_detect_name
  - rename:
      field: crowdstrike.event.DetectId
      target_field: rule.id
      ignore_missing: true
      tag: rename_detect_id
  - rename:
      field: crowdstrike.event.FalconHostLink
      target_field: event.reference    
      ignore_missing: true
      tag: rename_falcon_host_link
  - remove:
      field: 
        - event.created
      ignore_missing: true
      if: ctx.crowdstrike?.event?.ContextTimeStamp != null
  - convert:
      field: crowdstrike.event.ContextTimeStamp
      type: string
      tag: convert_context_timestamp
      ignore_missing: true
      if: ctx.crowdstrike?.event?.ContextTimeStamp != null
  - gsub:
      field: crowdstrike.event.ContextTimeStamp
      pattern: "\\d{6}$"
      replacement: ""
      tag: gsub_context_timestamp
      if: "ctx.crowdstrike?.event?.ContextTimeStamp != null && ctx.crowdstrike.event.ContextTimeStamp.length() > 18"
  - date:
      field: crowdstrike.event.ContextTimeStamp
      target_field: event.created
      timezone: UTC
      formats:
        - UNIX_MS
      tag: date_context_timestamp
      if: "ctx.crowdstrike?.event?.ContextTimeStamp != null && ctx.crowdstrike.event.ContextTimeStamp.length() >= 12"
  - date:
      field: crowdstrike.event.ContextTimeStamp
      target_field: event.created
      timezone: UTC
      formats:
        - UNIX
      tag: date_context_timestamp
      if: 'ctx.crowdstrike?.event?.ContextTimeStamp != null && ctx.crowdstrike.event.ContextTimeStamp.length() <= 11'
  - convert:
      field: crowdstrike.event.AccountCreationTimeStamp
      type: string
      tag: convert_account_creation_timestamp
      ignore_missing: true
      if: ctx.crowdstrike?.event?.AccountCreationTimeStamp != null
  - gsub:
      field: crowdstrike.event.AccountCreationTimeStamp
      pattern: "\\d{6}$"
      replacement: ""
      tag: gsub_account_creation_timestamp
      if: "ctx.crowdstrike?.event?.AccountCreationTimeStamp != null && ctx.crowdstrike.event.AccountCreationTimeStamp.length() > 18"
  - date:
      field: crowdstrike.event.AccountCreationTimeStamp
      target_field: crowdstrike.event.AccountCreationTimeStamp
      timezone: UTC
      formats:
        - UNIX_MS
      tag: date_account_creation_timestamp
      if: "ctx.crowdstrike?.event?.AccountCreationTimeStamp != null && ctx.crowdstrike.event.AccountCreationTimeStamp.length() >= 12"
  - date:
      field: crowdstrike.event.AccountCreationTimeStamp
      target_field: crowdstrike.event.AccountCreationTimeStamp
      timezone: UTC
      formats:
        - UNIX
      tag: date_account_creation_timestamp
      if: 'ctx.crowdstrike?.event?.AccountCreationTimeStamp != null && ctx.crowdstrike.event.AccountCreationTimeStamp.length() <= 11'
  - convert:
      field: crowdstrike.event.StartTime
      type: string
      tag: convert_start_time_epoch
      ignore_missing: true
      if: ctx.crowdstrike?.event?.StartTime != null
  - gsub:
      field: crowdstrike.event.StartTime
      pattern: "\\d{6}$"
      replacement: ""
      tag: gsub_start_time_epoch
      if: "ctx.crowdstrike?.event?.StartTime != null && ctx.crowdstrike.event.StartTime.length() > 18"
  - date:
      field: crowdstrike.event.StartTime
      target_field: event.start
      timezone: UTC
      formats:
        - UNIX_MS
      tag: date_event_start_time_epoch
      if: "ctx.crowdstrike?.event?.StartTime != null && ctx.crowdstrike.event.StartTime.length() >= 12"
  - date:
      field: crowdstrike.event.StartTime
      target_field: event.start
      timezone: UTC
      formats:
        - UNIX
      tag: date_event_start_time_epoch
      if: 'ctx.crowdstrike?.event?.StartTime != null && ctx.crowdstrike.event.StartTime.length() <= 11'
  - convert:
      field: crowdstrike.event.EndTime
      type: string
      tag: convert_start_time_epoch
      ignore_missing: true
      if: ctx.crowdstrike?.event?.EndTime != null
  - gsub:
      field: crowdstrike.event.EndTime
      pattern: "\\d{6}$"
      replacement: ""
      tag: gsub_start_time_epoch
      if: "ctx.crowdstrike?.event?.EndTime != null && ctx.crowdstrike.event.EndTime.length() > 18"
  - date:
      field: crowdstrike.event.EndTime
      target_field: event.end
      timezone: UTC
      formats:
        - UNIX_MS
      tag: date_event_end_time_epoch
      if: "ctx.crowdstrike?.event?.EndTime != null && ctx.crowdstrike.event.EndTime.length() >= 12"
  - date:
      field: crowdstrike.event.EndTime
      target_field: event.end
      timezone: UTC
      formats:
        - UNIX
      tag: date_event_end_time_epoch
      if: 'ctx.crowdstrike?.event?.EndTime != null && ctx.crowdstrike.event.EndTime.length() <= 11'
  - append:
      field: related.hosts
      value: "{{{crowdstrike.event.TargetEndpointHostName}}}"
      allow_duplicates: false
      tag: append_target_endpoint_hostname
      if: ctx.crowdstrike?.event?.TargetEndpointHostName != null
  - append:
      field: related.hosts
      value: "{{{crowdstrike.event.TargetDomain}}}"
      allow_duplicates: false
      tag: append_target_domain
      if: ctx.crowdstrike?.event?.TargetDomain != null
  - append:
      field: related.user
      value: "{{{crowdstrike.event.TargetAccountName}}}"
      allow_duplicates: false
      tag: append_target_account_name
      if: ctx.crowdstrike?.event?.TargetAccountName != null
  - append:
      field: related.hosts
      value: "{{{crowdstrike.event.AdditionalAccountDomain}}}"
      allow_duplicates: false
      tag: append_additional_account_domain
      if: ctx.crowdstrike?.event?.AdditionalAccountDomain != null
  - append:
      field: related.hosts
      value: "{{{crowdstrike.event.AdditionalAccountName}}}"
      allow_duplicates: false
      tag: append_additional_account_domain
      if: ctx.crowdstrike?.event?.AdditionalAccountName != null
  - append:
      field: related.hosts
      value: "{{{crowdstrike.event.AdditionalEndpointHostName}}}"
      allow_duplicates: false
      tag: append_additional_endpoint_hostname
      if: ctx.crowdstrike?.event?.AdditionalEndpointHostName != null
  - append:
      field: related.ip
      value: "{{{crowdstrike.event.AdditionalEndpointIpAddress}}}"
      allow_duplicates: false
      tag: append_additional_endpoint_hostname
      if: ctx.crowdstrike?.event?.AdditionalEndpointIpAddress != null

on_failure:
  - append:
      field: error.message
      value: |-
        Processor "{{ _ingest.on_failure_processor_type }}" with tag "{{ _ingest.on_failure_processor_tag }}" in pipeline "{{ _ingest.on_failure_pipeline }}" failed with message "{{ _ingest.on_failure_message }}"
  - set:
      field: event.kind
      value: pipeline_error