---
description: Pipeline for processing vulnerability logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - fail:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - fingerprint:
      fields:
        - json.id
        - json.updated_timestamp
      tag: fingerprint_crowdstrike_vulnerability
      target_field: _id
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_event_kind_to_event
      value: event
  - append:
      field: event.category
      tag: append_event_category
      value: vulnerability
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - set:
      field: observer.vendor
      tag: set_observer_vendor
      value: Crowdstrike
  - set:
      field: observer.product
      tag: set_observer_product
      value: Falcon sensor
  - set:
      field: observer.type
      tag: set_observer_type
      value: sensor
  - rename:
      field: json.aid
      tag: rename_aid
      target_field: crowdstrike.vulnerability.aid
      ignore_missing: true
  - rename:
      field: json.app.product_name_normalized
      tag: rename_app_product_name_normalized
      target_field: crowdstrike.vulnerability.app.product_name_normalized
      ignore_missing: true
  - set:
      field: package.name
      tag: set_package_name_from_vulnerability_app_product_name_normalized
      copy_from: crowdstrike.vulnerability.app.product_name_normalized
      ignore_empty_value: true
  - rename:
      field: json.app.product_name_version
      tag: rename_app_product_name_version
      target_field: crowdstrike.vulnerability.app.product_name_version
      ignore_missing: true
  - rename:
      field: json.app.vendor_normalized
      tag: rename_app_vendor_normalized
      target_field: crowdstrike.vulnerability.app.vendor_normalized
      ignore_missing: true
  - foreach:
      field: json.apps
      if: ctx.json?.apps instanceof List
      tag: foreach_apps_remediation_info
      processor:
        date:
          field: _ingest._value.remediation_info.patch_publication_date
          tag: date_apps_remediation_info_patch_publication_date
          target_field: _ingest._value.remediation_info.patch_publication_date
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.remediation_info.patch_publication_date
                ignore_missing: true
  - foreach:
      field: json.apps
      if: ctx.json?.apps instanceof List
      tag: foreach_apps_patch_publication_date
      processor:
        date:
          field: _ingest._value.patch_publication_date
          tag: date_apps_patch_publication_date
          target_field: _ingest._value.patch_publication_date
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.patch_publication_date
                ignore_missing: true          
  - foreach:
      field: json.apps
      if: ctx.json?.apps instanceof List
      tag: foreach_apps_evaluation_logic_created_timestamp
      processor:
        date:
          field: _ingest._value.evaluation_logic.created_timestamp
          tag: date_apps_evaluation_logic_created_timestamp
          target_field: _ingest._value.evaluation_logic.created_timestamp
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.evaluation_logic.created_timestamp
                ignore_missing: true
  - foreach:
      field: json.apps
      if: ctx.json?.apps instanceof List
      processor:
        date:
          field: _ingest._value.evaluation_logic.updated_timestamp
          tag: date_apps_evaluation_logic_updated_timestamp
          target_field: _ingest._value.evaluation_logic.updated_timestamp
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.evaluation_logic.updated_timestamp
                ignore_missing: true   
  - foreach:
      field: json.apps
      if: ctx.json?.apps instanceof List
      tag: foreach_apps_evaluation_logic_determined_by_comparison
      processor:
        foreach:
          field: _ingest._value.evaluation_logic.logic
          ignore_missing: true
          processor:
            convert:
              field: _ingest._value.determined_by_comparison
              tag: convert_apps_evaluation_logic_logic_determined_by_comparison_to_boolean
              type: boolean
              ignore_missing: true
              on_failure:
                - remove:
                    field: _ingest._value.determined_by_comparison
                    ignore_missing: true
                - append:
                    field: error.message
                    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.apps
      if: ctx.json?.apps instanceof List
      tag: foreach_apps_evaluation_logic_negate
      processor:
        foreach:
          field: _ingest._value.evaluation_logic.logic
          ignore_missing: true
          tag: foreach_apps_evaluation_logic_logic_negate
          processor:
            convert:
              field: _ingest._value.negate
              tag: convert_apps_evaluation_logic_logic_negate_to_boolean
              type: boolean
              ignore_missing: true
              on_failure:
                - remove:
                    field: _ingest._value.negate
                    ignore_missing: true
                - append:
                    field: error.message
                    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.apps
      tag: rename_apps
      target_field: crowdstrike.vulnerability.apps
      ignore_missing: true
  - rename:
      field: json.cid
      tag: rename_cid
      target_field: crowdstrike.vulnerability.cid
      ignore_missing: true
  - date:
      field: json.closed_timestamp
      tag: date_closed_timestamp
      target_field: crowdstrike.vulnerability.closed_timestamp
      formats:
        - ISO8601
      if: ctx.json?.closed_timestamp != null && ctx.json.closed_timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.confidence
      tag: rename_confidence
      target_field: crowdstrike.vulnerability.confidence
      ignore_missing: true
  - date:
      field: json.created_timestamp
      tag: date_created_timestamp
      target_field: crowdstrike.vulnerability.created_timestamp
      formats:
        - ISO8601
      if: ctx.json?.created_timestamp != null && ctx.json.created_timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.cve.actors
      tag: rename_cve_actors
      target_field: crowdstrike.vulnerability.cve.actors
      ignore_missing: true
  - convert:
      field: json.cve.base_score
      tag: convert_cve_base_score_to_double
      target_field: crowdstrike.vulnerability.cve.base_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.cve.cisa_info.due_date
      tag: date_cve_cisa_info_due_date
      target_field: crowdstrike.vulnerability.cve.cisa_info.due_date
      formats:
        - ISO8601
      if: ctx.json?.cve?.cisa_info?.due_date != null && ctx.json.cve.cisa_info.due_date != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.base
      tag: set_vulnerability_score_base_from_vulnerability_cve_base_score
      copy_from: crowdstrike.vulnerability.cve.base_score
      ignore_empty_value: true
  - convert:
      field: json.cve.cisa_info.is_cisa_kev
      tag: convert_cve_cisa_info_is_cisa_kev_to_boolean
      target_field: crowdstrike.vulnerability.cve.cisa_info.is_cisa_kev
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.cve.cwes
      tag: rename_cve_cwes
      target_field: crowdstrike.vulnerability.cve.cwes
      ignore_missing: true
  - rename:
      field: json.cve.description
      tag: rename_cve_description
      target_field: crowdstrike.vulnerability.cve.description
      ignore_missing: true
  - set:
      field: message
      tag: set_message_from_vulnerability_cve_description
      copy_from: crowdstrike.vulnerability.cve.description
      ignore_empty_value: true
  - set:
      field: vulnerability.description
      tag: set_vulnerability_description_from_vulnerability_cve_description
      copy_from: crowdstrike.vulnerability.cve.description
      ignore_empty_value: true
  - convert:
      field: json.cve.exploit_status
      tag: convert_cve_exploit_status_to_long
      target_field: crowdstrike.vulnerability.cve.exploit_status
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.cve.exploitability_score
      tag: convert_cve_exploitability_score_to_double
      target_field: crowdstrike.vulnerability.cve.exploitability_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.cve.exprt_rating
      tag: rename_cve_exprt_rating
      target_field: crowdstrike.vulnerability.cve.exprt_rating
      ignore_missing: true
  - rename:
      field: json.cve.id
      tag: rename_cve_id
      target_field: crowdstrike.vulnerability.cve.id
      ignore_missing: true
  - convert:
      field: json.cve.impact_score
      tag: convert_cve_impact_score_to_double
      target_field: crowdstrike.vulnerability.cve.impact_score
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.cve.name
      tag: rename_cve_name
      target_field: crowdstrike.vulnerability.cve.name
      ignore_missing: true
  - date:
      field: json.cve.published_date
      tag: date_cve_published_date
      target_field: crowdstrike.vulnerability.cve.published_date
      formats:
        - ISO8601
      if: ctx.json?.cve?.published_date != null && ctx.json.cve.published_date != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.cve.references
      if: ctx.json?.cve?.references instanceof List
      tag: foreach_cve_references
      processor:
        append:
          field: vulnerability.reference
          tag: append_cve_references_into_vulnerability_reference
          value: '{{{_ingest._value}}}'
          allow_duplicates: false
  - rename:
      field: json.cve.references
      tag: rename_cve_references
      target_field: crowdstrike.vulnerability.cve.references
      ignore_missing: true
  - rename:
      field: json.cve.remediation_level
      tag: rename_cve_remediation_level
      target_field: crowdstrike.vulnerability.cve.remediation_level
      ignore_missing: true
  - script:
      tag: script_to_convert_cve_severity_to_cvss_format_and_set_vulnerability_severity
      lang: painless
      source: >-
        if(ctx.json.cve.severity != null && ctx.json.cve.severity != "") {
            def severity_first_char = ctx.json.cve.severity.substring(0, 1);
            ctx.vulnerability.severity = severity_first_char + ctx.json.cve.severity.substring(1).toLowerCase();
        }
  - rename:
      field: json.cve.severity
      tag: rename_cve_severity
      target_field: crowdstrike.vulnerability.cve.severity
      ignore_missing: true
  - date:
      field: json.cve.spotlight_published_date
      tag: date_cve_spotlight_published_date
      target_field: crowdstrike.vulnerability.cve.spotlight_published_date
      formats:
        - ISO8601
      if: ctx.json?.cve?.spotlight_published_date != null && ctx.json.cve.spotlight_published_date != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.cve.types
      tag: rename_cve_types
      target_field: crowdstrike.vulnerability.cve.types
      ignore_missing: true
  - rename:
      field: json.cve.vector
      tag: rename_cve_vector
      target_field: crowdstrike.vulnerability.cve.vector
      ignore_missing: true
  - rename:
      field: json.cve.vendor_advisory
      tag: rename_cve_vendor_advisory
      target_field: crowdstrike.vulnerability.cve.vendor_advisory
      ignore_missing: true
  - foreach:
      field: json.data_providers
      if: ctx.json?.data_providers instanceof List
      tag: foreach_data_providers
      processor:
        foreach:
          field: _ingest._value.ports
          ignore_missing: true
          processor:
            convert:
              field: _ingest._value
              tag: convert_data_providers_ports_to_long
              type: long
              ignore_missing: true
              on_failure:
                - remove:
                    field: _ingest._value
                    ignore_missing: true
                - append:
                    field: error.message
                    value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.scanner.vendor
      tag: set_vulnerability_scanner_vendor
      copy_from: observer.vendor
      ignore_empty_value: true
  - foreach:
      field: json.data_providers
      if: ctx.json?.data_providers instanceof List
      processor:
        append:
          field: vulnerability.report_id
          tag: append_data_providers_scan_id_into_vulnerability_report_id
          value: '{{{_ingest._value.scan_id}}}'
          allow_duplicates: false
  - rename:
      field: json.data_providers
      tag: rename_data_providers
      target_field: crowdstrike.vulnerability.data_providers
      ignore_missing: true
  - rename:
      field: json.host_info.asset_criticality
      tag: rename_host_info_asset_criticality
      target_field: crowdstrike.vulnerability.host_info.asset_criticality
      ignore_missing: true
  - rename:
      field: json.host_info.asset_roles
      tag: rename_host_info_asset_roles
      target_field: crowdstrike.vulnerability.host_info.asset_roles
      ignore_missing: true
  - rename:
      field: json.host_info.confidence_label
      tag: rename_host_info_confidence_label
      target_field: crowdstrike.vulnerability.host_info.confidence_label
      ignore_missing: true
  - rename:
      field: json.host_info.groups
      tag: rename_host_info_groups
      target_field: crowdstrike.vulnerability.host_info.groups
      ignore_missing: true
  - convert:
      field: json.host_info.has_run_container
      tag: convert_host_info_has_run_container_to_boolean
      target_field: crowdstrike.vulnerability.host_info.has_run_container
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.host_info.host_last_seen_timestamp
      tag: date_host_info_host_last_seen_timestamp
      target_field: crowdstrike.vulnerability.host_info.host_last_seen_timestamp
      formats:
        - ISO8601
      if: ctx.json?.host_info?.host_last_seen_timestamp != null && ctx.json.host_info.host_last_seen_timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.host_info.hostname
      tag: rename_host_info_hostname
      target_field: crowdstrike.vulnerability.host_info.hostname
      ignore_missing: true
  - set:
      field: host.name
      tag: set_host_name_from_vulnerability_host_info_hostname
      copy_from: crowdstrike.vulnerability.host_info.hostname
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{host.name}}}'
      tag: append_host_name_into_related_host
      if: ctx.host?.name != null
      allow_duplicates: false
  - rename:
      field: json.host_info.instance_id
      tag: rename_host_info_instance_id
      target_field: crowdstrike.vulnerability.host_info.instance_id
      ignore_missing: true
  - rename:
      field: json.host_info.internet_exposure
      tag: rename_host_info_internet_exposure
      target_field: crowdstrike.vulnerability.host_info.internet_exposure
      ignore_missing: true
  - convert:
      field: json.host_info.local_ip
      tag: convert_host_info_local_ip_to_ip
      target_field: crowdstrike.vulnerability.host_info.local_ip
      type: ip
      ignore_missing: true
      if: ctx.json?.host_info?.local_ip != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: host.ip
      tag: append_crowdstrike_vulnerability_host_info_local_ip_into_host_ip
      value: '{{{crowdstrike.vulnerability.host_info.local_ip}}}'
      allow_duplicates: false
      if: ctx.crowdstrike?.vulnerability?.host_info?.local_ip != null
  - append:
      field: related.ip
      value: '{{{crowdstrike.vulnerability.host_info.local_ip}}}'
      tag: append_related_ip_from_host_ip
      if: ctx.crowdstrike?.vulnerability?.host_info?.local_ip != null
      allow_duplicates: false
  - rename:
      field: json.host_info.machine_domain
      tag: rename_host_info_machine_domain
      target_field: crowdstrike.vulnerability.host_info.machine_domain
      ignore_missing: true
  - rename:
      field: json.host_info.managed_by
      tag: rename_host_info_managed_by
      target_field: crowdstrike.vulnerability.host_info.managed_by
      ignore_missing: true
  - rename:
      field: json.host_info.os_build
      tag: rename_host_info_os_build
      target_field: crowdstrike.vulnerability.host_info.os_build
      ignore_missing: true
  - rename:
      field: json.host_info.os_version
      tag: rename_host_info_os_version
      target_field: crowdstrike.vulnerability.host_info.os_version
      ignore_missing: true
  - set:
      field: host.os.version
      tag: set_host_os_version_from_vulnerability_host_info_os_version
      copy_from: crowdstrike.vulnerability.host_info.os_version
      ignore_empty_value: true
  - rename:
      field: json.host_info.ou
      tag: rename_host_info_ou
      target_field: crowdstrike.vulnerability.host_info.ou
      ignore_missing: true
  - rename:
      field: json.host_info.platform
      tag: rename_host_info_platform
      target_field: crowdstrike.vulnerability.host_info.platform
      ignore_missing: true
  - set:
      field: host.os.platform
      tag: set_host_os_platform_from_vulnerability_host_info_platform
      copy_from: crowdstrike.vulnerability.host_info.platform
      ignore_empty_value: true
  - rename:
      field: json.host_info.product_type_desc
      tag: rename_host_info_product_type_desc
      target_field: crowdstrike.vulnerability.host_info.product_type_desc
      ignore_missing: true
  - rename:
      field: json.host_info.service_provider
      tag: rename_host_info_service_provider
      target_field: crowdstrike.vulnerability.host_info.service_provider
      ignore_missing: true
  - rename:
      field: json.host_info.service_provider_account_id
      tag: rename_host_info_service_provider_account_id
      target_field: crowdstrike.vulnerability.host_info.service_provider_account_id
      ignore_missing: true
  - rename:
      field: json.host_info.site_name
      tag: rename_host_info_site_name
      target_field: crowdstrike.vulnerability.host_info.site_name
      ignore_missing: true
  - rename:
      field: json.host_info.subsidiaries
      tag: rename_host_info_subsidiaries
      target_field: crowdstrike.vulnerability.host_info.subsidiaries
      ignore_missing: true
  - rename:
      field: json.host_info.system_manufacturer
      tag: rename_host_info_system_manufacturer
      target_field: crowdstrike.vulnerability.host_info.system_manufacturer
      ignore_missing: true
  - rename:
      field: json.host_info.tags
      tag: rename_host_info_tags
      target_field: crowdstrike.vulnerability.host_info.tags
      ignore_missing: true
  - rename:
      field: json.host_info.third_party_asset_ids
      tag: rename_host_info_third_party_asset_ids
      target_field: crowdstrike.vulnerability.host_info.third_party_asset_ids
      ignore_missing: true
  - rename:
      field: json.id
      tag: rename_id
      target_field: crowdstrike.vulnerability.id
      ignore_missing: true
  - set:
      field: event.id
      tag: set_event_id_from_vulnerability_id
      copy_from: crowdstrike.vulnerability.id
      ignore_empty_value: true
  - rename:
      field: json.network_scan
      tag: rename_network_scan
      target_field: crowdstrike.vulnerability.network_scan
      ignore_missing: true
  - foreach:
      field: json.remediation.entities
      if: ctx.json?.remediation?.entities instanceof List
      tag: foreach_remediation_entities
      processor:
        date:
          field: _ingest._value.patch_publication_date
          tag: date_apps_evaluation_logic_created_timestamp
          target_field: _ingest._value.patch_publication_date
          formats:
            - ISO8601
          on_failure:
            - remove:
                field: _ingest._value.patch_publication_date
                ignore_missing: true
  - rename:
      field: json.remediation.entities
      tag: rename_remediation_entities
      target_field: crowdstrike.vulnerability.remediation.entities
      ignore_missing: true
  - rename:
      field: json.remediation.ids
      tag: rename_remediation_ids
      target_field: crowdstrike.vulnerability.remediation.ids
      ignore_missing: true
  - foreach:
      field: json.services
      if: ctx.json?.services instanceof List
      processor:
        convert:
          field: _ingest._value.port
          tag: convert_services_port_to_long
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.port
                ignore_missing: true
            - append:
                field: error.message
                value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.services
      tag: rename_services
      target_field: crowdstrike.vulnerability.services
      ignore_missing: true
  - rename:
      field: json.status
      tag: rename_status
      target_field: crowdstrike.vulnerability.status
      ignore_missing: true
  - convert:
      field: json.suppression_info.is_suppressed
      tag: convert_suppression_info_is_suppressed_to_boolean
      target_field: crowdstrike.vulnerability.suppression_info.is_suppressed
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.suppression_info.reason
      tag: rename_suppression_info_reason
      target_field: crowdstrike.vulnerability.suppression_info.reason
      ignore_missing: true
  - date:
      field: json.updated_timestamp
      tag: date_updated_timestamp
      target_field: crowdstrike.vulnerability.updated_timestamp
      formats:
        - ISO8601
      if: ctx.json?.updated_timestamp != null && ctx.json.updated_timestamp != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_vulnerability_updated_timestamp
      copy_from: crowdstrike.vulnerability.updated_timestamp
      ignore_empty_value: true
  - rename:
      field: json.vulnerability_id
      tag: rename_vulnerability_id
      target_field: crowdstrike.vulnerability.vulnerability_id
      ignore_missing: true
  - set:
      field: vulnerability.id
      tag: set_vulnerability_id_from_vulnerability_vulnerability_id
      copy_from: crowdstrike.vulnerability.vulnerability_id
      ignore_empty_value: true
  - set:
      field: vulnerability.enumeration
      tag: set_vulnerability_enumeration_to_cve
      value: 'CVE'
      if: ctx.vulnerability?.id != null && ctx.vulnerability.id.startsWith('CVE-')
  - foreach:
      field: crowdstrike.vulnerability.data_providers
      if: ctx.crowdstrike?.vulnerability?.data_providers instanceof List
      tag: foreach_crowdstrike_vulnerability_data_providers
      processor:
        remove:
          field: _ingest._value.scan_id
          tag: remove_custom_duplicate_fields_from_crowdstrike_vulnerability_data_providers
          ignore_missing: true
          if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field:
        - crowdstrike.vulnerability.app.product_name_normalized
        - crowdstrike.vulnerability.cve.base_score
        - crowdstrike.vulnerability.cve.description
        - crowdstrike.vulnerability.cve.references
        - crowdstrike.vulnerability.cve.remediation_level
        - crowdstrike.vulnerability.cve.severity
        - crowdstrike.vulnerability.host_info.hostname
        - crowdstrike.vulnerability.host_info.local_ip
        - crowdstrike.vulnerability.host_info.os_version
        - crowdstrike.vulnerability.host_info.platform
        - crowdstrike.vulnerability.id
        - crowdstrike.vulnerability.updated_timestamp
        - crowdstrike.vulnerability.vulnerability_id
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: Drops null/empty values recursively.
      source: |-
        boolean drop(Object object) {
          if (object == null || object == '') {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(v -> drop(v));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(v -> drop(v));
            return (((List) object).length == 0);
          }
          return false;
        }
        drop(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
