{
    "id": "f6cfd4ce-1b96-5871-aa9d-8dba2d701579",
    "type": "csp-rule-template",
    "attributes": {
        "metadata": {
            "impact": "Once TDE protector is encrypted with a Customer-managed key, it transfers entire responsibility of respective key management on to you, and hence you should be more careful about doing any operations on the particular key in order to keep data from corresponding SQL server and Databases hosted accessible.\n\nWhen deploying Customer Managed Keys, it is prudent to ensure that you also deploy an automated toolset for managing these keys (this should include discovery and key rotation), and Keys should be stored in an HSM or hardware backed keystore, such as Azure Key Vault.\n\nAs far as toolsets go, check with your cryptographic key provider, as they may well provide one as an add-on to their service.",
            "default_value": "",
            "references": "1. https://docs.microsoft.com/en-us/sql/relational-databases/security/encryption/transparent-data-encryption-byok-azure-sql\n2. https://azure.microsoft.com/en-in/blog/preview-sql-transparent-data-encryption-tde-with-bring-your-own-key-support/\n3. https://winterdom.com/2017/09/07/azure-sql-tde-protector-keyvault\n4. https://docs.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-data-protection#dp-5-use-customer-managed-key-option-in-data-at-rest-encryption-when-required\n5. https://docs.microsoft.com/en-us/azure/key-vault/general/basic-concepts\n6. https://docs.microsoft.com/en-us/cli/azure/sql/server/tde-key?view=azure-cli-latest\n7. https://learn.microsoft.com/en-us/powershell/module/az.sql/get-azsqlservertransparentdataencryptionprotector?view=azps-9.2.0\n8. https://learn.microsoft.com/en-us/powershell/module/az.sql/set-azsqlservertransparentdataencryptionprotector?view=azps-9.2.0",
            "id": "f6cfd4ce-1b96-5871-aa9d-8dba2d701579",
            "name": "Ensure SQL server's Transparent Data Encryption (TDE) protector is encrypted with Customer-managed key",
            "profile_applicability": "* Level 2",
            "description": "Transparent Data Encryption (TDE) with Customer-managed key support provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties.\n\nWith TDE, data is encrypted at rest with a symmetric key (called the database encryption key) stored in the database or data warehouse distribution.\nTo protect this data encryption key (DEK) in the past, only a certificate that the Azure SQL Service managed could be used.\nNow, with Customer-managed key support for TDE, the DEK can be protected with an asymmetric key that is stored in the Azure Key Vault.\nThe Azure Key Vault is a highly available and scalable cloud-based key store which offers central key management, leverages FIPS 140-2 Level 2 validated hardware security modules (HSMs), and allows separation of management of keys and data for additional security.\n\nBased on business needs or criticality of data/databases hosted on a SQL server, it is recommended that the TDE protector is encrypted by a key that is managed by the data owner (Customer-managed key).",
            "rationale": "Customer-managed key support for Transparent Data Encryption (TDE) allows user control of TDE encryption keys and restricts who can access them and when.\nAzure Key Vault, Azure\u2019s cloud-based external key management system, is the first key management service where TDE has integrated support for Customer-managed keys.\nWith Customer-managed key support, the database encryption key is protected by an asymmetric key stored in the Key Vault.\nThe asymmetric key is set at the server level and inherited by all databases under that server.",
            "audit": "**From Azure Portal**\n\n1. Go to `SQL servers`\n\nFor the desired server instance\n\n2. Click On `Transparent data encryption`\n3. Ensure that `Customer-managed key` is selected\n4. Ensure `Make selected key the default TDE protector` is checked\n\n**From Azure CLI**\n\n```\naz account get-access-token --query \"{subscripton:subscription,accessToken:accessToken}\" --out tsv | xargs -L1 bash -c 'curl -X GET -H \"Authorization: Bearer $1\" -H \"Content-Type: application/json\" https://management.azure.com/subscriptions/$0/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector?api-version=2015-05-01-preview'\n```\n\nEnsure the output of the command contains properties\n\n`kind` set to `azurekeyvault`\n\n`serverKeyType` set to `AzureKeyVault`\n\n`uri` is not null\n\n**From PowerShell**\n\n```\nGet-AzSqlServerTransparentDataEncryptionProtector -ServerName <ServerName> -ResourceGroupName <ResourceGroupName>\n```\nEnsure the output of the command contains properties\n\n`Type` set to `AzureKeyVault`\n\n`ServerKeyVaultKeyName` set to `KeyVaultName_KeyName_KeyIdentifierVersion`\n\n`KeyId` set to `KeyIdentifier`",
            "remediation": "**From Azure Console**\n\n1. Go to `SQL servers`\n\nFor the desired server instance\n\n2. Click On `Transparent data encryption`\n3. Set `Transparent data encryption` to `Customer-managed key`\n4. Browse through your `key vaults` to Select an existing key or create a new key in \nthe Azure Key Vault.\n5. Check `Make selected key the default TDE protector`\n\n**From Azure CLI**\n\nUse the below command to encrypt SQL server's TDE protector with a Customer-managed key\n```\naz sql server tde-key set --resource-group <resourceName> --server <dbServerName> --server-key-type {AzureKeyVault} --kid <keyIdentifier>\n```\n\n**From PowerShell**\n\nUse the below command to encrypt SQL server's TDE protector with a Customer-managed Key Vault key\n```\nSet-AzSqlServerTransparentDataEncryptionProtector -Type AzureKeyVault -KeyId <KeyIdentifier> -ServerName <ServerName> -ResourceGroupName <ResourceGroupName>\n```\nSelect `Y` when prompted",
            "section": "SQL Server - Auditing",
            "version": "1.0",
            "tags": [
                "CIS",
                "AZURE",
                "CIS 4.1.3",
                "SQL Server - Auditing"
            ],
            "benchmark": {
                "name": "CIS Microsoft Azure Foundations",
                "version": "v2.0.0",
                "id": "cis_azure",
                "rule_number": "4.1.3",
                "posture_type": "cspm"
            },
            "rego_rule_id": "cis_4_1_3"
        }
    },
    "migrationVersion": {
        "csp-rule-template": "8.7.0"
    },
    "coreMigrationVersion": "8.7.0"
}