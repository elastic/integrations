{
    "id": "7d7d7235-406a-5d9b-9401-7034758b2e8b",
    "type": "csp-rule-template",
    "attributes": {
        "enabled": true,
        "muted": false,
        "metadata": {
            "id": "7d7d7235-406a-5d9b-9401-7034758b2e8b",
            "name": "Ensure that the --make-iptables-util-chains argument is set to true (Automated)",
            "profile_applicability": "* Level 1\n",
            "description": "Allow Kubelet to manage iptables.\n",
            "rationale": "Kubelets can automatically manage the required changes to iptables based on how you choose your networking options for the pods.  It is recommended to let kubelets manage the changes to iptables. This ensures that the iptables configuration remains in sync with pods networking configuration. Manually configuring iptables with dynamic pod network configuration changes might hamper the communication between pods/containers and to the outside world. You might have iptables rules too restrictive or too open.\n",
            "audit": "**Audit Method 1:**\nIf using a Kubelet configuration file, check that there is an entry for\n`makeIPTablesUtilChains` set to `true`.\nFirst, SSH to the relevant node:\nRun the following command on each node to find the appropriate Kubelet config file:\n```\nps -ef | grep kubelet\n```\nThe output of the above command should return something similar to `--config`\n`/etc/kubernetes/kubelet/kubelet-config.json` which is the location of the Kubelet\nconfig file.\nOpen the Kubelet config file:\n```\ncat /etc/kubernetes/kubelet/kubelet-config.json\n```\nVerify that if the `makeIPTablesUtilChains` argument exists then it is set to `true`.\nIf the `--make-iptables-util-chains` argument does not exist, and there is a Kubelet config\nfile specified by `--config`, verify that the file does not set `makeIPTablesUtilChains` to\n`false`.\n**Audit Method 2:**\nIf using the api configz endpoint consider searching for the status of `authentication...`\n`\"makeIPTablesUtilChains\":true` by extracting the live configuration from the nodes\nrunning kubelet.\nSet the local proxy port and the following variables and provide proxy port number and\nnode name;\n`HOSTNAME_PORT=\"localhost-and-port-number\"`\n`NODE_NAME=\"The-Name-Of-Node-To-Extract-Configuration\" from the output of`\n`\"kubectl get nodes\"`\n```\nkubectl proxy --port=8001 \u0026\nexport HOSTNAME_PORT=localhost:8001 (example host and port number)\nexport NODE_NAME=ip-192.168.31.226.ec2.internal (example node name from\n\"kubectl get nodes\")\ncurl -sSL \"http://${HOSTNAME_PORT}/api/v1/nodes/${NODE_NAME}/proxy/configz\"\n```\n",
            "remediation": "**Remediation Method 1:**\nIf modifying the Kubelet config file, edit the kubelet-config.json file\n`/etc/kubernetes/kubelet/kubelet-config.json` and set the below parameter to `false`\n```\n\"makeIPTablesUtilChains\": true\n```\n**Remediation Method 2:**\nIf using executable arguments, edit the kubelet service file\n`/etc/systemd/system/kubelet.service.d/10-kubelet-args.conf` on each worker node\nand add the below parameter at the end of the `KUBELET_ARGS` variable string.\n```\n--make-iptables-util-chains:true\n```\n**Remediation Method 3:**\nIf using the api configz endpoint consider searching for the status of\n`\"makeIPTablesUtilChains\": true` by extracting the live configuration from the nodes\nrunning kubelet.\n**See detailed step-by-step configmap procedures in Reconfigure a Node's Kubelet in a Live\nCluster, and then rerun the curl statement from audit process to check for kubelet\nconfiguration changes\n```\nkubectl proxy --port=8001 \u0026\nexport HOSTNAME_PORT=localhost:8001 (example host and port number)\nexport NODE_NAME=ip-192.168.31.226.ec2.internal (example node name from\n\"kubectl get nodes\")\ncurl -sSL \"http://${HOSTNAME_PORT}/api/v1/nodes/${NODE_NAME}/proxy/configz\"\n```\nFor all three remediations:\nBased on your system, restart the `kubelet` service and check status\n```\nsystemctl daemon-reload\nsystemctl restart kubelet.service\nsystemctl status kubelet -l      \n```\n",
            "impact": "Kubelet would manage the iptables on the system and keep it in sync. If you\nare using any\n\nother iptables management solution, then there might be some conflicts.\n",
            "default_value": "See the Amazon EKS documentation for the default value.\n",
            "references": "1. https://kubernetes.io/docs/admin/kubelet/\n2. https://kubernetes.io/docs/tasks/administer-cluster/reconfigure-kubelet/\n",
            "section": "Kubelet",
            "version": "1.0",
            "tags": [
                "CIS",
                "EKS",
                "CIS 3.2.7",
                "Kubelet"
            ],
            "benchmark": {
                "name": "CIS Amazon Elastic Kubernetes Service (EKS) Benchmark",
                "version": "v1.0.1",
                "id": "cis_eks"
            },
            "rego_rule_id": "cis_3_2_7"
        }
    },
    "migrationVersion": {
        "csp-rule-template": "8.4.0"
    },
    "coreMigrationVersion": "8.4.0"
}