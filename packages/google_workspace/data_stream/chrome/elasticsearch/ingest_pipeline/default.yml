---
description: Pipeline for processing Chrome Audit logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.16.0
  - set:
      field: observer.vendor
      tag: set_observer_vendor
      value: 'Google Workspace'
  - set:
      field: observer.product
      tag: set_observer_product
      value: Chrome
  - fail:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      if: ctx.event?.original != null
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      lang: painless
      tag: script_to_flatten_event_parameters
      if: ctx.json?.events?.parameters instanceof List
      description: Script to flatten the event parameters.
      source: >
        if (ctx.google_workspace == null) {
          ctx.google_workspace = new HashMap();
        }
        if (ctx.google_workspace.chrome == null) {
          ctx.google_workspace.chrome = new HashMap();
        }
        for (int i = 0; i < ctx.json.events.parameters.length; ++i) {
          if (ctx["json"]["events"]["parameters"][i]["value"] != null) {
            ctx.google_workspace.chrome[ctx["json"]["events"]["parameters"][i]["name"].toLowerCase()] = ctx["json"]["events"]["parameters"][i]["value"];
          }
          if (ctx["json"]["events"]["parameters"][i]["boolValue"] != null) {
            ctx.google_workspace.chrome[ctx["json"]["events"]["parameters"][i]["name"].toLowerCase()] = ctx["json"]["events"]["parameters"][i]["boolValue"];
          }
          if (ctx["json"]["events"]["parameters"][i]["intValue"] != null) {
            ctx.google_workspace.chrome[ctx["json"]["events"]["parameters"][i]["name"].toLowerCase()] = ctx["json"]["events"]["parameters"][i]["intValue"];
          }
          if (ctx["json"]["events"]["parameters"][i]["multiValue"] != null) {
            ctx.google_workspace.chrome[ctx["json"]["events"]["parameters"][i]["name"].toLowerCase()] = ctx["json"]["events"]["parameters"][i]["multiValue"];
          }
          if (ctx["json"]["events"]["parameters"][i]["multiIntValue"] != null) {
            ctx.google_workspace.chrome[ctx["json"]["events"]["parameters"][i]["name"].toLowerCase()] = ctx["json"]["events"]["parameters"][i]["multiIntValue"];
          }
          if (ctx["json"]["events"]["parameters"][i]["multiBoolValue"] != null) {
            ctx.google_workspace.chrome[ctx["json"]["events"]["parameters"][i]["name"].toLowerCase()] = ctx["json"]["events"]["parameters"][i]["multiBoolValue"];
          }
        }
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.events.name
      tag: rename_json_events_name
      target_field: google_workspace.chrome.name
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_event_into_event_kind
      value: event
  - set:
      field: event.kind
      tag: set_alert_into_event_kind
      value: alert
      if: ctx.google_workspace?.chrome?.name != null && ['malware_transfer', 'password_breach', 'sensitive_data_transfer', 'unsafe_site_visit'].contains(ctx.google_workspace.chrome.name.toLowerCase())
  - script:
      description: Set event outcome based on event result.
      if: ctx.google_workspace?.chrome?.event_result != null
      tag: set_event_outcome_from_chrome_event_result
      lang: painless
      params:
        allowed: success
        blocked: failure
        bypassed: success
        detected: success
        reported: success
        warned: unknown
      source: |-
        if (ctx.event == null) {
          ctx.event = new HashMap();
        }
        ctx.event.outcome = params.get(ctx.google_workspace.chrome.event_result.toLowerCase());
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: url.full
      tag: set_url_full_from_chrome_url
      copy_from: google_workspace.chrome.url
      ignore_empty_value: true
  - uri_parts:
      field: url.full
      ignore_failure: true
  - script:
      description: Set event category based on event name.
      if: ctx.google_workspace?.chrome?.name != null
      tag: set_event_category_from_chrome_name
      lang: painless
      params:
        chrome_os_add_user: iam
        chrome_os_remove_user: iam
        device_boot_state_change: configuration
        chrome_os_login_failure_event: authentication
        chrome_os_login_logout_event: authentication
        chrome_os_login_event: authentication
        chrome_os_logout_event: authentication
        extension_request: configuration
        login_event: authentication
        malware_transfer: malware
      source: |-
        if (ctx.event == null) {
          ctx.event = new HashMap();
        }
        def category = new ArrayList();
        category.add(params.get(ctx.google_workspace.chrome.name.toLowerCase()));
        ctx.event.put('category', category);
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - script:
      description: Set event type based on event name.
      if: ctx.google_workspace?.chrome?.name != null
      tag: set_event_type_from_chrome_name
      lang: painless
      params:
        chrome_os_add_user: creation
        chrome_os_remove_user: deletion
        device_boot_state_change: change
        chrome_os_login_failure_event: info
        chrome_os_login_logout_event: info
        chrome_os_login_event: start
        chrome_os_logout_event: end
        extension_request: info
        login_event: info
        malware_transfer: info
      source: |-
        if (ctx.event == null) {
          ctx.event = new HashMap();
        }
        def type = new ArrayList();
        type.add(params.get(ctx.google_workspace.chrome.name.toLowerCase()));
        ctx.event.put('type', type);
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.events.type
      tag: rename_json_events_type
      target_field: google_workspace.chrome.type
      ignore_missing: true
  - rename:
      field: json.kind
      tag: rename_json_kind
      target_field: google_workspace.chrome.kind
      ignore_missing: true
  - rename:
      field: json.etag
      tag: rename_json_etag
      target_field: google_workspace.chrome.etag
      ignore_missing: true
  - rename:
      field: json.ownerDomain
      tag: rename_json_ownerDomain
      target_field: google_workspace.chrome.owner_domain
      ignore_missing: true
  - convert:
      field: json.ipAddress
      tag: convert_json_ipAddress_to_ip
      target_field: google_workspace.chrome.ip_address
      type: ip
      ignore_missing: true
      if: ctx.json?.ipAddress != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.id.time
      tag: date_json_id_time
      target_field: google_workspace.chrome.id.time
      formats:
        - ISO8601
        - UNIX_MS
      if: ctx.json?.id?.time != null && ctx.json.id.time != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.id.uniqueQualifier
      tag: rename_json_id_uniqueQualifier
      target_field: google_workspace.chrome.id.unique_qualifier
      ignore_missing: true
  - rename:
      field: json.id.applicationName
      tag: rename_json_id_applicationName
      target_field: google_workspace.chrome.id.application_name
      ignore_missing: true
  - rename:
      field: json.id.customerId
      tag: rename_json_id_customerId
      target_field: google_workspace.chrome.id.customer_id
      ignore_missing: true
  - rename:
      field: json.actor.profileId
      tag: rename_json_actor_profileId
      target_field: google_workspace.chrome.actor.profile_id
      ignore_missing: true
  - rename:
      field: json.actor.email
      tag: rename_json_actor_email
      target_field: google_workspace.chrome.actor.email
      ignore_missing: true
  - rename:
      field: json.actor.callerType
      tag: rename_json_actor_callerType
      target_field: google_workspace.chrome.actor.caller_type
      ignore_missing: true
  - rename:
      field: json.actor.key
      tag: rename_json_actor_key
      target_field: google_workspace.chrome.actor.key
      ignore_missing: true
  - convert:
      field: google_workspace.chrome.is_federated
      tag: convert_is_federated
      type: boolean
      ignore_missing: true
      if: ctx.google_workspace?.chrome?.is_federated != ''
      on_failure:
        - remove:
            field: google_workspace.chrome.is_federated
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: google_workspace.chrome.content_size
      tag: convert_content_size
      type: long
      ignore_missing: true
      if: ctx.google_workspace?.chrome?.content_size != ''
      on_failure:
        - remove:
            field: google_workspace.chrome.content_size
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: google_workspace.chrome.timestamp
      tag: date_timestamp
      target_field: google_workspace.chrome.timestamp
      formats:
        - ISO8601
        - UNIX_MS
      if: ctx.google_workspace?.chrome?.timestamp != null && ctx.google_workspace.chrome.timestamp != ''
      on_failure:
        - remove:
            field: google_workspace.chrome.timestamp
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - append:
      field: related.user
      tag: append_login_user_name_into_related_user
      value: '{{{google_workspace.chrome.login_user_name}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.login_user_name != null
  - append:
      field: related.user
      tag: append_device_user_into_related_user
      value: '{{{google_workspace.chrome.device_user}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.device_user != null
  - append:
      field: related.user
      tag: append_profile_user_name_into_related_user
      value: '{{{google_workspace.chrome.profile_user_name}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.profile_user_name != null
  - append:
      field: related.user
      tag: append_trigger_user_into_related_user
      value: '{{{google_workspace.chrome.trigger_user}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.trigger_user != null
  - append:
      field: related.user
      tag: append_actor_profile_id_into_related_user
      value: '{{{google_workspace.chrome.actor.profile_id}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.actor?.profile_id != null
  - append:
      field: related.user
      tag: append_actor_email_into_related_user
      value: '{{{google_workspace.chrome.actor.email}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.actor?.email != null
  - append:
      field: related.ip
      tag: append_ip_address_into_related_user
      value: '{{{google_workspace.chrome.ip_address}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.ip_address != null
  - append:
      field: related.hash
      tag: append_content_hash_into_related_user
      value: '{{{google_workspace.chrome.content_hash}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.content_hash != null
  - set:
      field: device.model.name
      tag: set_device_model_name_from_chrome_device_name
      copy_from: google_workspace.chrome.device_name
      ignore_empty_value: true
  - set:
      field: host.os.full
      tag: set_host_os_full_from_chrome_device_platform
      copy_from: google_workspace.chrome.device_platform
      ignore_empty_value: true
  - dissect:
      field: google_workspace.chrome.device_user
      tag: dissect_device_user
      if: ctx.google_workspace?.chrome?.device_user != null && ctx.google_workspace.chrome.device_user.contains('@')
      pattern: '%{user.name}@%{user.domain}'
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: user.name
      tag: set_user_name_from_device_user
      copy_from: google_workspace.chrome.device_user
      if: ctx.user?.name == null
      ignore_empty_value: true
  - set:
      field: event.reason
      tag: set_event_reason_from_chrome_event_reason
      copy_from: google_workspace.chrome.event_reason
      ignore_empty_value: true
  - set:
      field: '@timestamp'
      tag: set_@timestamp_from_chrome_id_time
      copy_from: google_workspace.chrome.id.time
      ignore_empty_value: true
  - set:
      field: device.id
      tag: set_device_id_from_chrome_device_id
      copy_from: google_workspace.chrome.device_id
      ignore_empty_value: true
  - user_agent:
      field: google_workspace.chrome.user_agent
      ignore_missing: true
  - set:
      field: event.hash
      tag: set_event_hash_from_chrome_content_hash
      copy_from: google_workspace.chrome.content_hash
      ignore_empty_value: true
  - set:
      field: message
      tag: set_message_from_chrome_user_justification
      copy_from: google_workspace.chrome.user_justification
      ignore_empty_value: true
  - set:
      field: file.path
      tag: set_file_path_from_chrome_evidence_locker_filepath
      copy_from: google_workspace.chrome.evidence_locker_filepath
      ignore_empty_value: true
  - set:
      field: host.domain
      tag: set_host_domain_from_chrome_owner_domain
      copy_from: google_workspace.chrome.owner_domain
      ignore_empty_value: true
  - append:
      field: host.ip
      tag: append_google_workspace_chrome_ip_address_into_host_ip
      value: '{{{google_workspace.chrome.ip_address}}}'
      allow_duplicates: false
      if: ctx.google_workspace?.chrome?.ip_address != null
  - set:
      field: user.id
      tag: set_user_id_from_chrome_actor_profile_id
      copy_from: google_workspace.chrome.actor.profile_id
      ignore_empty_value: true
  - set:
      field: user.email
      tag: set_user_email_from_chrome_actor_email
      copy_from: google_workspace.chrome.actor.email
      ignore_empty_value: true
  - set:
      field: event.id
      tag: set_event_id_from_uniqueQualifier
      copy_from: google_workspace.chrome.id.unique_qualifier
      ignore_empty_value: true
  - set:
      field: event.provider
      tag: set_event_provider_from_application_name
      copy_from: google_workspace.chrome.id.application_name
      ignore_empty_value: true
  - set:
      field: event.action
      tag: set_event_action_from_name
      copy_from: google_workspace.chrome.name
      ignore_empty_value: true
  - lowercase:
      field: event.action
      tag: lowercase_event_action
      ignore_missing: true
  - split:
      field: event.action
      tag: split_event_action
      separator: \s+
      ignore_missing: true
      if: ctx.event?.action != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - join:
      field: event.action
      tag: join_event_action
      separator: '-'
      if: ctx.event?.action instanceof List
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: organization.id
      tag: set_organization_id_from_customerId
      copy_from: google_workspace.chrome.id.customer_id
      ignore_empty_value: true
  - set:
      field: source.ip
      tag: set_source_ip_from_ipAddress
      copy_from: google_workspace.chrome.ip_address
      ignore_empty_value: true
  - geoip:
      field: source.ip
      tag: geoip_source_geo_from_source_ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      field: source.ip
      tag: set_source_as_from_source_ip
      database_file: GeoLite2-ASN.mmdb
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - set:
      field: source.user.email
      tag: set_source_user_email
      copy_from: user.email
      ignore_empty_value: true
  - script:
      lang: painless
      tag: script_to_extract_source_user_name_and_domain
      if: 'ctx?.source?.user?.email != null && ctx?.source?.user?.email.contains("@")'
      source: >
        String[] splitmail = ctx.source.user.email.splitOnToken('@');
        if (splitmail.length != 2) {
          return;
        }
        if (ctx.user == null) {
          ctx.user = new HashMap();
        }
        ctx.source.user.name = splitmail[0];
        ctx.source.user.domain = splitmail[1];
  - set:
      field: source.user.id
      tag: set_source_user_id
      copy_from: user.id
      ignore_empty_value: true
  - remove:
      field:
        - google_workspace.chrome.actor.email
        - google_workspace.chrome.actor.profile_id
        - google_workspace.chrome.content_hash
        - google_workspace.chrome.device_id
        - google_workspace.chrome.device_name
        - google_workspace.chrome.device_platform
        - google_workspace.chrome.event_reason
        - google_workspace.chrome.evidence_locker_filepath
        - google_workspace.chrome.id.application_name
        - google_workspace.chrome.id.customer_id
        - google_workspace.chrome.id.time
        - google_workspace.chrome.id.unique_qualifier
        - google_workspace.chrome.ip_address
        - google_workspace.chrome.owner_domain
        - google_workspace.chrome.url
        - google_workspace.chrome.user_agent
        - google_workspace.chrome.user_justification
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
  - script:
      tag: script_to_drop_null_values
      lang: painless
      description: Drops null/empty values recursively.
      source: |-
        boolean drop(Object object) {
          if (object == null || object == '') {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(v -> drop(v));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(v -> drop(v));
            return (((List) object).length == 0);
          }
          return false;
        }
        drop(ctx);
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null
on_failure:
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
