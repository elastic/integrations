config_version: '2'
interval: {{interval}}
auth.oauth2.provider: google
auth.oauth2.google.jwt_file: {{jwt_file}}
auth.oauth2.google.jwt_json: {{jwt_json}}
auth.oauth2.google.delegated_account: {{delegated_account}}
auth.oauth2.scopes:
  - https://www.googleapis.com/auth/apps.alerts
{{#if proxy_url}}
request.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
ssl: {{ssl}}
{{/if}}
request.url: {{alert_center_api_host}}/v1beta1/alerts
{{#if http_client_timeout}}
request.timeout: {{http_client_timeout}}
{{/if}}
request.transforms:
  - set:
      target: url.params.pageSize
      value: {{page_size}}
  - set:
      target: url.params.filter
      value: '[[sprintf "createTime >= %q" (formatDate (parseDate .cursor.last_create_time))]]'
      default: '[[sprintf "createTime >= %q" (formatDate (now (parseDuration "-{{initial_interval}}")))]]'
  - set:
        target: url.params.orderBy
        value: 'createTime asc'
response.pagination:
  - set:
      target: url.params.filter
      value: '[[.last_response.url.params.Get "filter"]]'
      fail_on_template_error: true
  - set:
      target: url.params.pageToken
      value: '[[if (eq (len .last_response.body.alerts) {{page_size}})]][[.last_response.body.nextPageToken]][[end]]'
      fail_on_template_error: true
cursor:
  last_create_time:
    value: '[[.last_event.createTime]]'
response.split:
    target: body.alerts
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#if preserve_duplicate_custom_fields}}
  - preserve_duplicate_custom_fields
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
