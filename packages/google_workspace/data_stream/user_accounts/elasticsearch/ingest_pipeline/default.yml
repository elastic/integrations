---
description: Pipeline for parsing google_workspace logs
processors:
  - set:
      field: event.ingested
      value: "{{ _ingest.timestamp }}"
  - set:
      field: ecs.version
      value: '1.10.0'
  - append:
      field: event.type
      value: change
  - append:
      field: event.type
      value: user
  - append:
      field: event.category
      value: iam
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - date:
      field: json.id.time
      timezone: UTC
      formats:
        - ISO8601
        - yyyy-MM-dd'T'HH:mm:ss
        - yyyy-MM-dd'T'HH:mm:ssZ
        - yyyy-MM-dd'T'HH:mm:ss.SSSZ
        - yyyy/MM/dd HH:mm:ss z
  - rename:
      field: json.events.name
      target_field: event.action
      ignore_missing: true
  - fingerprint:
      description: Hashes the ID object and uses it as the document id to avoid duplicate events.
      fields:
        - json.id
      target_field: _id
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.id.applicationName
      target_field: event.provider
      ignore_missing: true
  - convert:
      field: json.id.uniqueQualifier
      target_field: event.id
      type: string
      ignore_missing: true
  - rename:
      field: json.actor.email
      target_field: source.user.email
      ignore_missing: true
  - convert:
      field: json.actor.profileId
      target_field: source.user.id
      type: string
      ignore_missing: true
  - set:
      field: user.id
      copy_from: source.user.id
      if: ctx?.source?.user?.id != null
  - convert:
      field: json.ipAddress
      target_field: source.ip
      type: ip
      ignore_missing: true
  - rename:
      field: json.kind
      target_field: google_workspace.kind
      ignore_missing: true
  - convert:
      field: json.id.customerId
      target_field: organization.id
      type: string
      ignore_missing: true
  - rename:
      field: json.actor.callerType
      target_field: google_workspace.actor.type
      ignore_missing: true
  - rename:
      field: json.actor.key
      target_field: google_workspace.actor.key
      ignore_missing: true
  - rename:
      field: json.ownerDomain
      target_field: google_workspace.organization.domain
      ignore_missing: true
  - rename:
      field: json.events.type
      target_field: google_workspace.event.type
      ignore_missing: true
  - script:
      lang: painless
      if: 'ctx?.source?.user?.email != null && ctx?.source?.user?.email.contains("@")'
      source: >
        String[] splitmail = ctx.source.user.email.splitOnToken('@');
        if (splitmail.length != 2) {
          return;
        }
        if (ctx.user == null) {
          ctx.user = new HashMap();
        }
        ctx.user.name = splitmail[0];
        ctx.source.user.name = splitmail[0];
        ctx.user.domain = splitmail[1];
        ctx.source.user.domain = splitmail[1];
  - append:
      field: related.ip
      value: "{{source.ip}}"
      if: ctx?.source?.ip != null
      allow_duplicates: false
  - append:
      field: related.user
      value: "{{source.user.name}}"
      if: ctx?.source?.user?.name != null
      allow_duplicates: false
  - geoip:
      field: source.ip
      target_field: source.geo
      ignore_missing: true
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - remove:
      field: json
      ignore_missing: true
  - set:
      field: event.ingested
      value: "{{ _ingest.timestamp }}"
  - remove:
      field: event.original
      if: "ctx?.tags == null || !(ctx.tags.contains('preserve_original_event'))"
      ignore_failure: true
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
