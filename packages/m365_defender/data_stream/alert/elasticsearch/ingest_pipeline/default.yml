---
description: Pipeline for processing Alert logs.
processors:
  - set:
      field: ecs.version
      value: '8.4.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
  - fingerprint:
      fields:
        - json.id
        - json.lastUpdateDateTime
        - json.incidentId
        - json.providerAlertId
      target_field: _id
      ignore_missing: true
  - set:
      field: event.kind
      value: alert
  - script:
      description: Dynamically map event.category and event.type field from evidence.
      lang: painless
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      source:
        def eventCategory = new HashSet();
        def eventType = new HashSet();
        for (evidence in ctx.json.evidence) {
          if (['#microsoft.graph.security.analyzedMessageEvidence', '#microsoft.graph.security.mailboxEvidence', '#microsoft.graph.security.mailClusterEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('email');
            eventType.add('info');
          } else if (['#microsoft.graph.security.deviceEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('host');
            eventType.add('info');
          } else if (['#microsoft.graph.security.fileEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('file');
            eventType.add('info');
          } else if (['#microsoft.graph.security.ipEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('network');
            eventType.add('info');
          } else if (['#microsoft.graph.security.processEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('process');
            eventType.add('info');
          } else if (['#microsoft.graph.security.registryValueEvidence', '#microsoft.graph.security.registryKeyEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('registry');
            eventType.add('access')
          } else if (['#microsoft.graph.security.userEvidence', '#microsoft.graph.security.securityGroupEvidence'].contains(evidence["@odata.type"])) {
            eventCategory.add('iam');
            eventType.add('info');
          }
        }
        if (['malware', 'malicioususeractivity'].contains(ctx.json?.determination?.toLowerCase())) {
          eventCategory.add('malware');
          eventType.add('info');
        } else if (['phishing'].contains(ctx.json?.determination?.toLowerCase())) {
          eventCategory.add('email');
          eventType.add('info');
        } else if (['apt'].contains(ctx.json?.determination?.toLowerCase())) {
          eventCategory.add('threat');
          eventType.add('indicator');
        }
        if (!eventType.isEmpty()) {
          def type = new ArrayList();
          for(def t:eventType) {
            type.add(t);
          }
          Collections.sort(type);
          ctx.event.type = type;
        }
        if (!eventCategory.isEmpty()) {
          def category = new ArrayList();
          for(def c:eventCategory) {
            category.add(c);
          }
          Collections.sort(category);
          ctx.event.category = category;
        }
  - dot_expander:
      field: '@odata.type'
      path: json
      ignore_failure: true
      override: true
  - rename:
      field: json.@odata.type
      target_field: m365_defender.alert.odata_type
      ignore_missing: true
  - date:
      field: json.lastUpdateDateTime
      target_field: m365_defender.alert.last_update_datetime
      formats:
        - ISO8601
      if: ctx.json?.lastUpdateDateTime != null
      on_failure:
        - remove:
            field: json.lastUpdateDateTime
            ignore_missing: true
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: '@timestamp'
      copy_from: m365_defender.alert.last_update_datetime
      ignore_failure: true
  - rename:
      field: json.description
      target_field: m365_defender.alert.description
      ignore_missing: true
  - set:
      field: message
      copy_from: m365_defender.alert.description
      ignore_failure: true
  - rename:
      field: json.tenantId
      target_field: m365_defender.alert.tenant_id
      ignore_missing: true
  - set:
      field: cloud.account.id
      copy_from: m365_defender.alert.tenant_id
      ignore_failure: true
  - date:
      field: json.createdDateTime
      target_field: m365_defender.alert.created_datetime
      formats:
        - ISO8601
      if: ctx.json?.createdDateTime != null
      on_failure:
        - remove:
            field: json.createdDateTime
            ignore_missing: true
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: event.created
      copy_from: m365_defender.alert.created_datetime
      ignore_failure: true
  - date:
      field: json.lastActivityDateTime
      target_field: m365_defender.alert.last_activity_datetime
      formats:
        - ISO8601
      if: ctx.json?.lastActivityDateTime != null
      on_failure:
        - remove:
            field: json.lastActivityDateTime
            ignore_missing: true
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: event.end
      copy_from: m365_defender.alert.last_activity_datetime
      ignore_failure: true
  - rename:
      field: json.id
      target_field: m365_defender.alert.id
      ignore_missing: true
  - set:
      field: event.id
      copy_from: m365_defender.alert.id
      ignore_failure: true
  - rename:
      field: json.serviceSource
      target_field: m365_defender.alert.service_source
      ignore_missing: true
  - set:
      field: event.provider
      copy_from: m365_defender.alert.service_source
      ignore_failure: true
  - lowercase:
      field: json.severity
      target_field: m365_defender.alert.severity
      ignore_failure: true
  - set:
      field: event.severity
      value: 1
      if: ctx.m365_defender?.alert?.severity == 'informational'
  - set:
      field: event.severity
      value: 2
      if: ctx.m365_defender?.alert?.severity == 'low'
  - set:
      field: event.severity
      value: 3
      if: ctx.m365_defender?.alert?.severity == 'medium'
  - set:
      field: event.severity
      value: 4
      if: ctx.m365_defender?.alert?.severity == 'high'
  - date:
      field: json.firstActivityDateTime
      target_field: m365_defender.alert.first_activity_datetime
      formats:
        - ISO8601
      if: ctx.json?.firstActivityDateTime != null
      on_failure:
        - remove:
            field: json.firstActivityDateTime
            ignore_missing: true
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: event.start
      copy_from: m365_defender.alert.first_activity_datetime
      ignore_failure: true
  - script:
      description: Determine event.duration from starting and ending activity timestamp.
      lang: painless
      if: ctx.event?.start != null && ctx.event?.end != null
      source:
        Instant eventstart = ZonedDateTime.parse(ctx.event?.start).toInstant();
        Instant eventend = ZonedDateTime.parse(ctx.event?.end).toInstant();
        ctx.event['duration'] = ChronoUnit.NANOS.between(eventstart, eventend);
  - uri_parts:
      field: json.alertWebUrl
      target_field: m365_defender.alert.web_url
      if: ctx.json?.alertWebUrl != null
      keep_original: true
      on_failure:
        - remove:
            field: json.alertWebUrl
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: event.url
      copy_from: m365_defender.alert.web_url.original
      ignore_failure: true
  - rename:
      field: json.assignedTo
      target_field: m365_defender.alert.assigned_to
      ignore_missing: true
  - append:
      field: related.user
      value: '{{{m365_defender.alert.assigned_to}}}'
      allow_duplicates: false
      ignore_failure: true
  - set:
      field: source.user.name
      copy_from: m365_defender.alert.assigned_to
      ignore_failure: true
  - rename:
      field: json.threatFamilyName
      target_field: m365_defender.alert.threat_family_name
      ignore_missing: true
  - set:
      field: threat.group.name
      copy_from: m365_defender.alert.threat_family_name
      ignore_failure: true
  - rename:
      field: json.category
      target_field: m365_defender.alert.category
      ignore_missing: true
  - append:
      field: threat.tactic.name
      value: '{{{m365_defender.alert.category}}}'
      allow_duplicates: false
      ignore_failure: true
  - rename:
      field: json.mitreTechniques
      target_field: m365_defender.alert.mitre_techniques
      ignore_missing: true
  - set:
      field: threat.technique.subtechnique.id
      copy_from: m365_defender.alert.mitre_techniques
      ignore_failure: true
  - rename:
      field: json.actorDisplayName
      target_field: m365_defender.alert.actor_display_name
      ignore_missing: true
  - rename:
      field: json.classification
      target_field: m365_defender.alert.classification
      ignore_missing: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.createdByDisplayName
          target_field: _ingest._value.created_by_display_name
          ignore_missing: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.created_by_display_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.comment
          target_field: _ingest._value.message
          ignore_missing: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      ignore_failure: true
      processor:
        date:
          field: _ingest._value.createdDateTime
          target_field: _ingest._value.created_datetime
          formats:
            - ISO8601
          ignore_failure: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value
          ignore_failure: true
          override: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      processor:
        rename:
          field: _ingest._value.@odata.type
          target_field: _ingest._value.odata_type
          ignore_missing: true
  - foreach:
      field: json.comments
      if: ctx.json?.comments instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.createdDateTime
            - _ingest._value.createdByDisplayName
            - _ingest._value.comment
          ignore_missing: true
  - rename:
      field: json.comments
      target_field: m365_defender.alert.comments
      ignore_missing: true
  - rename:
      field: json.detectorId
      target_field: m365_defender.alert.detector_id
      ignore_missing: true
  - rename:
      field: json.detectionSource
      target_field: m365_defender.alert.detection_source
      ignore_missing: true
  - rename:
      field: json.determination
      target_field: m365_defender.alert.determination
      ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        date:
          field: _ingest._value.createdDateTime
          target_field: _ingest._value.created_datetime
          formats:
            - ISO8601
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.remediationStatus
          target_field: _ingest._value.remediation_status
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.remediationStatusDetails
          target_field: _ingest._value.remediation_status_details
          ignore_missing: true
  - rename:
      field: json.incidentId
      target_field: m365_defender.alert.incident_id
      ignore_missing: true
  - uri_parts:
      field: json.incidentWebUrl
      target_field: m365_defender.alert.incident_web_url
      if: ctx.json?.incidentWebUrl != null
      keep_original: true
      on_failure:
        - remove:
            field: json.incidentWebUrl
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.providerAlertId
      target_field: m365_defender.alert.provider_alert_id
      ignore_missing: true
  - rename:
      field: json.recommendedActions
      target_field: m365_defender.alert.recommended_actions
      ignore_missing: true
  - date:
      field: json.resolvedDateTime
      target_field: m365_defender.alert.resolved_datetime
      formats:
        - ISO8601
      if: ctx.json?.resolvedDateTime != null
      on_failure:
        - remove:
            field: json.resolvedDateTime
            ignore_missing: true
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.status
      target_field: m365_defender.alert.status
      ignore_missing: true
  - rename:
      field: json.threatDisplayName
      target_field: m365_defender.alert.threat_display_name
      ignore_missing: true
  - rename:
      field: json.title
      target_field: m365_defender.alert.title
      ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.@odata.type
          target_field: _ingest._value.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        date:
          field: _ingest._value.receivedDateTime
          target_field: _ingest._value.received_datetime
          formats:
            - ISO8601
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: email.delivery_timestamp
          value: '{{{_ingest._value.received_datetime}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.antiSpamDirection
          target_field: _ingest._value.antispam_direction
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: email.direction
          value: '{{{_ingest._value.antispam_direction}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: email.subject
          value: '{{{_ingest._value.subject}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.recipientEmailAddress
          target_field: _ingest._value.recipient_email_address
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.recipient_email_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: email.to.address
          value: '{{{_ingest._value.recipient_email_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.attachmentsCount
          target_field: _ingest._value.attachments_count
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.attachmentsCount
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.deliveryAction
          target_field: _ingest._value.delivery_action
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.deliveryLocation
          target_field: _ingest._value.delivery_location
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.internetMessageId
          target_field: _ingest._value.internet_message_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.networkMessageId
          target_field: _ingest._value.network_message_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.p1Sender
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.p1Sender.@odata.type
          target_field: _ingest._value.p1_sender.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.p2Sender
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.p2Sender.@odata.type
          target_field: _ingest._value.p2_sender.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.p1Sender.displayName
          target_field: _ingest._value.p1_sender.display_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.p1_sender.display_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.p1Sender.domainName
          target_field: _ingest._value.p1_sender.domain_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hosts
          value: '{{{_ingest._value.p1_sender.domain_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.p1Sender.emailAddress
          target_field: _ingest._value.p1_sender.email_address
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: email.from.address
          value: '{{{_ingest._value.p1_sender.email_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.p1_sender.email_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.p2Sender.displayName
          target_field: _ingest._value.p2_sender.display_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.p2_sender.display_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.p2Sender.domainName
          target_field: _ingest._value.p2_sender.domain_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hosts
          value: '{{{_ingest._value.p2_sender.domain_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.p2Sender.emailAddress
          target_field: _ingest._value.p2_sender.email_address
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: email.from.address
          value: '{{{_ingest._value.p2_sender.email_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.p2_sender.email_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.senderIp
          target_field: _ingest._value.sender_ip
          type: ip
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.senderIp
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.ip
          value: '{{{_ingest._value.sender_ip}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.threatDetectionMethods
          target_field: _ingest._value.threat_detection_methods
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.urlCount
          target_field: _ingest._value.url_count
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.urlCount
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.instanceId
          target_field: _ingest._value.instance_id
          type: string
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.instanceId
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: cloud.instance.id
          value: '{{{_ingest._value.instance_id}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.instanceName
          target_field: _ingest._value.instance_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: cloud.instance.name
          value: '{{{_ingest._value.instance_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.appId
          target_field: _ingest._value.app_id
          type: string
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.appId
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.displayName
          target_field: _ingest._value.display_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.saasAppId
          target_field: _ingest._value.saas_app_id
          type: string
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.saasAppId
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.vmMetadata.cloudProvider
          target_field: _ingest._value.vm_metadata.cloud_provider
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.mdeDeviceId
          target_field: _ingest._value.mde_device_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.osPlatform
          target_field: _ingest._value.os_platform
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: host.os.name
          value: '{{{_ingest._value.os_platform}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: host.os.version
          value: '{{{_ingest._value.version}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.azureAdDeviceId
          target_field: _ingest._value.azure_ad_device_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.defenderAvStatus
          target_field: _ingest._value.defender_av_status
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.deviceDnsName
          target_field: _ingest._value.device_dns_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hosts
          value: '{{{_ingest._value.device_dns_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        date:
          field: _ingest._value.firstSeenDateTime
          target_field: _ingest._value.first_seen_datetime
          formats:
            - ISO8601
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.healthStatus
          target_field: _ingest._value.health_status
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.loggedOnUsers
          ignore_failure: true
          ignore_missing: true
          processor:
            rename:
              field: _ingest._value.accountName
              target_field: _ingest._value.account_name
              ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.loggedOnUsers
          ignore_failure: true
          ignore_missing: true
          processor:
            append:
              field: related.user
              value: '{{{_ingest._value.account_name}}}'
              allow_duplicates: false
              ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.loggedOnUsers
          ignore_failure: true
          ignore_missing: true
          processor:
            rename:
              field: _ingest._value.domainName
              target_field: _ingest._value.domain_name
              ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.loggedOnUsers
          ignore_failure: true
          ignore_missing: true
          processor:
            append:
              field: related.hosts
              value: '{{{_ingest._value.domain_name}}}'
              allow_duplicates: false
              ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.loggedOnUsers
          ignore_failure: true
          ignore_missing: true
          processor:
            dot_expander:
              field: '@odata.type'
              path: _ingest._value
              ignore_failure: true
              override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        foreach:
          field: _ingest._value.loggedOnUsers
          ignore_failure: true
          ignore_missing: true
          processor:
            rename:
              field: _ingest._value.@odata.type
              target_field: _ingest._value.odata_type
              ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.loggedOnUsers
          target_field: _ingest._value.logged_on_users
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.onboardingStatus
          target_field: _ingest._value.onboarding_status
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.osBuild
          target_field: _ingest._value.os_build
          type: string
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.osBuild
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.rbacGroupId
          target_field: _ingest._value.rbac_group.id
          type: string
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.rbacGroupId
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.rbacGroupName
          target_field: _ingest._value.rbac_group.name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.riskScore
          target_field: _ingest._value.risk_score
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.vmMetadata
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.vmMetadata.@odata.type
          target_field: _ingest._value.vm_metadata.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.vmMetadata.resourceId
          target_field: _ingest._value.vm_metadata.resource_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.vmMetadata.subscriptionId
          target_field: _ingest._value.vm_metadata.subscription_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.vmMetadata.vmId
          target_field: _ingest._value.vm_metadata.vm_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.detectionStatus
          target_field: _ingest._value.detection_status
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: event.action
          value: '{{{_ingest._value.detection_status}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.fileDetails
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.fileDetails.@odata.type
          target_field: _ingest._value.file_details.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.sha1
          target_field: _ingest._value.file_details.sha1
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: file.hash.sha1
          value: '{{{_ingest._value.file_details.sha1}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hash
          value: '{{{_ingest._value.file_details.sha1}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.sha256
          target_field: _ingest._value.file_details.sha256
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: file.hash.sha256
          value: '{{{_ingest._value.file_details.sha256}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hash
          value: '{{{_ingest._value.file_details.sha256}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.fileName
          target_field: _ingest._value.file_details.name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: file.name
          value: '{{{_ingest._value.file_details.name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.filePath
          target_field: _ingest._value.file_details.path
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: file.path
          value: '{{{_ingest._value.file_details.path}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.fileDetails.fileSize
          target_field: _ingest._value.file_details.size
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.fileDetails.fileSize
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.filePublisher
          target_field: _ingest._value.file_details.publisher
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.issuer
          target_field: _ingest._value.file_details.issuer
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.fileDetails.signer
          target_field: _ingest._value.file_details.signer
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.ipAddress
          target_field: _ingest._value.ip_address
          type: ip
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.ipAddress
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: host.ip
          value: '{{{_ingest._value.ip_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.ip
          value: '{{{_ingest._value.ip_address}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.userAccount
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.userAccount.@odata.type
          target_field: _ingest._value.user_account.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.userAccount.domainName
          target_field: _ingest._value.user_account.domain_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hosts
          value: '{{{_ingest._value.user_account.domain_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.userAccount.azureAdUserId
          target_field: _ingest._value.user_account.azure_ad_user_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.user_account.azure_ad_user_id}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.userAccount.userPrincipalName
          target_field: _ingest._value.user_account.user_principal_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.user_account.user_principal_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.primaryAddress
          target_field: _ingest._value.primary_address
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.userAccount.accountName
          target_field: _ingest._value.user_account.account_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.user_account.account_name}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.userAccount.userSid
          target_field: _ingest._value.user_account.user_sid
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.user
          value: '{{{_ingest._value.user_account.user_sid}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.clusterBy
          target_field: _ingest._value.cluster_by
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.clusterByValue
          target_field: _ingest._value.cluster_by_value
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.emailCount
          target_field: _ingest._value.email_count
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.emailCount
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.networkMessageIds
          target_field: _ingest._value.network_message_ids
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.objectId
          target_field: _ingest._value.object_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.processCommandLine
          target_field: _ingest._value.process.command_line
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.command_line
          value: '{{{_ingest._value.process.command_line}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.imageFile
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.imageFile.@odata.type
          target_field: _ingest._value.image_file.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.sha1
          target_field: _ingest._value.image_file.sha1
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.hash.sha1
          value: '{{{_ingest._value.image_file.sha1}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hash
          value: '{{{_ingest._value.image_file.sha1}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.sha256
          target_field: _ingest._value.image_file.sha256
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.hash.sha256
          value: '{{{_ingest._value.image_file.sha256}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hash
          value: '{{{_ingest._value.image_file.sha256}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        dot_expander:
          field: '@odata.type'
          path: _ingest._value.parentProcessImageFile
          ignore_failure: true
          override: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.@odata.type
          target_field: _ingest._value.parent_process.image_file.odata_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.sha1
          target_field: _ingest._value.parent_process.image_file.sha1
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.parent.hash.sha1
          value: '{{{_ingest._value.parent_process.image_file.sha1}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hash
          value: '{{{_ingest._value.parent_process.image_file.sha1}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.sha256
          target_field: _ingest._value.parent_process.image_file.sha256
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.parent.hash.sha256
          value: '{{{_ingest._value.parent_process.image_file.sha256}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: related.hash
          value: '{{{_ingest._value.parent_process.image_file.sha256}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.parentProcessId
          target_field: _ingest._value.parent_process.id
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.parentProcessId
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        date:
          field: _ingest._value.parentProcessCreationDateTime
          target_field: _ingest._value.parent_process.creation_datetime
          formats:
            - ISO8601
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.parent.start
          value: '{{{_ingest._value.parent_process.creation_datetime}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.processId
          target_field: _ingest._value.process.id
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.processId
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        date:
          field: _ingest._value.processCreationDateTime
          target_field: _ingest._value.process.creation_datetime
          formats:
            - ISO8601
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: process.start
          value: '{{{_ingest._value.process.creation_datetime}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.fileName
          target_field: _ingest._value.image_file.name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.filePath
          target_field: _ingest._value.image_file.path
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.filePublisher
          target_field: _ingest._value.image_file.publisher
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.imageFile.fileSize
          target_field: _ingest._value.image_file.size
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.imageFile.fileSize
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.issuer
          target_field: _ingest._value.image_file.issuer
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.imageFile.signer
          target_field: _ingest._value.image_file.signer
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.fileName
          target_field: _ingest._value.parent_process.image_file.name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.filePath
          target_field: _ingest._value.parent_process.image_file.path
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.filePublisher
          target_field: _ingest._value.parent_process.image_file.publisher
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        convert:
          field: _ingest._value.parentProcessImageFile.fileSize
          target_field: _ingest._value.parent_process.image_file.size
          type: long
          ignore_missing: true
          on_failure:
            - remove:
                field: _ingest._value.parentProcessImageFile.fileSize
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.issuer
          target_field: _ingest._value.parent_process.image_file.issuer
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.parentProcessImageFile.signer
          target_field: _ingest._value.parent_process.image_file.signer
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.registryHive
          target_field: _ingest._value.registry_hive
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: registry.hive
          value: '{{{_ingest._value.registry_hive}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.registryKey
          target_field: _ingest._value.registry_key
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: registry.key
          value: '{{{_ingest._value.registry_key}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.registryValueType
          target_field: _ingest._value.registry_value_type
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: registry.data.type
          value: '{{{_ingest._value.registry_value_type}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.registryValue
          target_field: _ingest._value.registry_value
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: registry.value
          value: '{{{_ingest._value.registry_value}}}'
          allow_duplicates: false
          ignore_failure: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.registryValueName
          target_field: _ingest._value.registry_value_name
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        rename:
          field: _ingest._value.securityGroupId
          target_field: _ingest._value.security_group_id
          ignore_missing: true
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        append:
          field: group.id
          value: '{{{_ingest._value.security_group_id}}}'
          allow_duplicates: false
          ignore_failure: true
  - script:
      description: Map ecs fields based on evidence type.
      lang: painless
      if: ctx.json?.evidence instanceof List
      source:
        def convertToOrderedArray(def list) {
          def result = new ArrayList();
          for (element in list) {
            result.add(element);
          }
          Collections.sort(result);
          return result;
        }
        if (!(ctx.cloud instanceof HashMap)) {
          ctx.cloud = new HashMap();
        }
        def cloudProvider = new HashSet();
        if (!(ctx.group instanceof HashMap)) {
          ctx.group = new HashMap();
        }
        def groupName = new HashSet();
        if (!(ctx.host instanceof HashMap)) {
          ctx.host = new HashMap();
        }
        def hostId = new HashSet();
        if (!(ctx.user instanceof HashMap)) {
          ctx.user = new HashMap();
        }
        def userDomain = new HashSet();
        def userId = new HashSet();
        def userName = new HashSet();
        def userEmail = new HashSet();
        if (!(ctx.process instanceof HashMap)) {
          ctx.process = new HashMap();
        }
        ctx.process.user = new HashMap();
        def processUserId = new HashSet();
        def processUserName = new HashSet();
        for (evidence in ctx.json.evidence) {
          if (['#microsoft.graph.security.securityGroupEvidence'].contains(evidence.odata_type)) {
            if (evidence?.display_name != null) {
              groupName.add(evidence.display_name);
            }
          }
          if (['#microsoft.graph.security.deviceEvidence'].contains(evidence.odata_type)) {
            if (evidence?.mde_device_id != null) {
              hostId.add(evidence.mde_device_id);
            }
          }
          if (['#microsoft.graph.security.mailboxEvidence', '#microsoft.graph.security.userEvidence'].contains(evidence.odata_type)) {
            if (evidence?.user_account?.domain_name != null) {
              userDomain.add(evidence.user_account.domain_name);
            }
            if (evidence?.user_account?.azure_ad_user_id != null) {
              userId.add(evidence.user_account.azure_ad_user_id);
            }
            if (evidence?.user_account?.user_principal_name != null) {
              userEmail.add(evidence.user_account.user_principal_name);
            }
            if (evidence?.user_account?.account_name != null) {
              userName.add(evidence.user_account.account_name);
            }
          }
          if (['#microsoft.graph.security.processEvidence'].contains(evidence.odata_type)) {
            if (evidence?.user_account?.azure_ad_user_id != null) {
              processUserId.add(evidence.user_account.azure_ad_user_id);
            }
            if (evidence?.user_account?.account_name != null) {
              processUserName.add(evidence.user_account.account_name);
            }
          }
          if (['azure'].contains(evidence?.vm_metadata?.cloud_provider?.toLowerCase())) {
            cloudProvider.add('azure');
          }
        }
        ctx.cloud.provider = convertToOrderedArray(cloudProvider);
        ctx.group.name = convertToOrderedArray(groupName);
        ctx.host.id = convertToOrderedArray(hostId);
        ctx.user.domain = convertToOrderedArray(userDomain);
        ctx.user.id = convertToOrderedArray(userId);
        ctx.user.name = convertToOrderedArray(userName);
        ctx.user.email = convertToOrderedArray(userEmail);
        ctx.process.user.id = convertToOrderedArray(processUserId);
        ctx.process.user.name = convertToOrderedArray(processUserName);
  - script:
      description: Set file.size, process.id, process.parent.id fields.
      lang: painless
      if: ctx.json?.evidence instanceof List
      source:
        def convertToOrderedArray(def list) {
          def result = new ArrayList();
          for (element in list) {
            result.add(element);
          }
          Collections.sort(result);
          return result;
        }
        if (!(ctx.file instanceof HashMap)) {
          ctx.file = new HashMap();
        }
        if (!(ctx.process instanceof HashMap)) {
          ctx.process = new HashMap();
        }
        if (!(ctx.process.parent instanceof HashMap)) {
          ctx.process.parent = new HashMap();
        }
        def fileSize = new HashSet();
        def processPid = new HashSet();
        def processParentPid = new HashSet();
        for (evidence in ctx.json.evidence) {
          if (['#microsoft.graph.security.fileEvidence'].contains(evidence.odata_type)) {
            if (evidence?.file_details?.size != null) {
              fileSize.add(evidence.file_details.size);
            }
          } else if (['#microsoft.graph.security.processEvidence'].contains(evidence.odata_type)) {
            if (evidence?.process?.id != null) {
              processPid.add(evidence.process.id);
            }
            if (evidence?.parent_process?.id != null) {
              processParentPid.add(evidence.parent_process.id);
            }
          }
        }
        ctx.file.size = convertToOrderedArray(fileSize);
        ctx.process.pid = convertToOrderedArray(processPid);
        ctx.process.parent.pid = convertToOrderedArray(processParentPid);
  - foreach:
      field: json.evidence
      if: ctx.json?.evidence instanceof List
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.createdDateTime
            - _ingest._value.receivedDateTime
            - _ingest._value.attachmentsCount
            - _ingest._value.firstSeenDateTime
            - _ingest._value.parentProcessCreationDateTime
            - _ingest._value.processCreationDateTime
            - _ingest._value.senderIp
            - _ingest._value.urlCount
            - _ingest._value.instanceId
            - _ingest._value.appId
            - _ingest._value.saasAppId
            - _ingest._value.osBuild
            - _ingest._value.rbacGroupId
            - _ingest._value.fileDetails.fileSize
            - _ingest._value.ipAddress
            - _ingest._value.emailCount
            - _ingest._value.parentProcessId
            - _ingest._value.processId
            - _ingest._value.imageFile.fileSize
            - _ingest._value.parentProcessImageFile.fileSize
          ignore_missing: true
          ignore_failure: true
  - rename:
      field: json.evidence
      target_field: m365_defender.alert.evidence
      ignore_missing: true
  - remove:
      field: json
      ignore_missing: true
  - remove:
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      field:
        - m365_defender.alert.last_update_datetime
        - m365_defender.alert.description
        - m365_defender.alert.created_datetime
        - m365_defender.alert.last_activity_datetime
        - m365_defender.alert.id
        - m365_defender.alert.service_source
        - m365_defender.alert.first_activity_datetime
        - m365_defender.alert.web_url
        - m365_defender.alert.assigned_to
        - m365_defender.alert.threat_family_name
        - m365_defender.alert.category
        - m365_defender.alert.mitre_techniques
        - m365_defender.alert.tenant_id
      ignore_failure: true
      ignore_missing: true
  - foreach:
      field: m365_defender.alert.evidence
      if: ctx.m365_defender?.alert?.evidence instanceof List && (ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields')))
      ignore_failure: true
      processor:
        remove:
          field:
            - _ingest._value.ip_address
            - _ingest._value.detection_status
            - _ingest._value.received_datetime
            - _ingest._value.antispam_direction
            - _ingest._value.subject
            - _ingest._value.recipient_email_address
            - _ingest._value.instance_id
            - _ingest._value.instance_name
            - _ingest._value.vm_metadata.cloud_provider
            - _ingest._value.os_platform
            - _ingest._value.version
            - _ingest._value.file_details.sha1
            - _ingest._value.file_details.sha256
            - _ingest._value.file_details.name
            - _ingest._value.file_details.path
            - _ingest._value.file_details.size
            - _ingest._value.process.command_line
            - _ingest._value.image_file.sha1
            - _ingest._value.image_file.sha256
            - _ingest._value.parent_process.image_file.sha1
            - _ingest._value.parent_process.image_file.sha256
            - _ingest._value.parent_process.id
            - _ingest._value.parent_process.creation_datetime
            - _ingest._value.process.id
            - _ingest._value.process.creation_datetime
            - _ingest._value.registry_value_type
            - _ingest._value.registry_hive
            - _ingest._value.registry_key
            - _ingest._value.registry_value
            - _ingest._value.security_group_id
          ignore_missing: true
          ignore_failure: true
  - remove:
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source:
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - append:
      field: error.message
      value: '{{{ _ingest.on_failure_message }}}'
