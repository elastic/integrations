---
description: Pipeline for processing Vulnerability logs.
processors:
  - set:
      field: ecs.version
      tag: set_ecs_version
      value: 8.17.0
  - fail:
      tag: data_collection_error
      if: ctx.error?.message != null && ctx.message == null && ctx.event?.original == null
      message: error message set and no data to process.
  - rename:
      field: message
      tag: rename_message_to_event_original
      target_field: event.original
      ignore_missing: true
      description: Renames the original `message` field to `event.original` to store a copy of the original message. The `event.original` field is not touched if the document already has one; it may happen when Logstash sends the document.
      if: ctx.event?.original == null
  - remove:
      field: message
      tag: remove_message
      ignore_missing: true
      description: The `message` field is no longer required if the document has an `event.original` field.
      if: ctx.event?.original != null
  - json:
      field: event.original
      tag: json_event_original
      target_field: json
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_event_kind_to_event
      value: event
  - append:
      field: event.type
      tag: append_event_type
      value: info
  - append:
      field: event.category
      tag: append_event_category
      value: vulnerability
  - set:
      field: observer.product
      tag: set_observer_product
      value: "Microsoft 365 Defender"
  - set:
      field: observer.vendor
      tag : set_observer_vendor
      value: "Microsoft"
  - rename:
      field: json.affectedMachine.assetCriticalityLevel
      tag: rename_affectedMachine_assetCriticalityLevel
      target_field: m365_defender.vulnerability.affected_machine.asset_criticality_level
      ignore_missing: true
  - rename:
      field: json.affectedMachine.computerDnsName
      tag: rename_affectedMachine_computerDnsName
      target_field: m365_defender.vulnerability.affected_machine.computer_dns_name
      ignore_missing: true
  - set:
      field: host.name
      tag: set_host_name_from_vulnerability_affected_machine_computer_dns_name
      copy_from: m365_defender.vulnerability.affected_machine.computer_dns_name
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_related_hosts_from_vulnerability_affected_machine_computer_dns_name
      value: '{{{m365_defender.vulnerability.affected_machine.computer_dns_name}}}'
      allow_duplicates: false
      if: ctx.m365_defender?.vulnerability?.affected_machine?.computer_dns_name != null
  - rename:
      field: json.affectedMachine.fixingKbId
      tag: rename_affectedMachine_fixingKbId
      target_field: m365_defender.vulnerability.affected_machine.fixing_kb_id
      ignore_missing: true
  - rename:
      field: json.affectedMachine.id
      tag: rename_affectedMachine_id
      target_field: m365_defender.vulnerability.affected_machine.id
      ignore_missing: true
  - rename:
      field: json.affectedMachine.machineId
      tag: rename_affectedMachine_machineId
      target_field: m365_defender.vulnerability.affected_machine.machine_id
      ignore_missing: true
  - set:
      field: host.id
      tag: set_host_id_from_vulnerability_affected_machine_machine_id
      copy_from: m365_defender.vulnerability.affected_machine.machine_id
      ignore_empty_value: true
  - append:
      field: related.hosts
      tag: append_related_hosts_from_vulnerability_affected_machine_machine_id
      value: '{{{m365_defender.vulnerability.affected_machine.machine_id}}}'
      allow_duplicates: false
      if: ctx.m365_defender?.vulnerability?.affected_machine?.machine_id != null
  - rename:
      field: json.affectedMachine.osPlatform
      tag: rename_affectedMachine_osPlatform
      target_field: m365_defender.vulnerability.affected_machine.os_platform
      ignore_missing: true
  - set:
      field: host.os.platform
      tag: set_host_os_name_from_vulnerability_affected_machine_os_platform
      copy_from: m365_defender.vulnerability.affected_machine.os_platform
      ignore_empty_value: true
  - script:
      description: Dynamically set host.os.type values.
      tag: script_map_host_os_type
      lang: painless
      params:
        os_type:
          - linux
          - macos
          - unix
          - windows
          - ios
          - android
      source: |
        if (ctx.m365_defender?.vulnerability?.affected_machine?.os_platform != null) {
          String platform_name = ctx.m365_defender.vulnerability.affected_machine.os_platform.toLowerCase();
          for (String os: params.os_type) {
            if (platform_name.startsWith(os)) {
              ctx.host.os.put('type', os);
            }
          }
        }
  - rename:
      field: json.affectedMachine.productName
      tag: rename_affectedMachine_productName
      target_field: m365_defender.vulnerability.affected_machine.product_name
      ignore_missing: true
  - set:
      field: package.name
      tag: set_package_version_from_vulnerability_affected_machine_product_name
      copy_from: m365_defender.vulnerability.affected_machine.product_name
      ignore_empty_value: true
  - rename:
      field: json.affectedMachine.productVendor
      tag: rename_affectedMachine_productVendor
      target_field: m365_defender.vulnerability.affected_machine.product_vendor
      ignore_missing: true
  - rename:
      field: json.affectedMachine.productVersion
      tag: rename_affectedMachine_productVersion
      target_field: m365_defender.vulnerability.affected_machine.product_version
      ignore_missing: true
  - set:
      field: package.version
      tag: set_package_version_from_vulnerability_affected_machine_product_version
      copy_from: m365_defender.vulnerability.affected_machine.product_version
      ignore_empty_value: true
  - convert: 
      field: json.affectedMachine.rbacGroupId
      tag : convert_affectedMachine_rbacGroupId_to_string
      type: string
      ignore_missing: true
  - rename:
      field: json.affectedMachine.rbacGroupId
      tag: rename_affectedMachine_rbacGroupId
      target_field: m365_defender.vulnerability.affected_machine.rbac_group_id
      ignore_missing: true
  - rename:
      field: json.affectedMachine.rbacGroupName
      tag: rename_affectedMachine_rbacGroupName
      target_field: m365_defender.vulnerability.affected_machine.rbac_group_name
      ignore_missing: true
  - rename:
      field: json.affectedMachine.severity
      tag: rename_affectedMachine_severity
      target_field: m365_defender.vulnerability.affected_machine.severity
      ignore_missing: true
  - set:
      field: host.risk.calculated_level
      tag: set_host_risk_calculated_level_from_vulnerability_affected_machine_severity
      copy_from: m365_defender.vulnerability.affected_machine.severity
      ignore_empty_value: true
  - rename:
      field: json.affectedMachine.tags
      tag: rename_affectedMachine_tags
      target_field: m365_defender.vulnerability.affected_machine.tags
      ignore_missing: true
  - rename:
      field: json.cveSupportability
      tag: rename_cveSupportability
      target_field: m365_defender.vulnerability.cve_supportability
      ignore_missing: true
  - convert:
      field: json.cvssV3
      tag: convert_cvssV3_to_double
      target_field: m365_defender.vulnerability.cvss_v3
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: vulnerability.score.base
      tag: set_vulnerability_score_base_from_vulnerability_cvss_v3
      copy_from: m365_defender.vulnerability.cvss_v3
      ignore_empty_value: true
  - set:
      field: vulnerability.classification
      tag: set_vulnerability_classification_from_vulnerability_cvss_v3
      value: CVSS
      if: ctx.m365_defender?.vulnerability?.cvss_v3 != null
      ignore_empty_value: true
  - set:
      field: vulnerability.scanner.vendor
      tag: set_vulnerability_scanner_vendor
      value: Microsoft
  - rename:
      field: json.cvssVector
      tag: rename_cvssVector
      target_field: m365_defender.vulnerability.cvss_vector
      ignore_missing: true
  - rename:
      field: json.description
      tag: rename_description
      target_field: m365_defender.vulnerability.description
      ignore_missing: true
  - set:
      field: vulnerability.description
      tag: set_vulnerability_description_from_vulnerability_description
      copy_from: m365_defender.vulnerability.description
      ignore_empty_value: true
  - set:
      field: message
      tag: set_message_from_vulnerability_description
      copy_from: m365_defender.vulnerability.description
      ignore_empty_value: true
  - convert:
      field: json.epss
      tag: convert_epss_to_double
      target_field: m365_defender.vulnerability.epss
      type: double
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.exploitInKit
      tag: convert_exploitInKit_to_boolean
      target_field: m365_defender.vulnerability.exploit_in_kit
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.exploitTypes
      tag: rename_exploitTypes
      target_field: m365_defender.vulnerability.exploit_types
      ignore_missing: true
  - rename:
      field: json.exploitUris
      tag: rename_exploitUris
      target_field: m365_defender.vulnerability.exploit_uris
      ignore_missing: true
  - convert:
      field: json.exploitVerified
      tag: convert_exploitVerified_to_boolean
      target_field: m365_defender.vulnerability.exploit_verified
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.exposedMachines
      tag: convert_exposedMachines_to_long
      target_field: m365_defender.vulnerability.exposed_machines
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.firstDetected
      tag: date_firstDetected
      target_field: m365_defender.vulnerability.first_detected
      formats:
        - ISO8601
      if: ctx.json?.firstDetected != null && ctx.json.firstDetected != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: threat.indicator.first_seen
      tag: set_threat_indicator_first_seen_from_vulnerability_first_detected
      copy_from: m365_defender.vulnerability.first_detected
      ignore_empty_value: true
  - rename:
      field: json.id
      tag: rename_id
      target_field: m365_defender.vulnerability.id
      ignore_missing: true
  - set:
      field: vulnerability.id
      tag: set_vulnerability_id_from_vulnerability_id
      copy_from: m365_defender.vulnerability.id
      ignore_empty_value: true
  - set:
      field: vulnerability.enumeration
      tag: set_vulnerability_enumeration_to_cve
      value: 'CVE'
      if: ctx.vulnerability?.id != null && ctx.vulnerability.id.startsWith('CVE-')
  - set:
      field: vulnerability.enumeration
      tag: set_vulnerability_enumeration_to_tvm
      value: 'TVM'
      if: ctx.vulnerability?.id != null && ctx.vulnerability.id.startsWith('TVM-')
  - rename:
      field: json.name
      tag: rename_name
      target_field: m365_defender.vulnerability.name
      ignore_missing: true
  - date:
      field: json.patchFirstAvailable
      tag: date_patchFirstAvailable
      target_field: m365_defender.vulnerability.patch_first_available
      formats:
        - ISO8601
      if: ctx.json?.patchFirstAvailable != null && ctx.json.patchFirstAvailable != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - convert:
      field: json.publicExploit
      tag: convert_publicExploit_to_boolean
      target_field: m365_defender.vulnerability.public_exploit
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - date:
      field: json.publishedOn
      tag: date_publishedOn
      target_field: m365_defender.vulnerability.published_on
      formats:
        - ISO8601
      if: ctx.json?.publishedOn != null && ctx.json.publishedOn != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - rename:
      field: json.severity
      tag: rename_severity
      target_field: m365_defender.vulnerability.severity
      ignore_missing: true
  - set:
      field: vulnerability.severity
      tag: set_vulnerability_severity_from_vulnerability_severity
      copy_from: m365_defender.vulnerability.severity
      ignore_empty_value: true
  - date:
      field: json.updatedOn
      tag: date_updatedOn
      target_field: m365_defender.vulnerability.updated_on
      formats:
        - ISO8601
      if: ctx.json?.updatedOn != null && ctx.json.updatedOn != ''
      on_failure:
        - append:
            field: error.message
            value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - remove:
      field:
        - m365_defender.vulnerability.affected_machine.computer_dns_name
        - m365_defender.vulnerability.affected_machine.machine_id
        - m365_defender.vulnerability.affected_machine.product_version
        - m365_defender.vulnerability.affected_machine.product_name
        - m365_defender.vulnerability.affected_machine.severity
        - m365_defender.vulnerability.cvss_v3
        - m365_defender.vulnerability.first_detected
        - m365_defender.vulnerability.description
        - m365_defender.vulnerability.id
        - m365_defender.vulnerability.severity
        - m365_defender.vulnerability.updated_on
        - m365_defender.vulnerability.affected_machine.os_platform
      tag: remove_custom_duplicate_fields
      ignore_missing: true
      if: ctx.tags == null || !ctx.tags.contains('preserve_duplicate_custom_fields')
  - remove:
      field: json
      tag: remove_json
      ignore_missing: true
  - script:
      description: This script processor iterates over the whole document to remove fields with null values.
      tag: script_to_drop_null_values
      lang: painless
      source: |
        void handleMap(Map map) {
          map.values().removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        void handleList(List list) {
          list.removeIf(v -> {
            if (v instanceof Map) {
                handleMap(v);
            } else if (v instanceof List) {
                handleList(v);
            }
            return v == null || v == '' || (v instanceof Map && v.size() == 0) || (v instanceof List && v.size() == 0)
          });
        }
        handleMap(ctx);
  - set:
      field: event.kind
      tag: set_pipeline_error_into_event_kind
      value: pipeline_error
      if: ctx.error?.message != null
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
      if: ctx.error?.message != null  
on_failure:
  - append:
      field: error.message
      value: 'Processor {{{_ingest.on_failure_processor_type}}} with tag {{{_ingest.on_failure_processor_tag}}} in pipeline {{{_ingest.on_failure_pipeline}}} failed with message: {{{_ingest.on_failure_message}}}'
  - set:
      field: event.kind
      tag: set_pipeline_error_to_event_kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
