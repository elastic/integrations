---
description: Pipeline for processing Device Event logs.
processors:
  - set:
      field: event.kind
      value: [event]
  - append:
      field: event.category
      value: [authentication]
      if: ctx.m365_defender?.event?.category?.toLowerCase().contains('devicelogonevents')
  - set:
      field: event.category
      value: [host]
      if: ctx.m365_defender?.event?.category?.toLowerCase().contains('deviceevents') || ctx.m365_defender?.event?.category?.toLowerCase().contains('deviceinfo')
  - set:
      field: event.category
      value: [file]
      if: ctx.m365_defender?.event?.category?.toLowerCase().contains('devicefileevents') || ctx.m365_defender?.event?.category?.toLowerCase().contains('devicefilecertificateinfo')
  - set:
      field: event.category
      value: [process]
      if: ctx.m365_defender?.event?.category?.toLowerCase().contains('deviceimageloadevents') || ctx.m365_defender?.event?.category?.toLowerCase().contains('deviceprocessevents')
  - set:
      field: event.category
      value: [network]
      if: ctx.m365_defender?.event?.category?.toLowerCase().contains('devicenetworkevents') || ctx.m365_defender?.event?.category?.toLowerCase().contains('devicenetworkinfo')
  - set:
      field: event.category
      value: [registry]
      if: ctx.m365_defender?.event?.category?.toLowerCase().contains('deviceregistryevents')
  - set:
      field: event.type
      value: [info]
      if: (ctx.event?.category != null && (ctx.event.category.contains('authentication') || ctx.event.category.contains('host') || ctx.event.category.contains('file'))) || (ctx.json?.properties?.ActionType != null && (ctx.json.properties.ActionType.toLowerCase().contains('openprocess') || ctx.json.properties.ActionType.toLowerCase().contains('connectionfound') || ctx.json.properties.ActionType.toLowerCase().contains('networksignatureinspected'))) || ctx.m365_defender?.event?.category?.toLowerCase().contains('devicenetworkinfo')
  - set:
      field: event.type
      value: [end]
      if: (ctx.m365_defender?.event?.category?.toLowerCase().contains('deviceimageloadevents')) || (ctx.json?.properties?.ActionType != null && (ctx.json.properties.ActionType.toLowerCase().contains('processcreated') || ctx.json.properties.ActionType.toLowerCase().contains('connectionsuccess')))
  - set:
      field: event.type
      value: [denied]
      if: ctx.json?.properties?.ActionType != null && ctx.json.properties.ActionType.toLowerCase().contains('connectionfailed')
  - set:
      field: event.type
      value: [start]
      if: ctx.json?.properties?.ActionType != null && (ctx.json.properties.ActionType.toLowerCase().contains('connectionrequest') || ctx.json.properties.ActionType.toLowerCase().contains('listeningconnectioncreated'))
  - set:
      field: event.type
      value: [allowed]
      if: ctx.json?.properties?.ActionType != null && ctx.json.properties.ActionType.toLowerCase().contains('inboundconnectionaccepted')
  - set:
      field: event.type
      value: [creation]
      if: ctx.json?.properties?.ActionType != null && ctx.json.properties.ActionType.toLowerCase().contains('registrykeycreated')
  - set:
      field: event.type
      value: [deletion]
      if: ctx.json?.properties?.ActionType != null && (ctx.json.properties.ActionType.toLowerCase().contains('registrykeydeleted') || ctx.json.properties.ActionType.toLowerCase().contains('registryvaluedeleted'))
  - set:
      field: event.type
      value: [change]
      if: ctx.json?.properties?.ActionType != null && (ctx.json.properties.ActionType.toLowerCase().contains('registrykeyrenamed') || ctx.json.properties.ActionType.toLowerCase().contains('registryvalueset'))
  - rename:
      field: json.properties.FolderPath
      target_field: m365_defender.event.folder_path
      ignore_missing: true
  - set:
      field: file.directory
      copy_from: m365_defender.event.folder_path
      ignore_empty_value: true
  - rename:
      field: json.properties.MD5
      target_field: m365_defender.event.md5
      ignore_missing: true
  - set:
      field: file.hash.md5
      copy_from: m365_defender.event.md5
      ignore_empty_value: true
  - append:
      field: related.hash
      value: '{{{file.hash.md5}}}'
      if: ctx.file?.hash?.md5 != null
      allow_duplicates: false
  - rename:
      field: json.properties.SHA1
      target_field: m365_defender.event.sha1
      ignore_missing: true
  - set:
      field: file.hash.sha1
      copy_from: m365_defender.event.sha1
      ignore_empty_value: true
  - append:
      field: related.hash
      value: '{{{file.hash.sha1}}}'
      if: ctx.file?.hash?.sha1 != null
      allow_duplicates: false
  - rename:
      field: json.properties.SHA256
      target_field: m365_defender.event.sha256
      ignore_missing: true
  - set:
      field: file.hash.sha256
      copy_from: m365_defender.event.sha256
      ignore_empty_value: true
  - append:
      field: related.hash
      value: '{{{file.hash.sha256}}}'
      if: ctx.file?.hash?.sha256 != null
      allow_duplicates: false
  - rename:
      field: json.properties.FileName
      target_field: m365_defender.event.file.name
      ignore_missing: true
  - set:
      field: file.name
      copy_from: m365_defender.event.file.name
      ignore_empty_value: true
  - convert:
      field: json.properties.FileSize
      target_field: m365_defender.event.file.size
      if: ctx.json?.properties?.FileSize != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: file.size
      copy_from: m365_defender.event.file.size
      ignore_empty_value: true
  - rename:
      field: json.properties.DeviceName
      target_field: m365_defender.event.device.name
      ignore_missing: true
  - set:
      field: host.domain
      copy_from: m365_defender.event.device.name
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{host.domain}}}'
      if: ctx.host?.domain != null
      allow_duplicates: false
  - rename:
      field: json.properties.DeviceId
      target_field: m365_defender.event.device.id
      ignore_missing: true
  - set:
      field: host.id
      copy_from: m365_defender.event.device.id
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{host.id}}}'
      if: ctx.host?.id != null
      allow_duplicates: false
  - rename:
      field: json.properties.InitiatingProcessCommandLine
      target_field: m365_defender.event.initiating_process.command_line
      ignore_missing: true
  - set:
      field: process.command_line
      copy_from: m365_defender.event.initiating_process.command_line
      ignore_empty_value: true
  - rename:
      field: json.properties.InitiatingProcessMD5
      target_field: m365_defender.event.initiating_process.md5
      ignore_missing: true
  - set:
      field: process.hash.md5
      copy_from: m365_defender.event.initiating_process.md5
      ignore_empty_value: true
  - append:
      field: related.hash
      value: '{{{process.hash.md5}}}'
      if: ctx.process?.hash?.md5 != null
      allow_duplicates: false
  - rename:
      field: json.properties.InitiatingProcessSHA1
      target_field: m365_defender.event.initiating_process.sha1
      ignore_missing: true
  - set:
      field: process.hash.sha1
      copy_from: m365_defender.event.initiating_process.sha1
      ignore_empty_value: true
  - append:
      field: related.hash
      value: '{{{process.hash.sha1}}}'
      if: ctx.process?.hash?.sha1 != null
      allow_duplicates: false
  - rename:
      field: json.properties.InitiatingProcessSHA256
      target_field: m365_defender.event.initiating_process.sha256
      ignore_missing: true
  - set:
      field: process.hash.sha256
      copy_from: m365_defender.event.initiating_process.sha256
      ignore_empty_value: true
  - append:
      field: related.hash
      value: '{{{process.hash.sha256}}}'
      if: ctx.process?.hash?.sha256 != null
      allow_duplicates: false
  - convert:
      field: json.properties.InitiatingProcessParentId
      target_field: m365_defender.event.initiating_process.parent_id
      if: ctx.json?.properties?.InitiatingProcessParentId != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: process.parent.pid
      copy_from: m365_defender.event.initiating_process.parent_id
      ignore_empty_value: true
  - convert:
      field: json.properties.InitiatingProcessId
      target_field: m365_defender.event.initiating_process.id
      if: ctx.json?.properties?.InitiatingProcessId != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: process.pid
      copy_from: m365_defender.event.initiating_process.id
      ignore_empty_value: true
  - rename:
      field: json.properties.RegistryKey
      target_field: m365_defender.event.registry.key
      ignore_missing: true
  - set:
      field: registry.key
      copy_from: m365_defender.event.registry.key
      ignore_empty_value: true
  - rename:
      field: json.properties.RegistryValueName
      target_field: m365_defender.event.registry.value_name
      ignore_missing: true
  - set:
      field: registry.value
      copy_from: m365_defender.event.registry.value_name
      ignore_empty_value: true
  - convert:
      field: json.properties.FileOriginIP
      target_field: m365_defender.event.file.origin_ip
      if: ctx.json?.properties?.FileOriginIP != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.ip
      value: '{{{m365_defender.event.file.origin_ip}}}'
      if: ctx.m365_defender?.event?.file?.origin_ip != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{{m365_defender.event.file.origin_ip}}}'
      if: ctx.m365_defender?.event?.file?.origin_ip != null
      allow_duplicates: false
  - convert:
      field: json.properties.RemoteIP
      target_field: m365_defender.event.remote.ip
      if: ctx.json?.properties?.RemoteIP != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.ip
      value: '{{{m365_defender.event.remote.ip}}}'
      if: ctx.m365_defender?.event?.remote?.ip != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{{m365_defender.event.remote.ip}}}'
      if: ctx.m365_defender?.event?.remote?.ip != null
      allow_duplicates: false
  - convert:
      field: json.properties.LocalIP
      target_field: m365_defender.event.local.ip
      if: ctx.json?.properties?.LocalIP != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.ip
      value: '{{{m365_defender.event.local.ip}}}'
      if: ctx.m365_defender?.event?.local?.ip != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{{m365_defender.event.local.ip}}}'
      if: ctx.m365_defender?.event?.local?.ip != null
      allow_duplicates: false
  - convert:
      field: json.properties.RequestSourceIP
      target_field: m365_defender.event.request.source_ip
      if: ctx.json?.properties?.RequestSourceIP != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.ip
      value: '{{{m365_defender.event.request.source_ip}}}'
      if: ctx.m365_defender?.event?.request?.source_ip != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{{m365_defender.event.request.source_ip}}}'
      if: ctx.m365_defender?.event?.request?.source_ip != null
      allow_duplicates: false
  - convert:
      field: json.properties.RemotePort
      target_field: m365_defender.event.remote.port
      if: ctx.json?.properties?.RemotePort != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.port
      value: '{{{m365_defender.event.remote.port}}}'
      if: ctx.m365_defender?.event?.remote?.port != null
      allow_duplicates: false
  - convert:
      field: json.properties.LocalPort
      target_field: m365_defender.event.local.port
      if: ctx.json?.properties?.LocalPort != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.port
      value: '{{{m365_defender.event.local.port}}}'
      if: ctx.m365_defender?.event?.local?.port != null
      allow_duplicates: false
  - convert:
      field: json.properties.RequestSourcePort
      target_field: m365_defender.event.request.source_port
      if: ctx.json?.properties?.RequestSourcePort != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: source.port
      value: '{{{m365_defender.event.request.source_port}}}'
      if: ctx.m365_defender?.event?.request?.source_port != null
      allow_duplicates: false
  - foreach:
      field: source.port
      if: ctx.source?.port instanceof List
      processor:
        convert:
          field: _ingest._value
          type: long
          on_failure:
            - append:
                field: error.message
                value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.AccountName
      target_field: m365_defender.event.account.name
      ignore_missing: true
  - set:
      field: user.name
      copy_from: m365_defender.event.account.name
      ignore_empty_value: true
  - append:
      field: related.user
      value: '{{{user.name}}}'
      if: ctx.user?.name != null
      allow_duplicates: false
  - date:
      field: json.properties.CertificateExpirationTime
      target_field: m365_defender.event.certificate.expiration_time
      formats:
        - ISO8601
      if: ctx.json?.properties?.CertificateExpirationTime != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: file.x509.not_after
      copy_from: m365_defender.event.certificate.expiration_time
      ignore_empty_value: true
  - rename:
      field: json.properties.CertificateSerialNumber
      target_field: m365_defender.event.certificate.serial_number
      ignore_missing: true
  - set:
      field: file.x509.serial_number
      copy_from: m365_defender.event.certificate.serial_number
      ignore_empty_value: true
  - rename:
      field: json.properties.RequestProtocol
      target_field: m365_defender.event.request.protocol
      ignore_missing: true
  - set:
      field: network.protocol
      copy_from: m365_defender.event.request.protocol
      ignore_empty_value: true
  - lowercase:
      field: network.protocol
      ignore_missing: true
  - rename:
      field: json.properties.ActionType
      target_field: m365_defender.event.action.type
      ignore_missing: true
  - set:
      field: event.action
      copy_from: m365_defender.event.action.type
      ignore_empty_value: true
  - lowercase:
      field: event.action
      ignore_missing: true
  - gsub:
      field: event.action
      pattern: ' '
      replacement: '-'
      ignore_missing: true
  - rename:
      field: json.properties.RequestAccountDomain
      target_field: m365_defender.event.request.account_domain
      ignore_missing: true
  - set:
      field: source.user.domain
      copy_from: m365_defender.event.request.account_domain
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{source.user.domain}}}'
      if: ctx.source?.user?.domain != null
      allow_duplicates: false
  - rename:
      field: json.properties.RequestAccountName
      target_field: m365_defender.event.request.account_name
      ignore_missing: true
  - set:
      field: source.user.name
      copy_from: m365_defender.event.request.account_name
      ignore_empty_value: true
  - append:
      field: related.user
      value: '{{{m365_defender.event.request.account_name}}}'
      if: ctx.m365_defender?.event?.request?.account_name != null
      allow_duplicates: false
  - convert:
      field: json.properties.PublicIP
      target_field: m365_defender.event.public_ip.value
      if: ctx.json?.properties?.PublicIP != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: host.ip
      copy_from: m365_defender.event.public_ip.value
      ignore_empty_value: true
  - append:
      field: related.ip
      value: '{{{m365_defender.event.public_ip.value}}}'
      if: ctx.m365_defender?.event?.public_ip?.value != null
      allow_duplicates: false
  - geoip:
      if: ctx.m365_defender?.event?.public_ip?.value != null
      field: m365_defender.event.public_ip.value
      target_field: m365_defender.event.public_ip.geo
  - rename:
      field: json.properties.OSArchitecture
      target_field: m365_defender.event.os.architecture
      ignore_missing: true
  - set:
      field: host.architecture
      copy_from: m365_defender.event.os.architecture
      ignore_empty_value: true
  - rename:
      field: json.properties.OSPlatform
      target_field: m365_defender.event.os.platform
      ignore_missing: true
  - set:
      field: host.os.name
      copy_from: m365_defender.event.os.platform
      ignore_empty_value: true
  - rename:
      field: json.properties.OSDistribution
      target_field: m365_defender.event.os.distribution
      ignore_missing: true
  - set:
      field: host.os.platform
      copy_from: m365_defender.event.os.distribution
      ignore_empty_value: true
  - rename:
      field: json.properties.OSVersion
      target_field: m365_defender.event.os.version
      ignore_missing: true
  - set:
      field: host.os.version
      copy_from: m365_defender.event.os.version
      ignore_empty_value: true
  - rename:
      field: json.properties.DeviceType
      target_field: m365_defender.event.device.type
      ignore_missing: true
  - set:
      field: host.type
      copy_from: m365_defender.event.device.type
      ignore_empty_value: true
  - rename:
      field: json.properties.AccountDomain
      target_field: m365_defender.event.account.domain
      ignore_missing: true
  - set:
      field: user.domain
      copy_from: m365_defender.event.account.domain
      ignore_empty_value: true
  - append:
      field: related.hosts
      value: '{{{user.domain}}}'
      if: ctx.user?.domain != null
      allow_duplicates: false
  - rename:
      field: json.properties.ClientVersion
      target_field: m365_defender.event.client_version
      ignore_missing: true
  - set:
      field: observer.version
      copy_from: m365_defender.event.client_version
      ignore_empty_value: true
  - rename:
      field: json.properties.DeviceCategory
      target_field: m365_defender.event.device.category
      ignore_missing: true
  - set:
      field: observer.type
      copy_from: m365_defender.event.device.category
      ignore_empty_value: true
  - rename:
      field: json.properties.MacAddress
      target_field: m365_defender.event.mac_address
      ignore_missing: true
  - gsub:
      field: m365_defender.event.mac_address
      pattern: '[:.]'
      replacement: '-'
      ignore_missing: true
  - uppercase:
      field: m365_defender.event.mac_address
      ignore_missing: true
  - set:
      field: host.mac
      copy_from: m365_defender.event.mac_address
      ignore_empty_value: true
  - grok:
      if: ctx.json?.properties?.NetworkAdapterName != null
      field: json.properties.NetworkAdapterName
      patterns:
        - "^{%{DATA:m365_defender.event.network.adapter_name}}$"
  - json:
      field: json.properties.AdditionalFields
      if: ctx.json?.properties?.AdditionalFields != null && ctx.json.properties.AdditionalFields instanceof String && ctx.json.properties.AdditionalFields != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.AdditionalFields
      target_field: m365_defender.event.additional_fields
      ignore_missing: true
  - rename:
      field: json.properties.AccountSid
      target_field: m365_defender.event.account.sid
      ignore_missing: true
  - rename:
      field: json.properties.RequestAccountSid
      target_field: m365_defender.event.request.account_sid
      ignore_missing: true
  - rename:
      field: json.properties.AppGuardContainerId
      target_field: m365_defender.event.app_guard_container_id
      ignore_missing: true
  - rename:
      field: json.properties.FileOriginUrl
      target_field: m365_defender.event.file.origin_url
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessAccountDomain
      target_field: m365_defender.event.initiating_process.account_domain
      ignore_missing: true
  - append:
      field: related.hosts
      value: '{{{m365_defender.event.initiating_process.account_domain}}}'
      if: ctx.m365_defender?.event?.initiating_process?.account_domain != null
      allow_duplicates: false
  - rename:
      field: json.properties.InitiatingProcessAccountName
      target_field: m365_defender.event.initiating_process.account_name
      ignore_missing: true
  - append:
      field: related.user
      value: '{{{m365_defender.event.initiating_process.account_name}}}'
      if: ctx.m365_defender?.event?.initiating_process?.account_name != null
      allow_duplicates: false
  - rename:
      field: json.properties.AccountObjectId
      target_field: m365_defender.event.account.object_id
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessAccountObjectId
      target_field: m365_defender.event.initiating_process.account_object_id
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessAccountSid
      target_field: m365_defender.event.initiating_process.account_sid
      ignore_missing: true
  - rename:
      field: json.properties.AccountUpn
      target_field: m365_defender.event.account.upn
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessAccountUpn
      target_field: m365_defender.event.initiating_process.account_upn
      ignore_missing: true
  - date:
      field: json.properties.InitiatingProcessCreationTime
      target_field: m365_defender.event.initiating_process.creation_time
      formats:
        - ISO8601
      if: ctx.json?.properties?.InitiatingProcessCreationTime != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.InitiatingProcessFileName
      target_field: m365_defender.event.initiating_process.file_name
      ignore_missing: true
  - convert:
      field: json.properties.InitiatingProcessFileSize
      target_field: m365_defender.event.initiating_process.file_size
      if: ctx.json?.properties?.InitiatingProcessFileSize != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.InitiatingProcessFolderPath
      target_field: m365_defender.event.initiating_process.folder_path
      ignore_missing: true
  - convert:
      field: json.properties.InitiatingProcessLogonId
      target_field: m365_defender.event.initiating_process.logon_id
      if: ctx.json?.properties?.InitiatingProcessLogonId != ''
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.properties.InitiatingProcessParentCreationTime
      target_field: m365_defender.event.initiating_process.parent_creation_time
      formats:
        - ISO8601
      if: ctx.json?.properties?.InitiatingProcessParentCreationTime != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.InitiatingProcessParentFileName
      target_field: m365_defender.event.initiating_process.parent_file_name
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessVersionInfoCompanyName
      target_field: m365_defender.event.initiating_process.version_info_company_name
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessVersionInfoFileDescription
      target_field: m365_defender.event.initiating_process.version_info_file_description
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessVersionInfoInternalFileName
      target_field: m365_defender.event.initiating_process.version_info_internal_file_name
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessVersionInfoOriginalFileName
      target_field: m365_defender.event.initiating_process.version_info_original_file_name
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessVersionInfoProductName
      target_field: m365_defender.event.initiating_process.version_info_product_name
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessVersionInfoProductVersion
      target_field: m365_defender.event.initiating_process.version_info_product_version
      ignore_missing: true
  - convert:
      field: json.properties.LogonId
      target_field: m365_defender.event.logon.id
      if: ctx.json?.properties?.LogonId != ''
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.ProcessCommandLine
      target_field: m365_defender.event.process.command_line
      ignore_missing: true
  - date:
      field: json.properties.ProcessCreationTime
      target_field: m365_defender.event.process.creation_time
      formats:
        - ISO8601
      if: ctx.json?.properties?.ProcessCreationTime != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - convert:
      field: json.properties.ProcessId
      target_field: m365_defender.event.process.id
      if: ctx.json?.properties?.ProcessId != ''
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.ProcessTokenElevation
      target_field: m365_defender.event.process.token_elevation
      ignore_missing: true
  - rename:
      field: json.properties.ProcessVersionInfoCompanyName
      target_field: m365_defender.event.process.version_info_company_name
      ignore_missing: true
  - rename:
      field: json.properties.ProcessVersionInfoFileDescription
      target_field: m365_defender.event.process.version_info_file_description
      ignore_missing: true
  - rename:
      field: json.properties.ProcessVersionInfoInternalFileName
      target_field: m365_defender.event.process.version_info_internal_file_name
      ignore_missing: true
  - rename:
      field: json.properties.ProcessVersionInfoOriginalFileName
      target_field: m365_defender.event.process.version_info_original_file_name
      ignore_missing: true
  - rename:
      field: json.properties.ProcessVersionInfoProductName
      target_field: m365_defender.event.process.version_info_product_name
      ignore_missing: true
  - rename:
      field: json.properties.ProcessVersionInfoProductVersion
      target_field: m365_defender.event.process.version_info_product_version
      ignore_missing: true
  - rename:
      field: json.properties.RegistryValueData
      target_field: m365_defender.event.registry.value_data
      ignore_missing: true
  - rename:
      field: json.properties.RemoteDeviceName
      target_field: m365_defender.event.remote.device_name
      ignore_missing: true
  - rename:
      field: json.properties.RemoteUrl
      target_field: m365_defender.event.remote.url
      ignore_missing: true
  - convert:
      field: json.properties.ReportId
      target_field: m365_defender.event.report_id
      if: ctx.json?.properties?.ReportId != ''
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.properties.CertificateCountersignatureTime
      target_field: m365_defender.event.certificate.countersignature_time
      formats:
        - ISO8601
      if: ctx.json?.properties?.CertificateCountersignatureTime != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - date:
      field: json.properties.CertificateCreationTime
      target_field: m365_defender.event.certificate.creation_time
      formats:
        - ISO8601
      if: ctx.json?.properties?.CertificateCreationTime != null
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - json:
      field: json.properties.CrlDistributionPointUrls
      if: ctx.json?.properties?.CrlDistributionPointUrls != null && ctx.json.properties.CrlDistributionPointUrls instanceof String && ctx.json.properties.CrlDistributionPointUrls != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.CrlDistributionPointUrls
      target_field: m365_defender.event.crl_distribution_point_urls
      ignore_missing: true
  - set:
      field: json.properties.IsRootSignerMicrosoft
      value: true
      if: ctx.json?.properties?.IsRootSignerMicrosoft == 1 || ctx.json?.properties?.IsRootSignerMicrosoft == '1'
  - set:
      field: json.properties.IsRootSignerMicrosoft
      value: false
      if: ctx.json?.properties?.IsRootSignerMicrosoft == 0 || ctx.json?.properties?.IsRootSignerMicrosoft == '0'
  - convert:
      field: json.properties.IsRootSignerMicrosoft
      target_field: m365_defender.event.is_root_signer_microsoft
      if: ctx.json?.properties?.IsRootSignerMicrosoft != ''
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: json.properties.IsSigned
      value: true
      if: ctx.json?.properties?.IsSigned == 1 || ctx.json?.properties?.IsSigned == '1'
  - set:
      field: json.properties.IsSigned
      value: false
      if: ctx.json?.properties?.IsSigned == 0 || ctx.json?.properties?.IsSigned == '0'
  - convert:
      field: json.properties.IsSigned
      target_field: m365_defender.event.is_signed
      if: ctx.json?.properties?.IsSigned != ''
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: json.properties.IsTrusted
      value: true
      if: ctx.json?.properties?.IsTrusted == 1 || ctx.json?.properties?.IsTrusted == '1'
  - set:
      field: json.properties.IsTrusted
      value: false
      if: ctx.json?.properties?.IsTrusted == 0 || ctx.json?.properties?.IsTrusted == '0'
  - convert:
      field: json.properties.IsTrusted
      target_field: m365_defender.event.is_trusted
      if: ctx.json?.properties?.IsTrusted != ''
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.Issuer
      target_field: m365_defender.event.issuer
      ignore_missing: true
  - rename:
      field: json.properties.IssuerHash
      target_field: m365_defender.event.issuer_hash
      ignore_missing: true
  - append:
      field: related.hash
      value: '{{{m365_defender.event.issuer_hash}}}'
      if: ctx.m365_defender?.event?.issuer_hash != null
      allow_duplicates: false
  - rename:
      field: json.properties.SignatureType
      target_field: m365_defender.event.signature_type
      ignore_missing: true
  - rename:
      field: json.properties.Signer
      target_field: m365_defender.event.signer
      ignore_missing: true
  - rename:
      field: json.properties.SignerHash
      target_field: m365_defender.event.signer_hash
      ignore_missing: true
  - append:
      field: related.hash
      value: '{{{m365_defender.event.signer_hash}}}'
      if: ctx.m365_defender?.event?.signer_hash != null
      allow_duplicates: false
  - rename:
      field: json.properties.FileOriginReferrerUrl
      target_field: m365_defender.event.file.origin_referrer_url
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessIntegrityLevel
      target_field: m365_defender.event.initiating_process.integrity_level
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessTokenElevation
      target_field: m365_defender.event.initiating_process.token_elevation
      ignore_missing: true
  - set:
      field: json.properties.IsAzureInfoProtectionApplied
      value: true
      if: ctx.json?.properties?.IsAzureInfoProtectionApplied == 1 || ctx.json?.properties?.IsAzureInfoProtectionApplied == '1'
  - set:
      field: json.properties.IsAzureInfoProtectionApplied
      value: false
      if: ctx.json?.properties?.IsAzureInfoProtectionApplied == 0 || ctx.json?.properties?.IsAzureInfoProtectionApplied == '0'
  - convert:
      field: json.properties.IsAzureInfoProtectionApplied
      target_field: m365_defender.event.is_azure_info_protection_applied
      if: ctx.json?.properties?.IsAzureInfoProtectionApplied != ''
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.PreviousFileName
      target_field: m365_defender.event.previous.file_name
      ignore_missing: true
  - rename:
      field: json.properties.PreviousFolderPath
      target_field: m365_defender.event.previous.folder_path
      ignore_missing: true
  - rename:
      field: json.properties.SensitivityLabel
      target_field: m365_defender.event.sensitivity.label
      ignore_missing: true
  - rename:
      field: json.properties.SensitivitySubLabel
      target_field: m365_defender.event.sensitivity.sub_label
      ignore_missing: true
  - rename:
      field: json.properties.ShareName
      target_field: m365_defender.event.share_name
      ignore_missing: true
  - rename:
      field: json.properties.FailureReason
      target_field: m365_defender.event.failure_reason
      ignore_missing: true
  - set:
      field: event.outcome
      value: 'success'
      if: (ctx.m365_defender?.event?.failure_reason == null || ctx.m365_defender.event.failure_reason == '') && ctx.m365_defender?.event?.category?.toLowerCase().contains('devicelogonevents')
  - set:
      field: event.outcome
      value: 'failure'
      if: (ctx.m365_defender?.event?.failure_reason != null && ctx.m365_defender.event.failure_reason != '') && ctx.m365_defender?.event?.category?.toLowerCase().contains('devicelogonevents')
  - rename:
      field: json.properties.AadDeviceId
      target_field: m365_defender.event.aad_device_id
      ignore_missing: true
  - rename:
      field: json.properties.DeviceSubType
      target_field: m365_defender.event.device.sub_type
      ignore_missing: true
  - set:
      field: json.properties.IsAzureADJoined
      value: true
      if: ctx.json?.properties?.IsAzureADJoined == 1 || ctx.json?.properties?.IsAzureADJoined == '1'
  - set:
      field: json.properties.IsAzureADJoined
      value: false
      if: ctx.json?.properties?.IsAzureADJoined == 0 || ctx.json?.properties?.IsAzureADJoined == '0'
  - convert:
      field: json.properties.IsAzureADJoined
      target_field: m365_defender.event.is_azure_ad_joined
      if: ctx.json?.properties?.IsAzureADJoined != ''
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.JoinType
      target_field: m365_defender.event.join_type
      ignore_missing: true
  - json:
      field: json.properties.LoggedOnUsers
      if: ctx.json?.properties?.LoggedOnUsers != null && ctx.json.properties.LoggedOnUsers instanceof String && ctx.json.properties.LoggedOnUsers != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.LoggedOnUsers
      target_field: m365_defender.event.logged_on_users
      ignore_missing: true
  - rename:
      field: json.properties.MachineGroup
      target_field: m365_defender.event.machine_group
      ignore_missing: true
  - json:
      field: json.properties.MergedDeviceIds
      if: ctx.json?.properties?.MergedDeviceIds != null && ctx.json.properties.MergedDeviceIds instanceof String && ctx.json.properties.MergedDeviceIds != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.MergedDeviceIds
      target_field: m365_defender.event.merged_device_ids
      ignore_missing: true
  - rename:
      field: json.properties.MergedToDeviceId
      target_field: m365_defender.event.merged_to_device_id
      ignore_missing: true
  - rename:
      field: json.properties.Model
      target_field: m365_defender.event.model
      ignore_missing: true
  - rename:
      field: json.properties.OnboardingStatus
      target_field: m365_defender.event.onboarding_status
      ignore_missing: true
  - rename:
      field: json.properties.OSBuild
      target_field: m365_defender.event.os.build
      ignore_missing: true
  - rename:
      field: json.properties.OSVersionInfo
      target_field: m365_defender.event.os.version_info
      ignore_missing: true
  - rename:
      field: json.properties.RegistryDeviceTag
      target_field: m365_defender.event.registry.device_tag
      ignore_missing: true
  - rename:
      field: json.properties.Vendor
      target_field: m365_defender.event.vendor
      ignore_missing: true
  - set:
      field: json.properties.IsLocalAdmin
      value: true
      if: ctx.json?.properties?.IsLocalAdmin == 1 || ctx.json?.properties?.IsLocalAdmin == '1'
  - set:
      field: json.properties.IsLocalAdmin
      value: false
      if: ctx.json?.properties?.IsLocalAdmin == 0 || ctx.json?.properties?.IsLocalAdmin == '0'
  - convert:
      field: json.properties.IsLocalAdmin
      target_field: m365_defender.event.is_local_admin
      if: ctx.json?.properties?.IsLocalAdmin != ''
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.LogonType
      target_field: m365_defender.event.logon.type
      ignore_missing: true
  - rename:
      field: json.properties.Protocol
      target_field: m365_defender.event.protocol
      ignore_missing: true
  - set:
      field: network.protocol
      copy_from: m365_defender.event.protocol
      ignore_empty_value: true
  - lowercase:
      field: network.protocol
      ignore_missing: true
  - rename:
      field: json.properties.RemoteIPType
      target_field: m365_defender.event.remote.ip_type
      ignore_missing: true
  - rename:
      field: json.properties.RegistryValueType
      target_field: m365_defender.event.registry.value_type
      ignore_missing: true
  - rename:
      field: json.properties.LocalIPType
      target_field: m365_defender.event.local.ip_type
      ignore_missing: true
  - json:
      field: json.properties.ConnectedNetworks
      if: ctx.json?.properties?.ConnectedNetworks != null && ctx.json.properties.ConnectedNetworks instanceof String && ctx.json.properties.ConnectedNetworks != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.ConnectedNetworks
      target_field: m365_defender.event.connected_networks
      ignore_missing: true
  - json:
      field: json.properties.DefaultGateways
      if: ctx.json?.properties?.DefaultGateways != null && ctx.json.properties.DefaultGateways instanceof String && ctx.json.properties.DefaultGateways != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.DefaultGateways
      target_field: m365_defender.event.default_gateways
      ignore_missing: true
  - json:
      field: json.properties.DnsAddresses
      if: ctx.json?.properties?.DnsAddresses != null && ctx.json.properties.DnsAddresses instanceof String && ctx.json.properties.DnsAddresses != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.DnsAddresses
      target_field: m365_defender.event.dns_addresses
      ignore_missing: true
  - json:
      field: json.properties.IPAddresses
      if: ctx.json?.properties?.IPAddresses != null && ctx.json.properties.IPAddresses instanceof String && ctx.json.properties.IPAddresses != ''
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.properties.IPAddresses
      target_field: m365_defender.event.ip_addresses
      ignore_missing: true
  - convert:
      field: json.properties.IPv4Dhcp
      target_field: m365_defender.event.ipv4_dhcp
      if: ctx.json?.properties?.IPv4Dhcp != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      value: '{{{m365_defender.event.ipv4_dhcp}}}'
      if: ctx.m365_defender?.event?.ipv4_dhcp != null
      allow_duplicates: false
  - convert:
      field: json.properties.IPv6Dhcp
      target_field: m365_defender.event.ipv6_dhcp
      if: ctx.json?.properties?.IPv6Dhcp != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - append:
      field: related.ip
      value: '{{{m365_defender.event.ipv6_dhcp}}}'
      if: ctx.m365_defender?.event?.ipv6_dhcp != null
      allow_duplicates: false
  - rename:
      field: json.properties.NetworkAdapterStatus
      target_field: m365_defender.event.network.adapter_status
      ignore_missing: true
  - rename:
      field: json.properties.NetworkAdapterType
      target_field: m365_defender.event.network.adapter_type
      ignore_missing: true
  - rename:
      field: json.properties.NetworkAdapterVendor
      target_field: m365_defender.event.network.adapter_vendor
      ignore_missing: true
  - rename:
      field: json.properties.TunnelType
      target_field: m365_defender.event.tunnel_type
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessSignatureStatus
      target_field: m365_defender.event.initiating_process.signature_status
      ignore_missing: true
  - rename:
      field: json.properties.InitiatingProcessSignerType
      target_field: m365_defender.event.initiating_process.signer_type
      ignore_missing: true
  - rename:
      field: json.properties.ProcessIntegrityLevel
      target_field: m365_defender.event.process.integrity_level
      ignore_missing: true
  - rename:
      field: json.properties.PreviousRegistryKey
      target_field: m365_defender.event.previous.registry_key
      ignore_missing: true
  - rename:
      field: json.properties.PreviousRegistryValueData
      target_field: m365_defender.event.previous.registry_value_data
      ignore_missing: true
  - rename:
      field: json.properties.PreviousRegistryValueName
      target_field: m365_defender.event.previous.registry_value_name
      ignore_missing: true
  - remove:
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      field:
        - m365_defender.event.folder_path
        - m365_defender.event.md5
        - m365_defender.event.sha1
        - m365_defender.event.sha256
        - m365_defender.event.file.name
        - m365_defender.event.file.size
        - m365_defender.event.device.name
        - m365_defender.event.device.id
        - m365_defender.event.initiating_process.command_line
        - m365_defender.event.initiating_process.md5
        - m365_defender.event.initiating_process.sha1
        - m365_defender.event.initiating_process.sha256
        - m365_defender.event.initiating_process.parent_id
        - m365_defender.event.initiating_process.id
        - m365_defender.event.registry.key
        - m365_defender.event.registry.value_name
        - m365_defender.event.file.origin_ip
        - m365_defender.event.public_ip.value
        - m365_defender.event.local.ip
        - m365_defender.event.remote.ip
        - m365_defender.event.request.source_ip
        - m365_defender.event.local.port
        - m365_defender.event.remote.port
        - m365_defender.event.request.source_port
        - m365_defender.event.account.name
        - m365_defender.event.certificate.expiration_time
        - m365_defender.event.certificate.serial_number
        - m365_defender.event.protocol
        - m365_defender.event.request.protocol
        - m365_defender.event.request.account_domain
        - m365_defender.event.request.account_name
        - m365_defender.event.os.architecture
        - m365_defender.event.os.platform
        - m365_defender.event.os.distribution
        - m365_defender.event.os.version
        - m365_defender.event.device.type
        - m365_defender.event.account.domain
        - m365_defender.event.mac_address
        - m365_defender.event.client_version
        - m365_defender.event.device.category
        - m365_defender.event.action.type
      ignore_missing: true
