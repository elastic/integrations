---
description: Pipeline for parsing Cloudflare Network Analytics logs.
processors:
  - set:
      field: ecs.version
      value: '8.2.0'
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: json
      ignore_failure: true
  - set:
      field: event.category
      value: [network]
  - set:
      field: event.kind
      value: event
  - set:
      field: event.type
      value: [info]
  - date:
      field: json.Datetime
      formats:
        - ISO8601
        - uuuu-MM-dd'T'HH:mm:ssX
        - uuuu-MM-dd'T'HH:mm:ss.SSSX
        - yyyy-MM-dd'T'HH:mm:ssZ
        - yyyy-MM-dd'T'HH:mm:ss.SSSZ
        - UNIX_MS
      timezone: UTC
      ignore_failure: true
  - set:
      field: cloudflare_logpush.network_analytics.timestamp
      copy_from: '@timestamp'
      ignore_failure: true
  - set:
      field: cloudflare_logpush.network_analytics.outcome
      value: success
      if: ctx.json?.Outcome == 'pass'
  - set:
      field: cloudflare_logpush.network_analytics.outcome
      value: failure
      if: ctx.json?.Outcome == 'drop'
  - set:
      field: event.outcome
      copy_from: cloudflare_logpush.network_analytics.outcome
      ignore_failure: true
  - convert:
      field: json.DestinationASN
      target_field: cloudflare_logpush.network_analytics.destination.asn
      type: long
      ignore_failure: true
  - set:
      field: destination.as.number
      copy_from: cloudflare_logpush.network_analytics.destination.asn
      ignore_failure: true
  - convert:
      field: json.IPDestinationAddress
      target_field: cloudflare_logpush.network_analytics.destination.ip
      type: ip
      ignore_failure: true
  - set:
      field: destination.ip
      copy_from: cloudflare_logpush.network_analytics.destination.ip
      ignore_failure: true
  - convert:
      field: json.DestinationPort
      target_field: cloudflare_logpush.network_analytics.destination.port
      type: long
      ignore_failure: true
  - set:
      field: destination.port
      copy_from: cloudflare_logpush.network_analytics.destination.port
      ignore_failure: true
  - rename:
      field: json.Direction
      target_field: cloudflare_logpush.network_analytics.direction
      ignore_missing: true
  - set:
      field: network.direction
      copy_from: cloudflare_logpush.network_analytics.direction
      ignore_failure: true
  - rename:
      field: json.IPProtocolName
      target_field: cloudflare_logpush.network_analytics.ip.protocol.name
      ignore_missing: true
  - set:
      field: network.transport
      copy_from: cloudflare_logpush.network_analytics.ip.protocol.name
      ignore_failure: true
  - lowercase:
      field: network.transport
      ignore_missing: true
  - convert:
      field: json.IPSourceAddress
      target_field: cloudflare_logpush.network_analytics.source.ip
      type: ip
      ignore_failure: true
  - set:
      field: source.ip
      copy_from: cloudflare_logpush.network_analytics.source.ip
      ignore_failure: true
  - convert:
      field: json.SourceASN
      target_field: cloudflare_logpush.network_analytics.source.asn
      type: long
      ignore_failure: true
  - set:
      field: source.as.number
      copy_from: cloudflare_logpush.network_analytics.source.asn
      ignore_failure: true
  - convert:
      field: json.SourcePort
      target_field: cloudflare_logpush.network_analytics.source.port
      type: long
      ignore_failure: true
  - set:
      field: source.port
      copy_from: cloudflare_logpush.network_analytics.source.port
      ignore_failure: true
  - rename:
      field: json.RuleID
      target_field: cloudflare_logpush.network_analytics.rule.id
      ignore_missing: true
  - set:
      field: rule.id
      copy_from: cloudflare_logpush.network_analytics.rule.id
      ignore_failure: true
  - rename:
      field: json.AttackCampaignID
      target_field: cloudflare_logpush.network_analytics.attack.campaign.id
      ignore_missing: true
  - rename:
      field: json.AttackID
      target_field: cloudflare_logpush.network_analytics.attack.id
      ignore_missing: true
  - rename:
      field: json.ColoCountry
      target_field: cloudflare_logpush.network_analytics.colo.country
      ignore_missing: true
  - rename:
      field: json.ColoGeoHash
      target_field: cloudflare_logpush.network_analytics.colo.geohash
      ignore_missing: true
  - convert:
      field: json.ColoID
      target_field: cloudflare_logpush.network_analytics.colo.id
      type: long
      ignore_failure: true
  - rename:
      field: json.ColoName
      target_field: cloudflare_logpush.network_analytics.colo.name
      ignore_missing: true
  - rename:
      field: json.DestinationASNDescription
      target_field: cloudflare_logpush.network_analytics.destination.as.number.description
      ignore_missing: true
  - rename:
      field: json.DestinationCountry
      target_field: cloudflare_logpush.network_analytics.destination.country
      ignore_missing: true
  - rename:
      field: json.DestinationGeoHash
      target_field: cloudflare_logpush.network_analytics.destination.geohash
      ignore_missing: true
  - convert:
      field: json.GREChecksum
      target_field: cloudflare_logpush.network_analytics.gre.checksum
      type: long
      ignore_failure: true
  - convert:
      field: json.GREEthertype
      target_field: cloudflare_logpush.network_analytics.gre.ether.type
      type: long
      ignore_failure: true
  - convert:
      field: json.GREHeaderLength
      target_field: cloudflare_logpush.network_analytics.gre.header.length
      type: long
      ignore_failure: true
  - convert:
      field: json.GREKey
      target_field: cloudflare_logpush.network_analytics.gre.key
      type: long
      ignore_failure: true
  - convert:
      field: json.GRESequenceNumber
      target_field: cloudflare_logpush.network_analytics.gre.sequence.number
      type: long
      ignore_failure: true
  - convert:
      field: json.GREVersion
      target_field: cloudflare_logpush.network_analytics.gre.version
      type: long
      ignore_failure: true
  - convert:
      field: json.ICMPChecksum
      target_field: cloudflare_logpush.network_analytics.icmp.checksum
      type: long
      ignore_failure: true
  - convert:
      field: json.ICMPCode
      target_field: cloudflare_logpush.network_analytics.icmp.code
      type: long
      ignore_failure: true
  - convert:
      field: json.ICMPType
      target_field: cloudflare_logpush.network_analytics.icmp.type
      type: long
      ignore_failure: true
  - rename:
      field: json.IPDestinationSubnet
      target_field: cloudflare_logpush.network_analytics.ip.destination.subnet
      ignore_missing: true
  - convert:
      field: json.IPFragmentOffset
      target_field: cloudflare_logpush.network_analytics.ip.fragment.offset
      type: long
      ignore_failure: true
  - convert:
      field: json.IPHeaderLength
      target_field: cloudflare_logpush.network_analytics.ip.header.length
      type: long
      ignore_failure: true
  - convert:
      field: json.IPMoreFragments
      target_field: cloudflare_logpush.network_analytics.ip.more.fragments
      type: long
      ignore_failure: true
  - convert:
      field: json.IPProtocol
      target_field: cloudflare_logpush.network_analytics.ip.protocol.value
      type: long
      ignore_failure: true
  - rename:
      field: json.IPSourceSubnet
      target_field: cloudflare_logpush.network_analytics.ip.source.subnet
      ignore_missing: true
  - convert:
      field: json.IPTotalLength
      target_field: cloudflare_logpush.network_analytics.ip.total.length.value
      type: long
      ignore_failure: true
  - convert:
      field: json.IPTotalLengthBuckets
      target_field: cloudflare_logpush.network_analytics.ip.total.length.buckets
      type: long
      ignore_failure: true
  - convert:
      field: json.IPTtl
      target_field: cloudflare_logpush.network_analytics.ip.ttl.value
      type: long
      ignore_failure: true
  - convert:
      field: json.IPTtlBuckets
      target_field: cloudflare_logpush.network_analytics.ip.ttl.buckets
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv4Checksum
      target_field: cloudflare_logpush.network_analytics.ipv4.checksum
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv4DontFragment
      target_field: cloudflare_logpush.network_analytics.ipv4.dont_fragment
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv4Dscp
      target_field: cloudflare_logpush.network_analytics.ipv4.dscp
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv4Ecn
      target_field: cloudflare_logpush.network_analytics.ipv4.ecn
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv4Identification
      target_field: cloudflare_logpush.network_analytics.ipv4.identification
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv4Options
      target_field: cloudflare_logpush.network_analytics.ipv4.options
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv6Dscp
      target_field: cloudflare_logpush.network_analytics.ipv6.dscp
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv6Ecn
      target_field: cloudflare_logpush.network_analytics.ipv6.ecn
      type: long
      ignore_failure: true
  - rename:
      field: json.IPv6ExtensionHeaders
      target_field: cloudflare_logpush.network_analytics.ipv6.extension_headers
      ignore_missing: true
  - convert:
      field: json.IPv6FlowLabel
      target_field: cloudflare_logpush.network_analytics.ipv6.flow_label
      type: long
      ignore_failure: true
  - convert:
      field: json.IPv6Identification
      target_field: cloudflare_logpush.network_analytics.ipv6.identification
      type: long
      ignore_failure: true
  - rename:
      field: json.MitigationReason
      target_field: cloudflare_logpush.network_analytics.mitigation.reason
      ignore_missing: true
  - rename:
      field: json.MitigationScope
      target_field: cloudflare_logpush.network_analytics.mitigation.scope
      ignore_missing: true
  - rename:
      field: json.MitigationSystem
      target_field: cloudflare_logpush.network_analytics.mitigation.system
      ignore_missing: true
  - rename:
      field: json.ProtocolState
      target_field: cloudflare_logpush.network_analytics.protocol_state
      ignore_missing: true
  - rename:
      field: json.RulesetID
      target_field: cloudflare_logpush.network_analytics.rule.set.id
      ignore_missing: true
  - rename:
      field: json.RulesetOverrideID
      target_field: cloudflare_logpush.network_analytics.rule.set.override.id
      ignore_missing: true
  - convert:
      field: json.SampleInterval
      target_field: cloudflare_logpush.network_analytics.sample_interval
      type: long
      ignore_failure: true
  - rename:
      field: json.SourceASNDescription
      target_field: cloudflare_logpush.network_analytics.source.as.number.description
      ignore_missing: true
  - rename:
      field: json.SourceCountry
      target_field: cloudflare_logpush.network_analytics.source.country
      ignore_missing: true
  - rename:
      field: json.SourceGeoHash
      target_field: cloudflare_logpush.network_analytics.source.geohash
      ignore_missing: true
  - convert:
      field: json.TCPAcknowledgementNumber
      target_field: cloudflare_logpush.network_analytics.tcp.acknowledgement_number
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPChecksum
      target_field: cloudflare_logpush.network_analytics.tcp.checksum
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPDataOffset
      target_field: cloudflare_logpush.network_analytics.tcp.dataoffset
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPFlags
      target_field: cloudflare_logpush.network_analytics.tcp.flags.value
      type: long
      ignore_failure: true
  - rename:
      field: json.TCPFlagsString
      target_field: cloudflare_logpush.network_analytics.tcp.flags.string
      ignore_missing: true
  - convert:
      field: json.TCPMss
      target_field: cloudflare_logpush.network_analytics.tcp.mss
      type: long
      ignore_failure: true
  - rename:
      field: json.TCPOptions
      target_field: cloudflare_logpush.network_analytics.tcp.options
      ignore_missing: true
  - convert:
      field: json.TCPSackBlocks
      target_field: cloudflare_logpush.network_analytics.tcp.sack.blocks
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPSacksPermitted
      target_field: cloudflare_logpush.network_analytics.tcp.sack.permitted
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPSequenceNumber
      target_field: cloudflare_logpush.network_analytics.tcp.sequence_number
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPTimestampEcr
      target_field: cloudflare_logpush.network_analytics.tcp.timestamp.ecr
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPTimestampValue
      target_field: cloudflare_logpush.network_analytics.tcp.timestamp.value
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPUrgentPointer
      target_field: cloudflare_logpush.network_analytics.tcp.urgent_pointer
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPWindowScale
      target_field: cloudflare_logpush.network_analytics.tcp.window.scale
      type: long
      ignore_failure: true
  - convert:
      field: json.TCPWindowSize
      target_field: cloudflare_logpush.network_analytics.tcp.window.size
      type: long
      ignore_failure: true
  - convert:
      field: json.UDPChecksum
      target_field: cloudflare_logpush.network_analytics.udp.checksum
      type: long
      ignore_failure: true
  - convert:
      field: json.UDPPayloadLength
      target_field: cloudflare_logpush.network_analytics.udp.payload_length
      type: long
      ignore_failure: true
  - rename:
      field: json.Verdict
      target_field: cloudflare_logpush.network_analytics.verdict
      ignore_missing: true
  - append:
      field: related.hash
      value: '{{{cloudflare_logpush.network_analytics.source.geohash}}}'
      if: ctx.cloudflare_logpush?.network_analytics?.source?.geohash != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      field: related.hash
      value: '{{{cloudflare_logpush.network_analytics.destination.geohash}}}'
      if: ctx.cloudflare_logpush?.network_analytics?.destination?.geohash != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      field: related.hash
      value: '{{{cloudflare_logpush.network_analytics.colo.geohash}}}'
      if: ctx.cloudflare_logpush?.network_analytics?.colo?.geohash != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      field: related.ip
      value: '{{{source.ip}}}'
      if: ctx.source?.ip != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      field: related.ip
      value: '{{{destination.ip}}}'
      if: ctx.destination?.ip != null
      allow_duplicates: false
      ignore_failure: true
  - community_id:
      target_field: network.community_id
      ignore_failure: true
  - remove:
      field: json
      ignore_missing: true
  - remove:
      field:
        - cloudflare_logpush.network_analytics.timestamp
        - cloudflare_logpush.network_analytics.outcome
        - cloudflare_logpush.network_analytics.destination.asn
        - cloudflare_logpush.network_analytics.destination.ip
        - cloudflare_logpush.network_analytics.destination.port
        - cloudflare_logpush.network_analytics.direction
        - cloudflare_logpush.network_analytics.ip.protocol.name
        - cloudflare_logpush.network_analytics.source.ip
        - cloudflare_logpush.network_analytics.source.asn
        - cloudflare_logpush.network_analytics.source.port
        - cloudflare_logpush.network_analytics.rule.id
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      ignore_failure: true
      ignore_missing: true
  - remove:
      field: event.original
      if: ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))
      ignore_failure: true
      ignore_missing: true
  - script:
        description: Drops null/empty values recursively.
        lang: painless
        source:
          boolean dropEmptyFields(Object object) {
            if (object == null || object == "") {
              return true;
            } else if (object instanceof Map) {
              ((Map) object).values().removeIf(value -> dropEmptyFields(value));
              return (((Map) object).size() == 0);
            } else if (object instanceof List) {
              ((List) object).removeIf(value -> dropEmptyFields(value));
              return (((List) object).length == 0);
            }
            return false;
          }
          dropEmptyFields(ctx);
on_failure:
- set:
    field: error.message
    value: '{{{ _ingest.on_failure_message }}}'
