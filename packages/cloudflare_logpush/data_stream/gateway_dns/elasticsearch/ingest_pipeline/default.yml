---
description: Pipeline for parsing Cloudflare Gateway DNS logs.
processors:
  - set:
      field: ecs.version
      value: 8.11.0
  - rename:
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      field: event.original
      target_field: json
  - set:
      field: event.category
      value: [network]
  - set:
      field: event.kind
      value: event
  - set:
      field: event.type
      value: [info]
# ECS fields
  - script:
      lang: painless
      tag: painless_datetime_to_milli
      if: ctx.json?.Datetime != null
      source: |
        try {
          long t;
          if (ctx.json.Datetime instanceof String) {
            t = Long.parseLong(ctx.json.Datetime);
          } else if (ctx.json.Datetime instanceof Number) {
            t = (long)(ctx.json.Datetime);
          } else {
            return;
          }
          if (t > (long)(1e18)) {
            ctx.json.Datetime = t/(long)(1e6)
          } else if (t < (long)(1e10))  {
            ctx.json.Datetime = t*(long)(1e3)
          }
        }
        catch (Exception e) {}
  - date:
      field: json.Datetime
      if: ctx.json?.Datetime != null && ctx.json.Datetime != ''
      formats:
        - UNIX_MS
        - ISO8601
        - yyyy-MM-dd'T'HH:mm:ssZ
      timezone: UTC
      on_failure:
      - append:
          field: error.message
          value: "{{{_ingest.on_failure_message}}}"
  - set:
      field: cloudflare_logpush.gateway_dns.timestamp
      copy_from: "@timestamp"
  - rename:
      field: json.DeviceID
      target_field: cloudflare_logpush.gateway_dns.host.id
      ignore_missing: true
  - set:
      field: host.id
      copy_from: cloudflare_logpush.gateway_dns.host.id
      ignore_empty_value: true
  - rename:
      field: json.DeviceName
      target_field: cloudflare_logpush.gateway_dns.host.name
      ignore_missing: true
  - set:
      field: host.name
      copy_from: cloudflare_logpush.gateway_dns.host.name
      ignore_empty_value: true
  - rename:
      field: json.Email
      target_field: cloudflare_logpush.gateway_dns.user.email
      ignore_missing: true
  - set:
      field: user.email
      copy_from: cloudflare_logpush.gateway_dns.user.email
      ignore_empty_value: true
  - rename:
      field: json.DstIP
      target_field: cloudflare_logpush.gateway_dns.destination.ip
      ignore_missing: true
  - set:
      field: destination.ip
      copy_from: cloudflare_logpush.gateway_dns.destination.ip
      ignore_empty_value: true
# Geo enrichment (destination IP)
  - geoip:
      field: destination.ip
      target_field: destination.geo
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: destination.ip
      target_field: destination.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: destination.as.asn
      target_field: destination.as.number
      ignore_missing: true
  - rename:
      field: destination.as.organization_name
      target_field: destination.as.organization.name
      ignore_missing: true
  - rename:
      field: json.DstPort
      target_field: cloudflare_logpush.gateway_dns.destination.port
      ignore_missing: true
  - set:
      field: destination.port
      copy_from: cloudflare_logpush.gateway_dns.destination.port
      ignore_empty_value: true
  - rename:
      field: json.Protocol
      target_field: cloudflare_logpush.gateway_dns.protocol
      ignore_missing: true
  - set:
      field: network.protocol
      copy_from: cloudflare_logpush.gateway_dns.protocol
      ignore_empty_value: true
  - rename:
      field: json.QueryName
      target_field: cloudflare_logpush.gateway_dns.question.name
      ignore_missing: true
  - set:
      field: dns.question.name
      copy_from: cloudflare_logpush.gateway_dns.question.name
      ignore_empty_value: true
  - rename:
      field: json.QueryTypeName
      target_field: cloudflare_logpush.gateway_dns.question.type
      ignore_missing: true
  - set:
      field: dns.question.type
      copy_from: cloudflare_logpush.gateway_dns.question.type
      ignore_empty_value: true
# Set event.outcome based on the response code
  - set:
      field: event.outcome
      value: success
      if: ctx.json?.RCode != null && ctx.json?.RCode == 0
  - set:
      field: event.outcome
      value: failure
      if: ctx.json?.RCode != null && ctx.json?.RCode > 0
  - convert:
      field: json.RCode
      target_field: cloudflare_logpush.gateway_dns.response_code
      if: ctx.json?.RCode != ''
      type: string
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      field: dns.response_code
      copy_from: cloudflare_logpush.gateway_dns.response_code
  - rename:
      field: json.RData
      target_field: cloudflare_logpush.gateway_dns.answers
      ignore_missing: true
  - set:
      field: dns.answers
      copy_from: cloudflare_logpush.gateway_dns.answers
      ignore_empty_value: true
  - rename:
      field: json.ResolvedIPs
      target_field: cloudflare_logpush.gateway_dns.resolved_ip
      ignore_missing: true
  - set:
      field: dns.resolved_ip
      copy_from: cloudflare_logpush.gateway_dns.resolved_ip
      ignore_empty_value: true
  - rename:
      field: json.SrcIP
      target_field: cloudflare_logpush.gateway_dns.source.ip
      ignore_missing: true
  - set:
      field: source.ip
      copy_from: cloudflare_logpush.gateway_dns.source.ip
      ignore_empty_value: true
# Geo enrichment (source IP)
  - geoip:
      field: source.ip
      target_field: source.geo
  - geoip:
      database_file: GeoLite2-ASN.mmdb
      field: source.ip
      target_field: source.as
      properties:
        - asn
        - organization_name
      ignore_missing: true
  - rename:
      field: source.as.asn
      target_field: source.as.number
      ignore_missing: true
  - rename:
      field: source.as.organization_name
      target_field: source.as.organization.name
      ignore_missing: true
  - rename:
      field: json.SrcPort
      target_field: cloudflare_logpush.gateway_dns.source.port
      ignore_missing: true
  - set:
      field: source.port
      copy_from: cloudflare_logpush.gateway_dns.source.port
  - rename:
      field: json.TimeZone
      target_field: cloudflare_logpush.gateway_dns.timezone
      ignore_missing: true
  - set:
      field: event.timezone
      copy_from: cloudflare_logpush.gateway_dns.timezone
  - rename:
      field: json.UserID
      target_field: cloudflare_logpush.gateway_dns.user.id
      ignore_missing: true
  - set:
      field: user.id
      copy_from: cloudflare_logpush.gateway_dns.user.id
# Custom fields
  - rename:
      field: json.ColoCode
      target_field: cloudflare_logpush.gateway_dns.colo.code
      ignore_missing: true
  - rename:
      field: json.ColoID
      target_field: cloudflare_logpush.gateway_dns.colo.id
      ignore_missing: true
  - rename:
      field: json.AccountID
      target_field: cloudflare_logpush.gateway_dns.account_id
      ignore_missing: true
  - rename:
      field: json.ApplicationID
      target_field: cloudflare_logpush.gateway_dns.application_id
      ignore_missing: true
  - rename:
      field: json.ApplicationName
      target_field: cloudflare_logpush.gateway_dns.application_name
      ignore_missing: true
  - convert:
      field: json.AuthoritativeNameServerIPs
      target_field: cloudflare_logpush.gateway_dns.authoritative_name_server_ip
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.CNAMECategoryIDs
      target_field: cloudflare_logpush.gateway_dns.cname_category.ids
      ignore_missing: true
  - rename:
      field: json.CNAMECategoryNames
      target_field: cloudflare_logpush.gateway_dns.cname_category.names
      ignore_missing: true
  - rename:
      field: json.CNAMEs
      target_field: cloudflare_logpush.gateway_dns.cname
      ignore_missing: true
  - rename:
      field: json.CNAMEsReversed
      target_field: cloudflare_logpush.gateway_dns.cname_reversed
      ignore_missing: true
  - convert:
      field: json.CustomResolveDurationMs
      target_field: cloudflare_logpush.gateway_dns.custom_resolver.duration_milli
      type: long
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.CustomResolverAddress
      target_field: cloudflare_logpush.gateway_dns.custom_resolver.address
      ignore_missing: true
  - rename:
      field: json.CustomResolverPolicyID
      target_field: cloudflare_logpush.gateway_dns.custom_resolver.policy.ids
      ignore_missing: true
  - rename:
      field: json.CustomResolverPolicyName
      target_field: cloudflare_logpush.gateway_dns.custom_resolver.policy.names
      ignore_missing: true
  - rename:
      field: json.CustomResolverResponse
      target_field: cloudflare_logpush.gateway_dns.custom_resolver.response
      ignore_missing: true
  - rename:
      field: json.DoHSubdomain
      target_field: cloudflare_logpush.gateway_dns.doh_subdomain
      ignore_missing: true
  - rename:
      field: json.DoTSubdomain
      target_field: cloudflare_logpush.gateway_dns.dot_subdomain
      ignore_missing: true
  - rename:
      field: json.EDEErrors
      target_field: cloudflare_logpush.gateway_dns.extended_dns_error_codes
      ignore_missing: true
  - rename:
      field: json.InitialCategoryIDs
      target_field: cloudflare_logpush.gateway_dns.initial_category.ids
      ignore_missing: true
  - rename:
      field: json.InitialCategoryNames
      target_field: cloudflare_logpush.gateway_dns.initial_category.names
      ignore_missing: true
  - convert:
      field: json.IsResponseCached
      target_field: cloudflare_logpush.gateway_dns.is_response_cached
      type: boolean
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.Location
      target_field: cloudflare_logpush.gateway_dns.location.name
      ignore_missing: true
  - rename:
      field: json.LocationID
      target_field: cloudflare_logpush.gateway_dns.location.id
      ignore_missing: true
  - rename:
      field: json.MatchedCategoryIDs
      target_field: cloudflare_logpush.gateway_dns.matched.category.ids
      ignore_missing: true
  - rename:
      field: json.MatchedCategoryNames
      target_field: cloudflare_logpush.gateway_dns.matched.category.names
      ignore_missing: true
  - rename:
      field: json.MatchedIndicatorFeedIDs
      target_field: cloudflare_logpush.gateway_dns.matched.indicator_feed.ids
      ignore_missing: true
  - rename:
      field: json.MatchedIndicatorFeedNames
      target_field: cloudflare_logpush.gateway_dns.matched.indicator_feed.names
      ignore_missing: true
  - rename:
      field: json.PolicyID
      target_field: cloudflare_logpush.gateway_dns.policy.id
      ignore_missing: true
  - rename:
      field: json.PolicyName
      target_field: cloudflare_logpush.gateway_dns.policy.name
      ignore_missing: true
  - append:
      field: cloudflare_logpush.gateway_dns.policy.name
      value: '{{{json.Policy}}}'
      if: ctx.cloudflare_logpush?.gateway_dns?.policy?.name != null && ctx.json?.Policy != ctx.cloudflare_logpush?.gateway_dns?.policy?.name
      allow_duplicates: false
  - rename:
      field: json.Policy
      target_field: cloudflare_logpush.gateway_dns.policy.name
      if: ctx.cloudflare_logpush?.gateway_dns?.policy?.name == null
      ignore_missing: true
  - rename:
      field: json.QueryCategoryIDs
      target_field: cloudflare_logpush.gateway_dns.question.category.ids
      ignore_missing: true
  - rename:
      field: json.QueryID
      target_field: cloudflare_logpush.gateway_dns.question.id
      ignore_missing: true
  - rename:
      field: json.QueryIndicatorFeedIDs
      target_field: cloudflare_logpush.gateway_dns.question.indicator_feed.ids
      ignore_missing: true
  - rename:
      field: json.QueryIndicatorFeedNames
      target_field: cloudflare_logpush.gateway_dns.question.indicator_feed.names
      ignore_missing: true
  - rename:
      field: json.QueryCategoryNames
      target_field: cloudflare_logpush.gateway_dns.question.category.names
      ignore_missing: true
  - rename:
      field: json.QueryNameReversed
      target_field: cloudflare_logpush.gateway_dns.question.reversed
      ignore_missing: true
  - rename:
      field: json.QuerySize
      target_field: cloudflare_logpush.gateway_dns.question.size
      ignore_missing: true
  - rename:
      field: json.QueryType
      target_field: cloudflare_logpush.gateway_dns.question.type_id
      ignore_missing: true
  - rename:
      field: json.ResolvedIPCategoryIDs
      target_field: cloudflare_logpush.gateway_dns.resolved_ip_details.category.ids
      ignore_missing: true
  - rename:
      field: json.ResolvedIPCategoryNames
      target_field: cloudflare_logpush.gateway_dns.resolved_ip_details.category.names
      ignore_missing: true
  - rename:
      field: json.ResolvedIPContinentCodes
      target_field: cloudflare_logpush.gateway_dns.resolved_ip_details.continent_codes
      ignore_missing: true
  - rename:
      field: json.ResolvedIPCountryCodes
      target_field: cloudflare_logpush.gateway_dns.resolved_ip_details.country_codes
      ignore_missing: true
  - convert:
      field: json.ResolvedIPs
      target_field: cloudflare_logpush.gateway_dns.resolved_ip_details.ips
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - rename:
      field: json.ResolverPolicyID
      target_field: cloudflare_logpush.gateway_dns.resolver.policy.ids
      ignore_missing: true
  - rename:
      field: json.ResolverPolicyName
      target_field: cloudflare_logpush.gateway_dns.resolver.policy.names
      ignore_missing: true
  - rename:
      field: json.ResolverDecision
      target_field: cloudflare_logpush.gateway_dns.resolver_decision
      ignore_missing: true
  - rename:
      field: json.ResourceRecords
      target_field: cloudflare_logpush.gateway_dns.resource_records.object
      ignore_missing: true
  - rename:
      field: json.ResourceRecordsJSON
      target_field: cloudflare_logpush.gateway_dns.resource_records.json
      ignore_missing: true
  - rename:
      field: json.SrcIPContinentCode
      target_field: cloudflare_logpush.gateway_dns.source_id.continent_code
      ignore_missing: true
  - rename:
      field: json.SrcIPCountryCode
      target_field: cloudflare_logpush.gateway_dns.source_id.country_code
      ignore_missing: true
  - rename:
      field: json.TimeZoneInferredMethod
      target_field: cloudflare_logpush.gateway_dns.timezone_inferred_method
      ignore_missing: true
# Create related fields
  - append:
      field: related.ip
      value: '{{{source.ip}}}'
      if: ctx.source?.ip != null
      allow_duplicates: false
  - append:
      field: related.ip
      value: '{{{destination.ip}}}'
      if: ctx.destination?.ip != null
      allow_duplicates: false
  - append:
      field: related.hosts
      value: "{{{host.id}}}"
      if: ctx.host?.id != null
      allow_duplicates: false
  - append:
      field: related.hosts
      value: "{{{host.name}}}"
      if: ctx.host?.name != null
      allow_duplicates: false
  - append:
      field: related.user
      value: '{{{user.id}}}'
      if: ctx.user?.id != null
      allow_duplicates: false
  - append:
      field: related.user
      value: '{{{user.email}}}'
      if: ctx.user?.email != null
      allow_duplicates: false
# Clean resulting event
  - remove:
      field: json
      ignore_missing: true
  - remove:
      field:
        - cloudflare_logpush.gateway_dns.timestamp
        - cloudflare_logpush.gateway_dns.host.id
        - cloudflare_logpush.gateway_dns.host.name
        - cloudflare_logpush.gateway_dns.destination.ip
        - cloudflare_logpush.gateway_dns.destination.port
        - cloudflare_logpush.gateway_dns.protocol
        - cloudflare_logpush.gateway_dns.question.name
        - cloudflare_logpush.gateway_dns.question.type
        - cloudflare_logpush.gateway_dns.response_code
        - cloudflare_logpush.gateway_dns.answers
        - cloudflare_logpush.gateway_dns.resolved_ip
        - cloudflare_logpush.gateway_dns.source.ip
        - cloudflare_logpush.gateway_dns.source.port
        - cloudflare_logpush.gateway_dns.timezone
        - cloudflare_logpush.gateway_dns.user.id
        - cloudflare_logpush.gateway_dns.user.email
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      ignore_failure: true
      ignore_missing: true
  - script:
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - append:
      field: error.message
      value: |-
        Processor "{{ _ingest.on_failure_processor_type }}" in pipeline "{{ _ingest.on_failure_pipeline }}" failed with message "{{ _ingest.on_failure_message }}"
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: tags
      value: preserve_original_event
      allow_duplicates: false
