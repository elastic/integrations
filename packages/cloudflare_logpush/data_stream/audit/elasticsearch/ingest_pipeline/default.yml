---
description: Pipeline for parsing Cloudflare Audit logs.
processors:
  - set:
      tag: set_ecs_version
      field: ecs.version
      value: '8.11.0'
  - rename:
      tag: rename_message
      field: message
      target_field: event.original
      ignore_missing: true
      if: ctx.event?.original == null
  - json:
      tag: json_event_original
      field: event.original
      target_field: json
      ignore_failure: true
  - set:
      tag: set_event_type
      field: event.type
      value: [info]
  - set:
      tag: set_event_kind
      field: event.kind
      value: event
  - set:
      tag: set_event_category
      field: event.category
      value: [authentication]
  - script:
      lang: painless
      tag: painless_when_to_milli
      if: ctx.json?.When != null
      source: |
        try {
          long t;
          if (ctx.json.When instanceof String) {
            t = Long.parseLong(ctx.json.When);
          } else if (ctx.json.When instanceof Number) {
            t = (long)(ctx.json.When);
          } else {
            return;
          }
          if (t > (long)(1e18)) {
            ctx.json.When = t/(long)(1e6)
          } else if (t < (long)(1e10))  {
            ctx.json.When = t*(long)(1e3)
          }
        }
        catch (Exception e) {}
  - date:
      tag: date_json_when
      field: json.When
      if: ctx.json?.When != null && ctx.json.When != ''
      formats:
        - UNIX_MS
        - ISO8601
        - yyyy-MM-dd'T'HH:mm:ssZ
      timezone: UTC
      on_failure:
        - append:
            field: error.message
            value: "{{{_ingest.on_failure_message}}}"
  - set:
      tag: set_cloudflare_logpush_audit_timestamp
      field: cloudflare_logpush.audit.timestamp
      copy_from: '@timestamp'
      ignore_failure: true
  - rename:
      tag: rename_json_actiontype
      field: json.ActionType
      target_field: cloudflare_logpush.audit.action.type
      ignore_missing: true
  - set:
      tag: set_event_action
      field: event.action
      copy_from: cloudflare_logpush.audit.action.type
      ignore_failure: true
  - lowercase:
      tag: lowercase_event_action
      field: event.action
      ignore_missing: true
  - set:
      tag: set_cloudflare_logpush_audit_action_result
      field: cloudflare_logpush.audit.action.result
      value: success
      if: ctx.json?.ActionResult == true
  - set:
      tag: set_cloudflare_logpush_audit_action_result_2
      field: cloudflare_logpush.audit.action.result
      value: failure
      if: ctx.json?.ActionResult != true
  - set:
      tag: set_event_outcome
      field: event.outcome
      copy_from: cloudflare_logpush.audit.action.result
      ignore_failure: true
  - rename:
      tag: rename_json_actoremail
      field: json.ActorEmail
      target_field: cloudflare_logpush.audit.actor.email
      ignore_missing: true
  - set:
      tag: set_user_email
      field: user.email
      copy_from: cloudflare_logpush.audit.actor.email
      ignore_empty_value: true
  - rename:
      tag: rename_json_actorid
      field: json.ActorID
      target_field: cloudflare_logpush.audit.actor.id
      ignore_missing: true
  - set:
      tag: set_user_id
      field: user.id
      copy_from: cloudflare_logpush.audit.actor.id
      ignore_empty_value: true
  - convert:
      tag: convert_json_actorip
      field: json.ActorIP
      target_field: cloudflare_logpush.audit.actor.ip
      if: ctx.json?.ActorIP != ''
      type: ip
      ignore_missing: true
      on_failure:
        - append:
            field: error.message
            value: '{{{_ingest.on_failure_message}}}'
  - set:
      tag: set_source_ip
      field: source.ip
      copy_from: cloudflare_logpush.audit.actor.ip
      ignore_empty_value: true
  - rename:
      tag: rename_json_actortype
      field: json.ActorType
      target_field: cloudflare_logpush.audit.actor.type
      ignore_missing: true
  - rename:
      tag: rename_json_id
      field: json.ID
      target_field: cloudflare_logpush.audit.id
      ignore_missing: true
  - set:
      tag: set_event_id
      field: event.id
      copy_from: cloudflare_logpush.audit.id
      ignore_empty_value: true
  - rename:
      tag: rename_json_interface
      field: json.Interface
      target_field: cloudflare_logpush.audit.interface
      ignore_missing: true
      if: ctx.json?.interface != ''
  - set:
      tag: set_event_provider
      field: event.provider
      copy_from: cloudflare_logpush.audit.interface
      ignore_empty_value: true
  - rename:
      tag: rename_json_metadata
      field: json.Metadata
      target_field: cloudflare_logpush.audit.metadata
      ignore_missing: true
  - rename:
      tag: rename_json_newvalue
      field: json.NewValue
      target_field: cloudflare_logpush.audit.new_value
      if: ctx.json?.NewValue != null
      ignore_missing: true
  - rename:
      tag: rename_json_oldvalue
      field: json.OldValue
      target_field: cloudflare_logpush.audit.old_value
      if: ctx.json?.OldValue != null
      ignore_missing: true
  - rename:
      tag: rename_json_ownerid
      field: json.OwnerID
      target_field: cloudflare_logpush.audit.owner.id
      ignore_missing: true
  - rename:
      tag: rename_json_resourceid
      field: json.ResourceID
      target_field: cloudflare_logpush.audit.resource.id
      ignore_missing: true
  - rename:
      tag: rename_json_resourcetype
      field: json.ResourceType
      target_field: cloudflare_logpush.audit.resource.type
      ignore_missing: true
  - append:
      tag: append_related_user
      field: related.user
      value: '{{{user.id}}}'
      if: ctx.user?.id != null
      allow_duplicates: false
      ignore_failure: true
  - append:
      tag: append_related_ip
      field: related.ip
      value: '{{{source.ip}}}'
      if: ctx.source?.ip != null
      allow_duplicates: false
      ignore_failure: true
  - remove:
      tag: remove_json
      field: json
      ignore_missing: true
  - remove:
      tag: remove_others
      field:
        - cloudflare_logpush.audit.timestamp
        - cloudflare_logpush.audit.action.result
        - cloudflare_logpush.audit.action.type
        - cloudflare_logpush.audit.id
        - cloudflare_logpush.audit.interface
        - cloudflare_logpush.audit.actor.ip
        - cloudflare_logpush.audit.actor.email
        - cloudflare_logpush.audit.actor.id
      if: ctx.tags == null || !(ctx.tags.contains('preserve_duplicate_custom_fields'))
      ignore_failure: true
      ignore_missing: true
  - script:
      tag: script_drops_null_empty_values_recursively
      description: Drops null/empty values recursively.
      lang: painless
      source: |
        boolean dropEmptyFields(Object object) {
          if (object == null || object == "") {
            return true;
          } else if (object instanceof Map) {
            ((Map) object).values().removeIf(value -> dropEmptyFields(value));
            return (((Map) object).size() == 0);
          } else if (object instanceof List) {
            ((List) object).removeIf(value -> dropEmptyFields(value));
            return (((List) object).length == 0);
          }
          return false;
        }
        dropEmptyFields(ctx);
on_failure:
  - append:
      tag: append_error_message
      field: error.message
      value: >
        Processor "{{{ _ingest.on_failure_processor_type }}}"
        with tag "{{{ _ingest.on_failure_processor_tag }}}"
        in pipeline "{{{ _ingest.on_failure_pipeline }}}"
        failed with message "{{{ _ingest.on_failure_message }}}"
  - set:
      tag: set_event_kind_2
      field: event.kind
      value: pipeline_error
  - append:
      tag: append_tags
      field: tags
      value: preserve_original_event
      allow_duplicates: false
