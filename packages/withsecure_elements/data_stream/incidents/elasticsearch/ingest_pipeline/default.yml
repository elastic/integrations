---
processors:
  - set:
      field: event.original
      copy_from: message
      if: ctx.event?.original == null && ctx.message != null
      ignore_failure: true
  - remove:
      field: message
      if: ctx.event?.original != null && ctx.message != null && ctx.message == ctx.event.original
      ignore_missing: true
  - json:
      field: event.original
      target_field: _temp
      if: ctx.event?.original != null && ctx.event.original instanceof String
      ignore_failure: true
  - script:
      lang: painless
      description: Move JSON fields from _temp to root context
      source: |
        if (ctx._temp != null) {
          for (entry in ctx._temp.entrySet()) {
            ctx[entry.getKey()] = entry.getValue();
          }
          ctx.remove('_temp');
        }
      if: ctx._temp != null
  - set:
      field: event.dataset
      value: withsecure_elements.incidents
  - set:
      field: event.module
      value: withsecure_elements
  - set:
      field: event.category
      value: threat
  - set:
      field: event.type
      value: incident
  - set:
      field: event.kind
      value: alert
  - set:
      field: event.provider
      value: withsecure_elements
  - set:
      field: event.action
      value: detected
  - set:
      field: event.outcome
      value: success
  - set:
      field: event.id
      value: "{{withsecure.incident.id}}"
  - set:
      field: event.created
      value: "{{withsecure.incident.created_timestamp}}"
  - set:
      field: event.start
      value: "{{withsecure.incident.created_timestamp}}"
  - set:
      field: event.end
      value: "{{withsecure.incident.updated_timestamp}}"
  - set:
      field: event.severity
      value: "{{withsecure.incident.severity}}"
  - set:
      field: event.risk_score
      value: "{{withsecure.incident.risk_score}}"
  - set:
      field: withsecure.incident.id
      value: "{{incidentId}}"
      if: ctx.incidentId != null
  - set:
      field: withsecure.incident.status
      value: "{{status}}"
  - set:
      field: withsecure.incident.severity
      value: "{{severity}}"
  - set:
      field: withsecure.incident.risk_level
      value: "{{riskLevel}}"
  - set:
      field: withsecure.incident.risk_score
      value: "{{riskScore}}"
  - set:
      field: withsecure.incident.resolution
      value: "{{resolution}}"
  - set:
      field: withsecure.incident.created_timestamp
      value: "{{createdTimestamp}}"
  - set:
      field: withsecure.incident.updated_timestamp
      value: "{{updatedTimestamp}}"
  - set:
      field: withsecure.incident.initial_received_timestamp
      value: "{{initialReceivedTimestamp}}"
  - set:
      field: withsecure.incident.categories
      value: "{{categories}}"
  - set:
      field: withsecure.incident.sources
      value: "{{sources}}"
  - set:
      field: withsecure.incident.name
      value: "{{name}}"
  - set:
      field: withsecure.incident.public_id
      value: "{{incidentPublicId}}"
  - set:
      field: withsecure.incident.organization_id
      value: "{{organizationId}}"
  - remove:
      field:
        - status
        - severity
        - riskLevel
        - riskScore
        - resolution
        - createdTimestamp
        - updatedTimestamp
        - initialReceivedTimestamp
        - categories
        - sources
        - name
        - incidentPublicId
        - organizationId
        - incidentId
      ignore_missing: true
on_failure:
  - set:
      field: error.message
      value: "{{ _ingest.on_failure_message }}"
