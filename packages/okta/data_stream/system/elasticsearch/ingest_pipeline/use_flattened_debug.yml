---
description: Pipeline for Okta debug data using flattened.
processors:
  - set:
      field: okta.debug_context.debug_data.flattened
      copy_from: json.debugContext.debugData
      ignore_failure: true
  - json:
      field: okta.debug_context.debug_data.flattened.logOnlySecurityData
      ignore_failure: true
  - dissect:
      field: okta.debug_context.debug_data.flattened.behaviors
      pattern: "{%{okta.debug_context.debug_data.flattened.behaviors}}"
      ignore_missing: true
      ignore_failure: true
  - kv:
      field: okta.debug_context.debug_data.flattened.behaviors
      field_split: ", "
      value_split: "="
      target_field: _behaviors_object
      if: ctx.okta?.debug_context?.debug_data?.flattened?.behaviors != null
  - remove:
      field: okta.debug_context.debug_data.flattened.behaviors
      if: ctx._behaviors_object != null
  - rename:
      field: _behaviors_object
      target_field: okta.debug_context.debug_data.flattened.behaviors
      ignore_missing: true
      ignore_failure: true
  - set:
      field: okta.debug_context.debug_data.flattened.risk_object
      copy_from: okta.debug_context.debug_data.flattened.risk
      if: ctx.okta?.debug_context?.debug_data?.flattened?.risk != null
  - dissect:
      field: okta.debug_context.debug_data.flattened.risk
      pattern: "{%{okta.debug_context.debug_data.flattened.risk}}"
      ignore_missing: true
      ignore_failure: true
  - kv:
      field: okta.debug_context.debug_data.flattened.risk
      field_split: ", "
      value_split: "="
      target_field: _risk_object
      if: ctx.okta?.debug_context?.debug_data?.flattened?.risk != null
      on_failure:
        - remove:
            field: _risk_object
  - remove:
      field: okta.debug_context.debug_data.flattened.risk_object
      if: ctx._risk_object != null
  # Make heroic efforts to capture risk level and reason if kv could not get them.
  - grok:
      field: okta.debug_context.debug_data.flattened.risk
      patterns:
        - level=%{NOTSPACE:_risk_object.level}
      if: ctx.okta?.debug_context?.debug_data?.flattened?.risk_object != null && ctx.okta?.debug_context?.debug_data?.flattened?.risk != null
      ignore_failure: true
  - grok:
      field: okta.debug_context.debug_data.flattened.risk
      patterns:
        - reasons=%{DATA:_risk_object.reasons}, %{KEY}
        - reasons=%{DATA:_risk_object.reasons}$
      pattern_definitions:
        KEY: '%{NOTSPACE}='
      if: ctx.okta?.debug_context?.debug_data?.flattened?.risk_object != null && ctx.okta?.debug_context?.debug_data?.flattened?.risk != null
      ignore_failure: true
  - remove:
      field: okta.debug_context.debug_data.flattened.risk
      if: ctx._risk_object != null
  - rename:
      field: _risk_object
      target_field: okta.debug_context.debug_data.flattened.risk
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.deviceFingerprint
      target_field: okta.debug_context.debug_data.device_fingerprint
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.requestId
      target_field: okta.debug_context.debug_data.request_id
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.requestUri
      target_field: okta.debug_context.debug_data.request_uri
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.threatSuspected
      target_field: okta.debug_context.debug_data.threat_suspected
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.url
      target_field: okta.debug_context.debug_data.url
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.dtHash
      target_field: okta.debug_context.debug_data.dt_hash
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.clientSecret
      target_field: okta.debug_context.debug_data.client_secret
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.requestedScopes
      target_field: okta.debug_context.debug_data.requested_scopes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.grantedScopes
      target_field: okta.debug_context.debug_data.granted_scopes
      ignore_missing: true
      ignore_failure: true
  - rename:
      field: json.debugContext.debugData.grantType
      target_field: okta.debug_context.debug_data.grant_type
      ignore_missing: true
      ignore_failure: true
  - set:
      field: okta.debug_context.debug_data.risk_level
      value: "{{{okta.debug_context.debug_data.flattened.logOnlySecurityData.risk.level}}}"
      if: 'ctx.okta?.debug_context?.debug_data?.flattened?.logOnlySecurityData?.risk?.level != null && ctx.okta?.debug_context?.debug_data?.flattened?.logOnlySecurityData?.risk?.level != ""'
  - split:
      field: okta.debug_context.debug_data.flattened.logOnlySecurityData.risk.reasons
      target_field: okta.debug_context.debug_data.risk_reasons
      separator: ',\s*'
      if: 'ctx.okta?.debug_context?.debug_data?.flattened?.logOnlySecurityData?.risk?.reasons != null && ctx.okta?.debug_context?.debug_data?.flattened?.logOnlySecurityData?.risk?.reasons != ""'
  - set:
      field: okta.debug_context.debug_data.risk_level
      value: "{{{okta.debug_context.debug_data.flattened.risk.level}}}"
      if: 'ctx.okta?.debug_context?.debug_data?.risk_level == null && ctx.okta?.debug_context?.debug_data?.flattened?.risk?.level != null && ctx.okta?.debug_context?.debug_data?.flattened?.risk?.level != ""'
  - set:
      field: okta.debug_context.debug_data.factor
      value: "{{{okta.debug_context.debug_data.flattened.factor}}}"
      if: 'ctx.okta?.debug_context?.debug_data?.factor == null && ctx.okta?.debug_context?.debug_data?.flattened?.factor != null && ctx.okta?.debug_context?.debug_data?.flattened?.factor != ""'
  - split:
      field: okta.debug_context.debug_data.flattened.risk.reasons
      target_field: okta.debug_context.debug_data.risk_reasons
      separator: ',\s*'
      if: 'ctx.okta?.debug_context?.debug_data?.risk_reasons == null && ctx.okta?.debug_context?.debug_data?.flattened?.risk?.reasons != null && ctx.okta?.debug_context?.debug_data?.flattened?.risk?.reasons != ""'
  - script:
      lang: painless
      source: |
        def src = ctx.okta?.debug_context?.debug_data?.flattened?.behaviors;
        if (src == null) {
          return;
        }
        def dst = new ArrayList();
        for (e in src.entrySet()) {
          if (e != null && e.getValue() == "POSITIVE") {
            dst.add(e.getKey());
          }
        }
        if (dst.length != 0) {
          ctx.okta.debug_context.debug_data['risk_behaviors'] = dst;
        }
on_failure:
  - set:
      field: event.kind
      value: pipeline_error
  - append:
      field: error.message
      value: >-
        Processor '{{{ _ingest.on_failure_processor_type }}}'
        {{{#_ingest.on_failure_processor_tag}}}with tag '{{{ _ingest.on_failure_processor_tag }}}'
        {{{/_ingest.on_failure_processor_tag}}}failed with message '{{{ _ingest.on_failure_message }}}'

