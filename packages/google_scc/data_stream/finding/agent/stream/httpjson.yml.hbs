config_version: '2'
interval: {{interval}}
request.method: GET
{{#if enable_request_tracer}}
request.tracer.filename: "../../logs/httpjson/http-request-trace-*.ndjson"
request.tracer.maxbackups: 5
{{/if}}
auth.oauth2.provider: google
auth.oauth2.google.{{credentials_type}}: {{credentials}}
auth.oauth2.scopes:
  - https://www.googleapis.com/auth/cloud-platform

{{#if proxy_url}}
request.proxy_url: {{proxy_url}}
{{/if}}
{{#if ssl}}
request.ssl: {{ssl}}
{{/if}}
{{#if http_client_timeout}}
request.timeout: {{http_client_timeout}}
{{/if}}
request.url: {{url}}/v1/{{parent_type}}/{{id}}/sources/-/findings
request.transforms:
  - set:
      target: url.params.pageSize
      value: {{batch_size}}
  - set:
      target: url.params.filter
      value: '[[sprintf "eventTime >= %q" (formatDate (parseDate .cursor.last_event_time) "RFC3339")]]'
      default: '[[sprintf "eventTime >= %q" (formatDate (now (parseDuration "-{{initial_interval}}")) "RFC3339")]]'
  - set:
      target: url.params.orderBy
      value: 'eventTime asc'
response.pagination:
  - set:
      target: url.params.filter
      value: '[[(.last_response.url.params.Get "filter")]]'
      fail_on_template_error: true
  - set:
      target: url.params.pageToken
      value: '[[if index .last_response.body "nextPageToken"]][[.last_response.body.nextPageToken]][[end]]'
      fail_on_template_error: true
cursor:
  last_event_time:
    value: '[[.last_event.finding.eventTime]]'
response.split:
  target: body.listFindingsResults
tags:
{{#if preserve_original_event}}
  - preserve_original_event
{{/if}}
{{#if preserve_duplicate_custom_fields}}
  - preserve_duplicate_custom_fields
{{/if}}
{{#each tags as |tag|}}
  - {{tag}}
{{/each}}
{{#contains "forwarded" tags}}
publisher_pipeline.disable_host: true
{{/contains}}
{{#if processors}}
processors:
{{processors}}
{{/if}}
